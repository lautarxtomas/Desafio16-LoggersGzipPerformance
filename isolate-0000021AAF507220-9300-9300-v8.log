v8-version,9,4,146,26,-node.22,0
v8-platform,windows,unknown
shared-library,C:\\Program Files\\nodejs\\node.exe,0x7ff662c90000,0x7ff666aa4000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\ntdll.dll,0x7fffe0510000,0x7fffe0708000,0
shared-library,C:\\WINDOWS\\System32\\KERNEL32.DLL,0x7fffde5f0000,0x7fffde6af000,0
shared-library,C:\\WINDOWS\\System32\\KERNELBASE.dll,0x7fffddf20000,0x7fffde1f2000,0
shared-library,C:\\WINDOWS\\System32\\WS2_32.dll,0x7fffdf600000,0x7fffdf66b000,0
shared-library,C:\\WINDOWS\\System32\\RPCRT4.dll,0x7fffdf9d0000,0x7fffdfaf5000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\dbghelp.dll,0x7fffd39e0000,0x7fffd3bc4000,0
shared-library,C:\\WINDOWS\\System32\\PSAPI.DLL,0x7fffdfb90000,0x7fffdfb98000,0
shared-library,C:\\WINDOWS\\System32\\ADVAPI32.dll,0x7fffdfba0000,0x7fffdfc4e000,0
shared-library,C:\\WINDOWS\\System32\\ucrtbase.dll,0x7fffde400000,0x7fffde500000,0
shared-library,C:\\WINDOWS\\System32\\msvcrt.dll,0x7fffdfcb0000,0x7fffdfd4e000,0
shared-library,C:\\WINDOWS\\System32\\sechost.dll,0x7fffde550000,0x7fffde5ec000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\USERENV.dll,0x7fffddb00000,0x7fffddb2e000,0
shared-library,C:\\WINDOWS\\System32\\USER32.dll,0x7fffdf320000,0x7fffdf4c1000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\IPHLPAPI.DLL,0x7fffdcfd0000,0x7fffdd00b000,0
shared-library,C:\\WINDOWS\\System32\\win32u.dll,0x7fffde200000,0x7fffde222000,0
shared-library,C:\\WINDOWS\\System32\\GDI32.dll,0x7fffdfd50000,0x7fffdfd7b000,0
shared-library,C:\\WINDOWS\\System32\\gdi32full.dll,0x7fffdde10000,0x7fffddf1f000,0
shared-library,C:\\WINDOWS\\System32\\msvcp_win.dll,0x7fffddc30000,0x7fffddccd000,0
shared-library,C:\\WINDOWS\\System32\\CRYPT32.dll,0x7fffde230000,0x7fffde386000,0
shared-library,C:\\WINDOWS\\System32\\bcrypt.dll,0x7fffddc00000,0x7fffddc27000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\WINMM.dll,0x7fffc3ba0000,0x7fffc3bc7000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\CRYPTBASE.DLL,0x7fffdd560000,0x7fffdd56c000,0
shared-library,C:\\WINDOWS\\System32\\IMM32.DLL,0x7fffdf720000,0x7fffdf752000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\powrprof.dll,0x7fffdd610000,0x7fffdd65b000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\UMPDC.dll,0x7fffdd5f0000,0x7fffdd602000,0
shared-library,C:\\WINDOWS\\system32\\uxtheme.dll,0x7fffdb610000,0x7fffdb6ae000,0
shared-library,C:\\WINDOWS\\System32\\combase.dll,0x7fffde6c0000,0x7fffdea15000,0
shared-library,C:\\WINDOWS\\system32\\mswsock.dll,0x7fffdd350000,0x7fffdd3ba000,0
shared-library,C:\\WINDOWS\\System32\\bcryptprimitives.dll,0x7fffddcd0000,0x7fffddd52000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\kernel.appcore.dll,0x7fffdbae0000,0x7fffdbaf2000,0
shared-library-end
tick,0x7fffe05ad144,122704,0,0x0,6
profiler,begin,1000
new,CodeRange,0x21ab35d0000,0
new,MemoryChunk,0x116b8b40000,262144
new,MemoryChunk,0x363b1880000,262144
new,MemoryChunk,0xae88040000,262144
new,MemoryChunk,0x35fb8d40000,262144
new,MemoryChunk,0x74cd440000,262144
heap-capacity,1031072
heap-available,2198652736
new,MemoryChunk,0x56f5c80000,262144
new,MemoryChunk,0x2fb39c0000,262144
new,MemoryChunk,0xf284000000,262144
new,MemoryChunk,0x233c0000000,262144
new,MemoryChunk,0x3a93d9c0000,262144
new,MemoryChunk,0xa614340000,262144
new,MemoryChunk,0x39c7b600000,262144
new,MemoryChunk,0x21ab3600000,262144
new,MemoryChunk,0x1cfd1480000,262144
code-creation,Builtin,2,126756,0x7ff6637f1544,1356,RecordWriteEmitRememberedSetSaveFP
code-creation,Builtin,2,126772,0x7ff6637f1aa4,448,RecordWriteOmitRememberedSetSaveFP
code-creation,Builtin,2,126779,0x7ff6637f1c84,636,RecordWriteEmitRememberedSetIgnoreFP
code-creation,Builtin,2,126786,0x7ff6637f1f04,204,RecordWriteOmitRememberedSetIgnoreFP
code-creation,Builtin,2,126792,0x7ff6637f1fe4,364,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,126798,0x7ff6637f2164,128,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,126804,0x7ff6637f2204,60,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,126810,0x7ff6637f2244,360,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,126816,0x7ff6637f23c4,416,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,126822,0x7ff6637f2584,444,CallFunction_ReceiverIsAny
code-creation,Builtin,2,126872,0x7ff6637f2744,104,CallBoundFunction
code-creation,Builtin,2,126882,0x7ff6637f27c4,120,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,126888,0x7ff6637f2844,120,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,126895,0x7ff6637f28c4,120,Call_ReceiverIsAny
code-creation,Builtin,2,126901,0x7ff6637f2944,992,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,126907,0x7ff6637f2d44,992,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,126913,0x7ff6637f3144,1080,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,126920,0x7ff6637f3584,1076,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,126926,0x7ff6637f39c4,1080,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,126932,0x7ff6637f3e04,1076,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,126938,0x7ff6637f4244,948,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,126944,0x7ff6637f4604,948,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,126950,0x7ff6637f49c4,948,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,126956,0x7ff6637f4d84,736,CallProxy
code-creation,Builtin,2,126961,0x7ff6637f5084,148,CallVarargs
code-creation,Builtin,2,126967,0x7ff6637f5124,944,CallWithSpread
code-creation,Builtin,2,126973,0x7ff6637f54e4,1956,CallWithSpread_Baseline
code-creation,Builtin,2,126979,0x7ff6637f5ca4,1928,CallWithSpread_WithFeedback
code-creation,Builtin,2,126985,0x7ff6637f6444,864,CallWithArrayLike
code-creation,Builtin,2,126990,0x7ff6637f67c4,1820,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,126996,0x7ff6637f6ee4,156,CallForwardVarargs
code-creation,Builtin,2,127002,0x7ff6637f6f84,156,CallFunctionForwardVarargs
code-creation,Builtin,2,127008,0x7ff6637f7024,132,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,127014,0x7ff6637f70c4,228,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,127020,0x7ff6637f71c4,316,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,127027,0x7ff6637f7304,28,ConstructFunction
code-creation,Builtin,2,127033,0x7ff6637f7324,104,ConstructBoundFunction
code-creation,Builtin,2,127038,0x7ff6637f73a4,28,ConstructedNonConstructable
code-creation,Builtin,2,127044,0x7ff6637f73c4,100,Construct
code-creation,Builtin,2,127049,0x7ff6637f7444,148,ConstructVarargs
code-creation,Builtin,2,127055,0x7ff6637f74e4,968,ConstructWithSpread
code-creation,Builtin,2,127061,0x7ff6637f78c4,1748,ConstructWithSpread_Baseline
code-creation,Builtin,2,127067,0x7ff6637f7fa4,1764,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,127073,0x7ff6637f86a4,924,ConstructWithArrayLike
code-creation,Builtin,2,127079,0x7ff6637f8a44,1652,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,127085,0x7ff6637f90c4,196,ConstructForwardVarargs
code-creation,Builtin,2,127091,0x7ff6637f91a4,196,ConstructFunctionForwardVarargs
code-creation,Builtin,2,127097,0x7ff6637f9284,804,Construct_Baseline
code-creation,Builtin,2,127102,0x7ff6637f95c4,820,Construct_WithFeedback
code-creation,Builtin,2,127108,0x7ff6637f9904,476,JSConstructStubGeneric
code-creation,Builtin,2,127114,0x7ff6637f9ae4,376,JSBuiltinsConstructStub
code-creation,Builtin,2,127121,0x7ff6637f9c64,676,FastNewObject
code-creation,Builtin,2,127129,0x7ff6637f9f24,292,FastNewClosure
code-creation,Builtin,2,127138,0x7ff6637fa064,720,ConstructProxy
code-creation,Builtin,2,127145,0x7ff6637fa344,360,JSEntry
code-creation,Builtin,2,127151,0x7ff6637fa4c4,360,JSConstructEntry
code-creation,Builtin,2,127156,0x7ff6637fa644,360,JSRunMicrotasksEntry
code-creation,Builtin,2,127162,0x7ff6637fa7c4,96,JSEntryTrampoline
code-creation,Builtin,2,127168,0x7ff6637fa844,96,JSConstructEntryTrampoline
code-creation,Builtin,2,127173,0x7ff6637fa8c4,280,ResumeGeneratorTrampoline
code-creation,Builtin,2,127179,0x7ff6637fa9e4,1116,StringCodePointAt
code-creation,Builtin,2,127185,0x7ff6637fae44,1552,StringFromCodePointAt
code-creation,Builtin,2,127191,0x7ff6637fb464,544,StringEqual
code-creation,Builtin,2,127197,0x7ff6637fb6a4,276,StringGreaterThan
code-creation,Builtin,2,127227,0x7ff6637fb7c4,276,StringGreaterThanOrEqual
code-creation,Builtin,2,127235,0x7ff6637fb8e4,276,StringLessThan
code-creation,Builtin,2,127241,0x7ff6637fba04,276,StringLessThanOrEqual
code-creation,Builtin,2,127247,0x7ff6637fbb24,2492,StringSubstring
code-creation,Builtin,2,127252,0x7ff6637fc4e4,80,OrderedHashTableHealIndex
code-creation,Builtin,2,127258,0x7ff6637fc544,1168,InterpreterEntryTrampoline
code-creation,Builtin,2,127264,0x7ff6637fc9e4,76,InterpreterPushArgsThenCall
code-creation,Builtin,2,127270,0x7ff6637fca44,84,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,127276,0x7ff6637fcaa4,84,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,127282,0x7ff6637fcb04,80,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,127288,0x7ff6637fcb64,80,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,127294,0x7ff6637fcbc4,84,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,127301,0x7ff6637fcc24,84,InterpreterEnterAtBytecode
code-creation,Builtin,2,127307,0x7ff6637fcc84,220,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,127313,0x7ff6637fcd64,52,InterpreterOnStackReplacement
code-creation,Builtin,2,127319,0x7ff6637fcda4,592,BaselineOutOfLinePrologue
code-creation,Builtin,2,127324,0x7ff6637fd004,56,BaselineOnStackReplacement
code-creation,Builtin,2,127330,0x7ff6637fd044,84,BaselineLeaveFrame
code-creation,Builtin,2,127336,0x7ff6637fd0a4,216,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,127342,0x7ff6637fd184,224,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,127348,0x7ff6637fd284,192,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,127354,0x7ff6637fd364,1004,CompileLazy
code-creation,Builtin,2,127360,0x7ff6637fd764,68,CompileLazyDeoptimizedCode
code-creation,Builtin,2,127365,0x7ff6637fd7c4,252,InstantiateAsmJs
code-creation,Builtin,2,127371,0x7ff6637fd8c4,32,NotifyDeoptimized
code-creation,Builtin,2,127376,0x7ff6637fd904,796,DeoptimizationEntry_Eager
code-creation,Builtin,2,127382,0x7ff6637fdc24,796,DeoptimizationEntry_Soft
code-creation,Builtin,2,127388,0x7ff6637fdf44,796,DeoptimizationEntry_Bailout
code-creation,Builtin,2,127394,0x7ff6637fe264,796,DeoptimizationEntry_Lazy
code-creation,Builtin,2,127399,0x7ff6637fe584,52,ContinueToCodeStubBuiltin
code-creation,Builtin,2,127411,0x7ff6637fe5c4,60,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,127418,0x7ff6637fe604,56,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,127424,0x7ff6637fe644,64,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,127430,0x7ff6637fe6a4,288,CallApiCallback
code-creation,Builtin,2,127435,0x7ff6637fe7e4,268,CallApiGetter
code-creation,Builtin,2,127441,0x7ff6637fe904,12,HandleApiCall
code-creation,Builtin,2,127447,0x7ff6637fe924,12,HandleApiCallAsFunction
code-creation,Builtin,2,127453,0x7ff6637fe944,12,HandleApiCallAsConstructor
code-creation,Builtin,2,127458,0x7ff6637fe964,64,AllocateInYoungGeneration
code-creation,Builtin,2,127464,0x7ff6637fe9c4,52,AllocateRegularInYoungGeneration
code-creation,Builtin,2,127470,0x7ff6637fea04,64,AllocateInOldGeneration
code-creation,Builtin,2,127476,0x7ff6637fea64,52,AllocateRegularInOldGeneration
code-creation,Builtin,2,127481,0x7ff6637feaa4,420,CopyFastSmiOrObjectElements
code-creation,Builtin,2,127487,0x7ff6637fec64,496,GrowFastDoubleElements
code-creation,Builtin,2,127493,0x7ff6637fee64,400,GrowFastSmiOrObjectElements
code-creation,Builtin,2,127499,0x7ff6637ff004,388,DebugBreakTrampoline
code-creation,Builtin,2,127504,0x7ff6637ff1a4,180,ToNumber
code-creation,Builtin,2,127510,0x7ff6637ff264,292,ToNumber_Baseline
code-creation,Builtin,2,127515,0x7ff6637ff3a4,360,ToNumeric_Baseline
code-creation,Builtin,2,127521,0x7ff6637ff524,104,PlainPrimitiveToNumber
code-creation,Builtin,2,127526,0x7ff6637ff5a4,212,ToNumberConvertBigInt
code-creation,Builtin,2,127532,0x7ff6637ff684,132,Typeof
code-creation,Builtin,2,127538,0x7ff6637ff724,104,BigIntToI64
code-creation,Builtin,2,127543,0x7ff6637ff7a4,4,BigIntToI32Pair
code-creation,Builtin,2,127549,0x7ff6637ff7c4,232,I64ToBigInt
code-creation,Builtin,2,127556,0x7ff6637ff8c4,4,I32PairToBigInt
code-creation,Builtin,2,127562,0x7ff6637ff8e4,100,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,127568,0x7ff6637ff964,4232,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,127574,0x7ff663800a04,15848,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,127580,0x7ff663804804,280,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,127586,0x7ff663804924,60,LoadIC_FunctionPrototype
code-creation,Builtin,2,127591,0x7ff663804964,12,LoadIC_StringLength
code-creation,Builtin,2,127597,0x7ff663804984,16,LoadIC_StringWrapperLength
code-creation,Builtin,2,127603,0x7ff6638049a4,3056,LoadIC_NoFeedback
code-creation,Builtin,2,127609,0x7ff6638055a4,32,StoreGlobalIC_Slow
code-creation,Builtin,2,127614,0x7ff6638055e4,7332,StoreIC_NoFeedback
code-creation,Builtin,2,127620,0x7ff6638072a4,180,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,127626,0x7ff663807364,72,LoadIndexedInterceptorIC
code-creation,Builtin,2,127632,0x7ff6638073c4,236,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,127638,0x7ff6638074c4,236,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,127644,0x7ff6638075c4,236,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,127650,0x7ff6638076c4,236,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,127657,0x7ff6638077c4,14344,StoreFastElementIC_Standard
code-creation,Builtin,2,127674,0x7ff66380afe4,9616,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,127680,0x7ff66380d584,13364,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,127686,0x7ff6638109c4,6088,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,127692,0x7ff6638121a4,8484,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,127698,0x7ff6638142e4,19368,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,127705,0x7ff663818ea4,8484,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,127711,0x7ff66381afe4,11024,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,127718,0x7ff66381db04,792,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,127723,0x7ff66381de24,164,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,127729,0x7ff66381dee4,72,HasIndexedInterceptorIC
code-creation,Builtin,2,127735,0x7ff66381df44,96,DynamicCheckMapsTrampoline
code-creation,Builtin,2,127741,0x7ff66381dfc4,224,DynamicCheckMaps
code-creation,Builtin,2,127747,0x7ff66381e0c4,96,DynamicCheckMapsWithFeedbackVectorTrampoline
code-creation,Builtin,2,127753,0x7ff66381e144,188,DynamicCheckMapsWithFeedbackVector
code-creation,Builtin,2,127759,0x7ff66381e204,152,EnqueueMicrotask
code-creation,Builtin,2,127765,0x7ff66381e2a4,8,RunMicrotasksTrampoline
code-creation,Builtin,2,127770,0x7ff66381e2c4,3476,RunMicrotasks
code-creation,Builtin,2,127776,0x7ff66381f064,2636,HasProperty
code-creation,Builtin,2,127782,0x7ff66381fac4,1156,DeleteProperty
code-creation,Builtin,2,127788,0x7ff66381ff64,1972,CopyDataProperties
code-creation,Builtin,2,127793,0x7ff663820724,9184,SetDataProperties
code-creation,Builtin,2,127799,0x7ff663822b24,28,Abort
code-creation,Builtin,2,127805,0x7ff663822b44,28,AbortCSAAssert
code-creation,Builtin,2,127810,0x7ff663822b64,12,EmptyFunction
code-creation,Builtin,2,127816,0x7ff663822b84,12,Illegal
code-creation,Builtin,2,127821,0x7ff663822ba4,12,StrictPoisonPillThrower
code-creation,Builtin,2,127827,0x7ff663822bc4,12,UnsupportedThrower
code-creation,Builtin,2,127833,0x7ff663822be4,64,ReturnReceiver
code-creation,Builtin,2,127838,0x7ff663822c44,28,ArrayConstructor
code-creation,Builtin,2,127845,0x7ff663822c64,404,ArrayConstructorImpl
code-creation,Builtin,2,127853,0x7ff663822e04,216,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,127860,0x7ff663822ee4,216,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,127866,0x7ff663822fc4,176,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,127873,0x7ff663823084,176,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,127901,0x7ff663823144,176,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,127909,0x7ff663823204,176,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,127916,0x7ff6638232c4,188,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,127922,0x7ff663823384,188,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,127929,0x7ff663823444,512,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,127935,0x7ff663823664,480,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,127941,0x7ff663823864,436,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,127948,0x7ff663823a24,404,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,127955,0x7ff663823bc4,436,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,127961,0x7ff663823d84,404,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,127967,0x7ff663823f24,448,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,127974,0x7ff663824104,412,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,127981,0x7ff6638242a4,64,ArrayNArgumentsConstructor
code-creation,Builtin,2,127987,0x7ff663824304,12,ArrayConcat
code-creation,Builtin,2,127992,0x7ff663824324,12,ArrayPrototypeFill
code-creation,Builtin,2,127998,0x7ff663824344,932,ArrayIncludesSmiOrObject
code-creation,Builtin,2,128003,0x7ff663824704,140,ArrayIncludesPackedDoubles
code-creation,Builtin,2,128009,0x7ff6638247a4,208,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,128015,0x7ff663824884,548,ArrayIncludes
code-creation,Builtin,2,128020,0x7ff663824ac4,856,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,128026,0x7ff663824e24,116,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,128032,0x7ff663824ea4,116,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,128038,0x7ff663824f24,552,ArrayIndexOf
code-creation,Builtin,2,128043,0x7ff663825164,12,ArrayPop
code-creation,Builtin,2,128048,0x7ff663825184,616,ArrayPrototypePop
code-creation,Builtin,2,128054,0x7ff663825404,12,ArrayPush
code-creation,Builtin,2,128059,0x7ff663825424,2424,ArrayPrototypePush
code-creation,Builtin,2,128065,0x7ff663825da4,12,ArrayShift
code-creation,Builtin,2,128070,0x7ff663825dc4,12,ArrayUnshift
code-creation,Builtin,2,128076,0x7ff663825de4,956,CloneFastJSArray
code-creation,Builtin,2,128081,0x7ff6638261a4,2196,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,128087,0x7ff663826a44,976,ExtractFastJSArray
code-creation,Builtin,2,128093,0x7ff663826e24,260,ArrayPrototypeEntries
code-creation,Builtin,2,128098,0x7ff663826f44,248,ArrayPrototypeKeys
code-creation,Builtin,2,128104,0x7ff663827044,260,ArrayPrototypeValues
code-creation,Builtin,2,128110,0x7ff663827164,4428,ArrayIteratorPrototypeNext
code-creation,Builtin,2,128115,0x7ff6638282c4,4168,FlattenIntoArray
code-creation,Builtin,2,128121,0x7ff663829324,4172,FlatMapIntoArray
code-creation,Builtin,2,128126,0x7ff66382a384,372,ArrayPrototypeFlat
code-creation,Builtin,2,128133,0x7ff66382a504,428,ArrayPrototypeFlatMap
code-creation,Builtin,2,128142,0x7ff66382a6c4,12,ArrayBufferConstructor
code-creation,Builtin,2,128150,0x7ff66382a6e4,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,128156,0x7ff66382a704,12,ArrayBufferPrototypeSlice
code-creation,Builtin,2,128162,0x7ff66382a724,12,ArrayBufferPrototypeResize
code-creation,Builtin,2,128168,0x7ff66382a744,804,AsyncFunctionEnter
code-creation,Builtin,2,128173,0x7ff66382aa84,132,AsyncFunctionReject
code-creation,Builtin,2,128179,0x7ff66382ab24,128,AsyncFunctionResolve
code-creation,Builtin,2,128185,0x7ff66382abc4,12,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,128191,0x7ff66382abe4,2804,AsyncFunctionAwaitCaught
code-creation,Builtin,2,128196,0x7ff66382b6e4,2804,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,128204,0x7ff66382c1e4,172,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,128211,0x7ff66382c2a4,164,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,128217,0x7ff66382c364,12,BigIntConstructor
code-creation,Builtin,2,128223,0x7ff66382c384,12,BigIntAsUintN
code-creation,Builtin,2,128228,0x7ff66382c3a4,12,BigIntAsIntN
code-creation,Builtin,2,128234,0x7ff66382c3c4,12,BigIntPrototypeToLocaleString
code-creation,Builtin,2,128240,0x7ff66382c3e4,12,BigIntPrototypeToString
code-creation,Builtin,2,128246,0x7ff66382c404,12,BigIntPrototypeValueOf
code-creation,Builtin,2,128251,0x7ff66382c424,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,128257,0x7ff66382c444,12,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,128263,0x7ff66382c464,12,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,128269,0x7ff66382c484,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,128275,0x7ff66382c4a4,12,CallSitePrototypeGetFileName
code-creation,Builtin,2,128281,0x7ff66382c4c4,12,CallSitePrototypeGetFunction
code-creation,Builtin,2,128287,0x7ff66382c4e4,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,128293,0x7ff66382c504,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,128298,0x7ff66382c524,12,CallSitePrototypeGetMethodName
code-creation,Builtin,2,128304,0x7ff66382c544,12,CallSitePrototypeGetPosition
code-creation,Builtin,2,128310,0x7ff66382c564,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,128316,0x7ff66382c584,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,128322,0x7ff66382c5a4,12,CallSitePrototypeGetThis
code-creation,Builtin,2,128327,0x7ff66382c5c4,12,CallSitePrototypeGetTypeName
code-creation,Builtin,2,128333,0x7ff66382c5e4,12,CallSitePrototypeIsAsync
code-creation,Builtin,2,128339,0x7ff66382c604,12,CallSitePrototypeIsConstructor
code-creation,Builtin,2,128345,0x7ff66382c624,12,CallSitePrototypeIsEval
code-creation,Builtin,2,128350,0x7ff66382c644,12,CallSitePrototypeIsNative
code-creation,Builtin,2,128356,0x7ff66382c664,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,128362,0x7ff66382c684,12,CallSitePrototypeIsToplevel
code-creation,Builtin,2,128368,0x7ff66382c6a4,12,CallSitePrototypeToString
code-creation,Builtin,2,128374,0x7ff66382c6c4,12,ConsoleDebug
code-creation,Builtin,2,128379,0x7ff66382c6e4,12,ConsoleError
code-creation,Builtin,2,128384,0x7ff66382c704,12,ConsoleInfo
code-creation,Builtin,2,128390,0x7ff66382c724,12,ConsoleLog
code-creation,Builtin,2,128395,0x7ff66382c744,12,ConsoleWarn
code-creation,Builtin,2,128401,0x7ff66382c764,12,ConsoleDir
code-creation,Builtin,2,128406,0x7ff66382c784,12,ConsoleDirXml
code-creation,Builtin,2,128412,0x7ff66382c7a4,12,ConsoleTable
code-creation,Builtin,2,128417,0x7ff66382c7c4,12,ConsoleTrace
code-creation,Builtin,2,128423,0x7ff66382c7e4,12,ConsoleGroup
code-creation,Builtin,2,128428,0x7ff66382c804,12,ConsoleGroupCollapsed
code-creation,Builtin,2,128434,0x7ff66382c824,12,ConsoleGroupEnd
code-creation,Builtin,2,128439,0x7ff66382c844,12,ConsoleClear
code-creation,Builtin,2,128444,0x7ff66382c864,12,ConsoleCount
code-creation,Builtin,2,128450,0x7ff66382c884,12,ConsoleCountReset
code-creation,Builtin,2,128455,0x7ff66382c8a4,12,ConsoleAssert
code-creation,Builtin,2,128461,0x7ff66382c8c4,12,ConsoleProfile
code-creation,Builtin,2,128466,0x7ff66382c8e4,12,ConsoleProfileEnd
code-creation,Builtin,2,128472,0x7ff66382c904,12,ConsoleTime
code-creation,Builtin,2,128477,0x7ff66382c924,12,ConsoleTimeLog
code-creation,Builtin,2,128483,0x7ff66382c944,12,ConsoleTimeEnd
code-creation,Builtin,2,128488,0x7ff66382c964,12,ConsoleTimeStamp
code-creation,Builtin,2,128494,0x7ff66382c984,12,ConsoleContext
code-creation,Builtin,2,128500,0x7ff66382c9a4,12,DataViewConstructor
code-creation,Builtin,2,128505,0x7ff66382c9c4,12,DateConstructor
code-creation,Builtin,2,128511,0x7ff66382c9e4,216,DatePrototypeGetDate
code-creation,Builtin,2,128517,0x7ff66382cac4,216,DatePrototypeGetDay
code-creation,Builtin,2,128522,0x7ff66382cba4,216,DatePrototypeGetFullYear
code-creation,Builtin,2,128528,0x7ff66382cc84,216,DatePrototypeGetHours
code-creation,Builtin,2,128538,0x7ff66382cd64,196,DatePrototypeGetMilliseconds
code-creation,Builtin,2,128544,0x7ff66382ce44,216,DatePrototypeGetMinutes
code-creation,Builtin,2,128550,0x7ff66382cf24,216,DatePrototypeGetMonth
code-creation,Builtin,2,128556,0x7ff66382d004,216,DatePrototypeGetSeconds
code-creation,Builtin,2,128562,0x7ff66382d0e4,124,DatePrototypeGetTime
code-creation,Builtin,2,128567,0x7ff66382d164,196,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,128573,0x7ff66382d244,196,DatePrototypeGetUTCDate
code-creation,Builtin,2,128579,0x7ff66382d324,196,DatePrototypeGetUTCDay
code-creation,Builtin,2,128585,0x7ff66382d404,196,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,128591,0x7ff66382d4e4,196,DatePrototypeGetUTCHours
code-creation,Builtin,2,128596,0x7ff66382d5c4,196,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,128602,0x7ff66382d6a4,196,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,128608,0x7ff66382d784,196,DatePrototypeGetUTCMonth
code-creation,Builtin,2,128614,0x7ff66382d864,196,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,128620,0x7ff66382d944,124,DatePrototypeValueOf
code-creation,Builtin,2,128625,0x7ff66382d9c4,352,DatePrototypeToPrimitive
code-creation,Builtin,2,128631,0x7ff66382db44,12,DatePrototypeGetYear
code-creation,Builtin,2,128637,0x7ff66382db64,12,DatePrototypeSetYear
code-creation,Builtin,2,128642,0x7ff66382db84,12,DateNow
code-creation,Builtin,2,128648,0x7ff66382dba4,12,DateParse
code-creation,Builtin,2,128653,0x7ff66382dbc4,12,DatePrototypeSetDate
code-creation,Builtin,2,128672,0x7ff66382dbe4,12,DatePrototypeSetFullYear
code-creation,Builtin,2,128679,0x7ff66382dc04,12,DatePrototypeSetHours
code-creation,Builtin,2,128685,0x7ff66382dc24,12,DatePrototypeSetMilliseconds
code-creation,Builtin,2,128691,0x7ff66382dc44,12,DatePrototypeSetMinutes
code-creation,Builtin,2,128696,0x7ff66382dc64,12,DatePrototypeSetMonth
code-creation,Builtin,2,128702,0x7ff66382dc84,12,DatePrototypeSetSeconds
code-creation,Builtin,2,128708,0x7ff66382dca4,12,DatePrototypeSetTime
code-creation,Builtin,2,128713,0x7ff66382dcc4,12,DatePrototypeSetUTCDate
code-creation,Builtin,2,128719,0x7ff66382dce4,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,128725,0x7ff66382dd04,12,DatePrototypeSetUTCHours
code-creation,Builtin,2,128731,0x7ff66382dd24,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,128736,0x7ff66382dd44,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,128742,0x7ff66382dd64,12,DatePrototypeSetUTCMonth
code-creation,Builtin,2,128748,0x7ff66382dd84,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,128753,0x7ff66382dda4,12,DatePrototypeToDateString
code-creation,Builtin,2,128759,0x7ff66382ddc4,12,DatePrototypeToISOString
code-creation,Builtin,2,128765,0x7ff66382dde4,12,DatePrototypeToUTCString
code-creation,Builtin,2,128770,0x7ff66382de04,12,DatePrototypeToString
code-creation,Builtin,2,128776,0x7ff66382de24,12,DatePrototypeToTimeString
code-creation,Builtin,2,128782,0x7ff66382de44,12,DatePrototypeToJson
code-creation,Builtin,2,128787,0x7ff66382de64,12,DateUTC
code-creation,Builtin,2,128793,0x7ff66382de84,12,ErrorConstructor
code-creation,Builtin,2,128798,0x7ff66382dea4,12,ErrorCaptureStackTrace
code-creation,Builtin,2,128804,0x7ff66382dec4,12,ErrorPrototypeToString
code-creation,Builtin,2,128810,0x7ff66382dee4,12,FunctionConstructor
code-creation,Builtin,2,128815,0x7ff66382df04,68,FunctionPrototypeApply
code-creation,Builtin,2,128821,0x7ff66382df64,12,FunctionPrototypeBind
code-creation,Builtin,2,128827,0x7ff66382df84,32,FunctionPrototypeCall
code-creation,Builtin,2,128832,0x7ff66382dfc4,12,FunctionPrototypeToString
code-creation,Builtin,2,128838,0x7ff66382dfe4,192,CreateIterResultObject
code-creation,Builtin,2,128846,0x7ff66382e0c4,788,CreateGeneratorObject
code-creation,Builtin,2,128853,0x7ff66382e3e4,12,GeneratorFunctionConstructor
code-creation,Builtin,2,128859,0x7ff66382e404,412,GeneratorPrototypeNext
code-creation,Builtin,2,128865,0x7ff66382e5a4,420,GeneratorPrototypeReturn
code-creation,Builtin,2,128870,0x7ff66382e764,424,GeneratorPrototypeThrow
code-creation,Builtin,2,128878,0x7ff66382e924,12,AsyncFunctionConstructor
code-creation,Builtin,2,128884,0x7ff66382e944,372,SuspendGeneratorBaseline
code-creation,Builtin,2,128890,0x7ff66382eac4,88,ResumeGeneratorBaseline
code-creation,Builtin,2,128896,0x7ff66382eb24,36,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,128902,0x7ff66382eb64,12,GlobalDecodeURI
code-creation,Builtin,2,128907,0x7ff66382eb84,12,GlobalDecodeURIComponent
code-creation,Builtin,2,128913,0x7ff66382eba4,12,GlobalEncodeURI
code-creation,Builtin,2,128919,0x7ff66382ebc4,12,GlobalEncodeURIComponent
code-creation,Builtin,2,128924,0x7ff66382ebe4,12,GlobalEscape
code-creation,Builtin,2,128930,0x7ff66382ec04,12,GlobalUnescape
code-creation,Builtin,2,128935,0x7ff66382ec24,12,GlobalEval
code-creation,Builtin,2,128941,0x7ff66382ec44,132,GlobalIsFinite
code-creation,Builtin,2,128946,0x7ff66382ece4,124,GlobalIsNaN
code-creation,Builtin,2,128952,0x7ff66382ed64,12,JsonParse
code-creation,Builtin,2,128957,0x7ff66382ed84,12,JsonStringify
code-creation,Builtin,2,128962,0x7ff66382eda4,4608,LoadIC
code-creation,Builtin,2,128968,0x7ff66382ffc4,4296,LoadIC_Megamorphic
code-creation,Builtin,2,128974,0x7ff6638310a4,4520,LoadIC_Noninlined
code-creation,Builtin,2,128979,0x7ff663832264,44,LoadICTrampoline
code-creation,Builtin,2,128985,0x7ff6638322a4,24,LoadICBaseline
code-creation,Builtin,2,128990,0x7ff6638322c4,44,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,128996,0x7ff663832304,7376,LoadSuperIC
code-creation,Builtin,2,129002,0x7ff663833fe4,24,LoadSuperICBaseline
code-creation,Builtin,2,129008,0x7ff663834004,8148,KeyedLoadIC
code-creation,Builtin,2,129013,0x7ff663835fe4,13088,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,129019,0x7ff663839324,44,KeyedLoadICTrampoline
code-creation,Builtin,2,129025,0x7ff663839364,24,KeyedLoadICBaseline
code-creation,Builtin,2,129030,0x7ff663839384,44,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,129036,0x7ff6638393c4,5104,StoreGlobalIC
code-creation,Builtin,2,129042,0x7ff66383a7c4,44,StoreGlobalICTrampoline
code-creation,Builtin,2,129047,0x7ff66383a804,24,StoreGlobalICBaseline
code-creation,Builtin,2,129053,0x7ff66383a824,5340,StoreIC
code-creation,Builtin,2,129058,0x7ff66383bd04,44,StoreICTrampoline
code-creation,Builtin,2,129064,0x7ff66383bd44,24,StoreICBaseline
code-creation,Builtin,2,129069,0x7ff66383bd64,5780,KeyedStoreIC
code-creation,Builtin,2,129075,0x7ff66383d404,44,KeyedStoreICTrampoline
code-creation,Builtin,2,129080,0x7ff66383d444,24,KeyedStoreICBaseline
code-creation,Builtin,2,129086,0x7ff66383d464,404,StoreInArrayLiteralIC
code-creation,Builtin,2,129092,0x7ff66383d604,24,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,129097,0x7ff66383d624,140,LookupContextBaseline
code-creation,Builtin,2,129103,0x7ff66383d6c4,140,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,129109,0x7ff66383d764,3244,LoadGlobalIC
code-creation,Builtin,2,129114,0x7ff66383e424,3220,LoadGlobalICInsideTypeof
code-creation,Builtin,2,129120,0x7ff66383f0c4,44,LoadGlobalICTrampoline
code-creation,Builtin,2,129126,0x7ff66383f104,24,LoadGlobalICBaseline
code-creation,Builtin,2,129131,0x7ff66383f124,44,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,129137,0x7ff66383f164,24,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,129146,0x7ff66383f184,140,LookupGlobalICBaseline
code-creation,Builtin,2,129155,0x7ff66383f224,140,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,129161,0x7ff66383f2c4,2064,CloneObjectIC
code-creation,Builtin,2,129167,0x7ff66383fae4,24,CloneObjectICBaseline
code-creation,Builtin,2,129173,0x7ff66383fb04,1988,CloneObjectIC_Slow
code-creation,Builtin,2,129178,0x7ff6638402e4,2756,KeyedHasIC
code-creation,Builtin,2,129184,0x7ff663840dc4,24,KeyedHasICBaseline
code-creation,Builtin,2,129189,0x7ff663840de4,2640,KeyedHasIC_Megamorphic
code-creation,Builtin,2,129195,0x7ff663841844,1436,IterableToList
code-creation,Builtin,2,129201,0x7ff663841de4,1240,IterableToFixedArray
code-creation,Builtin,2,129211,0x7ff6638422c4,748,IterableToListWithSymbolLookup
code-creation,Builtin,2,129239,0x7ff6638425c4,56,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,129247,0x7ff663842604,124,IterableToListMayPreserveHoles
code-creation,Builtin,2,129253,0x7ff663842684,984,IterableToFixedArrayForWasm
code-creation,Builtin,2,129259,0x7ff663842a64,1616,StringListFromIterable
code-creation,Builtin,2,129265,0x7ff6638430c4,1228,FindOrderedHashMapEntry
code-creation,Builtin,2,129271,0x7ff6638435a4,4156,MapConstructor
code-creation,Builtin,2,129277,0x7ff6638445e4,1996,MapPrototypeSet
code-creation,Builtin,2,129283,0x7ff663844dc4,1524,MapPrototypeDelete
code-creation,Builtin,2,129289,0x7ff6638453c4,204,MapPrototypeGet
code-creation,Builtin,2,129294,0x7ff6638454a4,164,MapPrototypeHas
code-creation,Builtin,2,129300,0x7ff663845564,12,MapPrototypeClear
code-creation,Builtin,2,129305,0x7ff663845584,284,MapPrototypeEntries
code-creation,Builtin,2,129311,0x7ff6638456a4,144,MapPrototypeGetSize
code-creation,Builtin,2,129317,0x7ff663845744,492,MapPrototypeForEach
code-creation,Builtin,2,129323,0x7ff663845944,284,MapPrototypeKeys
code-creation,Builtin,2,129328,0x7ff663845a64,284,MapPrototypeValues
code-creation,Builtin,2,129334,0x7ff663845b84,1052,MapIteratorPrototypeNext
code-creation,Builtin,2,129340,0x7ff663845fa4,1168,MapIteratorToList
code-creation,Builtin,2,129346,0x7ff663846444,12,NumberPrototypeToExponential
code-creation,Builtin,2,129352,0x7ff663846464,12,NumberPrototypeToFixed
code-creation,Builtin,2,129357,0x7ff663846484,12,NumberPrototypeToLocaleString
code-creation,Builtin,2,129363,0x7ff6638464a4,12,NumberPrototypeToPrecision
code-creation,Builtin,2,129369,0x7ff6638464c4,328,SameValue
code-creation,Builtin,2,129374,0x7ff663846624,204,SameValueNumbersOnly
code-creation,Builtin,2,129380,0x7ff663846704,792,Add_Baseline
code-creation,Builtin,2,129385,0x7ff663846a24,828,Subtract_Baseline
code-creation,Builtin,2,129392,0x7ff663846d64,808,Multiply_Baseline
code-creation,Builtin,2,129397,0x7ff6638470a4,832,Divide_Baseline
code-creation,Builtin,2,129403,0x7ff663847404,764,Modulus_Baseline
code-creation,Builtin,2,129408,0x7ff663847704,808,Exponentiate_Baseline
code-creation,Builtin,2,129414,0x7ff663847a44,708,BitwiseAnd_Baseline
code-creation,Builtin,2,129420,0x7ff663847d24,700,BitwiseOr_Baseline
code-creation,Builtin,2,129425,0x7ff663847fe4,708,BitwiseXor_Baseline
code-creation,Builtin,2,129431,0x7ff6638482c4,720,ShiftLeft_Baseline
code-creation,Builtin,2,129438,0x7ff6638485a4,720,ShiftRight_Baseline
code-creation,Builtin,2,129444,0x7ff663848884,836,ShiftRightLogical_Baseline
code-creation,Builtin,2,129450,0x7ff663848be4,720,Add_WithFeedback
code-creation,Builtin,2,129455,0x7ff663848ec4,780,Subtract_WithFeedback
code-creation,Builtin,2,129461,0x7ff6638491e4,776,Multiply_WithFeedback
code-creation,Builtin,2,129467,0x7ff663849504,804,Divide_WithFeedback
code-creation,Builtin,2,129473,0x7ff663849844,724,Modulus_WithFeedback
code-creation,Builtin,2,129478,0x7ff663849b24,764,Exponentiate_WithFeedback
code-creation,Builtin,2,129484,0x7ff663849e24,684,BitwiseAnd_WithFeedback
code-creation,Builtin,2,129490,0x7ff66384a0e4,676,BitwiseOr_WithFeedback
code-creation,Builtin,2,129496,0x7ff66384a3a4,684,BitwiseXor_WithFeedback
code-creation,Builtin,2,129501,0x7ff66384a664,692,ShiftLeft_WithFeedback
code-creation,Builtin,2,129507,0x7ff66384a924,692,ShiftRight_WithFeedback
code-creation,Builtin,2,129513,0x7ff66384abe4,808,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,129519,0x7ff66384af24,1696,Equal_Baseline
code-creation,Builtin,2,129524,0x7ff66384b5e4,908,StrictEqual_Baseline
code-creation,Builtin,2,129530,0x7ff66384b984,1264,LessThan_Baseline
code-creation,Builtin,2,129536,0x7ff66384be84,1264,GreaterThan_Baseline
code-creation,Builtin,2,129541,0x7ff66384c384,1264,LessThanOrEqual_Baseline
code-creation,Builtin,2,129547,0x7ff66384c884,1264,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,129553,0x7ff66384cd84,1620,Equal_WithFeedback
code-creation,Builtin,2,129559,0x7ff66384d3e4,940,StrictEqual_WithFeedback
code-creation,Builtin,2,129564,0x7ff66384d7a4,1240,LessThan_WithFeedback
code-creation,Builtin,2,129574,0x7ff66384dc84,1240,GreaterThan_WithFeedback
code-creation,Builtin,2,129580,0x7ff66384e164,1240,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,129586,0x7ff66384e644,1240,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,129592,0x7ff66384eb24,332,BitwiseNot_Baseline
code-creation,Builtin,2,129598,0x7ff66384ec84,460,Decrement_Baseline
code-creation,Builtin,2,129603,0x7ff66384ee64,464,Increment_Baseline
code-creation,Builtin,2,129609,0x7ff66384f044,488,Negate_Baseline
code-creation,Builtin,2,129615,0x7ff66384f244,316,BitwiseNot_WithFeedback
code-creation,Builtin,2,129620,0x7ff66384f384,440,Decrement_WithFeedback
code-creation,Builtin,2,129626,0x7ff66384f544,444,Increment_WithFeedback
code-creation,Builtin,2,129632,0x7ff66384f704,472,Negate_WithFeedback
code-creation,Builtin,2,129638,0x7ff66384f8e4,252,ObjectAssign
code-creation,Builtin,2,129643,0x7ff66384f9e4,864,ObjectCreate
code-creation,Builtin,2,129649,0x7ff66384fd64,12,ObjectDefineGetter
code-creation,Builtin,2,129654,0x7ff66384fd84,12,ObjectDefineProperties
code-creation,Builtin,2,129675,0x7ff66384fda4,12,ObjectDefineProperty
code-creation,Builtin,2,129681,0x7ff66384fdc4,12,ObjectDefineSetter
code-creation,Builtin,2,129687,0x7ff66384fde4,1516,ObjectEntries
code-creation,Builtin,2,129693,0x7ff6638503e4,12,ObjectFreeze
code-creation,Builtin,2,129698,0x7ff663850404,5620,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,129704,0x7ff663851a04,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,129710,0x7ff663851a24,600,ObjectGetOwnPropertyNames
code-creation,Builtin,2,129741,0x7ff663851c84,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,129749,0x7ff663851ca4,164,ObjectHasOwn
code-creation,Builtin,2,129755,0x7ff663851d64,388,ObjectIs
code-creation,Builtin,2,129760,0x7ff663851f04,12,ObjectIsFrozen
code-creation,Builtin,2,129766,0x7ff663851f24,12,ObjectIsSealed
code-creation,Builtin,2,129772,0x7ff663851f44,536,ObjectKeys
code-creation,Builtin,2,129777,0x7ff663852164,12,ObjectLookupGetter
code-creation,Builtin,2,129783,0x7ff663852184,12,ObjectLookupSetter
code-creation,Builtin,2,129789,0x7ff6638521a4,2280,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,129795,0x7ff663852aa4,216,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,129800,0x7ff663852b84,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,129807,0x7ff663852ba4,12,ObjectPrototypeGetProto
code-creation,Builtin,2,129812,0x7ff663852bc4,12,ObjectPrototypeSetProto
code-creation,Builtin,2,129818,0x7ff663852be4,12,ObjectSeal
code-creation,Builtin,2,129824,0x7ff663852c04,1108,ObjectToString
code-creation,Builtin,2,129829,0x7ff663853064,1284,ObjectValues
code-creation,Builtin,2,129837,0x7ff663853584,280,OrdinaryHasInstance
code-creation,Builtin,2,129845,0x7ff6638536a4,344,InstanceOf
code-creation,Builtin,2,129854,0x7ff663853804,632,InstanceOf_WithFeedback
code-creation,Builtin,2,129860,0x7ff663853a84,648,InstanceOf_Baseline
code-creation,Builtin,2,129866,0x7ff663853d24,268,ForInEnumerate
code-creation,Builtin,2,129871,0x7ff663853e44,148,ForInPrepare
code-creation,Builtin,2,129877,0x7ff663853ee4,2584,ForInFilter
code-creation,Builtin,2,129883,0x7ff663854904,52,ReflectApply
code-creation,Builtin,2,129888,0x7ff663854944,60,ReflectConstruct
code-creation,Builtin,2,129894,0x7ff663854984,12,ReflectDefineProperty
code-creation,Builtin,2,129899,0x7ff6638549a4,12,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,129906,0x7ff6638549c4,12,ReflectOwnKeys
code-creation,Builtin,2,129911,0x7ff6638549e4,12,ReflectSet
code-creation,Builtin,2,129917,0x7ff663854a04,12,RegExpCapture1Getter
code-creation,Builtin,2,129922,0x7ff663854a24,12,RegExpCapture2Getter
code-creation,Builtin,2,129928,0x7ff663854a44,12,RegExpCapture3Getter
code-creation,Builtin,2,129934,0x7ff663854a64,12,RegExpCapture4Getter
code-creation,Builtin,2,129939,0x7ff663854a84,12,RegExpCapture5Getter
code-creation,Builtin,2,129945,0x7ff663854aa4,12,RegExpCapture6Getter
code-creation,Builtin,2,129951,0x7ff663854ac4,12,RegExpCapture7Getter
code-creation,Builtin,2,129956,0x7ff663854ae4,12,RegExpCapture8Getter
code-creation,Builtin,2,129968,0x7ff663854b04,12,RegExpCapture9Getter
code-creation,Builtin,2,129975,0x7ff663854b24,2212,RegExpConstructor
code-creation,Builtin,2,129981,0x7ff6638553e4,12,RegExpInputGetter
code-creation,Builtin,2,129987,0x7ff663855404,12,RegExpInputSetter
code-creation,Builtin,2,129993,0x7ff663855424,12,RegExpLastMatchGetter
code-creation,Builtin,2,129998,0x7ff663855444,12,RegExpLastParenGetter
code-creation,Builtin,2,130004,0x7ff663855464,12,RegExpLeftContextGetter
code-creation,Builtin,2,130010,0x7ff663855484,908,RegExpPrototypeCompile
code-creation,Builtin,2,130016,0x7ff663855824,12,RegExpPrototypeToString
code-creation,Builtin,2,130022,0x7ff663855844,12,RegExpRightContextGetter
code-creation,Builtin,2,130027,0x7ff663855864,252,RegExpExecAtom
code-creation,Builtin,2,130033,0x7ff663855964,1040,RegExpExecInternal
code-creation,Builtin,2,130039,0x7ff663855d84,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,130045,0x7ff663855da4,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,130051,0x7ff663855dc4,2684,SetConstructor
code-creation,Builtin,2,130056,0x7ff663856844,1284,SetPrototypeHas
code-creation,Builtin,2,130062,0x7ff663856d64,1736,SetPrototypeAdd
code-creation,Builtin,2,130068,0x7ff663857444,1476,SetPrototypeDelete
code-creation,Builtin,2,130073,0x7ff663857a24,12,SetPrototypeClear
code-creation,Builtin,2,130079,0x7ff663857a44,284,SetPrototypeEntries
code-creation,Builtin,2,130085,0x7ff663857b64,144,SetPrototypeGetSize
code-creation,Builtin,2,130090,0x7ff663857c04,444,SetPrototypeForEach
code-creation,Builtin,2,130096,0x7ff663857dc4,284,SetPrototypeValues
code-creation,Builtin,2,130101,0x7ff663857ee4,988,SetIteratorPrototypeNext
code-creation,Builtin,2,130107,0x7ff6638582c4,1112,SetOrSetIteratorToList
code-creation,Builtin,2,130125,0x7ff663858724,12,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,130134,0x7ff663858744,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,130143,0x7ff663858764,12,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,130152,0x7ff663858784,1280,AtomicsLoad
code-creation,Builtin,2,130158,0x7ff663858ca4,1008,AtomicsStore
code-creation,Builtin,2,130164,0x7ff6638590a4,1704,AtomicsExchange
code-creation,Builtin,2,130170,0x7ff663859764,2092,AtomicsCompareExchange
code-creation,Builtin,2,130176,0x7ff663859fa4,1804,AtomicsAdd
code-creation,Builtin,2,130182,0x7ff66385a6c4,1804,AtomicsSub
code-creation,Builtin,2,130187,0x7ff66385ade4,1804,AtomicsAnd
code-creation,Builtin,2,130193,0x7ff66385b504,1804,AtomicsOr
code-creation,Builtin,2,130199,0x7ff66385bc24,1804,AtomicsXor
code-creation,Builtin,2,130205,0x7ff66385c344,12,AtomicsNotify
code-creation,Builtin,2,130216,0x7ff66385c364,12,AtomicsIsLockFree
code-creation,Builtin,2,130222,0x7ff66385c384,12,AtomicsWait
code-creation,Builtin,2,130228,0x7ff66385c3a4,12,AtomicsWaitAsync
code-creation,Builtin,2,130234,0x7ff66385c3c4,12,StringFromCodePoint
code-creation,Builtin,2,130240,0x7ff66385c3e4,1428,StringFromCharCode
code-creation,Builtin,2,130246,0x7ff66385c984,12,StringPrototypeLastIndexOf
code-creation,Builtin,2,130252,0x7ff66385c9a4,4360,StringPrototypeMatchAll
code-creation,Builtin,2,130257,0x7ff66385dac4,12,StringPrototypeLocaleCompare
code-creation,Builtin,2,130263,0x7ff66385dae4,1228,StringPrototypeReplace
code-creation,Builtin,2,130269,0x7ff66385dfc4,2900,StringPrototypeSplit
code-creation,Builtin,2,130275,0x7ff66385eb24,12,StringRaw
code-creation,Builtin,2,130280,0x7ff66385eb44,12,SymbolConstructor
code-creation,Builtin,2,130286,0x7ff66385eb64,12,SymbolFor
code-creation,Builtin,2,130291,0x7ff66385eb84,12,SymbolKeyFor
code-creation,Builtin,2,130297,0x7ff66385eba4,88,TypedArrayBaseConstructor
code-creation,Builtin,2,130303,0x7ff66385ec04,256,TypedArrayConstructor
code-creation,Builtin,2,130309,0x7ff66385ed24,12,TypedArrayPrototypeBuffer
code-creation,Builtin,2,130370,0x7ff66385ed44,888,TypedArrayPrototypeByteLength
code-creation,Builtin,2,130376,0x7ff66385f0c4,368,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,130383,0x7ff66385f244,584,TypedArrayPrototypeLength
code-creation,Builtin,2,130389,0x7ff66385f4a4,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,130397,0x7ff66385f4c4,12,TypedArrayPrototypeFill
code-creation,Builtin,2,130404,0x7ff66385f4e4,12,TypedArrayPrototypeIncludes
code-creation,Builtin,2,130410,0x7ff66385f504,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,130416,0x7ff66385f524,12,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,130422,0x7ff66385f544,12,TypedArrayPrototypeReverse
code-creation,Builtin,2,130428,0x7ff66385f564,316,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,130434,0x7ff66385f6a4,10664,TypedArrayPrototypeMap
code-creation,Builtin,2,130440,0x7ff663862064,792,GenericJSToWasmWrapper
code-creation,Builtin,2,130446,0x7ff663862384,148,WasmCompileLazy
code-creation,Builtin,2,130452,0x7ff663862424,168,WasmDebugBreak
code-creation,Builtin,2,130458,0x7ff6638624e4,16,WasmOnStackReplace
code-creation,Builtin,2,130464,0x7ff663862504,140,WasmFloat32ToNumber
code-creation,Builtin,2,130469,0x7ff6638625a4,152,WasmFloat64ToNumber
code-creation,Builtin,2,130475,0x7ff663862644,4,WasmI32AtomicWait32
code-creation,Builtin,2,130481,0x7ff663862664,4,WasmI64AtomicWait32
code-creation,Builtin,2,130486,0x7ff663862684,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,130492,0x7ff6638626a4,4320,WeakMapConstructor
code-creation,Builtin,2,130498,0x7ff6638637a4,196,WeakMapLookupHashIndex
code-creation,Builtin,2,130503,0x7ff663863884,220,WeakMapGet
code-creation,Builtin,2,130509,0x7ff663863964,176,WeakMapPrototypeHas
code-creation,Builtin,2,130515,0x7ff663863a24,204,WeakMapPrototypeSet
code-creation,Builtin,2,130521,0x7ff663863b04,144,WeakMapPrototypeDelete
code-creation,Builtin,2,130526,0x7ff663863ba4,2876,WeakSetConstructor
code-creation,Builtin,2,130532,0x7ff6638646e4,176,WeakSetPrototypeHas
code-creation,Builtin,2,130538,0x7ff6638647a4,204,WeakSetPrototypeAdd
code-creation,Builtin,2,130543,0x7ff663864884,144,WeakSetPrototypeDelete
code-creation,Builtin,2,130549,0x7ff663864924,372,WeakCollectionDelete
code-creation,Builtin,2,130555,0x7ff663864aa4,764,WeakCollectionSet
code-creation,Builtin,2,130560,0x7ff663864da4,296,AsyncGeneratorResolve
code-creation,Builtin,2,130566,0x7ff663864ee4,100,AsyncGeneratorReject
code-creation,Builtin,2,130572,0x7ff663864f64,2760,AsyncGeneratorYield
code-creation,Builtin,2,130578,0x7ff663865a44,2872,AsyncGeneratorReturn
code-creation,Builtin,2,130583,0x7ff663866584,292,AsyncGeneratorResumeNext
code-creation,Builtin,2,130589,0x7ff6638666c4,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,130595,0x7ff6638666e4,1020,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,130601,0x7ff663866ae4,1028,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,130607,0x7ff663866f04,1028,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,130613,0x7ff663867324,2736,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,130619,0x7ff663867de4,2736,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,130625,0x7ff6638688a4,116,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,130630,0x7ff663868924,128,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,130636,0x7ff6638689c4,116,AsyncGeneratorYieldResolveClosure
code-creation,Builtin,2,130642,0x7ff663868a44,116,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,130648,0x7ff663868ac4,112,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,130654,0x7ff663868b44,128,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,130660,0x7ff663868be4,1592,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,130669,0x7ff663869224,1696,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,130676,0x7ff6638698e4,1716,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,130682,0x7ff663869fa4,100,AsyncIteratorValueUnwrap
code-creation,Builtin,2,130687,0x7ff66386a024,220,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,130694,0x7ff66386a104,220,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,130700,0x7ff66386a1e4,200,CEntry_Return1_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,130707,0x7ff66386a2c4,392,CEntry_Return1_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,130715,0x7ff66386a464,392,CEntry_Return1_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,130722,0x7ff66386a604,232,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,130728,0x7ff66386a704,232,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,130735,0x7ff66386a804,216,CEntry_Return2_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,130741,0x7ff66386a8e4,408,CEntry_Return2_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,130747,0x7ff66386aa84,408,CEntry_Return2_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,130754,0x7ff66386ac24,4,DirectCEntry
code-creation,Builtin,2,130759,0x7ff66386ac44,1096,StringAdd_CheckNone
code-creation,Builtin,2,130765,0x7ff66386b0a4,2484,SubString
code-creation,Builtin,2,130770,0x7ff66386ba64,16,StackCheck
code-creation,Builtin,2,130776,0x7ff66386ba84,84,DoubleToI
code-creation,Builtin,2,130781,0x7ff66386bae4,2236,GetProperty
code-creation,Builtin,2,130787,0x7ff66386c3a4,2308,GetPropertyWithReceiver
code-creation,Builtin,2,130793,0x7ff66386ccc4,16004,SetProperty
code-creation,Builtin,2,130799,0x7ff663870b64,13480,SetPropertyInLiteral
code-creation,Builtin,2,130804,0x7ff663874024,8,MemCopyUint8Uint8
code-creation,Builtin,2,130810,0x7ff663874044,8,MemMove
code-creation,Builtin,2,130815,0x7ff663874064,12,IsTraceCategoryEnabled
code-creation,Builtin,2,130821,0x7ff663874084,12,Trace
code-creation,Builtin,2,130826,0x7ff6638740a4,12,FinalizationRegistryUnregister
code-creation,Builtin,2,130833,0x7ff6638740c4,416,AsyncModuleEvaluate
code-creation,Builtin,2,130842,0x7ff663874284,12,CallAsyncModuleFulfilled
code-creation,Builtin,2,130850,0x7ff6638742a4,12,CallAsyncModuleRejected
code-creation,Builtin,2,130859,0x7ff6638742c4,260,AggregateErrorConstructor
code-creation,Builtin,2,130867,0x7ff6638743e4,856,ArrayPrototypeAt
code-creation,Builtin,2,130873,0x7ff663874744,656,ArrayPrototypeConcat
code-creation,Builtin,2,130879,0x7ff6638749e4,5824,ArrayPrototypeCopyWithin
code-creation,Builtin,2,130885,0x7ff6638760c4,212,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,130891,0x7ff6638761a4,612,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,130897,0x7ff663876424,3316,ArrayEveryLoopContinuation
code-creation,Builtin,2,130903,0x7ff663877124,1464,ArrayEvery
code-creation,Builtin,2,130908,0x7ff6638776e4,284,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,130914,0x7ff663877804,988,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,130920,0x7ff663877be4,3564,ArrayFilterLoopContinuation
code-creation,Builtin,2,130926,0x7ff6638789e4,4260,ArrayFilter
code-creation,Builtin,2,130932,0x7ff663879aa4,204,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,130938,0x7ff663879b84,32,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,130944,0x7ff663879bc4,312,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,130950,0x7ff663879d04,528,ArrayFindLoopContinuation
code-creation,Builtin,2,130956,0x7ff663879f24,1460,ArrayPrototypeFind
code-creation,Builtin,2,130962,0x7ff66387a4e4,204,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,130968,0x7ff66387a5c4,32,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,130974,0x7ff66387a604,312,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,130980,0x7ff66387a744,524,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,130986,0x7ff66387a964,1460,ArrayPrototypeFindIndex
code-creation,Builtin,2,130992,0x7ff66387af24,448,ArrayFindLastLoopContinuation
code-creation,Builtin,2,130998,0x7ff66387b104,1700,ArrayPrototypeFindLast
code-creation,Builtin,2,131004,0x7ff66387b7c4,448,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,131010,0x7ff66387b9a4,1700,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,131015,0x7ff66387c064,212,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,131021,0x7ff66387c144,212,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,131029,0x7ff66387c224,3156,ArrayForEachLoopContinuation
code-creation,Builtin,2,131036,0x7ff66387ce84,1328,ArrayForEach
code-creation,Builtin,2,131042,0x7ff66387d3c4,3572,ArrayFrom
code-creation,Builtin,2,131047,0x7ff66387e1c4,148,ArrayIsArray
code-creation,Builtin,2,131053,0x7ff66387e264,404,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,131059,0x7ff66387e404,36,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,131065,0x7ff66387e444,140,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,131071,0x7ff66387e4e4,312,ConvertToLocaleString
code-creation,Builtin,2,131077,0x7ff66387e624,752,JoinStackPush
code-creation,Builtin,2,131082,0x7ff66387e924,272,JoinStackPop
code-creation,Builtin,2,131088,0x7ff66387ea44,6628,ArrayPrototypeJoin
code-creation,Builtin,2,131093,0x7ff663880444,5360,ArrayPrototypeToLocaleString
code-creation,Builtin,2,131099,0x7ff663881944,236,ArrayPrototypeToString
code-creation,Builtin,2,131105,0x7ff663881a44,5924,TypedArrayPrototypeJoin
code-creation,Builtin,2,131111,0x7ff663883184,4636,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,131117,0x7ff6638843a4,3824,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,131122,0x7ff6638852a4,260,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,131128,0x7ff6638853c4,252,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,131136,0x7ff6638854c4,532,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,131145,0x7ff6638856e4,3192,ArrayMapLoopContinuation
code-creation,Builtin,2,131153,0x7ff663886364,3912,ArrayMap
code-creation,Builtin,2,131159,0x7ff6638872c4,1000,ArrayOf
code-creation,Builtin,2,131165,0x7ff6638876c4,444,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,131171,0x7ff663887884,204,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,131177,0x7ff663887964,204,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,131183,0x7ff663887a44,3200,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,131189,0x7ff6638886e4,2000,ArrayReduceRight
code-creation,Builtin,2,131195,0x7ff663888ec4,176,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,131201,0x7ff663888f84,204,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,131209,0x7ff663889064,204,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,131218,0x7ff663889144,3252,ArrayReduceLoopContinuation
code-creation,Builtin,2,131224,0x7ff663889e04,1604,ArrayReduce
code-creation,Builtin,2,131229,0x7ff66388a464,3216,ArrayPrototypeReverse
code-creation,Builtin,2,131235,0x7ff66388b104,3592,ArrayPrototypeShift
code-creation,Builtin,2,131241,0x7ff66388bf24,5220,ArrayPrototypeSlice
code-creation,Builtin,2,131247,0x7ff66388d3a4,212,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,131253,0x7ff66388d484,580,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,131259,0x7ff66388d6e4,3304,ArraySomeLoopContinuation
code-creation,Builtin,2,131265,0x7ff66388e3e4,1448,ArraySome
code-creation,Builtin,2,131271,0x7ff66388e9a4,14216,ArrayPrototypeSplice
code-creation,Builtin,2,131276,0x7ff663892144,3264,ArrayPrototypeUnshift
code-creation,Builtin,2,131282,0x7ff663892e24,332,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,131288,0x7ff663892f84,348,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,131294,0x7ff6638930e4,208,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,131300,0x7ff6638931c4,332,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,131306,0x7ff663893324,208,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,131312,0x7ff663893404,96,ArrayBufferIsView
code-creation,Builtin,2,131317,0x7ff663893484,396,ToInteger
code-creation,Builtin,2,131323,0x7ff663893624,3084,FastCreateDataProperty
code-creation,Builtin,2,131329,0x7ff663894244,676,CheckNumberInRange
code-creation,Builtin,2,131334,0x7ff663894504,584,CheckSameObject
code-creation,Builtin,2,131340,0x7ff663894764,904,BooleanConstructor
code-creation,Builtin,2,131345,0x7ff663894b04,164,BooleanPrototypeToString
code-creation,Builtin,2,131351,0x7ff663894bc4,156,BooleanPrototypeValueOf
code-creation,Builtin,2,131359,0x7ff663894c64,1184,BigIntAddNoThrow
code-creation,Builtin,2,131365,0x7ff663895124,1280,BigIntAdd
code-creation,Builtin,2,131371,0x7ff663895644,1184,BigIntSubtractNoThrow
code-creation,Builtin,2,131376,0x7ff663895b04,1280,BigIntSubtract
code-creation,Builtin,2,131382,0x7ff663896024,284,BigIntUnaryMinus
code-creation,Builtin,2,131388,0x7ff663896144,1360,ToString
code-creation,Builtin,2,131393,0x7ff6638966a4,156,StringPrototypeToString
code-creation,Builtin,2,131399,0x7ff663896744,156,StringPrototypeValueOf
code-creation,Builtin,2,131411,0x7ff6638967e4,2480,StringToList
code-creation,Builtin,2,131418,0x7ff6638971a4,1012,StringPrototypeCharAt
code-creation,Builtin,2,131427,0x7ff6638975a4,700,StringPrototypeCharCodeAt
code-creation,Builtin,2,131433,0x7ff663897864,1288,StringPrototypeCodePointAt
code-creation,Builtin,2,131439,0x7ff663897d84,400,StringPrototypeConcat
code-creation,Builtin,2,131445,0x7ff663897f24,992,StringConstructor
code-creation,Builtin,2,131451,0x7ff663898324,1436,StringAddConvertLeft
code-creation,Builtin,2,131456,0x7ff6638988c4,1464,StringAddConvertRight
code-creation,Builtin,2,131462,0x7ff663898e84,816,StringCharAt
code-creation,Builtin,2,131468,0x7ff6638991c4,16,FastNewClosureBaseline
code-creation,Builtin,2,131473,0x7ff6638991e4,196,FastNewFunctionContextEval
code-creation,Builtin,2,131479,0x7ff6638992c4,196,FastNewFunctionContextFunction
code-creation,Builtin,2,131486,0x7ff6638993a4,248,CreateRegExpLiteral
code-creation,Builtin,2,131491,0x7ff6638994a4,1060,CreateShallowArrayLiteral
code-creation,Builtin,2,131497,0x7ff6638998e4,504,CreateEmptyArrayLiteral
code-creation,Builtin,2,131504,0x7ff663899ae4,1736,CreateShallowObjectLiteral
code-creation,Builtin,2,131510,0x7ff66389a1c4,384,ObjectConstructor
code-creation,Builtin,2,131515,0x7ff66389a364,176,CreateEmptyLiteralObject
code-creation,Builtin,2,131521,0x7ff66389a424,536,NumberConstructor
code-creation,Builtin,2,131527,0x7ff66389a644,64,GenericLazyDeoptContinuation
code-creation,Builtin,2,131533,0x7ff66389a6a4,64,StringToNumber
code-creation,Builtin,2,131539,0x7ff66389a704,184,NonNumberToNumber
code-creation,Builtin,2,131545,0x7ff66389a7c4,240,NonNumberToNumeric
code-creation,Builtin,2,131550,0x7ff66389a8c4,36,ToNumeric
code-creation,Builtin,2,131556,0x7ff66389a904,1184,NumberToString
code-creation,Builtin,2,131562,0x7ff66389adc4,92,ToBoolean
code-creation,Builtin,2,131567,0x7ff66389ae24,96,ToBooleanForBaselineJump
code-creation,Builtin,2,131573,0x7ff66389aea4,728,ToLength
code-creation,Builtin,2,131578,0x7ff66389b184,1312,ToName
code-creation,Builtin,2,131584,0x7ff66389b6c4,756,ToObject
code-creation,Builtin,2,131590,0x7ff66389b9c4,208,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,131596,0x7ff66389baa4,208,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,131601,0x7ff66389bb84,208,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,131607,0x7ff66389bc64,288,OrdinaryToPrimitive_Number
code-creation,Builtin,2,131613,0x7ff66389bda4,288,OrdinaryToPrimitive_String
code-creation,Builtin,2,131619,0x7ff66389bee4,216,FastConsoleAssert
code-creation,Builtin,2,131624,0x7ff66389bfc4,160,DataViewPrototypeGetBuffer
code-creation,Builtin,2,131630,0x7ff66389c084,336,DataViewPrototypeGetByteLength
code-creation,Builtin,2,131637,0x7ff66389c1e4,336,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,131642,0x7ff66389c344,572,DataViewPrototypeGetUint8
code-creation,Builtin,2,131648,0x7ff66389c584,572,DataViewPrototypeGetInt8
code-creation,Builtin,2,131654,0x7ff66389c7c4,644,DataViewPrototypeGetUint16
code-creation,Builtin,2,131660,0x7ff66389ca64,644,DataViewPrototypeGetInt16
code-creation,Builtin,2,131669,0x7ff66389cd04,808,DataViewPrototypeGetUint32
code-creation,Builtin,2,131675,0x7ff66389d044,684,DataViewPrototypeGetInt32
code-creation,Builtin,2,131681,0x7ff66389d304,848,DataViewPrototypeGetFloat32
code-creation,Builtin,2,131687,0x7ff66389d664,912,DataViewPrototypeGetFloat64
code-creation,Builtin,2,131693,0x7ff66389da04,984,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,131700,0x7ff66389dde4,1004,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,131707,0x7ff66389e1e4,928,DataViewPrototypeSetUint8
code-creation,Builtin,2,131713,0x7ff66389e5a4,928,DataViewPrototypeSetInt8
code-creation,Builtin,2,131719,0x7ff66389e964,1028,DataViewPrototypeSetUint16
code-creation,Builtin,2,131725,0x7ff66389ed84,1028,DataViewPrototypeSetInt16
code-creation,Builtin,2,131730,0x7ff66389f1a4,1064,DataViewPrototypeSetUint32
code-creation,Builtin,2,131737,0x7ff66389f5e4,1064,DataViewPrototypeSetInt32
code-creation,Builtin,2,131743,0x7ff66389fa24,1032,DataViewPrototypeSetFloat32
code-creation,Builtin,2,131748,0x7ff66389fe44,1096,DataViewPrototypeSetFloat64
code-creation,Builtin,2,131754,0x7ff6638a02a4,944,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,131760,0x7ff6638a0664,944,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,131766,0x7ff6638a0a24,828,FinalizationRegistryConstructor
code-creation,Builtin,2,131772,0x7ff6638a0d64,1152,FinalizationRegistryRegister
code-creation,Builtin,2,131778,0x7ff6638a1204,648,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,131785,0x7ff6638a14a4,328,FunctionPrototypeHasInstance
code-creation,Builtin,2,131790,0x7ff6638a1604,924,FastFunctionPrototypeBind
code-creation,Builtin,2,131796,0x7ff6638a19a4,88,IncBlockCounter
code-creation,Builtin,2,131802,0x7ff6638a1a04,228,GetTemplateObject
code-creation,Builtin,2,131808,0x7ff6638a1b04,28,BytecodeBudgetInterruptFromCode
code-creation,Builtin,2,131814,0x7ff6638a1b24,92,ForInNext
code-creation,Builtin,2,131819,0x7ff6638a1b84,128,GetImportMetaObjectBaseline
code-creation,Builtin,2,131825,0x7ff6638a1c24,116,GetIteratorWithFeedback
code-creation,Builtin,2,131831,0x7ff6638a1ca4,100,GetIteratorBaseline
code-creation,Builtin,2,131839,0x7ff6638a1d24,268,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,131848,0x7ff6638a1e44,1084,CallIteratorWithFeedback
code-creation,Builtin,2,131856,0x7ff6638a2284,288,MathAbs
code-creation,Builtin,2,131862,0x7ff6638a23c4,428,MathCeil
code-creation,Builtin,2,131867,0x7ff6638a2584,432,MathFloor
code-creation,Builtin,2,131873,0x7ff6638a2744,488,MathRound
code-creation,Builtin,2,131878,0x7ff6638a2944,428,MathTrunc
code-creation,Builtin,2,131884,0x7ff6638a2b04,368,MathPow
code-creation,Builtin,2,131889,0x7ff6638a2c84,396,MathMax
code-creation,Builtin,2,131895,0x7ff6638a2e24,404,MathMin
code-creation,Builtin,2,131900,0x7ff6638a2fc4,320,MathAcos
code-creation,Builtin,2,131906,0x7ff6638a3124,320,MathAcosh
code-creation,Builtin,2,131911,0x7ff6638a3284,320,MathAsin
code-creation,Builtin,2,131916,0x7ff6638a33e4,320,MathAsinh
code-creation,Builtin,2,131922,0x7ff6638a3544,320,MathAtan
code-creation,Builtin,2,131927,0x7ff6638a36a4,416,MathAtan2
code-creation,Builtin,2,131933,0x7ff6638a3864,320,MathAtanh
code-creation,Builtin,2,131938,0x7ff6638a39c4,320,MathCbrt
code-creation,Builtin,2,131944,0x7ff6638a3b24,168,MathClz32
code-creation,Builtin,2,131949,0x7ff6638a3be4,320,MathCos
code-creation,Builtin,2,131955,0x7ff6638a3d44,320,MathCosh
code-creation,Builtin,2,131960,0x7ff6638a3ea4,320,MathExp
code-creation,Builtin,2,131965,0x7ff6638a4004,320,MathExpm1
code-creation,Builtin,2,131971,0x7ff6638a4164,272,MathFround
code-creation,Builtin,2,131976,0x7ff6638a4284,304,MathImul
code-creation,Builtin,2,131982,0x7ff6638a43c4,320,MathLog
code-creation,Builtin,2,131987,0x7ff6638a4524,320,MathLog1p
code-creation,Builtin,2,131992,0x7ff6638a4684,320,MathLog10
code-creation,Builtin,2,131998,0x7ff6638a47e4,320,MathLog2
code-creation,Builtin,2,132003,0x7ff6638a4944,320,MathSin
code-creation,Builtin,2,132009,0x7ff6638a4aa4,180,MathSign
code-creation,Builtin,2,132014,0x7ff6638a4b64,320,MathSinh
code-creation,Builtin,2,132019,0x7ff6638a4cc4,268,MathSqrt
code-creation,Builtin,2,132025,0x7ff6638a4de4,320,MathTan
code-creation,Builtin,2,132030,0x7ff6638a4f44,320,MathTanh
code-creation,Builtin,2,132036,0x7ff6638a50a4,1060,MathHypot
code-creation,Builtin,2,132041,0x7ff6638a54e4,332,MathRandom
code-creation,Builtin,2,132046,0x7ff6638a5644,2956,NumberPrototypeToString
code-creation,Builtin,2,132052,0x7ff6638a61e4,136,NumberIsFinite
code-creation,Builtin,2,132088,0x7ff6638a6284,340,NumberIsInteger
code-creation,Builtin,2,132097,0x7ff6638a63e4,116,NumberIsNaN
code-creation,Builtin,2,132103,0x7ff6638a6464,372,NumberIsSafeInteger
code-creation,Builtin,2,132108,0x7ff6638a65e4,156,NumberPrototypeValueOf
code-creation,Builtin,2,132114,0x7ff6638a6684,196,NumberParseFloat
code-creation,Builtin,2,132120,0x7ff6638a6764,248,ParseInt
code-creation,Builtin,2,132125,0x7ff6638a6864,84,NumberParseInt
code-creation,Builtin,2,132131,0x7ff6638a68c4,860,Add
code-creation,Builtin,2,132139,0x7ff6638a6c24,424,Subtract
code-creation,Builtin,2,132147,0x7ff6638a6de4,608,Multiply
code-creation,Builtin,2,132155,0x7ff6638a7064,532,Divide
code-creation,Builtin,2,132165,0x7ff6638a7284,592,Modulus
code-creation,Builtin,2,132176,0x7ff6638a74e4,524,Exponentiate
code-creation,Builtin,2,132187,0x7ff6638a7704,344,Negate
code-creation,Builtin,2,132198,0x7ff6638a7864,112,BitwiseNot
code-creation,Builtin,2,132208,0x7ff6638a78e4,112,Decrement
code-creation,Builtin,2,132216,0x7ff6638a7964,112,Increment
code-creation,Builtin,2,132224,0x7ff6638a79e4,392,ShiftLeft
code-creation,Builtin,2,132232,0x7ff6638a7b84,392,ShiftRight
code-creation,Builtin,2,132241,0x7ff6638a7d24,508,ShiftRightLogical
code-creation,Builtin,2,132249,0x7ff6638a7f24,388,BitwiseAnd
code-creation,Builtin,2,132257,0x7ff6638a80c4,388,BitwiseOr
code-creation,Builtin,2,132264,0x7ff6638a8264,388,BitwiseXor
code-creation,Builtin,2,132272,0x7ff6638a8404,796,LessThan
code-creation,Builtin,2,132279,0x7ff6638a8724,796,LessThanOrEqual
code-creation,Builtin,2,132288,0x7ff6638a8a44,796,GreaterThan
code-creation,Builtin,2,132295,0x7ff6638a8d64,796,GreaterThanOrEqual
code-creation,Builtin,2,132303,0x7ff6638a9084,860,Equal
code-creation,Builtin,2,132311,0x7ff6638a93e4,348,StrictEqual
code-creation,Builtin,2,132319,0x7ff6638a9544,3132,ObjectFromEntries
code-creation,Builtin,2,132327,0x7ff6638aa184,756,CreateObjectWithoutProperties
code-creation,Builtin,2,132335,0x7ff6638aa484,144,ObjectIsExtensible
code-creation,Builtin,2,132343,0x7ff6638aa524,148,ObjectPreventExtensions
code-creation,Builtin,2,132352,0x7ff6638aa5c4,144,ObjectGetPrototypeOf
code-creation,Builtin,2,132360,0x7ff6638aa664,300,ObjectSetPrototypeOf
code-creation,Builtin,2,132368,0x7ff6638aa7a4,80,ObjectPrototypeToString
code-creation,Builtin,2,132377,0x7ff6638aa804,96,ObjectPrototypeValueOf
code-creation,Builtin,2,132385,0x7ff6638aa884,164,ObjectPrototypeToLocaleString
code-creation,Builtin,2,132394,0x7ff6638aa944,868,FulfillPromise
code-creation,Builtin,2,132403,0x7ff6638aacc4,988,RejectPromise
code-creation,Builtin,2,132411,0x7ff6638ab0a4,2416,NewPromiseCapability
code-creation,Builtin,2,132419,0x7ff6638aba24,164,PromiseCapabilityDefaultReject
code-creation,Builtin,2,132428,0x7ff6638abae4,148,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,132436,0x7ff6638abb84,1416,PerformPromiseThen
code-creation,Builtin,2,132444,0x7ff6638ac124,648,PromiseReject
code-creation,Builtin,2,132452,0x7ff6638ac3c4,284,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,132461,0x7ff6638ac4e4,104,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,132470,0x7ff6638ac564,4560,PromiseAll
code-creation,Builtin,2,132477,0x7ff6638ad744,4880,PromiseAllSettled
code-creation,Builtin,2,132486,0x7ff6638aea64,1104,PromiseAllResolveElementClosure
code-creation,Builtin,2,132496,0x7ff6638aeec4,1392,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,132505,0x7ff6638af444,1400,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,132515,0x7ff6638af9c4,1180,PromiseAnyRejectElementClosure
code-creation,Builtin,2,132524,0x7ff6638afe64,2368,PromiseAny
code-creation,Builtin,2,132531,0x7ff6638b07c4,2908,PromiseConstructor
code-creation,Builtin,2,132539,0x7ff6638b1324,296,PromisePrototypeCatch
code-creation,Builtin,2,132547,0x7ff6638b1464,88,PromiseValueThunkFinally
code-creation,Builtin,2,132556,0x7ff6638b14c4,84,PromiseThrowerFinally
code-creation,Builtin,2,132565,0x7ff6638b1524,904,PromiseCatchFinally
code-creation,Builtin,2,132573,0x7ff6638b18c4,904,PromiseThenFinally
code-creation,Builtin,2,132583,0x7ff6638b1c64,1700,PromisePrototypeFinally
code-creation,Builtin,2,132593,0x7ff6638b2324,1336,PromiseRace
code-creation,Builtin,2,132601,0x7ff6638b2864,268,PromiseFulfillReactionJob
code-creation,Builtin,2,132609,0x7ff6638b2984,364,PromiseRejectReactionJob
code-creation,Builtin,2,132619,0x7ff6638b2b04,156,PromiseResolveTrampoline
code-creation,Builtin,2,132628,0x7ff6638b2ba4,656,PromiseResolve
code-creation,Builtin,2,132636,0x7ff6638b2e44,712,ResolvePromise
code-creation,Builtin,2,132645,0x7ff6638b3124,2224,PromisePrototypeThen
code-creation,Builtin,2,132653,0x7ff6638b39e4,1144,PromiseResolveThenableJob
code-creation,Builtin,2,132662,0x7ff6638b3e64,448,ProxyConstructor
code-creation,Builtin,2,132675,0x7ff6638b4044,1760,ProxyDeleteProperty
code-creation,Builtin,2,132683,0x7ff6638b4744,2112,ProxyGetProperty
code-creation,Builtin,2,132692,0x7ff6638b4fa4,1060,ProxyGetPrototypeOf
code-creation,Builtin,2,132700,0x7ff6638b53e4,1668,ProxyHasProperty
code-creation,Builtin,2,132709,0x7ff6638b5a84,760,ProxyIsExtensible
code-creation,Builtin,2,132717,0x7ff6638b5d84,800,ProxyPreventExtensions
code-creation,Builtin,2,132726,0x7ff6638b60c4,1148,ProxyRevocable
code-creation,Builtin,2,132734,0x7ff6638b6544,120,ProxyRevoke
code-creation,Builtin,2,132742,0x7ff6638b65c4,2216,ProxySetProperty
code-creation,Builtin,2,132750,0x7ff6638b6e84,1292,ProxySetPrototypeOf
code-creation,Builtin,2,132758,0x7ff6638b73a4,208,ReflectIsExtensible
code-creation,Builtin,2,132767,0x7ff6638b7484,212,ReflectPreventExtensions
code-creation,Builtin,2,132775,0x7ff6638b7564,188,ReflectGetPrototypeOf
code-creation,Builtin,2,132784,0x7ff6638b7624,292,ReflectSetPrototypeOf
code-creation,Builtin,2,132793,0x7ff6638b7764,284,ReflectGet
code-creation,Builtin,2,132801,0x7ff6638b7884,160,ReflectDeleteProperty
code-creation,Builtin,2,132809,0x7ff6638b7944,148,ReflectHas
code-creation,Builtin,2,132818,0x7ff6638b79e4,5132,RegExpPrototypeExecSlow
code-creation,Builtin,2,132827,0x7ff6638b8e04,5104,RegExpPrototypeExec
code-creation,Builtin,2,132835,0x7ff6638ba204,2360,RegExpPrototypeMatchAll
code-creation,Builtin,2,132844,0x7ff6638bab44,9428,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,132853,0x7ff6638bd024,8840,RegExpMatchFast
code-creation,Builtin,2,132862,0x7ff6638bf2c4,3600,RegExpPrototypeMatch
code-creation,Builtin,2,132875,0x7ff6638c00e4,6328,RegExpReplace
code-creation,Builtin,2,132883,0x7ff6638c19a4,524,RegExpPrototypeReplace
code-creation,Builtin,2,132891,0x7ff6638c1bc4,1424,RegExpSearchFast
code-creation,Builtin,2,132899,0x7ff6638c2164,1640,RegExpPrototypeSearch
code-creation,Builtin,2,132908,0x7ff6638c27e4,200,RegExpPrototypeSourceGetter
code-creation,Builtin,2,132917,0x7ff6638c28c4,5872,RegExpSplit
code-creation,Builtin,2,132925,0x7ff6638c3fc4,476,RegExpPrototypeSplit
code-creation,Builtin,2,132934,0x7ff6638c41a4,2252,RegExpPrototypeTest
code-creation,Builtin,2,132942,0x7ff6638c4a84,1360,RegExpPrototypeTestFast
code-creation,Builtin,2,132950,0x7ff6638c4fe4,228,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,132959,0x7ff6638c50e4,244,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,132968,0x7ff6638c51e4,244,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,132977,0x7ff6638c52e4,244,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,132987,0x7ff6638c53e4,244,RegExpPrototypeLinearGetter
code-creation,Builtin,2,132995,0x7ff6638c54e4,244,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,133003,0x7ff6638c55e4,272,RegExpPrototypeStickyGetter
code-creation,Builtin,2,133012,0x7ff6638c5704,272,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,133020,0x7ff6638c5824,2256,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,133029,0x7ff6638c6104,1500,StringPrototypeAt
code-creation,Builtin,2,133038,0x7ff6638c66e4,3008,StringPrototypeEndsWith
code-creation,Builtin,2,133047,0x7ff6638c72c4,480,CreateHTML
code-creation,Builtin,2,133056,0x7ff6638c74c4,164,StringPrototypeAnchor
code-creation,Builtin,2,133065,0x7ff6638c7584,128,StringPrototypeBig
code-creation,Builtin,2,133073,0x7ff6638c7624,128,StringPrototypeBlink
code-creation,Builtin,2,133084,0x7ff6638c76c4,128,StringPrototypeBold
code-creation,Builtin,2,133093,0x7ff6638c7764,168,StringPrototypeFontcolor
code-creation,Builtin,2,133101,0x7ff6638c7824,168,StringPrototypeFontsize
code-creation,Builtin,2,133110,0x7ff6638c78e4,128,StringPrototypeFixed
code-creation,Builtin,2,133118,0x7ff6638c7984,128,StringPrototypeItalics
code-creation,Builtin,2,133127,0x7ff6638c7a24,168,StringPrototypeLink
code-creation,Builtin,2,133135,0x7ff6638c7ae4,128,StringPrototypeSmall
code-creation,Builtin,2,133144,0x7ff6638c7b84,128,StringPrototypeStrike
code-creation,Builtin,2,133153,0x7ff6638c7c24,128,StringPrototypeSub
code-creation,Builtin,2,133161,0x7ff6638c7cc4,128,StringPrototypeSup
code-creation,Builtin,2,133170,0x7ff6638c7d64,1028,StringPrototypeIncludes
code-creation,Builtin,2,133179,0x7ff6638c8184,628,StringPrototypeIndexOf
code-creation,Builtin,2,133188,0x7ff6638c8404,344,StringPrototypeIterator
code-creation,Builtin,2,133196,0x7ff6638c8564,2024,StringIteratorPrototypeNext
code-creation,Builtin,2,133204,0x7ff6638c8d64,1304,StringPrototypeMatch
code-creation,Builtin,2,133212,0x7ff6638c9284,1304,StringPrototypeSearch
code-creation,Builtin,2,133220,0x7ff6638c97a4,824,StringPrototypePadStart
code-creation,Builtin,2,133228,0x7ff6638c9ae4,824,StringPrototypePadEnd
code-creation,Builtin,2,133236,0x7ff6638c9e24,120,StringRepeat
code-creation,Builtin,2,133244,0x7ff6638c9ea4,400,StringPrototypeRepeat
code-creation,Builtin,2,133253,0x7ff6638ca044,11188,StringPrototypeReplaceAll
code-creation,Builtin,2,133261,0x7ff6638ccc04,3388,StringPrototypeSlice
code-creation,Builtin,2,133269,0x7ff6638cd944,3028,StringPrototypeStartsWith
code-creation,Builtin,2,133277,0x7ff6638ce524,3328,StringPrototypeSubstr
code-creation,Builtin,2,133286,0x7ff6638cf244,3260,StringPrototypeSubstring
code-creation,Builtin,2,133295,0x7ff6638cff04,6916,StringPrototypeTrim
code-creation,Builtin,2,133303,0x7ff6638d1a24,6332,StringPrototypeTrimStart
code-creation,Builtin,2,133312,0x7ff6638d32e4,5836,StringPrototypeTrimEnd
code-creation,Builtin,2,133321,0x7ff6638d49c4,160,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,133330,0x7ff6638d4a84,156,SymbolPrototypeToPrimitive
code-creation,Builtin,2,133339,0x7ff6638d4b24,172,SymbolPrototypeToString
code-creation,Builtin,2,133348,0x7ff6638d4be4,156,SymbolPrototypeValueOf
code-creation,Builtin,2,133357,0x7ff6638d4c84,832,TypedArrayPrototypeAt
code-creation,Builtin,2,133365,0x7ff6638d4fe4,10064,CreateTypedArray
code-creation,Builtin,2,133374,0x7ff6638d7744,1000,TypedArrayPrototypeEvery
code-creation,Builtin,2,133382,0x7ff6638d7b44,372,TypedArrayPrototypeEntries
code-creation,Builtin,2,133392,0x7ff6638d7cc4,3512,TypedArrayPrototypeFilter
code-creation,Builtin,2,133400,0x7ff6638d8a84,996,TypedArrayPrototypeFind
code-creation,Builtin,2,133408,0x7ff6638d8e84,1004,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,133417,0x7ff6638d9284,428,FindLastAllElementsDetachedContinuation
code-creation,Builtin,2,133426,0x7ff6638d9444,1208,TypedArrayPrototypeFindLast
code-creation,Builtin,2,133435,0x7ff6638d9904,436,FindLastIndexAllElementsDetachedContinuation
code-creation,Builtin,2,133444,0x7ff6638d9ac4,1216,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,133453,0x7ff6638d9fa4,864,TypedArrayPrototypeForEach
code-creation,Builtin,2,133462,0x7ff6638da324,2352,TypedArrayFrom
code-creation,Builtin,2,133470,0x7ff6638dac64,356,TypedArrayPrototypeKeys
code-creation,Builtin,2,133479,0x7ff6638dade4,1028,TypedArrayOf
code-creation,Builtin,2,133488,0x7ff6638db204,952,TypedArrayPrototypeReduce
code-creation,Builtin,2,133497,0x7ff6638db5c4,944,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,133506,0x7ff6638db984,2508,TypedArrayPrototypeSet
code-creation,Builtin,2,133514,0x7ff6638dc364,3040,TypedArrayPrototypeSlice
code-creation,Builtin,2,133523,0x7ff6638dcf64,992,TypedArrayPrototypeSome
code-creation,Builtin,2,133532,0x7ff6638dd364,1060,TypedArrayMergeSort
code-creation,Builtin,2,133540,0x7ff6638dd7a4,1620,TypedArrayPrototypeSort
code-creation,Builtin,2,133548,0x7ff6638dde04,2736,TypedArrayPrototypeSubArray
code-creation,Builtin,2,133562,0x7ff6638de8c4,372,TypedArrayPrototypeValues
code-creation,Builtin,2,133571,0x7ff6638dea44,952,WeakRefConstructor
code-creation,Builtin,2,133579,0x7ff6638dee04,184,WeakRefDeref
code-creation,Builtin,2,133587,0x7ff6638deec4,680,NewSloppyArgumentsElements
code-creation,Builtin,2,133595,0x7ff6638df184,296,NewStrictArgumentsElements
code-creation,Builtin,2,133603,0x7ff6638df2c4,320,NewRestArgumentsElements
code-creation,Builtin,2,133618,0x7ff6638df424,1388,FastNewSloppyArguments
code-creation,Builtin,2,133627,0x7ff6638df9a4,524,FastNewStrictArguments
code-creation,Builtin,2,133636,0x7ff6638dfbc4,556,FastNewRestArguments
code-creation,Builtin,2,133644,0x7ff6638dfe04,676,StringSlowFlatten
code-creation,Builtin,2,133653,0x7ff6638e00c4,2068,StringIndexOf
code-creation,Builtin,2,133661,0x7ff6638e08e4,4,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,133673,0x7ff6638e0904,20,TestHelperPlus1
code-creation,Builtin,2,133682,0x7ff6638e0924,20,TestHelperPlus2
code-creation,Builtin,2,133691,0x7ff6638e0944,96,NewSmiBox
code-creation,Builtin,2,133698,0x7ff6638e09c4,24,ReturnTwoValues
code-creation,Builtin,2,133706,0x7ff6638e09e4,32,Load_FastSmiElements_0
code-creation,Builtin,2,133715,0x7ff6638e0a24,32,Load_FastObjectElements_0
code-creation,Builtin,2,133724,0x7ff6638e0a64,144,Load_FastDoubleElements_0
code-creation,Builtin,2,133733,0x7ff6638e0b04,32,Store_FastSmiElements_0
code-creation,Builtin,2,133742,0x7ff6638e0b44,96,Store_FastObjectElements_0
code-creation,Builtin,2,133750,0x7ff6638e0bc4,48,Store_FastDoubleElements_0
code-creation,Builtin,2,133759,0x7ff6638e0c04,36,Delete_FastSmiElements_0
code-creation,Builtin,2,133767,0x7ff6638e0c44,36,Delete_FastObjectElements_0
code-creation,Builtin,2,133776,0x7ff6638e0c84,44,Delete_FastDoubleElements_0
code-creation,Builtin,2,133786,0x7ff6638e0cc4,308,SortCompareDefault
code-creation,Builtin,2,133794,0x7ff6638e0e04,92,SortCompareUserFn
code-creation,Builtin,2,133802,0x7ff6638e0e64,8,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,133811,0x7ff6638e0e84,312,Copy
code-creation,Builtin,2,133818,0x7ff6638e0fc4,5776,MergeAt
code-creation,Builtin,2,133826,0x7ff6638e2664,792,GallopLeft
code-creation,Builtin,2,133835,0x7ff6638e2984,832,GallopRight
code-creation,Builtin,2,133843,0x7ff6638e2ce4,3832,ArrayTimSort
code-creation,Builtin,2,133852,0x7ff6638e3be4,2112,ArrayPrototypeSort
code-creation,Builtin,2,133860,0x7ff6638e4444,100,WasmInt32ToHeapNumber
code-creation,Builtin,2,133868,0x7ff6638e44c4,124,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,133876,0x7ff6638e4544,76,WasmTaggedToFloat64
code-creation,Builtin,2,133885,0x7ff6638e45a4,72,WasmMemoryGrow
code-creation,Builtin,2,133894,0x7ff6638e4604,100,WasmTableInit
code-creation,Builtin,2,133902,0x7ff6638e4684,100,WasmTableCopy
code-creation,Builtin,2,133910,0x7ff6638e4704,84,WasmTableFill
code-creation,Builtin,2,133918,0x7ff6638e4764,72,WasmTableGrow
code-creation,Builtin,2,133926,0x7ff6638e47c4,144,WasmTableGet
code-creation,Builtin,2,133933,0x7ff6638e4864,236,WasmTableSet
code-creation,Builtin,2,133942,0x7ff6638e4964,88,WasmRefFunc
code-creation,Builtin,2,133949,0x7ff6638e49c4,144,WasmAllocateFixedArray
code-creation,Builtin,2,133957,0x7ff6638e4a64,44,WasmThrow
code-creation,Builtin,2,133965,0x7ff6638e4aa4,52,WasmRethrow
code-creation,Builtin,2,133972,0x7ff6638e4ae4,44,WasmTriggerTierUp
code-creation,Builtin,2,133980,0x7ff6638e4b24,32,WasmStackGuard
code-creation,Builtin,2,133988,0x7ff6638e4b64,32,WasmStackOverflow
code-creation,Builtin,2,133996,0x7ff6638e4ba4,40,WasmTraceMemory
code-creation,Builtin,2,134004,0x7ff6638e4be4,32,WasmTraceEnter
code-creation,Builtin,2,134013,0x7ff6638e4c24,40,WasmTraceExit
code-creation,Builtin,2,134021,0x7ff6638e4c64,332,WasmAllocateJSArray
code-creation,Builtin,2,134030,0x7ff6638e4dc4,104,WasmAllocatePair
code-creation,Builtin,2,134037,0x7ff6638e4e44,64,WasmAllocateRtt
code-creation,Builtin,2,134046,0x7ff6638e4ea4,72,WasmAllocateFreshRtt
code-creation,Builtin,2,134055,0x7ff6638e4f04,124,WasmAllocateStructWithRtt
code-creation,Builtin,2,134063,0x7ff6638e4f84,140,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,134074,0x7ff6638e5024,176,WasmAllocateArray_InitZero
code-creation,Builtin,2,134084,0x7ff6638e50e4,176,WasmAllocateArray_InitNull
code-creation,Builtin,2,134092,0x7ff6638e51a4,116,WasmArrayCopyWithChecks
code-creation,Builtin,2,134101,0x7ff6638e5224,60,WasmArrayCopy
code-creation,Builtin,2,134109,0x7ff6638e5264,240,WasmAllocateObjectWrapper
code-creation,Builtin,2,134117,0x7ff6638e5364,52,WasmSubtypeCheck
code-creation,Builtin,2,134125,0x7ff6638e53a4,8,WasmInt32ToNumber
code-creation,Builtin,2,134132,0x7ff6638e53c4,116,WasmUint32ToNumber
code-creation,Builtin,2,134141,0x7ff6638e5444,144,UintPtr53ToNumber
code-creation,Builtin,2,134150,0x7ff6638e54e4,96,WasmAtomicNotify
code-creation,Builtin,2,134158,0x7ff6638e5564,116,WasmI32AtomicWait64
code-creation,Builtin,2,134166,0x7ff6638e55e4,116,WasmI64AtomicWait64
code-creation,Builtin,2,134176,0x7ff6638e5664,580,WasmGetOwnProperty
code-creation,Builtin,2,134184,0x7ff6638e58c4,40,WasmTrap
code-creation,Builtin,2,134191,0x7ff6638e5904,16,ThrowWasmTrapUnreachable
code-creation,Builtin,2,134200,0x7ff6638e5924,16,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,134208,0x7ff6638e5944,16,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,134218,0x7ff6638e5964,16,ThrowWasmTrapDivByZero
code-creation,Builtin,2,134227,0x7ff6638e5984,16,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,134235,0x7ff6638e59a4,16,ThrowWasmTrapRemByZero
code-creation,Builtin,2,134244,0x7ff6638e59c4,16,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,134253,0x7ff6638e59e4,16,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,134260,0x7ff6638e5a04,16,ThrowWasmTrapDataSegmentDropped
code-creation,Builtin,2,134269,0x7ff6638e5a24,16,ThrowWasmTrapElemSegmentDropped
code-creation,Builtin,2,134277,0x7ff6638e5a44,16,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,134285,0x7ff6638e5a64,16,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,134294,0x7ff6638e5a84,16,ThrowWasmTrapNullDereference
code-creation,Builtin,2,134302,0x7ff6638e5aa4,16,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,134310,0x7ff6638e5ac4,16,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,134318,0x7ff6638e5ae4,16,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,134326,0x7ff6638e5b04,172,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,134335,0x7ff6638e5bc4,24,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,134345,0x7ff6638e5be4,116,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,134355,0x7ff6638e5c64,112,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,134365,0x7ff6638e5ce4,24,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,134374,0x7ff6638e5d04,220,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,134384,0x7ff6638e5de4,248,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,134392,0x7ff6638e5ee4,24,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,134402,0x7ff6638e5f04,24,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,134411,0x7ff6638e5f24,24,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,134421,0x7ff6638e5f44,24,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,134430,0x7ff6638e5f64,132,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,134440,0x7ff6638e6004,8,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,134449,0x7ff6638e6024,32,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,134458,0x7ff6638e6064,32,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,134467,0x7ff6638e60a4,32,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,134475,0x7ff6638e60e4,2680,Load_GenericElementsAccessor_0
code-creation,Builtin,2,134484,0x7ff6638e6b64,24,Store_GenericElementsAccessor_0
code-creation,Builtin,2,134492,0x7ff6638e6b84,36,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,134502,0x7ff6638e6bc4,24,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,134511,0x7ff6638e6be4,164,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,134520,0x7ff6638e6ca4,180,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,134531,0x7ff6638e6d64,116,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,134541,0x7ff6638e6de4,32,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,134551,0x7ff6638e6e24,156,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,134561,0x7ff6638e6ec4,112,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,134570,0x7ff6638e6f44,28,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,134580,0x7ff6638e6f64,152,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,134589,0x7ff6638e7004,24,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,134599,0x7ff6638e7024,24,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,134608,0x7ff6638e7044,620,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,134618,0x7ff6638e72c4,220,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,134627,0x7ff6638e73a4,56,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,134637,0x7ff6638e73e4,200,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,134646,0x7ff6638e74c4,248,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,134654,0x7ff6638e75c4,56,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,134663,0x7ff6638e7604,200,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,134677,0x7ff6638e76e4,24,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,134685,0x7ff6638e7704,24,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,134694,0x7ff6638e7724,180,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,134703,0x7ff6638e77e4,24,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,134712,0x7ff6638e7804,24,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,134720,0x7ff6638e7824,180,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,134729,0x7ff6638e78e4,24,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,134737,0x7ff6638e7904,24,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,134747,0x7ff6638e7924,180,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,134756,0x7ff6638e79e4,24,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,134765,0x7ff6638e7a04,24,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,134802,0x7ff6638e7a24,180,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,134818,0x7ff6638e7ae4,132,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,134825,0x7ff6638e7b84,164,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,134831,0x7ff6638e7c44,180,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,134837,0x7ff6638e7d04,12,CollatorConstructor
code-creation,Builtin,2,134843,0x7ff6638e7d24,12,CollatorInternalCompare
code-creation,Builtin,2,134852,0x7ff6638e7d44,12,CollatorPrototypeCompare
code-creation,Builtin,2,134860,0x7ff6638e7d64,12,CollatorSupportedLocalesOf
code-creation,Builtin,2,134866,0x7ff6638e7d84,12,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,134872,0x7ff6638e7da4,12,DatePrototypeToLocaleDateString
code-creation,Builtin,2,134878,0x7ff6638e7dc4,12,DatePrototypeToLocaleString
code-creation,Builtin,2,134883,0x7ff6638e7de4,12,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,134889,0x7ff6638e7e04,12,DateTimeFormatConstructor
code-creation,Builtin,2,134895,0x7ff6638e7e24,12,DateTimeFormatInternalFormat
code-creation,Builtin,2,134901,0x7ff6638e7e44,12,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,134907,0x7ff6638e7e64,12,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,134913,0x7ff6638e7e84,12,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,134919,0x7ff6638e7ea4,12,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,134925,0x7ff6638e7ec4,12,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,134932,0x7ff6638e7ee4,12,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,134937,0x7ff6638e7f04,12,DisplayNamesConstructor
code-creation,Builtin,2,134946,0x7ff6638e7f24,12,DisplayNamesPrototypeOf
code-creation,Builtin,2,134955,0x7ff6638e7f44,12,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,134964,0x7ff6638e7f64,12,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,134972,0x7ff6638e7f84,12,IntlGetCanonicalLocales
code-creation,Builtin,2,134978,0x7ff6638e7fa4,12,ListFormatConstructor
code-creation,Builtin,2,134984,0x7ff6638e7fc4,224,ListFormatPrototypeFormat
code-creation,Builtin,2,134990,0x7ff6638e80c4,224,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,134996,0x7ff6638e81c4,12,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,135002,0x7ff6638e81e4,12,ListFormatSupportedLocalesOf
code-creation,Builtin,2,135008,0x7ff6638e8204,12,LocaleConstructor
code-creation,Builtin,2,135014,0x7ff6638e8224,12,LocalePrototypeBaseName
code-creation,Builtin,2,135055,0x7ff6638e8244,12,LocalePrototypeCalendar
code-creation,Builtin,2,135072,0x7ff6638e8264,12,LocalePrototypeCalendars
code-creation,Builtin,2,135079,0x7ff6638e8284,12,LocalePrototypeCaseFirst
code-creation,Builtin,2,135085,0x7ff6638e82a4,12,LocalePrototypeCollation
code-creation,Builtin,2,135091,0x7ff6638e82c4,12,LocalePrototypeCollations
code-creation,Builtin,2,135097,0x7ff6638e82e4,12,LocalePrototypeHourCycle
code-creation,Builtin,2,135103,0x7ff6638e8304,12,LocalePrototypeHourCycles
code-creation,Builtin,2,135109,0x7ff6638e8324,12,LocalePrototypeLanguage
code-creation,Builtin,2,135114,0x7ff6638e8344,12,LocalePrototypeMaximize
code-creation,Builtin,2,135120,0x7ff6638e8364,12,LocalePrototypeMinimize
code-creation,Builtin,2,135126,0x7ff6638e8384,12,LocalePrototypeNumeric
code-creation,Builtin,2,135132,0x7ff6638e83a4,12,LocalePrototypeNumberingSystem
code-creation,Builtin,2,135137,0x7ff6638e83c4,12,LocalePrototypeNumberingSystems
code-creation,Builtin,2,135143,0x7ff6638e83e4,12,LocalePrototypeRegion
code-creation,Builtin,2,135149,0x7ff6638e8404,12,LocalePrototypeScript
code-creation,Builtin,2,135155,0x7ff6638e8424,12,LocalePrototypeTextInfo
code-creation,Builtin,2,135161,0x7ff6638e8444,12,LocalePrototypeTimeZones
code-creation,Builtin,2,135166,0x7ff6638e8464,12,LocalePrototypeToString
code-creation,Builtin,2,135176,0x7ff6638e8484,12,LocalePrototypeWeekInfo
code-creation,Builtin,2,135182,0x7ff6638e84a4,12,NumberFormatConstructor
code-creation,Builtin,2,135188,0x7ff6638e84c4,12,NumberFormatInternalFormatNumber
code-creation,Builtin,2,135194,0x7ff6638e84e4,12,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,135199,0x7ff6638e8504,12,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,135205,0x7ff6638e8524,12,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,135213,0x7ff6638e8544,12,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,135222,0x7ff6638e8564,12,PluralRulesConstructor
code-creation,Builtin,2,135230,0x7ff6638e8584,12,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,135255,0x7ff6638e85a4,12,PluralRulesPrototypeSelect
code-creation,Builtin,2,135267,0x7ff6638e85c4,12,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,135275,0x7ff6638e85e4,12,RelativeTimeFormatConstructor
code-creation,Builtin,2,135284,0x7ff6638e8604,12,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,135292,0x7ff6638e8624,12,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,135301,0x7ff6638e8644,12,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,135310,0x7ff6638e8664,12,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,135319,0x7ff6638e8684,12,SegmenterConstructor
code-creation,Builtin,2,135327,0x7ff6638e86a4,12,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,135336,0x7ff6638e86c4,12,SegmenterPrototypeSegment
code-creation,Builtin,2,135345,0x7ff6638e86e4,12,SegmenterSupportedLocalesOf
code-creation,Builtin,2,135354,0x7ff6638e8704,12,SegmentIteratorPrototypeNext
code-creation,Builtin,2,135362,0x7ff6638e8724,12,SegmentsPrototypeContaining
code-creation,Builtin,2,135371,0x7ff6638e8744,12,SegmentsPrototypeIterator
code-creation,Builtin,2,135380,0x7ff6638e8764,12,StringPrototypeNormalizeIntl
code-creation,Builtin,2,135391,0x7ff6638e8784,12,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,135401,0x7ff6638e87a4,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,135417,0x7ff6638e87c4,200,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,135426,0x7ff6638e88a4,12,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,135435,0x7ff6638e88c4,636,StringToLowerCaseIntl
code-creation,Builtin,2,135444,0x7ff6638e8b44,12,V8BreakIteratorConstructor
code-creation,Builtin,2,135453,0x7ff6638e8b64,12,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,135462,0x7ff6638e8b84,12,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,135470,0x7ff6638e8ba4,12,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,135480,0x7ff6638e8bc4,12,V8BreakIteratorInternalFirst
code-creation,Builtin,2,135488,0x7ff6638e8be4,12,V8BreakIteratorInternalNext
code-creation,Builtin,2,135496,0x7ff6638e8c04,12,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,135504,0x7ff6638e8c24,12,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,135513,0x7ff6638e8c44,12,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,135523,0x7ff6638e8c64,12,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,135531,0x7ff6638e8c84,12,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,135540,0x7ff6638e8ca4,12,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,135549,0x7ff6638e8cc4,12,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,135558,0x7ff6638e8ce4,24,Wide
code-creation,BytecodeHandler,0,135567,0x7ff6638e8d04,24,ExtraWide
code-creation,BytecodeHandler,0,135592,0x7ff6638e8d24,104,DebugBreakWide
code-creation,BytecodeHandler,0,135599,0x7ff6638e8da4,104,DebugBreakExtraWide
code-creation,BytecodeHandler,0,135606,0x7ff6638e8e24,164,DebugBreak0
code-creation,BytecodeHandler,0,135611,0x7ff6638e8ee4,104,DebugBreak1
code-creation,BytecodeHandler,0,135617,0x7ff6638e8f64,104,DebugBreak2
code-creation,BytecodeHandler,0,135623,0x7ff6638e8fe4,104,DebugBreak3
code-creation,BytecodeHandler,0,135629,0x7ff6638e9064,104,DebugBreak4
code-creation,BytecodeHandler,0,135635,0x7ff6638e90e4,104,DebugBreak5
code-creation,BytecodeHandler,0,135640,0x7ff6638e9164,104,DebugBreak6
code-creation,BytecodeHandler,0,135646,0x7ff6638e91e4,32,Ldar
code-creation,BytecodeHandler,0,135651,0x7ff6638e9224,68,LdaZero
code-creation,BytecodeHandler,0,135657,0x7ff6638e9284,76,LdaSmi
code-creation,BytecodeHandler,0,135663,0x7ff6638e92e4,68,LdaUndefined
code-creation,BytecodeHandler,0,135672,0x7ff6638e9344,68,LdaNull
code-creation,BytecodeHandler,0,135677,0x7ff6638e93a4,68,LdaTheHole
code-creation,BytecodeHandler,0,135683,0x7ff6638e9404,20,LdaTrue
code-creation,BytecodeHandler,0,135689,0x7ff6638e9424,20,LdaFalse
code-creation,BytecodeHandler,0,135694,0x7ff6638e9444,76,LdaConstant
code-creation,BytecodeHandler,0,135700,0x7ff6638e94a4,132,LdaContextSlot
code-creation,BytecodeHandler,0,135706,0x7ff6638e9544,132,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,135712,0x7ff6638e95e4,88,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,135718,0x7ff6638e9644,88,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,135724,0x7ff6638e96a4,32,Star
code-creation,BytecodeHandler,0,135730,0x7ff6638e96e4,40,Mov
code-creation,BytecodeHandler,0,135735,0x7ff6638e9724,40,PushContext
code-creation,BytecodeHandler,0,135741,0x7ff6638e9764,36,PopContext
code-creation,BytecodeHandler,0,135747,0x7ff6638e97a4,48,TestReferenceEqual
code-creation,BytecodeHandler,0,135753,0x7ff6638e97e4,52,TestUndetectable
code-creation,BytecodeHandler,0,135759,0x7ff6638e9824,36,TestNull
code-creation,BytecodeHandler,0,135764,0x7ff6638e9864,36,TestUndefined
code-creation,BytecodeHandler,0,135770,0x7ff6638e98a4,336,TestTypeOf
code-creation,BytecodeHandler,0,135776,0x7ff6638e9a04,6036,LdaGlobal
code-creation,BytecodeHandler,0,135782,0x7ff6638eb1a4,4536,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,135788,0x7ff6638ec364,168,StaGlobal
code-creation,BytecodeHandler,0,135794,0x7ff6638ec424,160,StaContextSlot
code-creation,BytecodeHandler,0,135800,0x7ff6638ec4e4,116,StaCurrentContextSlot
code-creation,BytecodeHandler,0,135809,0x7ff6638ec564,124,LdaLookupSlot
code-creation,BytecodeHandler,0,135817,0x7ff6638ec5e4,240,LdaLookupContextSlot
code-creation,BytecodeHandler,0,135823,0x7ff6638ec6e4,4776,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,135829,0x7ff6638ed9a4,124,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,135835,0x7ff6638eda24,240,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,135842,0x7ff6638edb24,4740,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,135848,0x7ff6638eedc4,220,StaLookupSlot
code-creation,BytecodeHandler,0,135854,0x7ff6638eeea4,5216,LdaNamedProperty
code-creation,BytecodeHandler,0,135864,0x7ff6638f0324,180,LdaNamedPropertyFromSuper
code-creation,BytecodeHandler,0,135871,0x7ff6638f03e4,212,LdaKeyedProperty
code-creation,BytecodeHandler,0,135877,0x7ff6638f04c4,160,LdaModuleVariable
code-creation,BytecodeHandler,0,135883,0x7ff6638f0584,292,StaModuleVariable
code-creation,BytecodeHandler,0,135889,0x7ff6638f06c4,172,StaNamedProperty
code-creation,BytecodeHandler,0,135895,0x7ff6638f0784,172,StaNamedOwnProperty
code-creation,BytecodeHandler,0,135901,0x7ff6638f0844,164,StaKeyedProperty
code-creation,BytecodeHandler,0,135907,0x7ff6638f0904,164,StaInArrayLiteral
code-creation,BytecodeHandler,0,135913,0x7ff6638f09c4,196,StaDataPropertyInLiteral
code-creation,BytecodeHandler,0,135919,0x7ff6638f0aa4,160,CollectTypeProfile
code-creation,BytecodeHandler,0,135925,0x7ff6638f0b64,1028,Add
code-creation,BytecodeHandler,0,135931,0x7ff6638f0f84,1064,Sub
code-creation,BytecodeHandler,0,135936,0x7ff6638f13c4,1024,Mul
code-creation,BytecodeHandler,0,135942,0x7ff6638f17e4,988,Div
code-creation,BytecodeHandler,0,135948,0x7ff6638f1bc4,912,Mod
code-creation,BytecodeHandler,0,135954,0x7ff6638f1f64,964,Exp
code-creation,BytecodeHandler,0,135959,0x7ff6638f2344,876,BitwiseOr
code-creation,BytecodeHandler,0,135965,0x7ff6638f26c4,888,BitwiseXor
code-creation,BytecodeHandler,0,135971,0x7ff6638f2a44,888,BitwiseAnd
code-creation,BytecodeHandler,0,135977,0x7ff6638f2dc4,900,ShiftLeft
code-creation,BytecodeHandler,0,135982,0x7ff6638f3164,900,ShiftRight
code-creation,BytecodeHandler,0,135988,0x7ff6638f3504,1020,ShiftRightLogical
code-creation,BytecodeHandler,0,135994,0x7ff6638f3904,960,AddSmi
code-creation,BytecodeHandler,0,136000,0x7ff6638f3ce4,1000,SubSmi
code-creation,BytecodeHandler,0,136005,0x7ff6638f40e4,916,MulSmi
code-creation,BytecodeHandler,0,136011,0x7ff6638f4484,920,DivSmi
code-creation,BytecodeHandler,0,136017,0x7ff6638f4824,816,ModSmi
code-creation,BytecodeHandler,0,136023,0x7ff6638f4b64,872,ExpSmi
code-creation,BytecodeHandler,0,136029,0x7ff6638f4ee4,488,BitwiseOrSmi
code-creation,BytecodeHandler,0,136034,0x7ff6638f50e4,488,BitwiseXorSmi
code-creation,BytecodeHandler,0,136040,0x7ff6638f52e4,488,BitwiseAndSmi
code-creation,BytecodeHandler,0,136046,0x7ff6638f54e4,488,ShiftLeftSmi
code-creation,BytecodeHandler,0,136052,0x7ff6638f56e4,488,ShiftRightSmi
code-creation,BytecodeHandler,0,136058,0x7ff6638f58e4,640,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,136064,0x7ff6638f5b84,656,Inc
code-creation,BytecodeHandler,0,136069,0x7ff6638f5e24,656,Dec
code-creation,BytecodeHandler,0,136075,0x7ff6638f60c4,640,Negate
code-creation,BytecodeHandler,0,136080,0x7ff6638f6364,480,BitwiseNot
code-creation,BytecodeHandler,0,136086,0x7ff6638f6564,108,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,136092,0x7ff6638f65e4,36,LogicalNot
code-creation,BytecodeHandler,0,136098,0x7ff6638f6624,208,TypeOf
code-creation,BytecodeHandler,0,136103,0x7ff6638f6704,120,DeletePropertyStrict
code-creation,BytecodeHandler,0,136109,0x7ff6638f6784,112,DeletePropertySloppy
code-creation,BytecodeHandler,0,136115,0x7ff6638f6804,40,GetSuperConstructor
code-creation,BytecodeHandler,0,136121,0x7ff6638f6844,1132,CallAnyReceiver
code-creation,BytecodeHandler,0,136127,0x7ff6638f6cc4,1132,CallProperty
code-creation,BytecodeHandler,0,136133,0x7ff6638f7144,1012,CallProperty0
code-creation,BytecodeHandler,0,136139,0x7ff6638f7544,1028,CallProperty1
code-creation,BytecodeHandler,0,136145,0x7ff6638f7964,1040,CallProperty2
code-creation,BytecodeHandler,0,136152,0x7ff6638f7d84,1016,CallUndefinedReceiver
code-creation,BytecodeHandler,0,136159,0x7ff6638f8184,1048,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,136165,0x7ff6638f85a4,1020,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,136171,0x7ff6638f89a4,1040,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,136177,0x7ff6638f8dc4,1132,CallWithSpread
code-creation,BytecodeHandler,0,136184,0x7ff6638f9244,124,CallRuntime
code-creation,BytecodeHandler,0,136190,0x7ff6638f92c4,156,CallRuntimeForPair
code-creation,BytecodeHandler,0,136196,0x7ff6638f9364,80,CallJSRuntime
code-creation,BytecodeHandler,0,136202,0x7ff6638f93c4,1236,InvokeIntrinsic
code-creation,BytecodeHandler,0,136209,0x7ff6638f98a4,1020,Construct
code-creation,BytecodeHandler,0,136218,0x7ff6638f9ca4,536,ConstructWithSpread
code-creation,BytecodeHandler,0,136225,0x7ff6638f9ec4,1936,TestEqual
code-creation,BytecodeHandler,0,136231,0x7ff6638fa664,1064,TestEqualStrict
code-creation,BytecodeHandler,0,136237,0x7ff6638faaa4,1624,TestLessThan
code-creation,BytecodeHandler,0,136243,0x7ff6638fb104,1624,TestGreaterThan
code-creation,BytecodeHandler,0,136248,0x7ff6638fb764,1624,TestLessThanOrEqual
code-creation,BytecodeHandler,0,136254,0x7ff6638fbdc4,1624,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,136261,0x7ff6638fc424,860,TestInstanceOf
code-creation,BytecodeHandler,0,136266,0x7ff6638fc784,156,TestIn
code-creation,BytecodeHandler,0,136272,0x7ff6638fc824,112,ToName
code-creation,BytecodeHandler,0,136278,0x7ff6638fc8a4,212,ToNumber
code-creation,BytecodeHandler,0,136284,0x7ff6638fc984,232,ToNumeric
code-creation,BytecodeHandler,0,136289,0x7ff6638fca84,112,ToObject
code-creation,BytecodeHandler,0,136295,0x7ff6638fcb04,116,ToString
code-creation,BytecodeHandler,0,136301,0x7ff6638fcb84,400,CreateRegExpLiteral
code-creation,BytecodeHandler,0,136307,0x7ff6638fcd24,1468,CreateArrayLiteral
code-creation,BytecodeHandler,0,136313,0x7ff6638fd2e4,92,CreateArrayFromIterable
code-creation,BytecodeHandler,0,136319,0x7ff6638fd344,788,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,136325,0x7ff6638fd664,2140,CreateObjectLiteral
code-creation,BytecodeHandler,0,136331,0x7ff6638fdec4,224,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,136337,0x7ff6638fdfc4,168,CloneObject
code-creation,BytecodeHandler,0,136343,0x7ff6638fe084,212,GetTemplateObject
code-creation,BytecodeHandler,0,136349,0x7ff6638fe164,328,CreateClosure
code-creation,BytecodeHandler,0,136354,0x7ff6638fe2c4,120,CreateBlockContext
code-creation,BytecodeHandler,0,136360,0x7ff6638fe344,132,CreateCatchContext
code-creation,BytecodeHandler,0,136366,0x7ff6638fe3e4,256,CreateFunctionContext
code-creation,BytecodeHandler,0,136372,0x7ff6638fe504,256,CreateEvalContext
code-creation,BytecodeHandler,0,136378,0x7ff6638fe624,132,CreateWithContext
code-creation,BytecodeHandler,0,136384,0x7ff6638fe6c4,1568,CreateMappedArguments
code-creation,BytecodeHandler,0,136390,0x7ff6638fed04,592,CreateUnmappedArguments
code-creation,BytecodeHandler,0,136396,0x7ff6638fef64,632,CreateRestParameter
code-creation,BytecodeHandler,0,136402,0x7ff6638ff1e4,424,JumpLoop
code-creation,BytecodeHandler,0,136407,0x7ff6638ff3a4,44,Jump
code-creation,BytecodeHandler,0,136413,0x7ff6638ff3e4,56,JumpConstant
code-creation,BytecodeHandler,0,136419,0x7ff6638ff424,80,JumpIfNullConstant
code-creation,BytecodeHandler,0,136424,0x7ff6638ff484,80,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,136430,0x7ff6638ff4e4,80,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,136436,0x7ff6638ff544,80,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,136442,0x7ff6638ff5a4,84,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,136448,0x7ff6638ff604,80,JumpIfTrueConstant
code-creation,BytecodeHandler,0,136454,0x7ff6638ff664,80,JumpIfFalseConstant
code-creation,BytecodeHandler,0,136460,0x7ff6638ff6c4,88,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,136466,0x7ff6638ff724,152,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,136472,0x7ff6638ff7c4,152,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,136483,0x7ff6638ff864,136,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,136490,0x7ff6638ff904,136,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,136500,0x7ff6638ff9a4,64,JumpIfTrue
code-creation,BytecodeHandler,0,136506,0x7ff6638ffa04,64,JumpIfFalse
code-creation,BytecodeHandler,0,136511,0x7ff6638ffa64,64,JumpIfNull
code-creation,BytecodeHandler,0,136517,0x7ff6638ffac4,64,JumpIfNotNull
code-creation,BytecodeHandler,0,136523,0x7ff6638ffb24,64,JumpIfUndefined
code-creation,BytecodeHandler,0,136529,0x7ff6638ffb84,64,JumpIfNotUndefined
code-creation,BytecodeHandler,0,136535,0x7ff6638ffbe4,72,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,136541,0x7ff6638ffc44,76,JumpIfJSReceiver
code-creation,BytecodeHandler,0,136547,0x7ff6638ffca4,108,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,136553,0x7ff6638ffd24,464,ForInEnumerate
code-creation,BytecodeHandler,0,136559,0x7ff6638fff04,252,ForInPrepare
code-creation,BytecodeHandler,0,136565,0x7ff663900004,60,ForInContinue
code-creation,BytecodeHandler,0,136571,0x7ff663900044,256,ForInNext
code-creation,BytecodeHandler,0,136576,0x7ff663900164,48,ForInStep
code-creation,BytecodeHandler,0,136582,0x7ff6639001a4,36,SetPendingMessage
code-creation,BytecodeHandler,0,136588,0x7ff6639001e4,116,Throw
code-creation,BytecodeHandler,0,136594,0x7ff663900264,116,ReThrow
code-creation,BytecodeHandler,0,136599,0x7ff6639002e4,112,Return
code-creation,BytecodeHandler,0,136605,0x7ff663900364,196,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,136611,0x7ff663900444,132,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,136617,0x7ff6639004e4,132,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,136623,0x7ff663900584,156,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,136629,0x7ff663900624,120,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,136635,0x7ff6639006a4,512,SuspendGenerator
code-creation,BytecodeHandler,0,136641,0x7ff6639008c4,128,ResumeGenerator
code-creation,BytecodeHandler,0,136647,0x7ff663900964,152,GetIterator
code-creation,BytecodeHandler,0,136653,0x7ff663900a04,116,Debugger
code-creation,BytecodeHandler,0,136658,0x7ff663900a84,124,IncBlockCounter
code-creation,BytecodeHandler,0,136664,0x7ff663900b04,56,Abort
code-creation,BytecodeHandler,0,136672,0x7ff663900b44,32,Star0
code-creation,BytecodeHandler,0,136678,0x7ff663900b84,60,Illegal
code-creation,BytecodeHandler,0,136685,0x7ff663900bc4,108,DebugBreak1.Wide
code-creation,BytecodeHandler,0,136691,0x7ff663900c44,108,DebugBreak2.Wide
code-creation,BytecodeHandler,0,136697,0x7ff663900cc4,108,DebugBreak3.Wide
code-creation,BytecodeHandler,0,136703,0x7ff663900d44,108,DebugBreak4.Wide
code-creation,BytecodeHandler,0,136709,0x7ff663900dc4,108,DebugBreak5.Wide
code-creation,BytecodeHandler,0,136715,0x7ff663900e44,108,DebugBreak6.Wide
code-creation,BytecodeHandler,0,136721,0x7ff663900ec4,32,Ldar.Wide
code-creation,BytecodeHandler,0,136727,0x7ff663900f04,32,LdaSmi.Wide
code-creation,BytecodeHandler,0,136733,0x7ff663900f44,32,LdaConstant.Wide
code-creation,BytecodeHandler,0,136739,0x7ff663900f84,92,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,136745,0x7ff663900fe4,92,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,136751,0x7ff663901044,48,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,136757,0x7ff663901084,48,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,136764,0x7ff6639010c4,32,Star.Wide
code-creation,BytecodeHandler,0,136769,0x7ff663901104,40,Mov.Wide
code-creation,BytecodeHandler,0,136775,0x7ff663901144,40,PushContext.Wide
code-creation,BytecodeHandler,0,136781,0x7ff663901184,36,PopContext.Wide
code-creation,BytecodeHandler,0,136787,0x7ff6639011c4,48,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,136793,0x7ff663901204,4668,LdaGlobal.Wide
code-creation,BytecodeHandler,0,136799,0x7ff663902444,4604,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,136805,0x7ff663903644,172,StaGlobal.Wide
code-creation,BytecodeHandler,0,136811,0x7ff663903704,160,StaContextSlot.Wide
code-creation,BytecodeHandler,0,136818,0x7ff6639037c4,116,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,136825,0x7ff663903844,128,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,136832,0x7ff6639038e4,244,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,136838,0x7ff6639039e4,4852,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,136844,0x7ff663904ce4,128,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,136850,0x7ff663904d84,244,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,136857,0x7ff663904e84,4812,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,136864,0x7ff663906164,220,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,136870,0x7ff663906244,5216,LdaNamedProperty.Wide
code-creation,BytecodeHandler,0,136876,0x7ff6639076c4,188,LdaNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,136882,0x7ff663907784,160,LdaKeyedProperty.Wide
code-creation,BytecodeHandler,0,136888,0x7ff663907844,160,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,136894,0x7ff663907904,300,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,136904,0x7ff663907a44,176,StaNamedProperty.Wide
code-creation,BytecodeHandler,0,136911,0x7ff663907b04,176,StaNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,136917,0x7ff663907bc4,168,StaKeyedProperty.Wide
code-creation,BytecodeHandler,0,136923,0x7ff663907c84,168,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,136929,0x7ff663907d44,200,StaDataPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,136935,0x7ff663907e24,164,CollectTypeProfile.Wide
code-creation,BytecodeHandler,0,136941,0x7ff663907ee4,984,Add.Wide
code-creation,BytecodeHandler,0,136947,0x7ff6639082c4,1020,Sub.Wide
code-creation,BytecodeHandler,0,136953,0x7ff6639086c4,972,Mul.Wide
code-creation,BytecodeHandler,0,136958,0x7ff663908aa4,988,Div.Wide
code-creation,BytecodeHandler,0,136964,0x7ff663908e84,916,Mod.Wide
code-creation,BytecodeHandler,0,136970,0x7ff663909224,988,Exp.Wide
code-creation,BytecodeHandler,0,136975,0x7ff663909604,904,BitwiseOr.Wide
code-creation,BytecodeHandler,0,136981,0x7ff6639099a4,920,BitwiseXor.Wide
code-creation,BytecodeHandler,0,136987,0x7ff663909d44,920,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,136993,0x7ff66390a0e4,932,ShiftLeft.Wide
code-creation,BytecodeHandler,0,136999,0x7ff66390a4a4,932,ShiftRight.Wide
code-creation,BytecodeHandler,0,137005,0x7ff66390a864,1052,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,137011,0x7ff66390ac84,916,AddSmi.Wide
code-creation,BytecodeHandler,0,137016,0x7ff66390b024,960,SubSmi.Wide
code-creation,BytecodeHandler,0,137022,0x7ff66390b404,912,MulSmi.Wide
code-creation,BytecodeHandler,0,137028,0x7ff66390b7a4,920,DivSmi.Wide
code-creation,BytecodeHandler,0,137034,0x7ff66390bb44,816,ModSmi.Wide
code-creation,BytecodeHandler,0,137039,0x7ff66390be84,872,ExpSmi.Wide
code-creation,BytecodeHandler,0,137045,0x7ff66390c204,496,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,137051,0x7ff66390c404,496,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,137057,0x7ff66390c604,496,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,137063,0x7ff66390c804,496,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,137069,0x7ff66390ca04,496,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,137075,0x7ff66390cc04,648,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,137081,0x7ff66390cea4,616,Inc.Wide
code-creation,BytecodeHandler,0,137087,0x7ff66390d124,616,Dec.Wide
code-creation,BytecodeHandler,0,137092,0x7ff66390d3a4,648,Negate.Wide
code-creation,BytecodeHandler,0,137098,0x7ff66390d644,492,BitwiseNot.Wide
code-creation,BytecodeHandler,0,137104,0x7ff66390d844,124,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,137110,0x7ff66390d8c4,116,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,137116,0x7ff66390d944,40,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,137122,0x7ff66390d984,1136,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,137129,0x7ff66390de04,1136,CallProperty.Wide
code-creation,BytecodeHandler,0,137134,0x7ff66390e284,1016,CallProperty0.Wide
code-creation,BytecodeHandler,0,137142,0x7ff66390e684,1032,CallProperty1.Wide
code-creation,BytecodeHandler,0,137149,0x7ff66390eaa4,1044,CallProperty2.Wide
code-creation,BytecodeHandler,0,137155,0x7ff66390eec4,1020,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,137161,0x7ff66390f2c4,1052,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,137167,0x7ff66390f6e4,1024,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,137173,0x7ff66390fb04,1044,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,137180,0x7ff66390ff24,1136,CallWithSpread.Wide
code-creation,BytecodeHandler,0,137186,0x7ff6639103a4,128,CallRuntime.Wide
code-creation,BytecodeHandler,0,137192,0x7ff663910444,168,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,137198,0x7ff663910504,84,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,137206,0x7ff663910564,1240,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,137215,0x7ff663910a44,968,Construct.Wide
code-creation,BytecodeHandler,0,137221,0x7ff663910e24,476,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,137227,0x7ff663911004,1964,TestEqual.Wide
code-creation,BytecodeHandler,0,137233,0x7ff6639117c4,1068,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,137239,0x7ff663911c04,1512,TestLessThan.Wide
code-creation,BytecodeHandler,0,137245,0x7ff663912204,1512,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,137250,0x7ff663912804,1512,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,137257,0x7ff663912e04,1512,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,137263,0x7ff663913404,864,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,137269,0x7ff663913784,160,TestIn.Wide
code-creation,BytecodeHandler,0,137275,0x7ff663913844,116,ToName.Wide
code-creation,BytecodeHandler,0,137281,0x7ff6639138c4,216,ToNumber.Wide
code-creation,BytecodeHandler,0,137287,0x7ff6639139a4,236,ToNumeric.Wide
code-creation,BytecodeHandler,0,137292,0x7ff663913aa4,116,ToObject.Wide
code-creation,BytecodeHandler,0,137298,0x7ff663913b24,404,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,137304,0x7ff663913cc4,1376,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,137310,0x7ff663914244,788,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,137317,0x7ff663914564,2040,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,137323,0x7ff663914d64,172,CloneObject.Wide
code-creation,BytecodeHandler,0,137329,0x7ff663914e24,164,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,137335,0x7ff663914ee4,320,CreateClosure.Wide
code-creation,BytecodeHandler,0,137341,0x7ff663915044,124,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,137347,0x7ff6639150c4,136,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,137353,0x7ff663915164,256,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,137359,0x7ff663915284,256,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,137365,0x7ff6639153a4,136,CreateWithContext.Wide
code-creation,BytecodeHandler,0,137371,0x7ff663915444,440,JumpLoop.Wide
code-creation,BytecodeHandler,0,137377,0x7ff663915604,44,Jump.Wide
code-creation,BytecodeHandler,0,137382,0x7ff663915644,56,JumpConstant.Wide
code-creation,BytecodeHandler,0,137388,0x7ff663915684,80,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,137394,0x7ff6639156e4,80,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,137400,0x7ff663915744,80,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,137407,0x7ff6639157a4,80,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,137413,0x7ff663915804,84,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,137419,0x7ff663915864,80,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,137425,0x7ff6639158c4,80,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,137431,0x7ff663915924,88,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,137437,0x7ff663915984,152,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,137444,0x7ff663915a24,152,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,137450,0x7ff663915ac4,136,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,137457,0x7ff663915b64,136,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,137464,0x7ff663915c04,64,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,137470,0x7ff663915c64,64,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,137476,0x7ff663915cc4,64,JumpIfNull.Wide
code-creation,BytecodeHandler,0,137482,0x7ff663915d24,64,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,137488,0x7ff663915d84,64,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,137494,0x7ff663915de4,64,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,137500,0x7ff663915e44,72,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,137506,0x7ff663915ea4,76,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,137512,0x7ff663915f04,108,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,137518,0x7ff663915f84,468,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,137524,0x7ff663916164,252,ForInPrepare.Wide
code-creation,BytecodeHandler,0,137530,0x7ff663916264,60,ForInContinue.Wide
code-creation,BytecodeHandler,0,137536,0x7ff6639162a4,260,ForInNext.Wide
code-creation,BytecodeHandler,0,137542,0x7ff6639163c4,48,ForInStep.Wide
code-creation,BytecodeHandler,0,137548,0x7ff663916404,156,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,137554,0x7ff6639164a4,160,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,137560,0x7ff663916564,120,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,137566,0x7ff6639165e4,516,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,137572,0x7ff663916804,128,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,137578,0x7ff6639168a4,156,GetIterator.Wide
code-creation,BytecodeHandler,0,137584,0x7ff663916944,128,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,137590,0x7ff6639169e4,56,Abort.Wide
code-creation,BytecodeHandler,0,137596,0x7ff663916a24,108,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,137602,0x7ff663916aa4,108,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,137608,0x7ff663916b24,108,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,137614,0x7ff663916ba4,108,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,137620,0x7ff663916c24,108,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,137626,0x7ff663916ca4,108,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,137632,0x7ff663916d24,32,Ldar.ExtraWide
code-creation,BytecodeHandler,0,137637,0x7ff663916d64,28,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,137643,0x7ff663916d84,32,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,137649,0x7ff663916dc4,88,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,137656,0x7ff663916e24,88,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,137662,0x7ff663916e84,48,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,137672,0x7ff663916ec4,48,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,137678,0x7ff663916f04,28,Star.ExtraWide
code-creation,BytecodeHandler,0,137684,0x7ff663916f24,40,Mov.ExtraWide
code-creation,BytecodeHandler,0,137690,0x7ff663916f64,36,PushContext.ExtraWide
code-creation,BytecodeHandler,0,137696,0x7ff663916fa4,32,PopContext.ExtraWide
code-creation,BytecodeHandler,0,137702,0x7ff663916fe4,48,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,137709,0x7ff663917024,4656,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,137715,0x7ff663918264,4592,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,137721,0x7ff663919464,168,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,137727,0x7ff663919524,156,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,137733,0x7ff6639195c4,116,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,137739,0x7ff663919644,128,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,137745,0x7ff6639196e4,240,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,137752,0x7ff6639197e4,4836,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,137758,0x7ff66391aae4,128,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,137765,0x7ff66391ab84,240,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,137773,0x7ff66391ac84,4800,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,137780,0x7ff66391bf64,220,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,137786,0x7ff66391c044,5196,LdaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,137793,0x7ff66391d4a4,184,LdaNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,137799,0x7ff66391d564,156,LdaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,137805,0x7ff66391d604,160,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,137811,0x7ff66391d6c4,296,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,137817,0x7ff66391d804,172,StaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,137824,0x7ff66391d8c4,172,StaNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,137830,0x7ff66391d984,168,StaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,137836,0x7ff66391da44,168,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,137842,0x7ff66391db04,196,StaDataPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,137849,0x7ff66391dbe4,164,CollectTypeProfile.ExtraWide
code-creation,BytecodeHandler,0,137855,0x7ff66391dca4,980,Add.ExtraWide
code-creation,BytecodeHandler,0,137860,0x7ff66391e084,1016,Sub.ExtraWide
code-creation,BytecodeHandler,0,137866,0x7ff66391e484,972,Mul.ExtraWide
code-creation,BytecodeHandler,0,137872,0x7ff66391e864,988,Div.ExtraWide
code-creation,BytecodeHandler,0,137878,0x7ff66391ec44,916,Mod.ExtraWide
code-creation,BytecodeHandler,0,137884,0x7ff66391efe4,984,Exp.ExtraWide
code-creation,BytecodeHandler,0,137890,0x7ff66391f3c4,904,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,137896,0x7ff66391f764,916,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,137902,0x7ff66391fb04,916,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,137908,0x7ff66391fea4,928,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,137914,0x7ff663920264,928,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,137920,0x7ff663920624,1048,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,137926,0x7ff663920a44,916,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,137932,0x7ff663920de4,960,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,137938,0x7ff6639211c4,912,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,137944,0x7ff663921564,916,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,137950,0x7ff663921904,816,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,137956,0x7ff663921c44,872,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,137962,0x7ff663921fc4,492,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,137971,0x7ff6639221c4,492,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,137978,0x7ff6639223c4,492,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,137984,0x7ff6639225c4,492,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,137990,0x7ff6639227c4,492,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,137997,0x7ff6639229c4,644,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,138003,0x7ff663922c64,616,Inc.ExtraWide
code-creation,BytecodeHandler,0,138009,0x7ff663922ee4,616,Dec.ExtraWide
code-creation,BytecodeHandler,0,138015,0x7ff663923164,644,Negate.ExtraWide
code-creation,BytecodeHandler,0,138021,0x7ff663923404,488,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,138027,0x7ff663923604,124,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,138033,0x7ff663923684,116,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,138039,0x7ff663923704,36,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,138045,0x7ff663923744,1128,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,138051,0x7ff663923bc4,1128,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,138057,0x7ff663924044,1012,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,138063,0x7ff663924444,1024,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,138069,0x7ff663924864,1036,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,138076,0x7ff663924c84,1016,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,138083,0x7ff663925084,1048,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,138090,0x7ff6639254a4,1020,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,138097,0x7ff6639258a4,1040,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,138103,0x7ff663925cc4,1128,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,138109,0x7ff663926144,128,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,138115,0x7ff6639261e4,164,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,138121,0x7ff6639262a4,80,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,138127,0x7ff663926304,1240,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,138134,0x7ff6639267e4,964,Construct.ExtraWide
code-creation,BytecodeHandler,0,138140,0x7ff663926bc4,472,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,138146,0x7ff663926da4,1964,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,138152,0x7ff663927564,1068,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,138158,0x7ff6639279a4,1508,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,138164,0x7ff663927fa4,1508,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,138170,0x7ff6639285a4,1508,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,138177,0x7ff663928ba4,1508,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,138183,0x7ff6639291a4,864,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,138189,0x7ff663929524,156,TestIn.ExtraWide
code-creation,BytecodeHandler,0,138195,0x7ff6639295c4,116,ToName.ExtraWide
code-creation,BytecodeHandler,0,138201,0x7ff663929644,216,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,138210,0x7ff663929724,236,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,138217,0x7ff663929824,116,ToObject.ExtraWide
code-creation,BytecodeHandler,0,138224,0x7ff6639298a4,400,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,138230,0x7ff663929a44,1376,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,138236,0x7ff663929fc4,788,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,138242,0x7ff66392a2e4,2040,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,138249,0x7ff66392aae4,168,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,138255,0x7ff66392aba4,160,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,138261,0x7ff66392ac64,320,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,138268,0x7ff66392adc4,124,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,138274,0x7ff66392ae44,132,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,138280,0x7ff66392aee4,256,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,138286,0x7ff66392b004,256,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,138292,0x7ff66392b124,132,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,138298,0x7ff66392b1c4,436,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,138304,0x7ff66392b384,44,Jump.ExtraWide
code-creation,BytecodeHandler,0,138310,0x7ff66392b3c4,56,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,138316,0x7ff66392b404,76,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,138322,0x7ff66392b464,76,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,138329,0x7ff66392b4c4,76,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,138335,0x7ff66392b524,76,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,138341,0x7ff66392b584,84,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,138348,0x7ff66392b5e4,76,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,138354,0x7ff66392b644,76,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,138360,0x7ff66392b6a4,88,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,138367,0x7ff66392b704,148,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,138373,0x7ff66392b7a4,148,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,138414,0x7ff66392b844,136,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,138423,0x7ff66392b8e4,136,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,138430,0x7ff66392b984,64,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,138436,0x7ff66392b9e4,64,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,138442,0x7ff66392ba44,64,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,138448,0x7ff66392baa4,64,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,138454,0x7ff66392bb04,64,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,138460,0x7ff66392bb64,64,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,138466,0x7ff66392bbc4,68,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,138472,0x7ff66392bc24,72,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,138478,0x7ff66392bc84,108,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,138485,0x7ff66392bd04,464,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,138491,0x7ff66392bee4,252,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,138497,0x7ff66392bfe4,56,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,138503,0x7ff66392c024,256,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,138509,0x7ff66392c144,44,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,138515,0x7ff66392c184,156,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,138522,0x7ff66392c224,160,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,138528,0x7ff66392c2e4,120,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,138534,0x7ff66392c364,512,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,138540,0x7ff66392c584,124,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,138547,0x7ff66392c604,152,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,138553,0x7ff66392c6a4,124,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,138558,0x7ff66392c724,56,Abort.ExtraWide
tick,0x7ff663672570,138850,0,0x0,6
new,MemoryChunk,0x31f3b640000,262144
new,MemoryChunk,0x22ac4bc0000,262144
new,MemoryChunk,0x3a44b440000,262144
new,MemoryChunk,0x1fe3b240000,262144
new,MemoryChunk,0x3d286240000,262144
code-creation,Eval,10,143052,0x3d28624a91e,5, node:internal/main/run_main_module:1:1,0x3d28624a7d8,~
script-source,99,node:internal/main/run_main_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  prepareMainThreadExecution\x0d\n} = require('internal/bootstrap/pre_execution');\x0d\n\x0d\nprepareMainThreadExecution(true);\x0d\n\x0d\nmarkBootstrapComplete();\x0d\n\x0d\n// Note: this loads the module through the ESM loader if the module is\x0d\n// determined to be an ES module. This hangs from the CJS module loader\x0d\n// because we currently allow monkey-patching of the module loaders\x0d\n// in the preloaded scripts through require('module').\x0d\n// runMain here might be monkey-patched by users in --require.\x0d\n// XXX: the monkey-patchability here should probably be deprecated.\x0d\nrequire('internal/modules/cjs/loader').Module.runMain(process.argv[1]);\x0d\n
code-source-info,0x3d28624a91e,99,0,649,C0O0C4O649,,
code-creation,Function,10,143109,0x3d28624a9c6,58, node:internal/main/run_main_module:1:1,0x3d28624a898,~
code-source-info,0x3d28624a9c6,99,0,649,C0O60C3O60C8O28C13O108C15O108C19O145C22O576C25O576C30O614C35O621C40O638C47O642C51O622C57O648,,
code-creation,LazyCompile,10,143348,0x3d28624ac06,76,nativeModuleRequire node:internal/bootstrap/loaders:349:29,0x56f5c911d8,~
script-source,9,node:internal/bootstrap/loaders,// This file creates the internal module & binding loaders used by built-in\x0d\n// modules. In contrast\x2C user land modules are loaded using\x0d\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\x0d\n// lib/internal/modules/esm/* (ES Modules).\x0d\n//\x0d\n// This file is compiled and run by node.cc before bootstrap/node.js\x0d\n// was called\x2C therefore the loaders are bootstrapped before we start to\x0d\n// actually bootstrap Node.js. It creates the following objects:\x0d\n//\x0d\n// C++ binding loaders:\x0d\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\x0d\n//   because it is an object attached to the global process object.\x0d\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\x0d\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\x0d\n//   about the stability of these bindings\x2C but still have to take care of\x0d\n//   compatibility issues caused by them from time to time.\x0d\n// - process._linkedBinding(): intended to be used by embedders to add\x0d\n//   additional C++ bindings in their applications. These C++ bindings\x0d\n//   can be created using NODE_MODULE_CONTEXT_AWARE_CPP() with the flag\x0d\n//   NM_F_LINKED.\x0d\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\x0d\n//   from user land unless through `require('internal/test/binding')`.\x0d\n//   These C++ bindings are created using NODE_MODULE_CONTEXT_AWARE_INTERNAL()\x0d\n//   and have their nm_flags set to NM_F_INTERNAL.\x0d\n//\x0d\n// Internal JavaScript module loader:\x0d\n// - NativeModule: a minimal module system used to load the JavaScript core\x0d\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\x0d\n//   compiled into the node binary via node_javascript.cc generated by js2c.py\x2C\x0d\n//   so they can be loaded faster without the cost of I/O. This class makes the\x0d\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\x0d\n//   default to core modules\x2C and lets the core modules require itself via\x0d\n//   require('internal/bootstrap/loaders') even when this file is not written in\x0d\n//   CommonJS style.\x0d\n//\x0d\n// Other objects:\x0d\n// - process.moduleLoadList: an array recording the bindings and the modules\x0d\n//   loaded in the process and the order in which they are loaded.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ReflectGet\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Set up process.moduleLoadList.\x0d\nconst moduleLoadList = [];\x0d\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: moduleLoadList\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x0d\n});\x0d\n\x0d\n\x0d\n// internalBindingAllowlist contains the name of internalBinding modules\x0d\n// that are allowed for access via process.binding()... This is used\x0d\n// to provide a transition path for modules that are being moved over to\x0d\n// internalBinding.\x0d\nconst internalBindingAllowlist = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'buffer'\x2C\x0d\n  'cares_wrap'\x2C\x0d\n  'config'\x2C\x0d\n  'constants'\x2C\x0d\n  'contextify'\x2C\x0d\n  'crypto'\x2C\x0d\n  'fs'\x2C\x0d\n  'fs_event_wrap'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'icu'\x2C\x0d\n  'inspector'\x2C\x0d\n  'js_stream'\x2C\x0d\n  'natives'\x2C\x0d\n  'os'\x2C\x0d\n  'pipe_wrap'\x2C\x0d\n  'process_wrap'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'spawn_sync'\x2C\x0d\n  'stream_wrap'\x2C\x0d\n  'tcp_wrap'\x2C\x0d\n  'tls_wrap'\x2C\x0d\n  'tty_wrap'\x2C\x0d\n  'udp_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'util'\x2C\x0d\n  'uv'\x2C\x0d\n  'v8'\x2C\x0d\n  'zlib'\x2C\x0d\n]);\x0d\n\x0d\nconst runtimeDeprecatedList = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'crypto'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'v8'\x2C\x0d\n]);\x0d\n\x0d\nconst legacyWrapperList = new SafeSet([\x0d\n  'util'\x2C\x0d\n]);\x0d\n\x0d\n// Modules that can only be imported via the node: scheme.\x0d\nconst schemelessBlockList = new SafeSet([\x0d\n  'test'\x2C\x0d\n]);\x0d\n\x0d\n// Set up process.binding() and process._linkedBinding().\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n\x0d\n  process.binding = function binding(module) {\x0d\n    module = String(module);\x0d\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\x0d\n    // selective fallback to internalBinding for the deprecated ones.\x0d\n    if (internalBindingAllowlist.has(module)) {\x0d\n      if (runtimeDeprecatedList.has(module)) {\x0d\n        runtimeDeprecatedList.delete(module);\x0d\n        process.emitWarning(\x0d\n          `Access to process.binding('${module}') is deprecated.`\x2C\x0d\n          'DeprecationWarning'\x2C\x0d\n          'DEP0111');\x0d\n      }\x0d\n      if (legacyWrapperList.has(module)) {\x0d\n        return nativeModuleRequire('internal/legacy/processbinding')[module]();\x0d\n      }\x0d\n      return internalBinding(module);\x0d\n    }\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    throw new Error(`No such module: ${module}`);\x0d\n  };\x0d\n\x0d\n  process._linkedBinding = function _linkedBinding(module) {\x0d\n    module = String(module);\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object')\x0d\n      mod = bindingObj[module] = getLinkedBinding(module);\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\n// Set up internalBinding() in the closure.\x0d\n/**\x0d\n * @type {InternalBinding}\x0d\n */\x0d\nlet internalBinding;\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n  // eslint-disable-next-line no-global-assign\x0d\n  internalBinding = function internalBinding(module) {\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object') {\x0d\n      mod = bindingObj[module] = getInternalBinding(module);\x0d\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\x0d\n    }\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst loaderId = 'internal/bootstrap/loaders';\x0d\nconst {\x0d\n  moduleIds\x2C\x0d\n  compileFunction\x0d\n} = internalBinding('native_module');\x0d\n\x0d\nconst getOwn = (target\x2C property\x2C receiver) => {\x0d\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\x0d\n    ReflectGet(target\x2C property\x2C receiver) :\x0d\n    undefined;\x0d\n};\x0d\n\x0d\n/**\x0d\n * An internal abstraction for the built-in JavaScript modules of Node.js.\x0d\n * Be careful not to expose this to user land unless --expose-internals is\x0d\n * used\x2C in which case there is no compatibility guarantee about this class.\x0d\n */\x0d\nclass NativeModule {\x0d\n  /**\x0d\n   * A map from the module IDs to the module instances.\x0d\n   * @type {Map<string\x2C NativeModule>}\x0d\n   */\x0d\n  static map = new SafeMap(\x0d\n    ArrayPrototypeMap(moduleIds\x2C (id) => [id\x2C new NativeModule(id)])\x0d\n  );\x0d\n\x0d\n  constructor(id) {\x0d\n    this.filename = `${id}.js`;\x0d\n    this.id = id;\x0d\n    this.canBeRequiredByUsers = !StringPrototypeStartsWith(id\x2C 'internal/');\x0d\n\x0d\n    // The CJS exports object of the module.\x0d\n    this.exports = {};\x0d\n    // States used to work around circular dependencies.\x0d\n    this.loaded = false;\x0d\n    this.loading = false;\x0d\n\x0d\n    // The following properties are used by the ESM implementation and only\x0d\n    // initialized when the native module is loaded by users.\x0d\n    /**\x0d\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\x0d\n     * @type {ModuleWrap|undefined}\x0d\n     */\x0d\n    this.module = undefined;\x0d\n    /**\x0d\n     * Exported names for the ESM imports.\x0d\n     * @type {string[]|undefined}\x0d\n     */\x0d\n    this.exportKeys = undefined;\x0d\n  }\x0d\n\x0d\n  // To be called during pre-execution when --expose-internals is on.\x0d\n  // Enables the user-land module loader to access internal modules.\x0d\n  static exposeInternals() {\x0d\n    for (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n      // Do not expose this to user land even with --expose-internals.\x0d\n      if (id !== loaderId) {\x0d\n        mod.canBeRequiredByUsers = true;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  static exists(id) {\x0d\n    return NativeModule.map.has(id);\x0d\n  }\x0d\n\x0d\n  static canBeRequiredByUsers(id) {\x0d\n    const mod = NativeModule.map.get(id);\x0d\n    return mod && mod.canBeRequiredByUsers;\x0d\n  }\x0d\n\x0d\n  // Determine if a core module can be loaded without the node: prefix. This\x0d\n  // function does not validate if the module actually exists.\x0d\n  static canBeRequiredWithoutScheme(id) {\x0d\n    return !schemelessBlockList.has(id);\x0d\n  }\x0d\n\x0d\n  static getSchemeOnlyModuleNames() {\x0d\n    return ArrayFrom(schemelessBlockList);\x0d\n  }\x0d\n\x0d\n  // Used by user-land module loaders to compile and load builtins.\x0d\n  compileForPublicLoader() {\x0d\n    if (!this.canBeRequiredByUsers) {\x0d\n      // No code because this is an assertion against bugs\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new Error(`Should not compile ${this.id} for public use`);\x0d\n    }\x0d\n    this.compileForInternalLoader();\x0d\n    if (!this.exportKeys) {\x0d\n      // When using --expose-internals\x2C we do not want to reflect the named\x0d\n      // exports from core modules as this can trigger unnecessary getters.\x0d\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\x0d\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\x0d\n    }\x0d\n    this.getESMFacade();\x0d\n    this.syncExports();\x0d\n    return this.exports;\x0d\n  }\x0d\n\x0d\n  getESMFacade() {\x0d\n    if (this.module) return this.module;\x0d\n    const { ModuleWrap } = internalBinding('module_wrap');\x0d\n    const url = `node:${this.id}`;\x0d\n    const nativeModule = this;\x0d\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\x0d\n    ArrayPrototypePush(exportsKeys\x2C 'default');\x0d\n    this.module = new ModuleWrap(\x0d\n      url\x2C undefined\x2C exportsKeys\x2C\x0d\n      function() {\x0d\n        nativeModule.syncExports();\x0d\n        this.setExport('default'\x2C nativeModule.exports);\x0d\n      });\x0d\n    // Ensure immediate sync execution to capture exports now\x0d\n    this.module.instantiate();\x0d\n    this.module.evaluate(-1\x2C false);\x0d\n    return this.module;\x0d\n  }\x0d\n\x0d\n  // Provide named exports for all builtin libraries so that the libraries\x0d\n  // may be imported in a nicer way for ESM users. The default export is left\x0d\n  // as the entire namespace (module.exports) and updates when this function is\x0d\n  // called so that APMs and other behavior are supported.\x0d\n  syncExports() {\x0d\n    const names = this.exportKeys;\x0d\n    if (this.module) {\x0d\n      for (let i = 0; i < names.length; i++) {\x0d\n        const exportName = names[i];\x0d\n        if (exportName === 'default') continue;\x0d\n        this.module.setExport(exportName\x2C\x0d\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  compileForInternalLoader() {\x0d\n    if (this.loaded || this.loading) {\x0d\n      return this.exports;\x0d\n    }\x0d\n\x0d\n    const id = this.id;\x0d\n    this.loading = true;\x0d\n\x0d\n    try {\x0d\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\x0d\n        requireWithFallbackInDeps : nativeModuleRequire;\x0d\n\x0d\n      const fn = compileFunction(id);\x0d\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\x0d\n\x0d\n      this.loaded = true;\x0d\n    } finally {\x0d\n      this.loading = false;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\x0d\n    return this.exports;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Think of this as module.exports in this file even though it is not\x0d\n// written in CommonJS style.\x0d\nconst loaderExports = {\x0d\n  internalBinding\x2C\x0d\n  NativeModule\x2C\x0d\n  require: nativeModuleRequire\x0d\n};\x0d\n\x0d\nfunction nativeModuleRequire(id) {\x0d\n  if (id === loaderId) {\x0d\n    return loaderExports;\x0d\n  }\x0d\n\x0d\n  const mod = NativeModule.map.get(id);\x0d\n  // Can't load the internal errors module from here\x2C have to use a raw error.\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\x0d\n  return mod.compileForInternalLoader();\x0d\n}\x0d\n\x0d\n// Allow internal modules from dependencies to require\x0d\n// other modules from dependencies by providing fallbacks.\x0d\nfunction requireWithFallbackInDeps(request) {\x0d\n  if (!NativeModule.map.has(request)) {\x0d\n    request = `internal/deps/${request}`;\x0d\n  }\x0d\n  return nativeModuleRequire(request);\x0d\n}\x0d\n\x0d\n// Pass the exports back to C++ land for C++ internals to use.\x0d\nreturn loaderExports;\x0d\n
code-source-info,0x3d28624ac06,9,11126,11479,C0O11136C2O11147C4O11143C9O11164C13O11185C14O11208C19O11221C24O11225C29O11225C35O11369C37O11379C47O11427C60O11385C65O11379C66O11449C71O11449C75O11476,,
code-creation,LazyCompile,10,143899,0x3d28624b99e,175,compileForInternalLoader node:internal/bootstrap/loaders:316:27,0x56f5c91108,~
code-source-info,0x3d28624b99e,9,10306,10889,C0O10325C6O10340C12O10370C16O10378C17O10409C22O10418C23O10431C30O10477C37O10508C45O10477C63O10610C70O10610C75O10646C89O10681C103O10638C108O10721C109O10733C124O10765C126O10778C141O10801C152O10820C160O10852C165O10801C170O10876C174O10884,,
code-creation,Eval,10,144256,0x3d28624ca3e,5, node:internal/bootstrap/pre_execution:1:1,0x3d28624c618,~
script-source,100,node:internal/bootstrap/pre_execution,'use strict';\x0d\n\x0d\nconst {\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  getOptionValue\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n  refreshOptions\x2C\x0d\n} = require('internal/options');\x0d\nconst { reconnectZeroFillToggle } = require('internal/buffer');\x0d\nconst {\x0d\n  defineOperation\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  exposeInterface\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { ERR_MANIFEST_ASSERT_INTEGRITY } = require('internal/errors').codes;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nfunction prepareMainThreadExecution(expandArgv1 = false\x2C\x0d\n                                    initialzeModules = true) {\x0d\n  refreshRuntimeOptions();\x0d\n\x0d\n  // TODO(joyeecheung): this is also necessary for workers when they deserialize\x0d\n  // this toggle from the snapshot.\x0d\n  reconnectZeroFillToggle();\x0d\n\x0d\n  // Patch the process object with legacy properties and normalizations\x0d\n  patchProcessObject(expandArgv1);\x0d\n  setupTraceCategoryState();\x0d\n  setupPerfHooks();\x0d\n  setupInspectorHooks();\x0d\n  setupWarningHandler();\x0d\n  setupFetch();\x0d\n  setupWebCrypto();\x0d\n  setupCustomEvent();\x0d\n\x0d\n  // Resolve the coverage directory to an absolute path\x2C and\x0d\n  // overwrite process.env so that the original path gets passed\x0d\n  // to child processes even when they switch cwd.\x0d\n  if (process.env.NODE_V8_COVERAGE) {\x0d\n    process.env.NODE_V8_COVERAGE =\x0d\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\x0d\n  }\x0d\n\x0d\n  setupDebugEnv();\x0d\n\x0d\n  // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\x0d\n  setupStacktracePrinterOnSigint();\x0d\n\x0d\n  // Process initial diagnostic reporting configuration\x2C if present.\x0d\n  initializeReport();\x0d\n  initializeReportSignalHandlers();  // Main-thread-only.\x0d\n\x0d\n  initializeHeapSnapshotSignalHandlers();\x0d\n\x0d\n  // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\x0d\n  // spawned by our child_process module\x2C then initialize IPC.\x0d\n  // This attaches some internal event listeners and creates:\x0d\n  // process.send()\x2C process.channel\x2C process.connected\x2C\x0d\n  // process.disconnect().\x0d\n  setupChildProcessIpcChannel();\x0d\n\x0d\n  // Load policy from disk and parse it.\x0d\n  initializePolicy();\x0d\n\x0d\n  // If this is a worker in cluster mode\x2C start up the communication\x0d\n  // channel. This needs to be done before any user code gets executed\x0d\n  // (including preload modules).\x0d\n  initializeClusterIPC();\x0d\n\x0d\n  initializeSourceMapsHandlers();\x0d\n  initializeDeprecations();\x0d\n  initializeWASI();\x0d\n\x0d\n  require('internal/v8/startup_snapshot').runDeserializeCallbacks();\x0d\n\x0d\n  if (!initialzeModules) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  initializeCJSLoader();\x0d\n  initializeESMLoader();\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  assert(!CJSLoader.hasLoadedAnyUserCJSModule);\x0d\n  loadPreloadModules();\x0d\n  initializeFrozenIntrinsics();\x0d\n}\x0d\n\x0d\nfunction refreshRuntimeOptions() {\x0d\n  refreshOptions();\x0d\n}\x0d\n\x0d\nfunction patchProcessObject(expandArgv1) {\x0d\n  const binding = internalBinding('process_methods');\x0d\n  binding.patchProcessObject(process);\x0d\n\x0d\n  require('internal/process/per_thread').refreshHrtimeBuffer();\x0d\n\x0d\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: true\x2C\x0d\n    // Only set it to true during snapshot building.\x0d\n    configurable: getOptionValue('--build-snapshot')\x2C\x0d\n    value: process.argv[0]\x0d\n  });\x0d\n\x0d\n  process.exitCode = undefined;\x0d\n  process._exiting = false;\x0d\n  process.argv[0] = process.execPath;\x0d\n\x0d\n  if (expandArgv1 && process.argv[1] &&\x0d\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\x0d\n    // Expand process.argv[1] into a full path.\x0d\n    const path = require('path');\x0d\n    try {\x0d\n      process.argv[1] = path.resolve(process.argv[1]);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // We need to initialize the global console here again with process.stdout\x0d\n  // and friends for snapshot deserialization.\x0d\n  const globalConsole = require('internal/console/global');\x0d\n  const { initializeGlobalConsole } = require('internal/console/constructor');\x0d\n  initializeGlobalConsole(globalConsole);\x0d\n\x0d\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\x0d\n  // except some that we need to be able to mutate during run time.\x0d\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\x0d\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\x0d\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\x0d\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\x0d\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\x0d\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\x0d\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\x0d\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\x0d\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\x0d\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\x0d\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\x0d\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\x0d\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\x0d\n}\x0d\n\x0d\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\x0d\n  const value = getOptionValue(option);\x0d\n  if (value) {\x0d\n    ObjectDefineProperty(process\x2C name\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable\x2C\x0d\n      value\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupWarningHandler() {\x0d\n  const {\x0d\n    onWarning\x0d\n  } = require('internal/process/warning');\x0d\n  if (getOptionValue('--warnings') &&\x0d\n    process.env.NODE_NO_WARNINGS !== '1') {\x0d\n    process.on('warning'\x2C onWarning);\x0d\n  }\x0d\n}\x0d\n\x0d\n// https://fetch.spec.whatwg.org/\x0d\nfunction setupFetch() {\x0d\n  if (!getOptionValue('--experimental-fetch')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  emitExperimentalWarning('Fetch');\x0d\n\x0d\n  const undici = require('internal/deps/undici/undici');\x0d\n  defineOperation(globalThis\x2C 'fetch'\x2C undici.fetch);\x0d\n  exposeInterface(globalThis\x2C 'FormData'\x2C undici.FormData);\x0d\n  exposeInterface(globalThis\x2C 'Headers'\x2C undici.Headers);\x0d\n  exposeInterface(globalThis\x2C 'Request'\x2C undici.Request);\x0d\n  exposeInterface(globalThis\x2C 'Response'\x2C undici.Response);\x0d\n}\x0d\n\x0d\n// TODO(aduh95): move this to internal/bootstrap/browser when the CLI flag is\x0d\n//               removed.\x0d\nfunction setupWebCrypto() {\x0d\n  if (process.config.variables.node_no_browser_globals ||\x0d\n      !getOptionValue('--experimental-global-webcrypto')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let webcrypto;\x0d\n  ObjectDefineProperty(globalThis\x2C 'crypto'\x2C\x0d\n                       { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor({\x0d\n                         get crypto() {\x0d\n                           webcrypto ??= require('internal/crypto/webcrypto');\x0d\n                           return webcrypto.crypto;\x0d\n                         }\x0d\n                       }\x2C 'crypto') });\x0d\n  if (internalBinding('config').hasOpenSSL) {\x0d\n    webcrypto ??= require('internal/crypto/webcrypto');\x0d\n    ObjectDefineProperty(globalThis\x2C 'Crypto'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.Crypto\x0d\n    });\x0d\n    ObjectDefineProperty(globalThis\x2C 'CryptoKey'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.CryptoKey\x0d\n    });\x0d\n    ObjectDefineProperty(globalThis\x2C 'SubtleCrypto'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.SubtleCrypto\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// TODO(daeyeon): move this to internal/bootstrap/browser when the CLI flag is\x0d\n//                removed.\x0d\nfunction setupCustomEvent() {\x0d\n  if (process.config.variables.node_no_browser_globals ||\x0d\n      !getOptionValue('--experimental-global-customevent')) {\x0d\n    return;\x0d\n  }\x0d\n  const { CustomEvent } = require('internal/event_target');\x0d\n  exposeInterface(globalThis\x2C 'CustomEvent'\x2C CustomEvent);\x0d\n}\x0d\n\x0d\n// Setup User-facing NODE_V8_COVERAGE environment variable that writes\x0d\n// ScriptCoverage to a specified file.\x0d\nfunction setupCoverageHooks(dir) {\x0d\n  const cwd = require('internal/process/execution').tryGetCwd();\x0d\n  const { resolve } = require('path');\x0d\n  const coverageDirectory = resolve(cwd\x2C dir);\x0d\n  const { sourceMapCacheToObject } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n\x0d\n  if (process.features.inspector) {\x0d\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\x0d\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\x0d\n  } else {\x0d\n    process.emitWarning('The inspector is disabled\x2C ' +\x0d\n                        'coverage could not be collected'\x2C\x0d\n                        'Warning');\x0d\n    return '';\x0d\n  }\x0d\n  return coverageDirectory;\x0d\n}\x0d\n\x0d\nfunction setupStacktracePrinterOnSigint() {\x0d\n  if (!getOptionValue('--trace-sigint')) {\x0d\n    return;\x0d\n  }\x0d\n  const { SigintWatchdog } = require('internal/watchdog');\x0d\n\x0d\n  const watchdog = new SigintWatchdog();\x0d\n  watchdog.start();\x0d\n}\x0d\n\x0d\nfunction initializeReport() {\x0d\n  const { report } = require('internal/process/report');\x0d\n  ObjectDefineProperty(process\x2C 'report'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    get() {\x0d\n      return report;\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupDebugEnv() {\x0d\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\x0d\n  if (getOptionValue('--expose-internals')) {\x0d\n    require('internal/bootstrap/loaders').NativeModule.exposeInternals();\x0d\n  }\x0d\n}\x0d\n\x0d\n// This has to be called after initializeReport() is called\x0d\nfunction initializeReportSignalHandlers() {\x0d\n  const { addSignalHandler } = require('internal/process/report');\x0d\n\x0d\n  addSignalHandler();\x0d\n}\x0d\n\x0d\nfunction initializeHeapSnapshotSignalHandlers() {\x0d\n  const signal = getOptionValue('--heapsnapshot-signal');\x0d\n\x0d\n  if (!signal)\x0d\n    return;\x0d\n\x0d\n  require('internal/validators').validateSignalName(signal);\x0d\n  const { writeHeapSnapshot } = require('v8');\x0d\n\x0d\n  process.on(signal\x2C () => {\x0d\n    writeHeapSnapshot();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupTraceCategoryState() {\x0d\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\x0d\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\x0d\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\x0d\n}\x0d\n\x0d\nfunction setupPerfHooks() {\x0d\n  require('internal/perf/performance').refreshTimeOrigin();\x0d\n  require('internal/perf/utils').refreshTimeOrigin();\x0d\n}\x0d\n\x0d\nfunction setupInspectorHooks() {\x0d\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\x0d\n  // we cannot immediately call into JS to enable the hooks\x2C which could\x0d\n  // interrupt the JS execution of bootstrap. So instead we save the\x0d\n  // notification in the inspector agent if it's sent in the middle of\x0d\n  // bootstrap\x2C and process the notification later here.\x0d\n  if (internalBinding('config').hasInspector) {\x0d\n    const {\x0d\n      enable\x2C\x0d\n      disable\x0d\n    } = require('internal/inspector_async_hook');\x0d\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\x0d\n  }\x0d\n}\x0d\n\x0d\n// In general deprecations are initialized wherever the APIs are implemented\x2C\x0d\n// this is used to deprecate APIs implemented in C++ where the deprecation\x0d\n// utilities are not easily accessible.\x0d\nfunction initializeDeprecations() {\x0d\n  const { deprecate } = require('internal/util');\x0d\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\n  // DEP0103: access to `process.binding('util').isX` type checkers\x0d\n  // TODO(addaleax): Turn into a full runtime deprecation.\x0d\n  const utilBinding = internalBinding('util');\x0d\n  const types = require('internal/util/types');\x0d\n  for (const name of [\x0d\n    'isArrayBuffer'\x2C\x0d\n    'isArrayBufferView'\x2C\x0d\n    'isAsyncFunction'\x2C\x0d\n    'isDataView'\x2C\x0d\n    'isDate'\x2C\x0d\n    'isExternal'\x2C\x0d\n    'isMap'\x2C\x0d\n    'isMapIterator'\x2C\x0d\n    'isNativeError'\x2C\x0d\n    'isPromise'\x2C\x0d\n    'isRegExp'\x2C\x0d\n    'isSet'\x2C\x0d\n    'isSetIterator'\x2C\x0d\n    'isTypedArray'\x2C\x0d\n    'isUint8Array'\x2C\x0d\n    'isAnyArrayBuffer'\x2C\x0d\n  ]) {\x0d\n    utilBinding[name] = pendingDeprecation ?\x0d\n      deprecate(types[name]\x2C\x0d\n                'Accessing native typechecking bindings of Node ' +\x0d\n                'directly is deprecated. ' +\x0d\n                `Please use \\`util.types.${name}\\` instead.`\x2C\x0d\n                'DEP0103') :\x0d\n      types[name];\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): this is a legacy property exposed to process.\x0d\n  // Now that we use the config binding to carry this information\x2C remove\x0d\n  // it from the process. We may consider exposing it properly in\x0d\n  // process.features.\x0d\n  const { noBrowserGlobals } = internalBinding('config');\x0d\n  if (noBrowserGlobals) {\x0d\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: false\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: noBrowserGlobals\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (pendingDeprecation) {\x0d\n    process.binding = deprecate(process.binding\x2C\x0d\n                                'process.binding() is deprecated. ' +\x0d\n                                'Please use public APIs instead.'\x2C 'DEP0111');\x0d\n\x0d\n    process._tickCallback = deprecate(process._tickCallback\x2C\x0d\n                                      'process._tickCallback() is deprecated'\x2C\x0d\n                                      'DEP0134');\x0d\n  }\x0d\n\x0d\n  // Create global.process and global.Buffer as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _process = process;\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return _process;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _process = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n\x0d\n  let _Buffer = Buffer;\x0d\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return _Buffer;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _Buffer = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupChildProcessIpcChannel() {\x0d\n  if (process.env.NODE_CHANNEL_FD) {\x0d\n    const assert = require('internal/assert');\x0d\n\x0d\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\x0d\n    assert(fd >= 0);\x0d\n\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_CHANNEL_FD;\x0d\n\x0d\n    const serializationMode =\x0d\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\x0d\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\x0d\n\x0d\n    require('child_process')._forkChild(fd\x2C serializationMode);\x0d\n    assert(process.send);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeClusterIPC() {\x0d\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\x0d\n    const cluster = require('cluster');\x0d\n    cluster._setupWorker();\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_UNIQUE_ID;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializePolicy() {\x0d\n  const experimentalPolicy = getOptionValue('--experimental-policy');\x0d\n  if (experimentalPolicy) {\x0d\n    process.emitWarning('Policies are experimental.'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    const { pathToFileURL\x2C URL } = require('internal/url');\x0d\n    // URL here as it is slightly different parsing\x0d\n    // no bare specifiers for now\x0d\n    let manifestURL;\x0d\n    if (require('path').isAbsolute(experimentalPolicy)) {\x0d\n      manifestURL = new URL(`file://${experimentalPolicy}`);\x0d\n    } else {\x0d\n      const cwdURL = pathToFileURL(process.cwd());\x0d\n      cwdURL.pathname += '/';\x0d\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\x0d\n    }\x0d\n    const fs = require('fs');\x0d\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\x0d\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\x0d\n    if (experimentalPolicyIntegrity) {\x0d\n      const SRI = require('internal/policy/sri');\x0d\n      const { createHash\x2C timingSafeEqual } = require('crypto');\x0d\n      const realIntegrities = new SafeMap();\x0d\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\x0d\n      let foundMatch = false;\x0d\n      for (let i = 0; i < integrityEntries.length; i++) {\x0d\n        const {\x0d\n          algorithm\x2C\x0d\n          value: expected\x0d\n        } = integrityEntries[i];\x0d\n        const hash = createHash(algorithm);\x0d\n        hash.update(src);\x0d\n        const digest = hash.digest();\x0d\n        if (digest.length === expected.length &&\x0d\n          timingSafeEqual(digest\x2C expected)) {\x0d\n          foundMatch = true;\x0d\n          break;\x0d\n        }\x0d\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\x0d\n      }\x0d\n      if (!foundMatch) {\x0d\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\x0d\n      }\x0d\n    }\x0d\n    require('internal/process/policy')\x0d\n      .setup(src\x2C manifestURL.href);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeWASI() {\x0d\n  const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n  const mod = NativeModule.map.get('wasi');\x0d\n  mod.canBeRequiredByUsers =\x0d\n    getOptionValue('--experimental-wasi-unstable-preview1');\x0d\n}\x0d\n\x0d\nfunction initializeCJSLoader() {\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  if (!getEmbedderOptions().noGlobalSearchPaths) {\x0d\n    CJSLoader.Module._initPaths();\x0d\n  }\x0d\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\x0d\n  CJSLoader.Module.runMain =\x0d\n    require('internal/modules/run_main').executeUserEntryPoint;\x0d\n}\x0d\n\x0d\nfunction initializeESMLoader() {\x0d\n  // Create this WeakMap in js-land because V8 has no C++ API for WeakMap.\x0d\n  internalBinding('module_wrap').callbackMap = new SafeWeakMap();\x0d\n\x0d\n  if (getEmbedderOptions().shouldNotRegisterESMLoader) return;\x0d\n\x0d\n  const {\x0d\n    setImportModuleDynamicallyCallback\x2C\x0d\n    setInitializeImportMetaObjectCallback\x0d\n  } = internalBinding('module_wrap');\x0d\n  const esm = require('internal/process/esm_loader');\x0d\n  // Setup per-isolate callbacks that locate data or callbacks that we keep\x0d\n  // track of for different ESM modules.\x0d\n  setInitializeImportMetaObjectCallback(esm.initializeImportMetaObject);\x0d\n  setImportModuleDynamicallyCallback(esm.importModuleDynamicallyCallback);\x0d\n\x0d\n  // Patch the vm module when --experimental-vm-modules is on.\x0d\n  // Please update the comments in vm.js when this block changes.\x0d\n  if (getOptionValue('--experimental-vm-modules')) {\x0d\n    const {\x0d\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\x0d\n    } = require('internal/vm/module');\x0d\n    const vm = require('vm');\x0d\n    vm.Module = Module;\x0d\n    vm.SourceTextModule = SourceTextModule;\x0d\n    vm.SyntheticModule = SyntheticModule;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeSourceMapsHandlers() {\x0d\n  const { setSourceMapsEnabled } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction initializeFrozenIntrinsics() {\x0d\n  if (getOptionValue('--frozen-intrinsics')) {\x0d\n    process.emitWarning('The --frozen-intrinsics flag is experimental'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    require('internal/freeze_intrinsics')();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction loadPreloadModules() {\x0d\n  // For user code\x2C we preload modules if `-r` is passed\x0d\n  const preloadModules = getOptionValue('--require');\x0d\n  if (preloadModules && preloadModules.length > 0) {\x0d\n    const {\x0d\n      Module: {\x0d\n        _preloadModules\x0d\n      }\x2C\x0d\n    } = require('internal/modules/cjs/loader');\x0d\n    _preloadModules(preloadModules);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  refreshRuntimeOptions\x2C\x0d\n  patchProcessObject\x2C\x0d\n  setupCoverageHooks\x2C\x0d\n  setupWarningHandler\x2C\x0d\n  setupFetch\x2C\x0d\n  setupWebCrypto\x2C\x0d\n  setupCustomEvent\x2C\x0d\n  setupDebugEnv\x2C\x0d\n  setupPerfHooks\x2C\x0d\n  prepareMainThreadExecution\x2C\x0d\n  initializeDeprecations\x2C\x0d\n  initializeESMLoader\x2C\x0d\n  initializeFrozenIntrinsics\x2C\x0d\n  initializeSourceMapsHandlers\x2C\x0d\n  loadPreloadModules\x2C\x0d\n  setupTraceCategoryState\x2C\x0d\n  setupInspectorHooks\x2C\x0d\n  initializeReport\x2C\x0d\n  initializeCJSLoader\x2C\x0d\n  initializeWASI\x0d\n};\x0d\n
code-source-info,0x3d28624ca3e,100,0,19719,C0O0C4O19719,,
code-creation,Function,10,144975,0x3d28624d756,530, node:internal/bootstrap/pre_execution:1:1,0x3d28624c9b8,~
code-source-info,0x3d28624d756,100,0,19719,C0O0C229O28C235O47C241O72C247O107C253O119C259O135C265O165C271O272C277O272C282O209C288O228C294O251C300O338C306O338C311O310C317O448C323O448C328O378C334O398C340O426C346O496C352O496C357O485C363O558C369O558C374O584C379O524C385O608C391O608C395O608C397O19223C404O19245C410O19271C416O19294C422O19317C428O19341C434O19356C440O19375C446O19396C452O19414C458O19433C464O19464C470O19491C476O19515C482O19546C488O19579C494O19602C500O19630C506O19654C512O19675C518O19699C524O19238C529O19718,,
code-creation,LazyCompile,10,145215,0x3d28624f23e,273,prepareMainThreadExecution node:internal/bootstrap/pre_execution:29:36,0x3d28624ca70,~
code-source-info,0x3d28624f23e
code-creation,LazyCompile,10,145306,0x3d2862507fe,10,refreshRuntimeOptions node:internal/bootstrap/pre_execution:99:31,0x3d28624cac0,~
code-source-info,0x3d2862507fe,100,2925,2953,C0O2933C5O2933C9O2952,,
code-creation,LazyCompile,10,145338,0x3d2862508e6,22,refreshOptions node:internal/options:39:24,0x3a93d9fe8c8,~
script-source,95,node:internal/options,'use strict';\x0d\n\x0d\nconst {\x0d\n  getCLIOptions\x2C\x0d\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\x0d\n} = internalBinding('options');\x0d\n\x0d\nlet warnOnAllowUnauthorized = true;\x0d\n\x0d\nlet optionsMap;\x0d\nlet aliasesMap;\x0d\nlet embedderOptions;\x0d\n\x0d\n// getCLIOptions() would serialize the option values from C++ land.\x0d\n// It would error if the values are queried before bootstrap is\x0d\n// complete so that we don't accidentally include runtime-dependent\x0d\n// states into a runtime-independent snapshot.\x0d\nfunction getCLIOptionsFromBinding() {\x0d\n  if (!optionsMap) {\x0d\n    ({ options: optionsMap } = getCLIOptions());\x0d\n  }\x0d\n  return optionsMap;\x0d\n}\x0d\n\x0d\nfunction getAliasesFromBinding() {\x0d\n  if (!aliasesMap) {\x0d\n    ({ aliases: aliasesMap } = getCLIOptions());\x0d\n  }\x0d\n  return aliasesMap;\x0d\n}\x0d\n\x0d\nfunction getEmbedderOptions() {\x0d\n  if (!embedderOptions) {\x0d\n    embedderOptions = getEmbedderOptionsFromBinding();\x0d\n  }\x0d\n  return embedderOptions;\x0d\n}\x0d\n\x0d\nfunction refreshOptions() {\x0d\n  optionsMap = undefined;\x0d\n  aliasesMap = undefined;\x0d\n}\x0d\n\x0d\nfunction getOptionValue(optionName) {\x0d\n  const options = getCLIOptionsFromBinding();\x0d\n  if (optionName.startsWith('--no-')) {\x0d\n    const option = options.get('--' + optionName.slice(5));\x0d\n    return option && !option.value;\x0d\n  }\x0d\n  return options.get(optionName)?.value;\x0d\n}\x0d\n\x0d\nfunction getAllowUnauthorized() {\x0d\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\x0d\n\x0d\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\x0d\n    warnOnAllowUnauthorized = false;\x0d\n    process.emitWarning(\x0d\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\x0d\n      'environment variable to \\'0\\' makes TLS connections ' +\x0d\n      'and HTTPS requests insecure by disabling ' +\x0d\n      'certificate verification.');\x0d\n  }\x0d\n  return allowUnauthorized;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  get options() {\x0d\n    return getCLIOptionsFromBinding();\x0d\n  }\x2C\x0d\n  get aliases() {\x0d\n    return getAliasesFromBinding();\x0d\n  }\x2C\x0d\n  getOptionValue\x2C\x0d\n  getAllowUnauthorized\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n  refreshOptions\x0d\n};\x0d\n
code-source-info,0x3d2862508e6,95,940,1001,C0O948C4O959C10O975C14O986C21O1000,,
code-creation,LazyCompile,10,145480,0x3d286250c4e,19,reconnectZeroFillToggle node:internal/buffer:1072:33,0x233c000bdb8,~
script-source,25,node:internal/buffer,'use strict';\x0d\n\x0d\nconst {\x0d\n  BigInt\x2C\x0d\n  Float32Array\x2C\x0d\n  Float64Array\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateNumber } = require('internal/validators');\x0d\nconst {\x0d\n  asciiSlice\x2C\x0d\n  base64Slice\x2C\x0d\n  base64urlSlice\x2C\x0d\n  latin1Slice\x2C\x0d\n  hexSlice\x2C\x0d\n  ucs2Slice\x2C\x0d\n  utf8Slice\x2C\x0d\n  asciiWrite\x2C\x0d\n  base64Write\x2C\x0d\n  base64urlWrite\x2C\x0d\n  latin1Write\x2C\x0d\n  hexWrite\x2C\x0d\n  ucs2Write\x2C\x0d\n  utf8Write\x2C\x0d\n  getZeroFillToggle\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  untransferable_object_private_symbol\x2C\x0d\n  setHiddenValue\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\n// Temporary buffers to convert numbers.\x0d\nconst float32Array = new Float32Array(1);\x0d\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\x0d\nconst float64Array = new Float64Array(1);\x0d\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\x0d\n\x0d\n// Check endianness.\x0d\nfloat32Array[0] = -1; // 0xBF800000\x0d\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\x0d\n// check this with `os.endianness()` because that is determined at compile time.\x0d\nconst bigEndian = uInt8Float32Array[3] === 0;\x0d\n\x0d\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\x0d\n    boundsError(offset\x2C buf.length - (byteLength + 1));\x0d\n}\x0d\n\x0d\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\x0d\n  if (value > max || value < min) {\x0d\n    const n = typeof min === 'bigint' ? 'n' : '';\x0d\n    let range;\x0d\n    if (byteLength > 3) {\x0d\n      if (min === 0 || min === 0n) {\x0d\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\x0d\n      } else {\x0d\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\x0d\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\x0d\n      }\x0d\n    } else {\x0d\n      range = `>= ${min}${n} and <= ${max}${n}`;\x0d\n    }\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\x0d\n  }\x0d\n  checkBounds(buf\x2C offset\x2C byteLength);\x0d\n}\x0d\n\x0d\nfunction boundsError(value\x2C length\x2C type) {\x0d\n  if (MathFloor(value) !== value) {\x0d\n    validateNumber(value\x2C type);\x0d\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n\x0d\n  if (length < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\x0d\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\x0d\n                             value);\x0d\n}\x0d\n\x0d\n// Read integers.\x0d\nfunction readBigUInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const lo = first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24;\x0d\n\x0d\n  const hi = this[++offset] +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n\x0d\n  return BigInt(lo) + (BigInt(hi) << 32n);\x0d\n}\x0d\n\x0d\nfunction readBigUInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const hi = first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n\x0d\n  const lo = this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n\x0d\n  return (BigInt(hi) << 32n) + BigInt(lo);\x0d\n}\x0d\n\x0d\nfunction readBigInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = this[offset + 4] +\x0d\n    this[offset + 5] * 2 ** 8 +\x0d\n    this[offset + 6] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24);\x0d\n}\x0d\n\x0d\nfunction readBigInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last);\x0d\n}\x0d\n\x0d\nfunction readUIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    last * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readUInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n}\x0d\n\x0d\nfunction readUInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first + last * 2 ** 8;\x0d\n}\x0d\n\x0d\nfunction readUInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val;\x0d\n}\x0d\n\x0d\nfunction readUIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readUInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[offset + 4] + last * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n}\x0d\n\x0d\nfunction readInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first + last * 2 ** 8;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\nfunction readInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val | (val & 2 ** 7) * 0x1fffffe;\x0d\n}\x0d\n\x0d\nfunction readIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[++offset] + first * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\n// Read floats\x0d\nfunction readFloatBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[3] = first;\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[0] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readFloatForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[0] = first;\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[3] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[7] = first;\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[0] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[0] = first;\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[7] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\n// Write integers.\x0d\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset + 7] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 6] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 5] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 4] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset + 3] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 2] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 1] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset] = hi;\x0d\n  return offset + 8;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  const newVal = value;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  // `checkInt()` can not be used here because it checks two entries.\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (value > max || value < min) {\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\x0d\n  }\x0d\n  if (buf[offset] === undefined)\x0d\n    boundsError(offset\x2C buf.length - 1);\x0d\n\x0d\n  buf[offset] = value;\x0d\n  return offset + 1;\x0d\n}\x0d\n\x0d\nfunction writeUInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n}\x0d\n\x0d\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  buf[offset++] = MathFloor(value * 2 ** -32);\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeUInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 3;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\nfunction writeInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n}\x0d\n\x0d\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\n// Write floats.\x0d\nfunction writeDoubleForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeDoubleBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nclass FastBuffer extends Uint8Array {\x0d\n  // Using an explicit constructor here is necessary to avoid relying on\x0d\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\x0d\n    super(bufferOrLength\x2C byteOffset\x2C length);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addBufferPrototypeMethods(proto) {\x0d\n  proto.readBigUInt64LE = readBigUInt64LE;\x0d\n  proto.readBigUInt64BE = readBigUInt64BE;\x0d\n  proto.readBigUint64LE = readBigUInt64LE;\x0d\n  proto.readBigUint64BE = readBigUInt64BE;\x0d\n  proto.readBigInt64LE = readBigInt64LE;\x0d\n  proto.readBigInt64BE = readBigInt64BE;\x0d\n  proto.writeBigUInt64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUInt64BE = writeBigUInt64BE;\x0d\n  proto.writeBigUint64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUint64BE = writeBigUInt64BE;\x0d\n  proto.writeBigInt64LE = writeBigInt64LE;\x0d\n  proto.writeBigInt64BE = writeBigInt64BE;\x0d\n\x0d\n  proto.readUIntLE = readUIntLE;\x0d\n  proto.readUInt32LE = readUInt32LE;\x0d\n  proto.readUInt16LE = readUInt16LE;\x0d\n  proto.readUInt8 = readUInt8;\x0d\n  proto.readUIntBE = readUIntBE;\x0d\n  proto.readUInt32BE = readUInt32BE;\x0d\n  proto.readUInt16BE = readUInt16BE;\x0d\n  proto.readUintLE = readUIntLE;\x0d\n  proto.readUint32LE = readUInt32LE;\x0d\n  proto.readUint16LE = readUInt16LE;\x0d\n  proto.readUint8 = readUInt8;\x0d\n  proto.readUintBE = readUIntBE;\x0d\n  proto.readUint32BE = readUInt32BE;\x0d\n  proto.readUint16BE = readUInt16BE;\x0d\n  proto.readIntLE = readIntLE;\x0d\n  proto.readInt32LE = readInt32LE;\x0d\n  proto.readInt16LE = readInt16LE;\x0d\n  proto.readInt8 = readInt8;\x0d\n  proto.readIntBE = readIntBE;\x0d\n  proto.readInt32BE = readInt32BE;\x0d\n  proto.readInt16BE = readInt16BE;\x0d\n\x0d\n  proto.writeUIntLE = writeUIntLE;\x0d\n  proto.writeUInt32LE = writeUInt32LE;\x0d\n  proto.writeUInt16LE = writeUInt16LE;\x0d\n  proto.writeUInt8 = writeUInt8;\x0d\n  proto.writeUIntBE = writeUIntBE;\x0d\n  proto.writeUInt32BE = writeUInt32BE;\x0d\n  proto.writeUInt16BE = writeUInt16BE;\x0d\n  proto.writeUintLE = writeUIntLE;\x0d\n  proto.writeUint32LE = writeUInt32LE;\x0d\n  proto.writeUint16LE = writeUInt16LE;\x0d\n  proto.writeUint8 = writeUInt8;\x0d\n  proto.writeUintBE = writeUIntBE;\x0d\n  proto.writeUint32BE = writeUInt32BE;\x0d\n  proto.writeUint16BE = writeUInt16BE;\x0d\n  proto.writeIntLE = writeIntLE;\x0d\n  proto.writeInt32LE = writeInt32LE;\x0d\n  proto.writeInt16LE = writeInt16LE;\x0d\n  proto.writeInt8 = writeInt8;\x0d\n  proto.writeIntBE = writeIntBE;\x0d\n  proto.writeInt32BE = writeInt32BE;\x0d\n  proto.writeInt16BE = writeInt16BE;\x0d\n\x0d\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\x0d\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\x0d\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\x0d\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\x0d\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\x0d\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\x0d\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\x0d\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\x0d\n\x0d\n  proto.asciiSlice = asciiSlice;\x0d\n  proto.base64Slice = base64Slice;\x0d\n  proto.base64urlSlice = base64urlSlice;\x0d\n  proto.latin1Slice = latin1Slice;\x0d\n  proto.hexSlice = hexSlice;\x0d\n  proto.ucs2Slice = ucs2Slice;\x0d\n  proto.utf8Slice = utf8Slice;\x0d\n  proto.asciiWrite = asciiWrite;\x0d\n  proto.base64Write = base64Write;\x0d\n  proto.base64urlWrite = base64urlWrite;\x0d\n  proto.latin1Write = latin1Write;\x0d\n  proto.hexWrite = hexWrite;\x0d\n  proto.ucs2Write = ucs2Write;\x0d\n  proto.utf8Write = utf8Write;\x0d\n}\x0d\n\x0d\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\x0d\n// because Buffer needs this and that would introduce a cyclic dependency.\x0d\nfunction markAsUntransferable(obj) {\x0d\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\x0d\n    return;  // This object is a primitive and therefore already untransferable.\x0d\n  setHiddenValue(obj\x2C untransferable_object_private_symbol\x2C true);\x0d\n}\x0d\n\x0d\n// A toggle used to access the zero fill setting of the array buffer allocator\x0d\n// in C++.\x0d\n// |zeroFill| can be undefined when running inside an isolate where we\x0d\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\x0d\nlet zeroFill = getZeroFillToggle();\x0d\nfunction createUnsafeBuffer(size) {\x0d\n  zeroFill[0] = 0;\x0d\n  try {\x0d\n    return new FastBuffer(size);\x0d\n  } finally {\x0d\n    zeroFill[0] = 1;\x0d\n  }\x0d\n}\x0d\n\x0d\n// The connection between the JS land zero fill toggle and the\x0d\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\x0d\n// is deserialized from the snapshot\x2C because V8 owns the underlying\x0d\n// memory of this toggle. This resets the connection.\x0d\nfunction reconnectZeroFillToggle() {\x0d\n  zeroFill = getZeroFillToggle();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  FastBuffer\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  createUnsafeBuffer\x2C\x0d\n  readUInt16BE\x2C\x0d\n  readUInt32BE\x2C\x0d\n  reconnectZeroFillToggle\x0d\n};\x0d\n
code-source-info,0x3d286250c4e,25,31788,31830,C0O31796C5O31807C11O31805C18O31829,,
code-creation,LazyCompile,10,146946,0x3d28625353e,460,patchProcessObject node:internal/bootstrap/pre_execution:103:28,0x3d28624cb10,~
code-source-info,0x3d28625353e
code-creation,LazyCompile,10,147036,0x3d2862538ce,69,internalBinding node:internal/bootstrap/loaders:171:45,0x56f5c90b60,~
code-source-info,0x3d2862538ce,9,5433,5678,C0O5459C7O5469C11O5484C15O5522C25O5549C30O5547C37O5584C48O5603C56O5639C61O5584C66O5662C68O5673,,
code-creation,LazyCompile,10,147162,0x3d286253b86,69,refreshHrtimeBuffer node:internal/process/per_thread:67:29,0x233c0018950,~
script-source,30,node:internal/process/per_thread,'use strict';\x0d\n\x0d\n// This files contains process bootstrappers that can be\x0d\n// run when setting up each thread\x2C including the main\x0d\n// thread and the worker threads.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeEvery\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  BigUint64Array\x2C\x0d\n  Float64Array\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  Set\x2C\x0d\n  SetPrototypeEntries\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  Uint32Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_ASSERTION\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst format = require('internal/util/inspect').format;\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst constants = internalBinding('constants').os.signals;\x0d\n\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nconst kInternal = Symbol('internal properties');\x0d\n\x0d\nfunction assert(x\x2C msg) {\x0d\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\x0d\n}\x0d\n\x0d\nconst binding = internalBinding('process_methods');\x0d\n\x0d\nlet hrValues;\x0d\nlet hrBigintValues;\x0d\n\x0d\nfunction refreshHrtimeBuffer() {\x0d\n  // The 3 entries filled in by the original process.hrtime contains\x0d\n  // the upper/lower 32 bits of the second part of the value\x2C\x0d\n  // and the remaining nanoseconds of the value.\x0d\n  hrValues = new Uint32Array(binding.hrtimeBuffer);\x0d\n  // Use a BigUint64Array in the closure because this is actually a bit\x0d\n  // faster than simply returning a BigInt from C++ in V8 7.1.\x0d\n  hrBigintValues = new BigUint64Array(binding.hrtimeBuffer\x2C 0\x2C 1);\x0d\n}\x0d\n\x0d\n// Create the buffers.\x0d\nrefreshHrtimeBuffer();\x0d\n\x0d\nfunction hrtime(time) {\x0d\n  binding.hrtime();\x0d\n\x0d\n  if (time !== undefined) {\x0d\n    validateArray(time\x2C 'time');\x0d\n    if (time.length !== 2) {\x0d\n      throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\x0d\n    }\x0d\n\x0d\n    const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\x0d\n    const nsec = hrValues[2] - time[1];\x0d\n    const needsBorrow = nsec < 0;\x0d\n    return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\x0d\n  }\x0d\n\x0d\n  return [\x0d\n    hrValues[0] * 0x100000000 + hrValues[1]\x2C\x0d\n    hrValues[2]\x2C\x0d\n  ];\x0d\n}\x0d\n\x0d\nfunction hrtimeBigInt() {\x0d\n  binding.hrtimeBigInt();\x0d\n  return hrBigintValues[0];\x0d\n}\x0d\n\x0d\n// The execution of this function itself should not cause any side effects.\x0d\nfunction wrapProcessMethods(binding) {\x0d\n  const {\x0d\n    cpuUsage: _cpuUsage\x2C\x0d\n    memoryUsage: _memoryUsage\x2C\x0d\n    rss\x2C\x0d\n    resourceUsage: _resourceUsage\x0d\n  } = binding;\x0d\n\x0d\n  function _rawDebug(...args) {\x0d\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\x0d\n  }\x0d\n\x0d\n  // Create the argument array that will be passed to the native function.\x0d\n  const cpuValues = new Float64Array(2);\x0d\n\x0d\n  // Replace the native function with the JS version that calls the native\x0d\n  // function.\x0d\n  function cpuUsage(prevValue) {\x0d\n    // If a previous value was passed in\x2C ensure it has the correct shape.\x0d\n    if (prevValue) {\x0d\n      if (!previousValueIsValid(prevValue.user)) {\x0d\n        validateObject(prevValue\x2C 'prevValue');\x0d\n\x0d\n        validateNumber(prevValue.user\x2C 'prevValue.user');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\x0d\n                                                   prevValue.user);\x0d\n      }\x0d\n\x0d\n      if (!previousValueIsValid(prevValue.system)) {\x0d\n        validateNumber(prevValue.system\x2C 'prevValue.system');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\x0d\n                                                   prevValue.system);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Call the native function to get the current values.\x0d\n    _cpuUsage(cpuValues);\x0d\n\x0d\n    // If a previous value was passed in\x2C return diff of current from previous.\x0d\n    if (prevValue) {\x0d\n      return {\x0d\n        user: cpuValues[0] - prevValue.user\x2C\x0d\n        system: cpuValues[1] - prevValue.system\x0d\n      };\x0d\n    }\x0d\n\x0d\n    // If no previous value passed in\x2C return current value.\x0d\n    return {\x0d\n      user: cpuValues[0]\x2C\x0d\n      system: cpuValues[1]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\x0d\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\x0d\n  function previousValueIsValid(num) {\x0d\n    return typeof num === 'number' &&\x0d\n        num <= NumberMAX_SAFE_INTEGER &&\x0d\n        num >= 0;\x0d\n  }\x0d\n\x0d\n  const memValues = new Float64Array(5);\x0d\n  function memoryUsage() {\x0d\n    _memoryUsage(memValues);\x0d\n    return {\x0d\n      rss: memValues[0]\x2C\x0d\n      heapTotal: memValues[1]\x2C\x0d\n      heapUsed: memValues[2]\x2C\x0d\n      external: memValues[3]\x2C\x0d\n      arrayBuffers: memValues[4]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  memoryUsage.rss = rss;\x0d\n\x0d\n  function exit(code) {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n\x0d\n    if (code || code === 0)\x0d\n      process.exitCode = code;\x0d\n\x0d\n    if (!process._exiting) {\x0d\n      process._exiting = true;\x0d\n      process.emit('exit'\x2C process.exitCode || 0);\x0d\n    }\x0d\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\x0d\n    // in the user land. Either document it\x2C or deprecate it in favor of a\x0d\n    // better public alternative.\x0d\n    process.reallyExit(process.exitCode || 0);\x0d\n  }\x0d\n\x0d\n  function kill(pid\x2C sig) {\x0d\n    let err;\x0d\n\x0d\n    // eslint-disable-next-line eqeqeq\x0d\n    if (pid != (pid | 0)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\x0d\n    }\x0d\n\x0d\n    // Preserve null signal\x0d\n    if (sig === (sig | 0)) {\x0d\n      // XXX(joyeecheung): we have to use process._kill here because\x0d\n      // it's monkey-patched by tests.\x0d\n      err = process._kill(pid\x2C sig);\x0d\n    } else {\x0d\n      sig = sig || 'SIGTERM';\x0d\n      if (constants[sig]) {\x0d\n        err = process._kill(pid\x2C constants[sig]);\x0d\n      } else {\x0d\n        throw new ERR_UNKNOWN_SIGNAL(sig);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  const resourceValues = new Float64Array(16);\x0d\n  function resourceUsage() {\x0d\n    _resourceUsage(resourceValues);\x0d\n    return {\x0d\n      userCPUTime: resourceValues[0]\x2C\x0d\n      systemCPUTime: resourceValues[1]\x2C\x0d\n      maxRSS: resourceValues[2]\x2C\x0d\n      sharedMemorySize: resourceValues[3]\x2C\x0d\n      unsharedDataSize: resourceValues[4]\x2C\x0d\n      unsharedStackSize: resourceValues[5]\x2C\x0d\n      minorPageFault: resourceValues[6]\x2C\x0d\n      majorPageFault: resourceValues[7]\x2C\x0d\n      swappedOut: resourceValues[8]\x2C\x0d\n      fsRead: resourceValues[9]\x2C\x0d\n      fsWrite: resourceValues[10]\x2C\x0d\n      ipcSent: resourceValues[11]\x2C\x0d\n      ipcReceived: resourceValues[12]\x2C\x0d\n      signalsCount: resourceValues[13]\x2C\x0d\n      voluntaryContextSwitches: resourceValues[14]\x2C\x0d\n      involuntaryContextSwitches: resourceValues[15]\x0d\n    };\x0d\n  }\x0d\n\x0d\n\x0d\n  return {\x0d\n    _rawDebug\x2C\x0d\n    cpuUsage\x2C\x0d\n    resourceUsage\x2C\x0d\n    memoryUsage\x2C\x0d\n    kill\x2C\x0d\n    exit\x0d\n  };\x0d\n}\x0d\n\x0d\nconst replaceUnderscoresRegex = /_/g;\x0d\nconst leadingDashesRegex = /^--?/;\x0d\nconst trailingValuesRegex = /=.*$/;\x0d\n\x0d\n// This builds the initial process.allowedNodeEnvironmentFlags\x0d\n// from data in the config binding.\x0d\nfunction buildAllowedFlags() {\x0d\n  const {\x0d\n    envSettings: { kAllowedInEnvironment }\x2C\x0d\n    types: { kBoolean }\x2C\x0d\n  } = internalBinding('options');\x0d\n  const { options\x2C aliases } = require('internal/options');\x0d\n\x0d\n  const allowedNodeEnvironmentFlags = [];\x0d\n  for (const { 0: name\x2C 1: info } of options) {\x0d\n    if (info.envVarSettings === kAllowedInEnvironment) {\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\x0d\n      if (info.type === kBoolean) {\x0d\n        const negatedName = `--no-${name.slice(2)}`;\x0d\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function isAccepted(to) {\x0d\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\x0d\n    const recursiveExpansion = aliases.get(to);\x0d\n    if (recursiveExpansion) {\x0d\n      if (recursiveExpansion[0] === to)\x0d\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\x0d\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\x0d\n    }\x0d\n    return options.get(to).envVarSettings === kAllowedInEnvironment;\x0d\n  }\x0d\n  for (const { 0: from\x2C 1: expansion } of aliases) {\x0d\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\x0d\n      let canonical = from;\x0d\n      if (StringPrototypeEndsWith(canonical\x2C '='))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\x0d\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const trimLeadingDashes =\x0d\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\x0d\n\x0d\n  // Save these for comparison against flags provided to\x0d\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\x0d\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\x0d\n                                      trimLeadingDashes);\x0d\n\x0d\n  class NodeEnvironmentFlagsSet extends Set {\x0d\n    constructor(array) {\x0d\n      super();\x0d\n      this[kInternal] = { array };\x0d\n    }\x0d\n\x0d\n    add() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    delete() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    clear() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n    }\x0d\n\x0d\n    has(key) {\x0d\n      // This will return `true` based on various possible\x0d\n      // permutations of a flag\x2C including present/missing leading\x0d\n      // dash(es) and/or underscores-for-dashes.\x0d\n      // Strips any values after `=`\x2C inclusive.\x0d\n      // TODO(addaleax): It might be more flexible to run the option parser\x0d\n      // on a dummy option set and see whether it rejects the argument or\x0d\n      // not.\x0d\n      if (typeof key === 'string') {\x0d\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\x0d\n        if (RegExpPrototypeExec(leadingDashesRegex\x2C key) !== null) {\x0d\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\x0d\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\x0d\n        }\x0d\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\x0d\n      }\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    entries() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeEntries(this[kInternal].set);\x0d\n    }\x0d\n\x0d\n    forEach(callback\x2C thisArg = undefined) {\x0d\n      ArrayPrototypeForEach(\x0d\n        this[kInternal].array\x2C\x0d\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\x0d\n      );\x0d\n    }\x0d\n\x0d\n    get size() {\x0d\n      return this[kInternal].array.length;\x0d\n    }\x0d\n\x0d\n    values() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeValues(this[kInternal].set);\x0d\n    }\x0d\n  }\x0d\n  const flagSetValues = NodeEnvironmentFlagsSet.prototype.values;\x0d\n  ObjectDefineProperty(NodeEnvironmentFlagsSet.prototype\x2C SymbolIterator\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: flagSetValues\x2C\x0d\n  });\x0d\n  ObjectDefineProperty(NodeEnvironmentFlagsSet.prototype\x2C 'keys'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: flagSetValues\x2C\x0d\n  });\x0d\n\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\x0d\n\x0d\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\x0d\n    allowedNodeEnvironmentFlags\x0d\n  ));\x0d\n}\x0d\n\x0d\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\x0d\n// trace event category is enabled.\x0d\nlet traceEventsAsyncHook;\x0d\n// Dynamically enable/disable the traceEventsAsyncHook\x0d\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\x0d\n  if (asyncHooksEnabled) {\x0d\n    if (!traceEventsAsyncHook) {\x0d\n      traceEventsAsyncHook =\x0d\n        require('internal/trace_events_async_hooks').createHook();\x0d\n    }\x0d\n    traceEventsAsyncHook.enable();\x0d\n  } else if (traceEventsAsyncHook) {\x0d\n    traceEventsAsyncHook.disable();\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  toggleTraceCategoryState\x2C\x0d\n  assert\x2C\x0d\n  buildAllowedFlags\x2C\x0d\n  wrapProcessMethods\x2C\x0d\n  hrtime\x2C\x0d\n  hrtimeBigInt\x2C\x0d\n  refreshHrtimeBuffer\x2C\x0d\n};\x0d\n
code-source-info,0x3d286253b86,30,1502,1950,C0O1693C7O1720C10O1728C17O1704C25O1702C31O1883C38O1919C41O1927C53O1900C61O1898C68O1949,,
code-creation,LazyCompile,10,147688,0x3d286254a4e,82,getOptionValue node:internal/options:44:24,0x3a93d9fe938,~
code-source-info,0x3d286254a4e,95,1028,1278,C0O1062C3O1062C7O1108C15O1108C22O1159C30O1181C38O1181C43O1168C47O1159C53O1197C55O1222C60O1228C61O1252C66O1252C74O1267C81O1275,,
code-creation,LazyCompile,10,147729,0x3d286254ba6,33,getCLIOptionsFromBinding node:internal/options:18:34,0x39c7b63fce8,~
code-source-info,0x3d286254ba6,95,514,620,C0O522C6O546C11O573C15O558C28O599C32O617,,
code-creation,LazyCompile,10,148171,0x3d286254e9e,832,resolve node:path:158:10,0x3a93d9cd510,~
script-source,41,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  CHAR_UPPERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_UPPERCASE_Z\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x2C\x0d\n  CHAR_QUESTION_MARK\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst platformIsWin32 = (process.platform === 'win32');\x0d\n\x0d\nfunction isPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isPosixPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isWindowsDeviceRoot(code) {\x0d\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\x0d\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\x0d\n}\x0d\n\x0d\n// Resolves . and .. elements in a path with directory names\x0d\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\x0d\n  let res = '';\x0d\n  let lastSegmentLength = 0;\x0d\n  let lastSlash = -1;\x0d\n  let dots = 0;\x0d\n  let code = 0;\x0d\n  for (let i = 0; i <= path.length; ++i) {\x0d\n    if (i < path.length)\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n    else if (isPathSeparator(code))\x0d\n      break;\x0d\n    else\x0d\n      code = CHAR_FORWARD_SLASH;\x0d\n\x0d\n    if (isPathSeparator(code)) {\x0d\n      if (lastSlash === i - 1 || dots === 1) {\x0d\n        // NOOP\x0d\n      } else if (dots === 2) {\x0d\n        if (res.length < 2 || lastSegmentLength !== 2 ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\x0d\n          if (res.length > 2) {\x0d\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            if (lastSlashIndex === -1) {\x0d\n              res = '';\x0d\n              lastSegmentLength = 0;\x0d\n            } else {\x0d\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\x0d\n              lastSegmentLength =\x0d\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            }\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          } else if (res.length !== 0) {\x0d\n            res = '';\x0d\n            lastSegmentLength = 0;\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          }\x0d\n        }\x0d\n        if (allowAboveRoot) {\x0d\n          res += res.length > 0 ? `${separator}..` : '..';\x0d\n          lastSegmentLength = 2;\x0d\n        }\x0d\n      } else {\x0d\n        if (res.length > 0)\x0d\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\x0d\n        else\x0d\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\x0d\n        lastSegmentLength = i - lastSlash - 1;\x0d\n      }\x0d\n      lastSlash = i;\x0d\n      dots = 0;\x0d\n    } else if (code === CHAR_DOT && dots !== -1) {\x0d\n      ++dots;\x0d\n    } else {\x0d\n      dots = -1;\x0d\n    }\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} sep\x0d\n * @param {{\x0d\n *  dir?: string;\x0d\n *  root?: string;\x0d\n *  base?: string;\x0d\n *  name?: string;\x0d\n *  ext?: string;\x0d\n *  }} pathObject\x0d\n * @returns {string}\x0d\n */\x0d\nfunction _format(sep\x2C pathObject) {\x0d\n  validateObject(pathObject\x2C 'pathObject');\x0d\n  const dir = pathObject.dir || pathObject.root;\x0d\n  const base = pathObject.base ||\x0d\n    `${pathObject.name || ''}${pathObject.ext || ''}`;\x0d\n  if (!dir) {\x0d\n    return base;\x0d\n  }\x0d\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\x0d\n}\x0d\n\x0d\nconst win32 = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedDevice = '';\x0d\n    let resolvedTail = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1; i--) {\x0d\n      let path;\x0d\n      if (i >= 0) {\x0d\n        path = args[i];\x0d\n        validateString(path\x2C 'path');\x0d\n\x0d\n        // Skip empty entries\x0d\n        if (path.length === 0) {\x0d\n          continue;\x0d\n        }\x0d\n      } else if (resolvedDevice.length === 0) {\x0d\n        path = process.cwd();\x0d\n      } else {\x0d\n        // Windows has the concept of drive-specific current working\x0d\n        // directories. If we've resolved a drive letter but not yet an\x0d\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\x0d\n        // the drive cwd is not available. We're sure the device is not\x0d\n        // a UNC path at this points\x2C because UNC paths are always absolute.\x0d\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\x0d\n\x0d\n        // Verify that a cwd was found and that it actually points\x0d\n        // to our drive. If not\x2C default to the drive's root.\x0d\n        if (path === undefined ||\x0d\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\x0d\n            StringPrototypeToLowerCase(resolvedDevice) &&\x0d\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\x0d\n          path = `${resolvedDevice}\\\\`;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      const len = path.length;\x0d\n      let rootEnd = 0;\x0d\n      let device = '';\x0d\n      let isAbsolute = false;\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n      // Try to match a root\x0d\n      if (len === 1) {\x0d\n        if (isPathSeparator(code)) {\x0d\n          // `path` contains just a path separator\x0d\n          rootEnd = 1;\x0d\n          isAbsolute = true;\x0d\n        }\x0d\n      } else if (isPathSeparator(code)) {\x0d\n        // Possible UNC root\x0d\n\x0d\n        // If we started with a separator\x2C we know we at least have an\x0d\n        // absolute path of some kind (UNC or otherwise)\x0d\n        isAbsolute = true;\x0d\n\x0d\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n          // Matched double path separator at beginning\x0d\n          let j = 2;\x0d\n          let last = j;\x0d\n          // Match 1 or more non-path separators\x0d\n          while (j < len &&\x0d\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more path separators\x0d\n            while (j < len &&\x0d\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j < len && j !== last) {\x0d\n              // Matched!\x0d\n              last = j;\x0d\n              // Match 1 or more non-path separators\x0d\n              while (j < len &&\x0d\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n                j++;\x0d\n              }\x0d\n              if (j === len || j !== last) {\x0d\n                // We matched a UNC root\x0d\n                device =\x0d\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n                rootEnd = j;\x0d\n              }\x0d\n            }\x0d\n          }\x0d\n        } else {\x0d\n          rootEnd = 1;\x0d\n        }\x0d\n      } else if (isWindowsDeviceRoot(code) &&\x0d\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n        // Possible device root\x0d\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n        rootEnd = 2;\x0d\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n          // Treat separator following drive name as an absolute path\x0d\n          // indicator\x0d\n          isAbsolute = true;\x0d\n          rootEnd = 3;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (device.length > 0) {\x0d\n        if (resolvedDevice.length > 0) {\x0d\n          if (StringPrototypeToLowerCase(device) !==\x0d\n              StringPrototypeToLowerCase(resolvedDevice))\x0d\n            // This path points to another device so it is not applicable\x0d\n            continue;\x0d\n        } else {\x0d\n          resolvedDevice = device;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (resolvedAbsolute) {\x0d\n        if (resolvedDevice.length > 0)\x0d\n          break;\x0d\n      } else {\x0d\n        resolvedTail =\x0d\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\x0d\n        resolvedAbsolute = isAbsolute;\x0d\n        if (isAbsolute && resolvedDevice.length > 0) {\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C\x0d\n    // but handle relative paths to be safe (might happen when process.cwd()\x0d\n    // fails)\x0d\n\x0d\n    // Normalize the tail path\x0d\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\x0d\n                                   isPathSeparator);\x0d\n\x0d\n    return resolvedAbsolute ?\x0d\n      `${resolvedDevice}\\\\${resolvedTail}` :\x0d\n      `${resolvedDevice}${resolvedTail}` || '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = 0;\x0d\n    let device;\x0d\n    let isAbsolute = false;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    // Try to match a root\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a single char\x2C exit early to avoid\x0d\n      // unnecessary work\x0d\n      return isPosixPathSeparator(code) ? '\\\\' : path;\x0d\n    }\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      // If we started with a separator\x2C we know we at least have an absolute\x0d\n      // path of some kind (UNC or otherwise)\x0d\n      isAbsolute = true;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              // Return the normalized version of the UNC root since there\x0d\n              // is nothing left to process\x0d\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              device =\x0d\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n              rootEnd = j;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      } else {\x0d\n        rootEnd = 1;\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n      rootEnd = 2;\x0d\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        // Treat separator following drive name as an absolute path\x0d\n        // indicator\x0d\n        isAbsolute = true;\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let tail = rootEnd < len ?\x0d\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\x0d\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\x0d\n      '';\x0d\n    if (tail.length === 0 && !isAbsolute)\x0d\n      tail = '.';\x0d\n    if (tail.length > 0 &&\x0d\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\x0d\n      tail += '\\\\';\x0d\n    if (device === undefined) {\x0d\n      return isAbsolute ? `\\\\${tail}` : tail;\x0d\n    }\x0d\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return false;\x0d\n\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n    return isPathSeparator(code) ||\x0d\n      // Possible device root\x0d\n      (len > 2 &&\x0d\n      isWindowsDeviceRoot(code) &&\x0d\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    let joined;\x0d\n    let firstPart;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = firstPart = arg;\x0d\n        else\x0d\n          joined += `\\\\${arg}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n\x0d\n    // Make sure that the joined path doesn't start with two slashes\x2C because\x0d\n    // normalize() will mistake it for a UNC path then.\x0d\n    //\x0d\n    // This step is skipped when it is very clear that the user actually\x0d\n    // intended to point at a UNC path. This is assumed when the first\x0d\n    // non-empty string arguments starts with exactly two slashes followed by\x0d\n    // at least one more non-slash character.\x0d\n    //\x0d\n    // Note that for normalize() to treat a path as a UNC path it needs to\x0d\n    // have at least 2 components\x2C so we don't filter for that here.\x0d\n    // This means that the user can use join to construct UNC paths from\x0d\n    // a server name and a share name; for example:\x0d\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\x0d\n    let needsReplace = true;\x0d\n    let slashCount = 0;\x0d\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\x0d\n      ++slashCount;\x0d\n      const firstLen = firstPart.length;\x0d\n      if (firstLen > 1 &&\x0d\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\x0d\n        ++slashCount;\x0d\n        if (firstLen > 2) {\x0d\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\x0d\n            ++slashCount;\x0d\n          else {\x0d\n            // We matched a UNC path in the first part\x0d\n            needsReplace = false;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (needsReplace) {\x0d\n      // Find any more consecutive slashes we need to replace\x0d\n      while (slashCount < joined.length &&\x0d\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\x0d\n        slashCount++;\x0d\n      }\x0d\n\x0d\n      // Replace the slashes if needed\x0d\n      if (slashCount >= 2)\x0d\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\x0d\n    }\x0d\n\x0d\n    return win32.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * It will solve the relative path from `from` to `to`\x2C for instance\x0d\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\x0d\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\x0d\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromOrig = win32.resolve(from);\x0d\n    const toOrig = win32.resolve(to);\x0d\n\x0d\n    if (fromOrig === toOrig)\x0d\n      return '';\x0d\n\x0d\n    from = StringPrototypeToLowerCase(fromOrig);\x0d\n    to = StringPrototypeToLowerCase(toOrig);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let fromStart = 0;\x0d\n    while (fromStart < from.length &&\x0d\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\x0d\n      fromStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let fromEnd = from.length;\x0d\n    while (\x0d\n      fromEnd - 1 > fromStart &&\x0d\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      fromEnd--;\x0d\n    }\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let toStart = 0;\x0d\n    while (toStart < to.length &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\x0d\n      toStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let toEnd = to.length;\x0d\n    while (toEnd - 1 > toStart &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\x0d\n      toEnd--;\x0d\n    }\x0d\n    const toLen = toEnd - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = fromLen < toLen ? fromLen : toLen;\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_BACKWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n\x0d\n    // We found a mismatch before the first common path separator was seen\x2C so\x0d\n    // return the original `to`.\x0d\n    if (i !== length) {\x0d\n      if (lastCommonSep === -1)\x0d\n        return toOrig;\x0d\n    } else {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 2) {\x0d\n          // We get here if `from` is the device root.\x0d\n          // For example: from='C:\\\\'; to='C:\\\\foo'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\x0d\n        }\x0d\n      }\x0d\n      if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 2) {\x0d\n          // We get here if `to` is the device root.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\x0d\n          lastCommonSep = 3;\x0d\n        }\x0d\n      }\x0d\n      if (lastCommonSep === -1)\x0d\n        lastCommonSep = 0;\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to` and\x0d\n    // `from`\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '\\\\..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    toStart += lastCommonSep;\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts\x0d\n    if (out.length > 0)\x0d\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\x0d\n      ++toStart;\x0d\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Note: this will *probably* throw somewhere.\x0d\n    if (typeof path !== 'string' || path.length === 0)\x0d\n      return path;\x0d\n\x0d\n    const resolvedPath = win32.resolve(path);\x0d\n\x0d\n    if (resolvedPath.length <= 2)\x0d\n      return path;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\x0d\n      // Possible UNC root\x0d\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\x0d\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\x0d\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\x0d\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\x0d\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\x0d\n        }\x0d\n      }\x0d\n    } else if (\x0d\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      // Matched device root\x2C convert the path to a long UNC path\x0d\n      return `\\\\\\\\?\\\\${resolvedPath}`;\x0d\n    }\x0d\n\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = -1;\x0d\n    let offset = 0;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a path separator\x2C exit early to avoid\x0d\n      // unnecessary work or a dot.\x0d\n      return isPathSeparator(code) ? path : '.';\x0d\n    }\x0d\n\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = offset = 1;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              return path;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n\x0d\n              // Offset by 1 to include the separator after the UNC root to\x0d\n              // treat it as a "normal root" on top of a (UNC) root\x0d\n              rootEnd = offset = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    // Possible device root\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      rootEnd =\x0d\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\x0d\n      offset = rootEnd;\x0d\n    }\x0d\n\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = len - 1; i >= offset; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1) {\x0d\n      if (rootEnd === -1)\x0d\n        return '.';\x0d\n\x0d\n      end = rootEnd;\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n    if (path.length >= 2 &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      start = 2;\x0d\n    }\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= start; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (isPathSeparator(code)) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n\x0d\n    if (path.length >= 2 &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\x0d\n      start = startPart = 2;\x0d\n    }\x0d\n\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *  dir: string;\x0d\n   *  root: string;\x0d\n   *  base: string;\x0d\n   *  name: string;\x0d\n   *  ext: string;\x0d\n   *  }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n\x0d\n    const len = path.length;\x0d\n    let rootEnd = 0;\x0d\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      if (isPathSeparator(code)) {\x0d\n        // `path` contains just a path separator\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      ret.base = ret.name = path;\x0d\n      return ret;\x0d\n    }\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = 1;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              rootEnd = j;\x0d\n            } else if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              rootEnd = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      if (len <= 2) {\x0d\n        // `path` contains just a drive root\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      rootEnd = 2;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        if (len === 3) {\x0d\n          // `path` contains just a drive root\x2C exit early to avoid\x0d\n          // unnecessary work\x0d\n          ret.root = ret.dir = path;\x0d\n          return ret;\x0d\n        }\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n    if (rootEnd > 0)\x0d\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\x0d\n\x0d\n    let startDot = -1;\x0d\n    let startPart = rootEnd;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= rootEnd; --i) {\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n           startDot === end - 1 &&\x0d\n           startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // If the directory is the root\x2C use the entire root as the `dir` including\x0d\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\x0d\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\x0d\n    if (startPart > 0 && startPart !== rootEnd)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else\x0d\n      ret.dir = ret.root;\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '\\\\'\x2C\x0d\n  delimiter: ';'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nconst posixCwd = (() => {\x0d\n  if (platformIsWin32) {\x0d\n    // Converts Windows' backslash path separators to POSIX forward slashes\x0d\n    // and truncates any drive indicator\x0d\n    const regexp = /\\\\/g;\x0d\n    return () => {\x0d\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\x0d\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // We're already on POSIX\x2C no need for any transformations\x0d\n  return () => process.cwd();\x0d\n})();\x0d\n\x0d\nconst posix = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedPath = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\x0d\n      const path = i >= 0 ? args[i] : posixCwd();\x0d\n\x0d\n      validateString(path\x2C 'path');\x0d\n\x0d\n      // Skip empty entries\x0d\n      if (path.length === 0) {\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      resolvedPath = `${path}/${resolvedPath}`;\x0d\n      resolvedAbsolute =\x0d\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C but\x0d\n    // handle relative paths to be safe (might happen when process.cwd() fails)\x0d\n\x0d\n    // Normalize the path\x0d\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\x0d\n                                   isPosixPathSeparator);\x0d\n\x0d\n    if (resolvedAbsolute) {\x0d\n      return `/${resolvedPath}`;\x0d\n    }\x0d\n    return resolvedPath.length > 0 ? resolvedPath : '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    const trailingSeparator =\x0d\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\x0d\n\x0d\n    // Normalize the path\x0d\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\x0d\n\x0d\n    if (path.length === 0) {\x0d\n      if (isAbsolute)\x0d\n        return '/';\x0d\n      return trailingSeparator ? './' : '.';\x0d\n    }\x0d\n    if (trailingSeparator)\x0d\n      path += '/';\x0d\n\x0d\n    return isAbsolute ? `/${path}` : path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    return path.length > 0 &&\x0d\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n    let joined;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = arg;\x0d\n        else\x0d\n          joined += `/${arg}`;\x0d\n      }\x0d\n    }\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n    return posix.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim leading forward slashes.\x0d\n    from = posix.resolve(from);\x0d\n    to = posix.resolve(to);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromStart = 1;\x0d\n    const fromEnd = from.length;\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n    const toStart = 1;\x0d\n    const toLen = to.length - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = (fromLen < toLen ? fromLen : toLen);\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_FORWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n    if (i === length) {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 0) {\x0d\n          // We get here if `from` is the root\x0d\n          // For example: from='/'; to='/foo'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i);\x0d\n        }\x0d\n      } else if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 0) {\x0d\n          // We get here if `to` is the root.\x0d\n          // For example: from='/foo/bar'; to='/'\x0d\n          lastCommonSep = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to`\x0d\n    // and `from`.\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '/..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts.\x0d\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Non-op on posix systems\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = path.length - 1; i >= 1; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return hasRoot ? '/' : '.';\x0d\n    if (hasRoot && end === 1)\x0d\n      return '//';\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= 0; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (code === CHAR_FORWARD_SLASH) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *   dir: string;\x0d\n   *   root: string;\x0d\n   *   base: string;\x0d\n   *   name: string;\x0d\n   *   ext: string;\x0d\n   *   }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let start;\x0d\n    if (isAbsolute) {\x0d\n      ret.root = '/';\x0d\n      start = 1;\x0d\n    } else {\x0d\n      start = 0;\x0d\n    }\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n          startDot === end - 1 &&\x0d\n          startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startPart > 0)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else if (isAbsolute)\x0d\n      ret.dir = '/';\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '/'\x2C\x0d\n  delimiter: ':'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nposix.win32 = win32.win32 = win32;\x0d\nposix.posix = win32.posix = posix;\x0d\n\x0d\n// Legacy internal API\x2C docs-only deprecated: DEP0080\x0d\nwin32._makeLong = win32.toNamespacedPath;\x0d\nposix._makeLong = posix.toNamespacedPath;\x0d\n\x0d\nmodule.exports = platformIsWin32 ? win32 : posix;\x0d\n
code-source-info,0x3d286254e9e
code-creation,LazyCompile,10,150155,0x3d2862584b6,30,validateString node:internal/validators:119:24,0xf284009390,~
script-source,16,node:internal/validators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  NumberParseInt\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_SOCKET_BAD_PORT\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n    ERR_INVALID_CALLBACK\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { normalizeEncoding } = require('internal/util');\x0d\nconst {\x0d\n  isAsyncFunction\x2C\x0d\n  isArrayBufferView\x0d\n} = require('internal/util/types');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nfunction isInt32(value) {\x0d\n  return value === (value | 0);\x0d\n}\x0d\n\x0d\nfunction isUint32(value) {\x0d\n  return value === (value >>> 0);\x0d\n}\x0d\n\x0d\nconst octalReg = /^[0-7]+$/;\x0d\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\x0d\n\x0d\n/**\x0d\n * Parse and validate values that will be converted into mode_t (the S_*\x0d\n * constants). Only valid numbers and octal strings are allowed. They could be\x0d\n * converted to 32-bit unsigned integers or non-negative signed integers in the\x0d\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\x0d\n * behaviors.\x0d\n *\x0d\n * @param {*} value Values to be validated\x0d\n * @param {string} name Name of the argument\x0d\n * @param {number} [def] If specified\x2C will be returned for invalid values\x0d\n * @returns {number}\x0d\n */\x0d\nfunction parseFileMode(value\x2C name\x2C def) {\x0d\n  value ??= def;\x0d\n  if (typeof value === 'string') {\x0d\n    if (RegExpPrototypeExec(octalReg\x2C value) === null) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\x0d\n    }\x0d\n    value = NumberParseInt(value\x2C 8);\x0d\n  }\x0d\n\x0d\n  validateInt32(value\x2C name\x2C 0\x2C 2 ** 32 - 1);\x0d\n  return value;\x0d\n}\x0d\n\x0d\nconst validateInteger = hideStackFrames(\x0d\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\x0d\n    if (typeof value !== 'number')\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    if (!NumberIsInteger(value))\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    if (value < min || value > max)\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateInt32 = hideStackFrames(\x0d\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\x0d\n    // The defaults for min and max correspond to the limits of 32-bit integers.\x0d\n    if (typeof value !== 'number') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    }\x0d\n    if (!isInt32(value)) {\x0d\n      if (!NumberIsInteger(value)) {\x0d\n        throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n      }\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n    if (value < min || value > max) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive) => {\x0d\n  if (typeof value !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n  }\x0d\n  if (!isUint32(value)) {\x0d\n    if (!NumberIsInteger(value)) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    }\x0d\n    const min = positive ? 1 : 0;\x0d\n    // 2 ** 32 === 4294967296\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && < 4294967296`\x2C value);\x0d\n  }\x0d\n  if (positive && value === 0) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C '>= 1 && < 4294967296'\x2C value);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateString(value\x2C name) {\x0d\n  if (typeof value !== 'string')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\x0d\n}\x0d\n\x0d\nfunction validateNumber(value\x2C name\x2C min = undefined\x2C max) {\x0d\n  if (typeof value !== 'number')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n\x0d\n  if ((min != null && value < min) || (max != null && value > max) ||\x0d\n      ((min != null || max != null) && NumberIsNaN(value))) {\x0d\n    throw new ERR_OUT_OF_RANGE(\x0d\n      name\x2C\x0d\n      `${min != null ? `>= ${min}` : ''}${min != null && max != null ? ' && ' : ''}${max != null ? `<= ${max}` : ''}`\x2C\x0d\n      value);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\x0d\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\x0d\n    const allowed = ArrayPrototypeJoin(\x0d\n      ArrayPrototypeMap(oneOf\x2C (v) =>\x0d\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\x0d\n      '\x2C ');\x0d\n    const reason = 'must be one of: ' + allowed;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateBoolean(value\x2C name) {\x0d\n  if (typeof value !== 'boolean')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {unknown} value\x0d\n * @param {string} name\x0d\n * @param {{\x0d\n *   allowArray?: boolean\x2C\x0d\n *   allowFunction?: boolean\x2C\x0d\n *   nullable?: boolean\x0d\n * }} [options]\x0d\n */\x0d\nconst validateObject = hideStackFrames(\x0d\n  (value\x2C name\x2C options) => {\x0d\n    const useDefaultOptions = options == null;\x0d\n    const allowArray = useDefaultOptions ? false : options.allowArray;\x0d\n    const allowFunction = useDefaultOptions ? false : options.allowFunction;\x0d\n    const nullable = useDefaultOptions ? false : options.nullable;\x0d\n    if ((!nullable && value === null) ||\x0d\n        (!allowArray && ArrayIsArray(value)) ||\x0d\n        (typeof value !== 'object' && (\x0d\n          !allowFunction || typeof value !== 'function'\x0d\n        ))) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n    }\x0d\n  });\x0d\n\x0d\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\x0d\n  if (!ArrayIsArray(value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\x0d\n  }\x0d\n  if (value.length < minLength) {\x0d\n    const reason = `must be longer than ${minLength}`;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateSignalName(signal\x2C name = 'signal') {\x0d\n  validateString(signal\x2C name);\x0d\n\x0d\n  if (signals[signal] === undefined) {\x0d\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\x0d\n      throw new ERR_UNKNOWN_SIGNAL(signal +\x0d\n                                   ' (signals must use all capital letters)');\x0d\n    }\x0d\n\x0d\n    throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateEncoding(data\x2C encoding) {\x0d\n  const normalizedEncoding = normalizeEncoding(encoding);\x0d\n  const length = data.length;\x0d\n\x0d\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\x0d\n                                    `is invalid for data of length ${length}`);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check that the port number is not NaN when coerced to a number\x2C\x0d\n// is an integer and that it falls within the legal range of port numbers.\x0d\nfunction validatePort(port\x2C name = 'Port'\x2C allowZero = true) {\x0d\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\x0d\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\x0d\n      +port !== (+port >>> 0) ||\x0d\n      port > 0xFFFF ||\x0d\n      (port === 0 && !allowZero)) {\x0d\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\x0d\n  }\x0d\n  return port | 0;\x0d\n}\x0d\n\x0d\nconst validateCallback = hideStackFrames((callback) => {\x0d\n  if (typeof callback !== 'function')\x0d\n    throw new ERR_INVALID_CALLBACK(callback);\x0d\n});\x0d\n\x0d\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\x0d\n  if (signal !== undefined &&\x0d\n      (signal === null ||\x0d\n       typeof signal !== 'object' ||\x0d\n       !('aborted' in signal))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validateFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validatePlainFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function' || isAsyncFunction(value))\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validateUndefined = hideStackFrames((value\x2C name) => {\x0d\n  if (value !== undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\x0d\n});\x0d\n\x0d\nfunction validateUnion(value\x2C name\x2C union) {\x0d\n  if (!ArrayPrototypeIncludes(union\x2C value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C `('${ArrayPrototypeJoin(union\x2C '|')}')`\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  isInt32\x2C\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateCallback\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validatePlainFunction\x2C\x0d\n  validatePort\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n  validateUndefined\x2C\x0d\n  validateUnion\x2C\x0d\n  validateAbortSignal\x2C\x0d\n};\x0d\n
code-source-info,0x3d2862584b6,16,3546,3658,C0O3565C6O3601C22O3607C27O3601C29O3657,,
code-creation,LazyCompile,10,150531,0x3d286258ed6,17,isPathSeparator node:path:52:25,0x3a93d9ccf90,~
code-source-info,0x3d286258ed6,41,1794,1876,C0O1806C2O1822C4O1818C11O1853C13O1849C16O1873,,
code-creation,LazyCompile,10,150566,0x3d286258fd6,35,isWindowsDeviceRoot node:path:60:29,0x3a93d9cd408,~
code-source-info,0x3d286258fd6,41,1991,2136,C0O2003C2O2019C4O2016C11O2047C13O2044C20O2087C22O2084C29O2115C31O2112C34O2133,,
code-creation,LazyCompile,10,150610,0x3d2862590f6,40,wrappedCwd node:internal/bootstrap/switches/does_own_process_state:124:20,0x233c003edd0,~
script-source,98,node:internal/bootstrap/switches/does_own_process_state,'use strict';\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\nprocess.abort = rawMethods.abort;\x0d\nprocess.umask = wrappedUmask;\x0d\nprocess.chdir = wrappedChdir;\x0d\nprocess.cwd = wrappedCwd;\x0d\n\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  const wrapped = wrapPosixCredentialSetters(credentials);\x0d\n\x0d\n  process.initgroups = wrapped.initgroups;\x0d\n  process.setgroups = wrapped.setgroups;\x0d\n  process.setegid = wrapped.setegid;\x0d\n  process.seteuid = wrapped.seteuid;\x0d\n  process.setgid = wrapped.setgid;\x0d\n  process.setuid = wrapped.setuid;\x0d\n}\x0d\n\x0d\n// ---- keep the attachment of the wrappers above so that it's easier to ----\x0d\n// ----              compare the setups side-by-side                    -----\x0d\n\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n\x0d\nfunction wrapPosixCredentialSetters(credentials) {\x0d\n  const {\x0d\n    codes: {\x0d\n      ERR_INVALID_ARG_TYPE\x2C\x0d\n      ERR_UNKNOWN_CREDENTIAL\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  const {\x0d\n    validateUint32\x0d\n  } = require('internal/validators');\x0d\n\x0d\n  const {\x0d\n    initgroups: _initgroups\x2C\x0d\n    setgroups: _setgroups\x2C\x0d\n    setegid: _setegid\x2C\x0d\n    seteuid: _seteuid\x2C\x0d\n    setgid: _setgid\x2C\x0d\n    setuid: _setuid\x0d\n  } = credentials;\x0d\n\x0d\n  function initgroups(user\x2C extraGroup) {\x0d\n    validateId(user\x2C 'user');\x0d\n    validateId(extraGroup\x2C 'extraGroup');\x0d\n    // Result is 0 on success\x2C 1 if user is unknown\x2C 2 if group is unknown.\x0d\n    const result = _initgroups(user\x2C extraGroup);\x0d\n    if (result === 1) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('User'\x2C user);\x0d\n    } else if (result === 2) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C extraGroup);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function setgroups(groups) {\x0d\n    validateArray(groups\x2C 'groups');\x0d\n    for (let i = 0; i < groups.length; i++) {\x0d\n      validateId(groups[i]\x2C `groups[${i}]`);\x0d\n    }\x0d\n    // Result is 0 on success. A positive integer indicates that the\x0d\n    // corresponding group was not found.\x0d\n    const result = _setgroups(groups);\x0d\n    if (result > 0) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C groups[result - 1]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function wrapIdSetter(type\x2C method) {\x0d\n    return function(id) {\x0d\n      validateId(id\x2C 'id');\x0d\n      if (typeof id === 'number') id |= 0;\x0d\n      // Result is 0 on success\x2C 1 if credential is unknown.\x0d\n      const result = method(id);\x0d\n      if (result === 1) {\x0d\n        throw new ERR_UNKNOWN_CREDENTIAL(type\x2C id);\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function validateId(id\x2C name) {\x0d\n    if (typeof id === 'number') {\x0d\n      validateUint32(id\x2C name);\x0d\n    } else if (typeof id !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C ['number'\x2C 'string']\x2C id);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    initgroups\x2C\x0d\n    setgroups\x2C\x0d\n    setegid: wrapIdSetter('Group'\x2C _setegid)\x2C\x0d\n    seteuid: wrapIdSetter('User'\x2C _seteuid)\x2C\x0d\n    setgid: wrapIdSetter('Group'\x2C _setgid)\x2C\x0d\n    setuid: wrapIdSetter('User'\x2C _setuid)\x0d\n  };\x0d\n}\x0d\n\x0d\n// Cache the working directory to prevent lots of lookups. If the working\x0d\n// directory is changed by `chdir`\x2C it'll be updated.\x0d\nlet cachedCwd = '';\x0d\n\x0d\nfunction wrappedChdir(directory) {\x0d\n  validateString(directory\x2C 'directory');\x0d\n  rawMethods.chdir(directory);\x0d\n  // Mark cache that it requires an update.\x0d\n  cachedCwd = '';\x0d\n}\x0d\n\x0d\nfunction wrappedUmask(mask) {\x0d\n  if (mask !== undefined) {\x0d\n    mask = parseFileMode(mask\x2C 'mask');\x0d\n  }\x0d\n  return rawMethods.umask(mask);\x0d\n}\x0d\n\x0d\nfunction wrappedCwd() {\x0d\n  if (cachedCwd === '')\x0d\n    cachedCwd = rawMethods.cwd();\x0d\n  return cachedCwd;\x0d\n}\x0d\n
code-source-info,0x3d2862590f6,98,3464,3552,C0O3472C7O3486C12O3499C17O3522C22O3522C29O3509C35O3532C39O3549,,
code-creation,LazyCompile,10,150861,0x3d28625975e,442,normalizeString node:path:66:25,0x3a93d9cd458,~
code-source-info,0x3d28625975e
code-creation,LazyCompile,10,151030,0x3d286259e16,37,initializeGlobalConsole node:internal/console/constructor:687:33,0x233c002a5e0,~
script-source,37,node:internal/console/constructor,'use strict';\x0d\n\x0d\n// The Console constructor is not actually used to construct the global\x0d\n// console. It's exported for backwards compatibility.\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  NumberPrototypeToFixed\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectValues\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypePadStart\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolHasInstance\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { trace } = internalBinding('trace_events');\x0d\nconst {\x0d\n  isStackOverflowError\x2C\x0d\n  codes: {\x0d\n    ERR_CONSOLE_WRITABLE_STREAM\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst { previewEntries } = internalBinding('util');\x0d\nconst { Buffer: { isBuffer } } = require('buffer');\x0d\nconst {\x0d\n  inspect\x2C\x0d\n  formatWithOptions\x0d\n} = require('internal/util/inspect');\x0d\nconst {\x0d\n  isTypedArray\x2C isSet\x2C isMap\x2C isSetIterator\x2C isMapIterator\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  CHAR_LOWERCASE_B: kTraceBegin\x2C\x0d\n  CHAR_LOWERCASE_E: kTraceEnd\x2C\x0d\n  CHAR_LOWERCASE_N: kTraceInstant\x2C\x0d\n  CHAR_UPPERCASE_C: kTraceCount\x2C\x0d\n} = require('internal/constants');\x0d\nconst kCounts = Symbol('counts');\x0d\n\x0d\nconst kTraceConsoleCategory = 'node\x2Cnode.console';\x0d\n\x0d\nconst kSecond = 1000;\x0d\nconst kMinute = 60 * kSecond;\x0d\nconst kHour = 60 * kMinute;\x0d\nconst kMaxGroupIndentation = 1000;\x0d\n\x0d\n// Lazy loaded for startup performance.\x0d\nlet cliTable;\x0d\n\x0d\n// Track amount of indentation required via `console.group()`.\x0d\nconst kGroupIndent = Symbol('kGroupIndent');\x0d\nconst kGroupIndentationWidth = Symbol('kGroupIndentWidth');\x0d\nconst kFormatForStderr = Symbol('kFormatForStderr');\x0d\nconst kFormatForStdout = Symbol('kFormatForStdout');\x0d\nconst kGetInspectOptions = Symbol('kGetInspectOptions');\x0d\nconst kColorMode = Symbol('kColorMode');\x0d\nconst kIsConsole = Symbol('kIsConsole');\x0d\nconst kWriteToConsole = Symbol('kWriteToConsole');\x0d\nconst kBindProperties = Symbol('kBindProperties');\x0d\nconst kBindStreamsEager = Symbol('kBindStreamsEager');\x0d\nconst kBindStreamsLazy = Symbol('kBindStreamsLazy');\x0d\nconst kUseStdout = Symbol('kUseStdout');\x0d\nconst kUseStderr = Symbol('kUseStderr');\x0d\n\x0d\nconst optionsMap = new SafeWeakMap();\x0d\n\x0d\nfunction Console(options /* or: stdout\x2C stderr\x2C ignoreErrors = true */) {\x0d\n  // We have to test new.target here to see if this function is called\x0d\n  // with new\x2C because we need to define a custom instanceof to accommodate\x0d\n  // the global console.\x0d\n  if (new.target === undefined) {\x0d\n    return ReflectConstruct(Console\x2C arguments);\x0d\n  }\x0d\n\x0d\n  if (!options || typeof options.write === 'function') {\x0d\n    options = {\x0d\n      stdout: options\x2C\x0d\n      stderr: arguments[1]\x2C\x0d\n      ignoreErrors: arguments[2]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    stdout\x2C\x0d\n    stderr = stdout\x2C\x0d\n    ignoreErrors = true\x2C\x0d\n    colorMode = 'auto'\x2C\x0d\n    inspectOptions\x2C\x0d\n    groupIndentation\x2C\x0d\n  } = options;\x0d\n\x0d\n  if (!stdout || typeof stdout.write !== 'function') {\x0d\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stdout');\x0d\n  }\x0d\n  if (!stderr || typeof stderr.write !== 'function') {\x0d\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stderr');\x0d\n  }\x0d\n\x0d\n  if (typeof colorMode !== 'boolean' && colorMode !== 'auto')\x0d\n    throw new ERR_INVALID_ARG_VALUE('colorMode'\x2C colorMode);\x0d\n\x0d\n  if (groupIndentation !== undefined) {\x0d\n    validateInteger(groupIndentation\x2C 'groupIndentation'\x2C\x0d\n                    0\x2C kMaxGroupIndentation);\x0d\n  }\x0d\n\x0d\n  if (inspectOptions !== undefined) {\x0d\n    validateObject(inspectOptions\x2C 'options.inspectOptions');\x0d\n\x0d\n    if (inspectOptions.colors !== undefined &&\x0d\n        options.colorMode !== undefined) {\x0d\n      throw new ERR_INCOMPATIBLE_OPTION_PAIR(\x0d\n        'options.inspectOptions.color'\x2C 'colorMode');\x0d\n    }\x0d\n    optionsMap.set(this\x2C inspectOptions);\x0d\n  }\x0d\n\x0d\n  // Bind the prototype functions to this Console instance\x0d\n  ArrayPrototypeForEach(ObjectKeys(Console.prototype)\x2C (key) => {\x0d\n    // We have to bind the methods grabbed from the instance instead of from\x0d\n    // the prototype so that users extending the Console can override them\x0d\n    // from the prototype chain of the subclass.\x0d\n    this[key] = FunctionPrototypeBind(this[key]\x2C this);\x0d\n    ObjectDefineProperty(this[key]\x2C 'name'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: key\x0d\n    });\x0d\n  });\x0d\n\x0d\n  this[kBindStreamsEager](stdout\x2C stderr);\x0d\n  this[kBindProperties](ignoreErrors\x2C colorMode\x2C groupIndentation);\x0d\n}\x0d\n\x0d\nconst consolePropAttributes = {\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x0d\n};\x0d\n\x0d\n// Fixup global.console instanceof global.console.Console\x0d\nObjectDefineProperty(Console\x2C SymbolHasInstance\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value(instance) {\x0d\n    return instance[kIsConsole];\x0d\n  }\x0d\n});\x0d\n\x0d\nconst kColorInspectOptions = { colors: true };\x0d\nconst kNoColorInspectOptions = {};\x0d\n\x0d\nObjectDefineProperties(Console.prototype\x2C {\x0d\n  [kBindStreamsEager]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    // Eager version for the Console constructor\x0d\n    value: function(stdout\x2C stderr) {\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdout': { __proto__: null\x2C ...consolePropAttributes\x2C value: stdout }\x2C\x0d\n        '_stderr': { __proto__: null\x2C ...consolePropAttributes\x2C value: stderr }\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n  [kBindStreamsLazy]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    // Lazily load the stdout and stderr from an object so we don't\x0d\n    // create the stdio streams when they are not even accessed\x0d\n    value: function(object) {\x0d\n      let stdout;\x0d\n      let stderr;\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdout': {\x0d\n          __proto__: null\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          get() {\x0d\n            if (!stdout) stdout = object.stdout;\x0d\n            return stdout;\x0d\n          }\x2C\x0d\n          set(value) { stdout = value; }\x0d\n        }\x2C\x0d\n        '_stderr': {\x0d\n          __proto__: null\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          get() {\x0d\n            if (!stderr) { stderr = object.stderr; }\x0d\n            return stderr;\x0d\n          }\x2C\x0d\n          set(value) { stderr = value; }\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n  [kBindProperties]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(ignoreErrors\x2C colorMode\x2C groupIndentation = 2) {\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdoutErrorHandler': {\x0d\n          __proto__: null\x2C\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: createWriteErrorHandler(this\x2C kUseStdout)\x0d\n        }\x2C\x0d\n        '_stderrErrorHandler': {\x0d\n          ...consolePropAttributes\x2C\x0d\n          __proto__: null\x2C\x0d\n          value: createWriteErrorHandler(this\x2C kUseStderr)\x0d\n        }\x2C\x0d\n        '_ignoreErrors': {\x0d\n          __proto__: null\x2C\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: Boolean(ignoreErrors)\x0d\n        }\x2C\x0d\n        '_times': { __proto__: null\x2C ...consolePropAttributes\x2C value: new SafeMap() }\x2C\x0d\n        // Corresponds to https://console.spec.whatwg.org/#count-map\x0d\n        [kCounts]: { __proto__: null\x2C ...consolePropAttributes\x2C value: new SafeMap() }\x2C\x0d\n        [kColorMode]: { __proto__: null\x2C ...consolePropAttributes\x2C value: colorMode }\x2C\x0d\n        [kIsConsole]: { __proto__: null\x2C ...consolePropAttributes\x2C value: true }\x2C\x0d\n        [kGroupIndent]: { __proto__: null\x2C ...consolePropAttributes\x2C value: '' }\x2C\x0d\n        [kGroupIndentationWidth]: {\x0d\n          __proto__: null\x2C\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: groupIndentation\x0d\n        }\x2C\x0d\n        [SymbolToStringTag]: {\x0d\n          __proto__: null\x2C\x0d\n          writable: false\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          value: 'console'\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n  [kWriteToConsole]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(streamSymbol\x2C string) {\x0d\n      const ignoreErrors = this._ignoreErrors;\x0d\n      const groupIndent = this[kGroupIndent];\x0d\n\x0d\n      const useStdout = streamSymbol === kUseStdout;\x0d\n      const stream = useStdout ? this._stdout : this._stderr;\x0d\n      const errorHandler = useStdout ?\x0d\n        this._stdoutErrorHandler : this._stderrErrorHandler;\x0d\n\x0d\n      if (groupIndent.length !== 0) {\x0d\n        if (StringPrototypeIncludes(string\x2C '\\n')) {\x0d\n          string = RegExpPrototypeSymbolReplace(/\\n/g\x2C string\x2C `\\n${groupIndent}`);\x0d\n        }\x0d\n        string = groupIndent + string;\x0d\n      }\x0d\n      string += '\\n';\x0d\n\x0d\n      if (ignoreErrors === false) return stream.write(string);\x0d\n\x0d\n      // There may be an error occurring synchronously (e.g. for files or TTYs\x0d\n      // on POSIX systems) or asynchronously (e.g. pipes on POSIX systems)\x2C so\x0d\n      // handle both situations.\x0d\n      try {\x0d\n        // Add and later remove a noop error handler to catch synchronous\x0d\n        // errors.\x0d\n        if (stream.listenerCount('error') === 0)\x0d\n          stream.once('error'\x2C noop);\x0d\n\x0d\n        stream.write(string\x2C errorHandler);\x0d\n      } catch (e) {\x0d\n        // Console is a debugging utility\x2C so it swallowing errors is not\x0d\n        // desirable even in edge cases such as low stack space.\x0d\n        if (isStackOverflowError(e))\x0d\n          throw e;\x0d\n        // Sorry\x2C there's no proper way to pass along the error here.\x0d\n      } finally {\x0d\n        stream.removeListener('error'\x2C noop);\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n  [kGetInspectOptions]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(stream) {\x0d\n      let color = this[kColorMode];\x0d\n      if (color === 'auto') {\x0d\n        color = stream.isTTY && (\x0d\n          typeof stream.getColorDepth === 'function' ?\x0d\n            stream.getColorDepth() > 2 : true);\x0d\n      }\x0d\n\x0d\n      const options = optionsMap.get(this);\x0d\n      if (options) {\x0d\n        if (options.colors === undefined) {\x0d\n          options.colors = color;\x0d\n        }\x0d\n        return options;\x0d\n      }\x0d\n\x0d\n      return color ? kColorInspectOptions : kNoColorInspectOptions;\x0d\n    }\x0d\n  }\x2C\x0d\n  [kFormatForStdout]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(args) {\x0d\n      const opts = this[kGetInspectOptions](this._stdout);\x0d\n      ArrayPrototypeUnshift(args\x2C opts);\x0d\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\x0d\n    }\x0d\n  }\x2C\x0d\n  [kFormatForStderr]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(args) {\x0d\n      const opts = this[kGetInspectOptions](this._stderr);\x0d\n      ArrayPrototypeUnshift(args\x2C opts);\x0d\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\x0d\n    }\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Make a function that can serve as the callback passed to `stream.write()`.\x0d\nfunction createWriteErrorHandler(instance\x2C streamSymbol) {\x0d\n  return (err) => {\x0d\n    // This conditional evaluates to true if and only if there was an error\x0d\n    // that was not already emitted (which happens when the _write callback\x0d\n    // is invoked asynchronously).\x0d\n    const stream = streamSymbol === kUseStdout ?\x0d\n      instance._stdout : instance._stderr;\x0d\n    if (err !== null && !stream._writableState.errorEmitted) {\x0d\n      // If there was an error\x2C it will be emitted on `stream` as\x0d\n      // an `error` event. Adding a `once` listener will keep that error\x0d\n      // from becoming an uncaught exception\x2C but since the handler is\x0d\n      // removed after the event\x2C non-console.* writes won't be affected.\x0d\n      // we are only adding noop if there is no one else listening for 'error'\x0d\n      if (stream.listenerCount('error') === 0) {\x0d\n        stream.once('error'\x2C noop);\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nconst consoleMethods = {\x0d\n  log(...args) {\x0d\n    this[kWriteToConsole](kUseStdout\x2C this[kFormatForStdout](args));\x0d\n  }\x2C\x0d\n\x0d\n\x0d\n  warn(...args) {\x0d\n    this[kWriteToConsole](kUseStderr\x2C this[kFormatForStderr](args));\x0d\n  }\x2C\x0d\n\x0d\n\x0d\n  dir(object\x2C options) {\x0d\n    this[kWriteToConsole](kUseStdout\x2C inspect(object\x2C {\x0d\n      customInspect: false\x2C\x0d\n      ...this[kGetInspectOptions](this._stdout)\x2C\x0d\n      ...options\x0d\n    }));\x0d\n  }\x2C\x0d\n\x0d\n  time(label = 'default') {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    if (this._times.has(label)) {\x0d\n      process.emitWarning(`Label '${label}' already exists for console.time()`);\x0d\n      return;\x0d\n    }\x0d\n    trace(kTraceBegin\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n    this._times.set(label\x2C process.hrtime());\x0d\n  }\x2C\x0d\n\x0d\n  timeEnd(label = 'default') {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    const found = timeLogImpl(this\x2C 'timeEnd'\x2C label);\x0d\n    trace(kTraceEnd\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n    if (found) {\x0d\n      this._times.delete(label);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  timeLog(label = 'default'\x2C ...data) {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    timeLogImpl(this\x2C 'timeLog'\x2C label\x2C data);\x0d\n    trace(kTraceInstant\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n  }\x2C\x0d\n\x0d\n  trace: function trace(...args) {\x0d\n    const err = {\x0d\n      name: 'Trace'\x2C\x0d\n      message: this[kFormatForStderr](args)\x0d\n    };\x0d\n    ErrorCaptureStackTrace(err\x2C trace);\x0d\n    this.error(err.stack);\x0d\n  }\x2C\x0d\n\x0d\n  assert(expression\x2C ...args) {\x0d\n    if (!expression) {\x0d\n      args[0] = `Assertion failed${args.length === 0 ? '' : `: ${args[0]}`}`;\x0d\n      // The arguments will be formatted in warn() again\x0d\n      ReflectApply(this.warn\x2C this\x2C args);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#clear\x0d\n  clear() {\x0d\n    // It only makes sense to clear if _stdout is a TTY.\x0d\n    // Otherwise\x2C do nothing.\x0d\n    if (this._stdout.isTTY && process.env.TERM !== 'dumb') {\x0d\n      // The require is here intentionally to avoid readline being\x0d\n      // required too early when console is first loaded.\x0d\n      const {\x0d\n        cursorTo\x2C\x0d\n        clearScreenDown\x2C\x0d\n      } = require('internal/readline/callbacks');\x0d\n      cursorTo(this._stdout\x2C 0\x2C 0);\x0d\n      clearScreenDown(this._stdout);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#count\x0d\n  count(label = 'default') {\x0d\n    // Ensures that label is a string\x2C and only things that can be\x0d\n    // coerced to strings. e.g. Symbol is not allowed\x0d\n    label = `${label}`;\x0d\n    const counts = this[kCounts];\x0d\n    let count = counts.get(label);\x0d\n    if (count === undefined)\x0d\n      count = 1;\x0d\n    else\x0d\n      count++;\x0d\n    counts.set(label\x2C count);\x0d\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C count);\x0d\n    this.log(`${label}: ${count}`);\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#countreset\x0d\n  countReset(label = 'default') {\x0d\n    const counts = this[kCounts];\x0d\n    if (!counts.has(label)) {\x0d\n      process.emitWarning(`Count for '${label}' does not exist`);\x0d\n      return;\x0d\n    }\x0d\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C 0);\x0d\n    counts.delete(`${label}`);\x0d\n  }\x2C\x0d\n\x0d\n  group(...data) {\x0d\n    if (data.length > 0) {\x0d\n      ReflectApply(this.log\x2C this\x2C data);\x0d\n    }\x0d\n    this[kGroupIndent] +=\x0d\n      StringPrototypeRepeat(' '\x2C this[kGroupIndentationWidth]);\x0d\n  }\x2C\x0d\n\x0d\n  groupEnd() {\x0d\n    this[kGroupIndent] = StringPrototypeSlice(\x0d\n      this[kGroupIndent]\x2C\x0d\n      0\x2C\x0d\n      this[kGroupIndent].length - this[kGroupIndentationWidth]\x0d\n    );\x0d\n  }\x2C\x0d\n\x0d\n  // https://console.spec.whatwg.org/#table\x0d\n  table(tabularData\x2C properties) {\x0d\n    if (properties !== undefined)\x0d\n      validateArray(properties\x2C 'properties');\x0d\n\x0d\n    if (tabularData === null || typeof tabularData !== 'object')\x0d\n      return this.log(tabularData);\x0d\n\x0d\n    cliTable ??= require('internal/cli_table');\x0d\n    const final = (k\x2C v) => this.log(cliTable(k\x2C v));\x0d\n\x0d\n    const _inspect = (v) => {\x0d\n      const depth = v !== null &&\x0d\n                    typeof v === 'object' &&\x0d\n                    !isArray(v) &&\x0d\n                    ObjectKeys(v).length > 2 ? -1 : 0;\x0d\n      const opt = {\x0d\n        depth\x2C\x0d\n        maxArrayLength: 3\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        ...this[kGetInspectOptions](this._stdout)\x0d\n      };\x0d\n      return inspect(v\x2C opt);\x0d\n    };\x0d\n    const getIndexArray = (length) => ArrayFrom(\x0d\n      { length }\x2C (_\x2C i) => _inspect(i));\x0d\n\x0d\n    const mapIter = isMapIterator(tabularData);\x0d\n    let isKeyValue = false;\x0d\n    let i = 0;\x0d\n    if (mapIter) {\x0d\n      const res = previewEntries(tabularData\x2C true);\x0d\n      tabularData = res[0];\x0d\n      isKeyValue = res[1];\x0d\n    }\x0d\n\x0d\n    if (isKeyValue || isMap(tabularData)) {\x0d\n      const keys = [];\x0d\n      const values = [];\x0d\n      let length = 0;\x0d\n      if (mapIter) {\x0d\n        for (; i < tabularData.length / 2; ++i) {\x0d\n          ArrayPrototypePush(keys\x2C _inspect(tabularData[i * 2]));\x0d\n          ArrayPrototypePush(values\x2C _inspect(tabularData[i * 2 + 1]));\x0d\n          length++;\x0d\n        }\x0d\n      } else {\x0d\n        for (const { 0: k\x2C 1: v } of tabularData) {\x0d\n          ArrayPrototypePush(keys\x2C _inspect(k));\x0d\n          ArrayPrototypePush(values\x2C _inspect(v));\x0d\n          length++;\x0d\n        }\x0d\n      }\x0d\n      return final([\x0d\n        iterKey\x2C keyKey\x2C valuesKey\x2C\x0d\n      ]\x2C [\x0d\n        getIndexArray(length)\x2C\x0d\n        keys\x2C\x0d\n        values\x2C\x0d\n      ]);\x0d\n    }\x0d\n\x0d\n    const setIter = isSetIterator(tabularData);\x0d\n    if (setIter)\x0d\n      tabularData = previewEntries(tabularData);\x0d\n\x0d\n    const setlike = setIter || mapIter || isSet(tabularData);\x0d\n    if (setlike) {\x0d\n      const values = [];\x0d\n      let length = 0;\x0d\n      for (const v of tabularData) {\x0d\n        ArrayPrototypePush(values\x2C _inspect(v));\x0d\n        length++;\x0d\n      }\x0d\n      return final([iterKey\x2C valuesKey]\x2C [getIndexArray(length)\x2C values]);\x0d\n    }\x0d\n\x0d\n    const map = ObjectCreate(null);\x0d\n    let hasPrimitives = false;\x0d\n    const valuesKeyArray = [];\x0d\n    const indexKeyArray = ObjectKeys(tabularData);\x0d\n\x0d\n    for (; i < indexKeyArray.length; i++) {\x0d\n      const item = tabularData[indexKeyArray[i]];\x0d\n      const primitive = item === null ||\x0d\n          (typeof item !== 'function' && typeof item !== 'object');\x0d\n      if (properties === undefined && primitive) {\x0d\n        hasPrimitives = true;\x0d\n        valuesKeyArray[i] = _inspect(item);\x0d\n      } else {\x0d\n        const keys = properties || ObjectKeys(item);\x0d\n        for (const key of keys) {\x0d\n          map[key] ??= [];\x0d\n          if ((primitive && properties) ||\x0d\n               !ObjectPrototypeHasOwnProperty(item\x2C key))\x0d\n            map[key][i] = '';\x0d\n          else\x0d\n            map[key][i] = _inspect(item[key]);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    const keys = ObjectKeys(map);\x0d\n    const values = ObjectValues(map);\x0d\n    if (hasPrimitives) {\x0d\n      ArrayPrototypePush(keys\x2C valuesKey);\x0d\n      ArrayPrototypePush(values\x2C valuesKeyArray);\x0d\n    }\x0d\n    ArrayPrototypeUnshift(keys\x2C indexKey);\x0d\n    ArrayPrototypeUnshift(values\x2C indexKeyArray);\x0d\n\x0d\n    return final(keys\x2C values);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\n// Returns true if label was found\x0d\nfunction timeLogImpl(self\x2C name\x2C label\x2C data) {\x0d\n  const time = self._times.get(label);\x0d\n  if (time === undefined) {\x0d\n    process.emitWarning(`No such label '${label}' for console.${name}()`);\x0d\n    return false;\x0d\n  }\x0d\n  const duration = process.hrtime(time);\x0d\n  const ms = duration[0] * 1000 + duration[1] / 1e6;\x0d\n\x0d\n  const formatted = formatTime(ms);\x0d\n\x0d\n  if (data === undefined) {\x0d\n    self.log('%s: %s'\x2C label\x2C formatted);\x0d\n  } else {\x0d\n    self.log('%s: %s'\x2C label\x2C formatted\x2C ...new SafeArrayIterator(data));\x0d\n  }\x0d\n  return true;\x0d\n}\x0d\n\x0d\nfunction pad(value) {\x0d\n  return StringPrototypePadStart(`${value}`\x2C 2\x2C '0');\x0d\n}\x0d\n\x0d\nfunction formatTime(ms) {\x0d\n  let hours = 0;\x0d\n  let minutes = 0;\x0d\n  let seconds = 0;\x0d\n\x0d\n  if (ms >= kSecond) {\x0d\n    if (ms >= kMinute) {\x0d\n      if (ms >= kHour) {\x0d\n        hours = MathFloor(ms / kHour);\x0d\n        ms = ms % kHour;\x0d\n      }\x0d\n      minutes = MathFloor(ms / kMinute);\x0d\n      ms = ms % kMinute;\x0d\n    }\x0d\n    seconds = ms / kSecond;\x0d\n  }\x0d\n\x0d\n  if (hours !== 0 || minutes !== 0) {\x0d\n    ({ 0: seconds\x2C 1: ms } = StringPrototypeSplit(\x0d\n      NumberPrototypeToFixed(seconds\x2C 3)\x2C\x0d\n      '.'\x0d\n    ));\x0d\n    const res = hours !== 0 ? `${hours}:${pad(minutes)}` : minutes;\x0d\n    return `${res}:${pad(seconds)}.${ms} (${hours !== 0 ? 'h:m' : ''}m:ss.mmm)`;\x0d\n  }\x0d\n\x0d\n  if (seconds !== 0) {\x0d\n    return `${NumberPrototypeToFixed(seconds\x2C 3)}s`;\x0d\n  }\x0d\n\x0d\n  return `${Number(NumberPrototypeToFixed(ms\x2C 3))}ms`;\x0d\n}\x0d\n\x0d\nconst keyKey = 'Key';\x0d\nconst valuesKey = 'Values';\x0d\nconst indexKey = '(index)';\x0d\nconst iterKey = '(iteration index)';\x0d\n\x0d\nconst isArray = (v) => ArrayIsArray(v) || isTypedArray(v) || isBuffer(v);\x0d\n\x0d\nfunction noop() {}\x0d\n\x0d\nfor (const method of ReflectOwnKeys(consoleMethods))\x0d\n  Console.prototype[method] = consoleMethods[method];\x0d\n\x0d\nConsole.prototype.debug = Console.prototype.log;\x0d\nConsole.prototype.info = Console.prototype.log;\x0d\nConsole.prototype.dirxml = Console.prototype.log;\x0d\nConsole.prototype.error = Console.prototype.warn;\x0d\nConsole.prototype.groupCollapsed = Console.prototype.group;\x0d\n\x0d\nfunction initializeGlobalConsole(globalConsole) {\x0d\n  globalConsole[kBindStreamsLazy](process);\x0d\n  globalConsole[kBindProperties](true\x2C 'auto');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Console\x2C\x0d\n  kBindStreamsLazy\x2C\x0d\n  kBindProperties\x2C\x0d\n  initializeGlobalConsole\x2C\x0d\n  formatTime // exported for tests\x0d\n};\x0d\n
code-source-info,0x3d286259e16,37,21084,21198,C0O21105C2O21119C4O21118C11O21136C16O21150C18O21164C20O21163C29O21180C36O21197,,
code-creation,LazyCompile,10,151906,0x3d28625b7f6,94,value node:internal/console/constructor:200:20,0x233c0029b60,~
code-source-info,0x3d28625b7f6,37,5921,6580,C0O5921C15O5943C16O5943C18O5962C19O5962C21O5977C33O6028C38O6130C46O6241C60O6304C65O6406C73O6521C87O5977C93O6579,,
code-creation,LazyCompile,10,152010,0x3d28625be46,414,value node:internal/console/constructor:230:20,0x233c0029be8,~
code-source-info,0x3d28625be46,37,6684,8114,C17O6741C27O6804C34O6848C52O6919C55O6889C73O6991C86O7090C89O7060C104O7140C111O7184C126O7225C129O7225C144O7278C151O7300C166O7334C169O7330C187O7427C191O7437C198O7459C213O7493C216O7489C235O7516C239O7529C246O7551C261O7581C275O7604C279O7617C286O7639C300O7669C314O7687C318O7702C325O7724C340O7754C354O7770C358O7795C365O7839C380O7880C394O7919C398O7939C407O6741C413O8113,,
code-creation,LazyCompile,10,152087,0x3d28625c2b6,18,createWriteErrorHandler node:internal/console/constructor:354:33,0x233c0029e90,~
code-source-info,0x3d28625c2b6,37,10994,11869,C0O10994C13O11024C17O11866,,
code-creation,LazyCompile,10,152174,0x3d28625c496,27,SafeMap node:internal/per_context/primordials:366:16,0x56f5c8aa58,~
script-source,6,node:internal/per_context/primordials,'use strict';\x0d\n\x0d\n/* eslint-disable node-core/prefer-primordials */\x0d\n\x0d\n// This file subclasses and stores the JS builtins that come from the VM\x0d\n// so that Node.js's builtin modules do not need to later look these up from\x0d\n// the global proxy\x2C which can be mutated by users.\x0d\n\x0d\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\x0d\n// benchmark all changes made in performance-sensitive areas of the codebase.\x0d\n// See: https://github.com/nodejs/node/pull/38248\x0d\n\x0d\nconst {\x0d\n  defineProperty: ReflectDefineProperty\x2C\x0d\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ownKeys: ReflectOwnKeys\x2C\x0d\n} = Reflect;\x0d\n\x0d\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\x0d\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.call` after it may have been mutated by users.\x0d\nconst { apply\x2C bind\x2C call } = Function.prototype;\x0d\nconst uncurryThis = bind.bind(call);\x0d\nprimordials.uncurryThis = uncurryThis;\x0d\n\x0d\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\x0d\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.apply` after it may have been mutated by users.\x0d\nconst applyBind = bind.bind(apply);\x0d\nprimordials.applyBind = applyBind;\x0d\n\x0d\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\x0d\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\x0d\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\x0d\n// destructuring.\x0d\nconst varargsMethods = [\x0d\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\x0d\n  // on its own for arrays and array-likes with a truthy\x0d\n  // @@isConcatSpreadable symbol property.\x0d\n  'ArrayOf'\x2C\x0d\n  'ArrayPrototypePush'\x2C\x0d\n  'ArrayPrototypeUnshift'\x2C\x0d\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\x0d\n  // and 'FunctionPrototypeApply'.\x0d\n  'MathHypot'\x2C\x0d\n  'MathMax'\x2C\x0d\n  'MathMin'\x2C\x0d\n  'StringPrototypeConcat'\x2C\x0d\n  'TypedArrayOf'\x2C\x0d\n];\x0d\n\x0d\nfunction getNewKey(key) {\x0d\n  return typeof key === 'symbol' ?\x0d\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\x0d\n    `${key[0].toUpperCase()}${key.slice(1)}`;\x0d\n}\x0d\n\x0d\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\x0d\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: uncurryThis(get)\x2C\x0d\n    enumerable\x0d\n  });\x0d\n  if (set !== undefined) {\x0d\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: uncurryThis(set)\x2C\x0d\n      enumerable\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          __proto__: null\x2C\x0d\n          // `src` is bound as the `this` so that the static `this` points\x0d\n          // to the object it was defined on\x2C\x0d\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\x0d\n          value: applyBind(desc.value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = value.bind(src);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          __proto__: null\x2C\x0d\n          value: applyBind(value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPrototype(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = uncurryThis(value);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          __proto__: null\x2C\x0d\n          value: applyBind(value)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Create copies of configurable value properties of the global object\x0d\n[\x0d\n  'Proxy'\x2C\x0d\n  'globalThis'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  primordials[name] = globalThis[name];\x0d\n});\x0d\n\x0d\n// Create copies of URI handling functions\x0d\n[\x0d\n  decodeURI\x2C\x0d\n  decodeURIComponent\x2C\x0d\n  encodeURI\x2C\x0d\n  encodeURIComponent\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of legacy functions\x0d\n[\x0d\n  escape\x2C\x0d\n  eval\x2C\x0d\n  unescape\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of the namespace objects\x0d\n[\x0d\n  'JSON'\x2C\x0d\n  'Math'\x2C\x0d\n  'Proxy'\x2C\x0d\n  'Reflect'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  copyPropsRenamed(globalThis[name]\x2C primordials\x2C name);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects\x0d\n[\x0d\n  'AggregateError'\x2C\x0d\n  'Array'\x2C\x0d\n  'ArrayBuffer'\x2C\x0d\n  'BigInt'\x2C\x0d\n  'BigInt64Array'\x2C\x0d\n  'BigUint64Array'\x2C\x0d\n  'Boolean'\x2C\x0d\n  'DataView'\x2C\x0d\n  'Date'\x2C\x0d\n  'Error'\x2C\x0d\n  'EvalError'\x2C\x0d\n  'FinalizationRegistry'\x2C\x0d\n  'Float32Array'\x2C\x0d\n  'Float64Array'\x2C\x0d\n  'Function'\x2C\x0d\n  'Int16Array'\x2C\x0d\n  'Int32Array'\x2C\x0d\n  'Int8Array'\x2C\x0d\n  'Map'\x2C\x0d\n  'Number'\x2C\x0d\n  'Object'\x2C\x0d\n  'RangeError'\x2C\x0d\n  'ReferenceError'\x2C\x0d\n  'RegExp'\x2C\x0d\n  'Set'\x2C\x0d\n  'String'\x2C\x0d\n  'Symbol'\x2C\x0d\n  'SyntaxError'\x2C\x0d\n  'TypeError'\x2C\x0d\n  'URIError'\x2C\x0d\n  'Uint16Array'\x2C\x0d\n  'Uint32Array'\x2C\x0d\n  'Uint8Array'\x2C\x0d\n  'Uint8ClampedArray'\x2C\x0d\n  'WeakMap'\x2C\x0d\n  'WeakRef'\x2C\x0d\n  'WeakSet'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamed(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects that require a valid `this` to call\x0d\n// static methods.\x0d\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\x0d\n[\x0d\n  'Promise'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of abstract intrinsic objects that are not directly exposed\x0d\n// on the global object.\x0d\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\x0d\n[\x0d\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\x0d\n  { name: 'ArrayIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n  { name: 'StringIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n].forEach(({ name\x2C original }) => {\x0d\n  primordials[name] = original;\x0d\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\x0d\n  // as they need a subclass constructor as the receiver:\x0d\n  copyPrototype(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n/* eslint-enable node-core/prefer-primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  FinalizationRegistry\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Map\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  Set\x2C\x0d\n  SymbolIterator\x2C\x0d\n  WeakMap\x2C\x0d\n  WeakRef\x2C\x0d\n  WeakSet\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Because these functions are used by `makeSafe`\x2C which is exposed\x0d\n// on the `primordials` object\x2C it's important to use const references\x0d\n// to the primordials that they use:\x0d\nconst createSafeIterator = (factory\x2C next) => {\x0d\n  class SafeIterator {\x0d\n    constructor(iterable) {\x0d\n      this._iterator = factory(iterable);\x0d\n    }\x0d\n    next() {\x0d\n      return next(this._iterator);\x0d\n    }\x0d\n    [SymbolIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x0d\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\x0d\n  ObjectFreeze(SafeIterator.prototype);\x0d\n  ObjectFreeze(SafeIterator);\x0d\n  return SafeIterator;\x0d\n};\x0d\n\x0d\nprimordials.SafeArrayIterator = createSafeIterator(\x0d\n  primordials.ArrayPrototypeSymbolIterator\x2C\x0d\n  primordials.ArrayIteratorPrototypeNext\x0d\n);\x0d\nprimordials.SafeStringIterator = createSafeIterator(\x0d\n  primordials.StringPrototypeSymbolIterator\x2C\x0d\n  primordials.StringIteratorPrototypeNext\x0d\n);\x0d\n\x0d\nconst copyProps = (src\x2C dest) => {\x0d\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\x0d\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\x0d\n      ReflectDefineProperty(\x0d\n        dest\x2C\x0d\n        key\x2C\x0d\n        { __proto__: null\x2C ...ReflectGetOwnPropertyDescriptor(src\x2C key) });\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n/**\x0d\n * @type {typeof primordials.makeSafe}\x0d\n */\x0d\nconst makeSafe = (unsafe\x2C safe) => {\x0d\n  if (SymbolIterator in unsafe.prototype) {\x0d\n    const dummy = new unsafe();\x0d\n    let next; // We can reuse the same `next` method.\x0d\n\x0d\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\x0d\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\x0d\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\x0d\n        if (\x0d\n          typeof desc.value === 'function' &&\x0d\n          desc.value.length === 0 &&\x0d\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\x0d\n        ) {\x0d\n          const createIterator = uncurryThis(desc.value);\x0d\n          next ??= uncurryThis(createIterator(dummy).next);\x0d\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\x0d\n          desc.value = function() {\x0d\n            return new SafeIterator(this);\x0d\n          };\x0d\n        }\x0d\n        ReflectDefineProperty(safe.prototype\x2C key\x2C { __proto__: null\x2C ...desc });\x0d\n      }\x0d\n    });\x0d\n  } else {\x0d\n    copyProps(unsafe.prototype\x2C safe.prototype);\x0d\n  }\x0d\n  copyProps(unsafe\x2C safe);\x0d\n\x0d\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\x0d\n  ObjectFreeze(safe.prototype);\x0d\n  ObjectFreeze(safe);\x0d\n  return safe;\x0d\n};\x0d\nprimordials.makeSafe = makeSafe;\x0d\n\x0d\n// Subclass the constructors because we need to use their prototype\x0d\n// methods later.\x0d\n// Defining the `constructor` is necessary here to avoid the default\x0d\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\x0d\nprimordials.SafeMap = makeSafe(\x0d\n  Map\x2C\x0d\n  class SafeMap extends Map {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakMap = makeSafe(\x0d\n  WeakMap\x2C\x0d\n  class SafeWeakMap extends WeakMap {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeSet = makeSafe(\x0d\n  Set\x2C\x0d\n  class SafeSet extends Set {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakSet = makeSafe(\x0d\n  WeakSet\x2C\x0d\n  class SafeWeakSet extends WeakSet {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeFinalizationRegistry = makeSafe(\x0d\n  FinalizationRegistry\x2C\x0d\n  class SafeFinalizationRegistry extends FinalizationRegistry {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(cleanupCallback) { super(cleanupCallback); }\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakRef = makeSafe(\x0d\n  WeakRef\x2C\x0d\n  class SafeWeakRef extends WeakRef {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(target) { super(target); }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst SafePromise = makeSafe(\x0d\n  Promise\x2C\x0d\n  class SafePromise extends Promise {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(executor) { super(executor); }\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.PromisePrototypeCatch = (thisPromise\x2C onRejected) =>\x0d\n  PromisePrototypeThen(thisPromise\x2C undefined\x2C onRejected);\x0d\n\x0d\n/**\x0d\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\x0d\n * rejected). The resolved value cannot be modified from the callback.\x0d\n * Prefer using async functions when possible.\x0d\n * @param {Promise<any>} thisPromise\x0d\n * @param {() => void) | undefined | null} onFinally The callback to execute\x0d\n *        when the Promise is settled (fulfilled or rejected).\x0d\n * @returns {Promise} A Promise for the completion of the callback.\x0d\n */\x0d\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\x0d\n      .finally(onFinally)\x0d\n      .then(a\x2C b)\x0d\n  );\x0d\n\x0d\nprimordials.AsyncIteratorPrototype =\x0d\n  primordials.ReflectGetPrototypeOf(\x0d\n    primordials.ReflectGetPrototypeOf(\x0d\n      async function* () {}).prototype);\x0d\n\x0d\nconst arrayToSafePromiseIterable = (promises\x2C mapFn) =>\x0d\n  new primordials.SafeArrayIterator(\x0d\n    ArrayPrototypeMap(\x0d\n      promises\x2C\x0d\n      (promise\x2C i) =>\x0d\n        new SafePromise((a\x2C b) => PromisePrototypeThen(mapFn == null ? promise : mapFn(promise\x2C i)\x2C a\x2C b))\x0d\n    )\x0d\n  );\x0d\n\x0d\n/**\x0d\n * @param {Promise<any>[]} promises\x0d\n * @param {(v: Promise<any>\x2C k: number) => Promise<any>} [mapFn]\x0d\n * @returns {Promise<any[]>}\x0d\n */\x0d\nprimordials.SafePromiseAll = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.all(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x0d\n  );\x0d\n\x0d\n/**\x0d\n * @param {Promise<any>[]} promises\x0d\n * @param {(v: Promise<any>\x2C k: number) => Promise<any>} [mapFn]\x0d\n * @returns {Promise<PromiseSettledResult<any>[]>}\x0d\n */\x0d\nprimordials.SafePromiseAllSettled = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.allSettled(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x0d\n  );\x0d\n\x0d\n/**\x0d\n * @param {Promise<any>[]} promises\x0d\n * @param {(v: Promise<any>\x2C k: number) => Promise<any>} [mapFn]\x0d\n * @returns {Promise<any>}\x0d\n */\x0d\nprimordials.SafePromiseAny = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.any(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x0d\n  );\x0d\n\x0d\n/**\x0d\n * @param {Promise<any>[]} promises\x0d\n * @param {(v: Promise<any>\x2C k: number) => Promise<any>} [mapFn]\x0d\n * @returns {Promise<any>}\x0d\n */\x0d\nprimordials.SafePromiseRace = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.race(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x0d\n  );\x0d\n\x0d\n\x0d\nObjectSetPrototypeOf(primordials\x2C null);\x0d\nObjectFreeze(primordials);\x0d\n
code-source-info,0x3d28625c496,6,10966,10983,C3O10972C7O10978C11O10972C26O10982,,
code-creation,LazyCompile,10,152803,0x3d28625d5a6,63,addReadOnlyProcessAlias node:internal/bootstrap/pre_execution:155:33,0x3d28624cb60,~
code-source-info,0x3d28625d5a6,100,5153,5412,C16O5206C21O5206C26O5233C28O5251C36O5281C43O5371C49O5390C56O5251C62O5411,,
code-creation,LazyCompile,10,152860,0x3d28625d70e,46,setupTraceCategoryState node:internal/bootstrap/pre_execution:318:33,0x3d28624cf20,~
code-source-info,0x3d28625d70e,100,10053,10284,C0O10096C6O10096C11O10069C16O10169C22O10169C27O10140C32O10212C35O10237C40O10212C45O10283,,
code-creation,LazyCompile,10,152909,0x3d28625d8a6,77,toggleTraceCategoryState node:internal/process/per_thread:397:34,0x233c0019070,~
code-source-info,0x3d28625d8a6,30,11761,12068,C0O11786C4O11816C10O11852C16O11884C21O11928C26O11929C33O11873C39O11955C44O11976C49O11976C55O11996C61O12029C66O12050C71O12050C76O12067,,
code-creation,LazyCompile,10,152945,0x3d28625da56,42,setupPerfHooks node:internal/bootstrap/pre_execution:324:24,0x3d28624cf70,~
code-source-info,0x3d28625da56,100,10311,10434,C0O10319C6O10319C11O10355C16O10356C20O10380C26O10380C31O10410C36O10411C41O10433,,
code-creation,LazyCompile,10,152989,0x3d28625dbd6,42,refreshTimeOrigin node:internal/perf/performance:217:27,0xa61436e900,~
script-source,76,node:internal/perf/performance,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  EventTarget\x2C\x0d\n} = require('internal/event_target');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst { markResourceTiming } = require('internal/perf/resource_timing');\x0d\n\x0d\nconst {\x0d\n  mark\x2C\x0d\n  measure\x2C\x0d\n  clearMarkTimings\x2C\x0d\n} = require('internal/perf/usertiming');\x0d\nconst {\x0d\n  clearEntriesFromBuffer\x2C\x0d\n  filterBufferMapByNameAndType\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nconst eventLoopUtilization = require('internal/perf/event_loop_utilization');\x0d\nconst nodeTiming = require('internal/perf/nodetiming');\x0d\nconst timerify = require('internal/perf/timerify');\x0d\nconst { customInspectSymbol: kInspect } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst {\x0d\n  getTimeOriginTimestamp\x0d\n} = internalBinding('performance');\x0d\n\x0d\nclass Performance extends EventTarget {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `Performance ${inspect({\x0d\n      nodeTiming: this.nodeTiming\x2C\x0d\n      timeOrigin: this.timeOrigin\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction toJSON() {\x0d\n  return {\x0d\n    nodeTiming: this.nodeTiming\x2C\x0d\n    timeOrigin: this.timeOrigin\x2C\x0d\n    eventLoopUtilization: this.eventLoopUtilization()\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction clearMarks(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearMarkTimings(name);\x0d\n  clearEntriesFromBuffer('mark'\x2C name);\x0d\n}\x0d\n\x0d\nfunction clearMeasures(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearEntriesFromBuffer('measure'\x2C name);\x0d\n}\x0d\n\x0d\nfunction clearResourceTimings(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearEntriesFromBuffer('resource'\x2C name);\x0d\n}\x0d\n\x0d\nfunction getEntries() {\x0d\n  return filterBufferMapByNameAndType();\x0d\n}\x0d\n\x0d\nfunction getEntriesByName(name) {\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('name');\x0d\n  }\x0d\n  name = `${name}`;\x0d\n  return filterBufferMapByNameAndType(name\x2C undefined);\x0d\n}\x0d\n\x0d\nfunction getEntriesByType(type) {\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('type');\x0d\n  }\x0d\n  type = `${type}`;\x0d\n  return filterBufferMapByNameAndType(undefined\x2C type);\x0d\n}\x0d\n\x0d\nclass InternalPerformance extends EventTarget {}\x0d\nInternalPerformance.prototype.constructor = Performance.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalPerformance.prototype\x2C Performance.prototype);\x0d\n\x0d\nObjectDefineProperties(Performance.prototype\x2C {\x0d\n  clearMarks: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMarks\x2C\x0d\n  }\x2C\x0d\n  clearMeasures: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMeasures\x2C\x0d\n  }\x2C\x0d\n  clearResourceTimings: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearResourceTimings\x2C\x0d\n  }\x2C\x0d\n  eventLoopUtilization: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: eventLoopUtilization\x2C\x0d\n  }\x2C\x0d\n  getEntries: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntries\x2C\x0d\n  }\x2C\x0d\n  getEntriesByName: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByName\x2C\x0d\n  }\x2C\x0d\n  getEntriesByType: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByType\x2C\x0d\n  }\x2C\x0d\n  mark: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: mark\x2C\x0d\n  }\x2C\x0d\n  measure: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: measure\x2C\x0d\n  }\x2C\x0d\n  nodeTiming: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: nodeTiming\x2C\x0d\n  }\x2C\x0d\n  // In the browser\x2C this function is not public.  However\x2C it must be used inside fetch\x0d\n  // which is a Node.js dependency\x2C not a internal module\x0d\n  markResourceTiming: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: markResourceTiming\x2C\x0d\n  }\x2C\x0d\n  now: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: now\x2C\x0d\n  }\x2C\x0d\n  timerify: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: timerify\x2C\x0d\n  }\x2C\x0d\n  // This would be updated during pre-execution in case\x0d\n  // the process is launched from a snapshot.\x0d\n  // TODO(joyeecheung): we may want to warn about access to\x0d\n  // this during snapshot building.\x0d\n  timeOrigin: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  }\x2C\x0d\n  toJSON: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: toJSON\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  ObjectDefineProperty(Performance.prototype\x2C 'timeOrigin'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  InternalPerformance\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x3d28625dbd6,76,4969,5154,C0O4977C7O4998C10O5010C25O5119C28O5119C35O4977C41O5153,,
code-creation,LazyCompile,10,153244,0x3d28625e426,19,refreshTimeOrigin node:internal/perf/utils:25:27,0x3a93d9e7e10,~
script-source,48,node:internal/perf/utils,'use strict';\x0d\n\x0d\nconst binding = internalBinding('performance');\x0d\nconst {\x0d\n  milestones\x2C\x0d\n  getTimeOrigin\x2C\x0d\n} = binding;\x0d\n\x0d\n// TODO(joyeecheung): we may want to warn about access to\x0d\n// this during snapshot building.\x0d\nlet timeOrigin = getTimeOrigin();\x0d\n\x0d\nfunction now() {\x0d\n  const hr = process.hrtime();\x0d\n  return (hr[0] * 1000 + hr[1] / 1e6) - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction getMilestoneTimestamp(milestoneIdx) {\x0d\n  const ns = milestones[milestoneIdx];\x0d\n  if (ns === -1)\x0d\n    return ns;\x0d\n  return ns / 1e6 - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  timeOrigin = getTimeOrigin();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  now\x2C\x0d\n  getMilestoneTimestamp\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x3d28625e426,48,549,589,C0O557C5O570C11O568C18O588,,
code-creation,LazyCompile,10,153321,0x3d28625e696,62,setupInspectorHooks node:internal/bootstrap/pre_execution:329:29,0x3d28624cfc0,~
code-source-info,0x3d28625e696,100,10466,11032,C0O10815C6O10819C11O10844C17O10913C23O10913C28O10881C33O10896C38O10960C44O10960C49O10988C54O10989C61O11031,,
code-creation,Eval,10,153421,0x3d28625ea2e,5, node:internal/inspector_async_hook:1:1,0x3d28625e878,~
script-source,101,node:internal/inspector_async_hook,'use strict';\x0d\n\x0d\nlet hook;\x0d\nlet config;\x0d\n\x0d\nconst {\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction lazyHookCreation() {\x0d\n  const inspector = internalBinding('inspector');\x0d\n  const { createHook } = require('async_hooks');\x0d\n  config = internalBinding('config');\x0d\n\x0d\n  hook = createHook({\x0d\n    init(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n    // It's difficult to tell which tasks will be recurring and which won't\x2C\x0d\n    // therefore we mark all tasks as recurring. Based on the discussion\x0d\n    // in https://github.com/nodejs/node/pull/13870#discussion_r124515293\x2C\x0d\n    // this should be fine as long as we call asyncTaskCanceled() too.\x0d\n      const recurring = true;\x0d\n      if (type === 'PROMISE')\x0d\n        this.promiseIds.add(asyncId);\x0d\n      else\x0d\n        inspector.asyncTaskScheduled(type\x2C asyncId\x2C recurring);\x0d\n    }\x2C\x0d\n\x0d\n    before(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskStarted(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    after(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskFinished(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    destroy(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return this.promiseIds.delete(asyncId);\x0d\n      inspector.asyncTaskCanceled(asyncId);\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  hook.promiseIds = new SafeSet();\x0d\n}\x0d\n\x0d\nfunction enable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  if (config.bits < 64) {\x0d\n    // V8 Inspector stores task ids as (void*) pointers.\x0d\n    // async_hooks store ids as 64bit numbers.\x0d\n    // As a result\x2C we cannot reliably translate async_hook ids to V8 async_task\x0d\n    // ids on 32bit platforms.\x0d\n    process.emitWarning(\x0d\n      'Warning: Async stack traces in debugger are not available ' +\x0d\n      `on ${config.bits}bit platforms. The feature is disabled.`\x2C\x0d\n      {\x0d\n        code: 'INSPECTOR_ASYNC_STACK_TRACES_NOT_AVAILABLE'\x2C\x0d\n      });\x0d\n  } else {\x0d\n    hook.enable();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction disable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  hook.disable();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  enable\x2C\x0d\n  disable\x0d\n};\x0d\n
code-source-info,0x3d28625ea2e,101,0,2048,C0O0C4O2048,,
code-creation,Function,10,153521,0x3d28625ec4e,79, node:internal/inspector_async_hook:1:1,0x3d28625e9a8,~
code-source-info,0x3d28625ec4e,101,0,2048,C0O0C42O21C43O21C45O32C46O32C48O54C54O2002C61O2024C67O2035C73O2017C78O2047,,
new,MemoryChunk,0x21ab3640000,262144
code-creation,Function,11,153688,0x21ab3643060,664,nativeModuleRequire node:internal/bootstrap/loaders:349:29,0x56f5c911d8,^
code-source-info,0x21ab3643060,9,11126,11479,,,
code-creation,Function,11,153718,0x21ab3643360,216,isPathSeparator node:path:52:25,0x3a93d9ccf90,^
code-source-info,0x21ab3643360,41,1794,1876,,,
code-creation,Function,11,153762,0x21ab36434a0,3076,normalizeString node:path:66:25,0x3a93d9cd458,^
code-source-info,0x21ab36434a0,41,2226,4212,,,
code-creation,LazyCompile,10,153827,0x3d28625f44e,69,setupWarningHandler node:internal/bootstrap/pre_execution:168:29,0x3d28624cbb0,~
code-source-info,0x3d28625f44e,100,5444,5649,C0O5482C6O5482C11O5465C16O5522C24O5526C33O5571C38O5575C45O5592C50O5608C53O5616C61O5616C68O5648,,
code-creation,LazyCompile,10,153943,0x3d28625f6c6,20,addListener node:events:604:58,0xf28402f688,~
script-source,23,node:events,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromiseReject\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n} = primordials;\x0d\nconst kRejection = SymbolFor('nodejs.rejection');\x0d\n\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  inspect\x2C\x0d\n  identicalSequenceRange\x2C\x0d\n} = require('internal/util/inspect');\x0d\n\x0d\nlet spliceOne;\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  kEnhanceStackBeforeInspector\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNHANDLED_ERROR\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst kCapture = Symbol('kCapture');\x0d\nconst kErrorMonitor = Symbol('events.errorMonitor');\x0d\nconst kMaxEventTargetListeners = Symbol('events.maxEventTargetListeners');\x0d\nconst kMaxEventTargetListenersWarned =\x0d\n  Symbol('events.maxEventTargetListenersWarned');\x0d\n\x0d\nlet EventEmitterAsyncResource;\x0d\n// The EventEmitterAsyncResource has to be initialized lazily because event.js\x0d\n// is loaded so early in the bootstrap process\x2C before async_hooks is available.\x0d\n//\x0d\n// This implementation was adapted straight from addaleax's\x0d\n// eventemitter-asyncresource MIT-licensed userland module.\x0d\n// https://github.com/addaleax/eventemitter-asyncresource\x0d\nfunction lazyEventEmitterAsyncResource() {\x0d\n  if (EventEmitterAsyncResource === undefined) {\x0d\n    const {\x0d\n      AsyncResource\x0d\n    } = require('async_hooks');\x0d\n\x0d\n    const kEventEmitter = Symbol('kEventEmitter');\x0d\n    const kAsyncResource = Symbol('kAsyncResource');\x0d\n    class EventEmitterReferencingAsyncResource extends AsyncResource {\x0d\n      /**\x0d\n       * @param {EventEmitter} ee\x0d\n       * @param {string} [type]\x0d\n       * @param {{\x0d\n       *   triggerAsyncId?: number\x2C\x0d\n       *   requireManualDestroy?: boolean\x2C\x0d\n       * }} [options]\x0d\n       */\x0d\n      constructor(ee\x2C type\x2C options) {\x0d\n        super(type\x2C options);\x0d\n        this[kEventEmitter] = ee;\x0d\n      }\x0d\n\x0d\n      /**\x0d\n       * @type {EventEmitter}\x0d\n       */\x0d\n      get eventEmitter() {\x0d\n        if (this[kEventEmitter] === undefined)\x0d\n          throw new ERR_INVALID_THIS('EventEmitterReferencingAsyncResource');\x0d\n        return this[kEventEmitter];\x0d\n      }\x0d\n    }\x0d\n\x0d\n    EventEmitterAsyncResource =\x0d\n      class EventEmitterAsyncResource extends EventEmitter {\x0d\n        /**\x0d\n         * @param {{\x0d\n         *   name?: string\x2C\x0d\n         *   triggerAsyncId?: number\x2C\x0d\n         *   requireManualDestroy?: boolean\x2C\x0d\n         * }} [options]\x0d\n         */\x0d\n        constructor(options = undefined) {\x0d\n          let name;\x0d\n          if (typeof options === 'string') {\x0d\n            name = options;\x0d\n            options = undefined;\x0d\n          } else {\x0d\n            if (new.target === EventEmitterAsyncResource) {\x0d\n              validateString(options?.name\x2C 'options.name');\x0d\n            }\x0d\n            name = options?.name || new.target.name;\x0d\n          }\x0d\n          super(options);\x0d\n\x0d\n          this[kAsyncResource] =\x0d\n            new EventEmitterReferencingAsyncResource(this\x2C name\x2C options);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @param {symbol\x2Cstring} event\x0d\n         * @param  {...any} args\x0d\n         * @returns {boolean}\x0d\n         */\x0d\n        emit(event\x2C ...args) {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          const { asyncResource } = this;\x0d\n          ArrayPrototypeUnshift(args\x2C super.emit\x2C this\x2C event);\x0d\n          return ReflectApply(asyncResource.runInAsyncScope\x2C asyncResource\x2C\x0d\n                              args);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @returns {void}\x0d\n         */\x0d\n        emitDestroy() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          this.asyncResource.emitDestroy();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get asyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.asyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get triggerAsyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.triggerAsyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {EventEmitterReferencingAsyncResource}\x0d\n         */\x0d\n        get asyncResource() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this[kAsyncResource];\x0d\n        }\x0d\n      };\x0d\n  }\x0d\n  return EventEmitterAsyncResource;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new `EventEmitter` instance.\x0d\n * @param {{ captureRejections?: boolean; }} [opts]\x0d\n * @constructs {EventEmitter}\x0d\n */\x0d\nfunction EventEmitter(opts) {\x0d\n  EventEmitter.init.call(this\x2C opts);\x0d\n}\x0d\nmodule.exports = EventEmitter;\x0d\nmodule.exports.once = once;\x0d\nmodule.exports.on = on;\x0d\nmodule.exports.getEventListeners = getEventListeners;\x0d\n// Backwards-compat with node 0.10.x\x0d\nEventEmitter.EventEmitter = EventEmitter;\x0d\n\x0d\nEventEmitter.usingDomains = false;\x0d\n\x0d\nEventEmitter.captureRejectionSymbol = kRejection;\x0d\nObjectDefineProperty(EventEmitter\x2C 'captureRejections'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return EventEmitter.prototype[kCapture];\x0d\n  }\x2C\x0d\n  set(value) {\x0d\n    validateBoolean(value\x2C 'EventEmitter.captureRejections');\x0d\n\x0d\n    EventEmitter.prototype[kCapture] = value;\x0d\n  }\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'EventEmitterAsyncResource'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get: lazyEventEmitterAsyncResource\x2C\x0d\n  set: undefined\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\nEventEmitter.errorMonitor = kErrorMonitor;\x0d\n\x0d\n// The default for captureRejections is false\x0d\nObjectDefineProperty(EventEmitter.prototype\x2C kCapture\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: false\x2C\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\nEventEmitter.prototype._events = undefined;\x0d\nEventEmitter.prototype._eventsCount = 0;\x0d\nEventEmitter.prototype._maxListeners = undefined;\x0d\n\x0d\n// By default EventEmitters will print a warning if more than 10 listeners are\x0d\n// added to it. This is a useful default which helps finding memory leaks.\x0d\nlet defaultMaxListeners = 10;\x0d\nlet isEventTarget;\x0d\n\x0d\nfunction checkListener(listener) {\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n}\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'defaultMaxListeners'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get: function() {\x0d\n    return defaultMaxListeners;\x0d\n  }\x2C\x0d\n  set: function(arg) {\x0d\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\x0d\n      throw new ERR_OUT_OF_RANGE('defaultMaxListeners'\x2C\x0d\n                                 'a non-negative number'\x2C\x0d\n                                 arg);\x0d\n    }\x0d\n    defaultMaxListeners = arg;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperties(EventEmitter\x2C {\x0d\n  kMaxEventTargetListeners: {\x0d\n    __proto__: null\x2C\x0d\n    value: kMaxEventTargetListeners\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x2C\x0d\n  kMaxEventTargetListenersWarned: {\x0d\n    __proto__: null\x2C\x0d\n    value: kMaxEventTargetListenersWarned\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Sets the max listeners.\x0d\n * @param {number} n\x0d\n * @param {EventTarget[] | EventEmitter[]} [eventTargets]\x0d\n * @returns {void}\x0d\n */\x0d\nEventEmitter.setMaxListeners =\x0d\n  function(n = defaultMaxListeners\x2C ...eventTargets) {\x0d\n    if (typeof n !== 'number' || n < 0 || NumberIsNaN(n))\x0d\n      throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n    if (eventTargets.length === 0) {\x0d\n      defaultMaxListeners = n;\x0d\n    } else {\x0d\n      if (isEventTarget === undefined)\x0d\n        isEventTarget = require('internal/event_target').isEventTarget;\x0d\n\x0d\n      for (let i = 0; i < eventTargets.length; i++) {\x0d\n        const target = eventTargets[i];\x0d\n        if (isEventTarget(target)) {\x0d\n          target[kMaxEventTargetListeners] = n;\x0d\n          target[kMaxEventTargetListenersWarned] = false;\x0d\n        } else if (typeof target.setMaxListeners === 'function') {\x0d\n          target.setMaxListeners(n);\x0d\n        } else {\x0d\n          throw new ERR_INVALID_ARG_TYPE(\x0d\n            'eventTargets'\x2C\x0d\n            ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n            target);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n// If you're updating this function definition\x2C please also update any\x0d\n// re-definitions\x2C such as the one in the Domain module (lib/domain.js).\x0d\nEventEmitter.init = function(opts) {\x0d\n\x0d\n  if (this._events === undefined ||\x0d\n      this._events === ObjectGetPrototypeOf(this)._events) {\x0d\n    this._events = ObjectCreate(null);\x0d\n    this._eventsCount = 0;\x0d\n  }\x0d\n\x0d\n  this._maxListeners = this._maxListeners || undefined;\x0d\n\x0d\n\x0d\n  if (opts?.captureRejections) {\x0d\n    validateBoolean(opts.captureRejections\x2C 'options.captureRejections');\x0d\n    this[kCapture] = Boolean(opts.captureRejections);\x0d\n  } else {\x0d\n    // Assigning the kCapture property directly saves an expensive\x0d\n    // prototype lookup in a very sensitive hot path.\x0d\n    this[kCapture] = EventEmitter.prototype[kCapture];\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addCatch(that\x2C promise\x2C type\x2C args) {\x0d\n  if (!that[kCapture]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Handle Promises/A+ spec\x2C then could be a getter\x0d\n  // that throws on second use.\x0d\n  try {\x0d\n    const then = promise.then;\x0d\n\x0d\n    if (typeof then === 'function') {\x0d\n      then.call(promise\x2C undefined\x2C function(err) {\x0d\n        // The callback is called with nextTick to avoid a follow-up\x0d\n        // rejection from this promise.\x0d\n        process.nextTick(emitUnhandledRejectionOrErr\x2C that\x2C err\x2C type\x2C args);\x0d\n      });\x0d\n    }\x0d\n  } catch (err) {\x0d\n    that.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUnhandledRejectionOrErr(ee\x2C err\x2C type\x2C args) {\x0d\n  if (typeof ee[kRejection] === 'function') {\x0d\n    ee[kRejection](err\x2C type\x2C ...args);\x0d\n  } else {\x0d\n    // We have to disable the capture rejections mechanism\x2C otherwise\x0d\n    // we might end up in an infinite loop.\x0d\n    const prev = ee[kCapture];\x0d\n\x0d\n    // If the error handler throws\x2C it is not catchable and it\x0d\n    // will end up in 'uncaughtException'. We restore the previous\x0d\n    // value of kCapture in case the uncaughtException is present\x0d\n    // and the exception is handled.\x0d\n    try {\x0d\n      ee[kCapture] = false;\x0d\n      ee.emit('error'\x2C err);\x0d\n    } finally {\x0d\n      ee[kCapture] = prev;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Increases the max listeners of the event emitter.\x0d\n * @param {number} n\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\x0d\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\x0d\n    throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n  }\x0d\n  this._maxListeners = n;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction _getMaxListeners(that) {\x0d\n  if (that._maxListeners === undefined)\x0d\n    return EventEmitter.defaultMaxListeners;\x0d\n  return that._maxListeners;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the current max listener value for the event emitter.\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\x0d\n  return _getMaxListeners(this);\x0d\n};\x0d\n\x0d\nfunction enhanceStackTrace(err\x2C own) {\x0d\n  let ctorInfo = '';\x0d\n  try {\x0d\n    const { name } = this.constructor;\x0d\n    if (name !== 'EventEmitter')\x0d\n      ctorInfo = ` on ${name} instance`;\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  const sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\x0d\n\x0d\n  const errStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(err.stack\x2C '\\n')\x2C 1);\x0d\n  const ownStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(own.stack\x2C '\\n')\x2C 1);\x0d\n\x0d\n  const { len\x2C offset } = identicalSequenceRange(ownStack\x2C errStack);\x0d\n  if (len > 0) {\x0d\n    ArrayPrototypeSplice(ownStack\x2C offset + 1\x2C len - 2\x2C\x0d\n                         '    [... lines matching original stack trace ...]');\x0d\n  }\x0d\n\x0d\n  return err.stack + sep + ArrayPrototypeJoin(ownStack\x2C '\\n');\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously calls each of the listeners registered\x0d\n * for the event.\x0d\n * @param {string | symbol} type\x0d\n * @param {...any} [args]\x0d\n * @returns {boolean}\x0d\n */\x0d\nEventEmitter.prototype.emit = function emit(type\x2C ...args) {\x0d\n  let doError = (type === 'error');\x0d\n\x0d\n  const events = this._events;\x0d\n  if (events !== undefined) {\x0d\n    if (doError && events[kErrorMonitor] !== undefined)\x0d\n      this.emit(kErrorMonitor\x2C ...args);\x0d\n    doError = (doError && events.error === undefined);\x0d\n  } else if (!doError)\x0d\n    return false;\x0d\n\x0d\n  // If there is no 'error' event listener then throw.\x0d\n  if (doError) {\x0d\n    let er;\x0d\n    if (args.length > 0)\x0d\n      er = args[0];\x0d\n    if (er instanceof Error) {\x0d\n      try {\x0d\n        const capture = {};\x0d\n        ErrorCaptureStackTrace(capture\x2C EventEmitter.prototype.emit);\x0d\n        ObjectDefineProperty(er\x2C kEnhanceStackBeforeInspector\x2C {\x0d\n          __proto__: null\x2C\x0d\n          value: FunctionPrototypeBind(enhanceStackTrace\x2C this\x2C er\x2C capture)\x2C\x0d\n          configurable: true\x0d\n        });\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n\x0d\n      // Note: The comments on the `throw` lines are intentional\x2C they show\x0d\n      // up in Node's output if this results in an unhandled exception.\x0d\n      throw er; // Unhandled 'error' event\x0d\n    }\x0d\n\x0d\n    let stringifiedEr;\x0d\n    try {\x0d\n      stringifiedEr = inspect(er);\x0d\n    } catch {\x0d\n      stringifiedEr = er;\x0d\n    }\x0d\n\x0d\n    // At least give some kind of context to the user\x0d\n    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);\x0d\n    err.context = er;\x0d\n    throw err; // Unhandled 'error' event\x0d\n  }\x0d\n\x0d\n  const handler = events[type];\x0d\n\x0d\n  if (handler === undefined)\x0d\n    return false;\x0d\n\x0d\n  if (typeof handler === 'function') {\x0d\n    const result = handler.apply(this\x2C args);\x0d\n\x0d\n    // We check if result is undefined first because that\x0d\n    // is the most common case so we do not pay any perf\x0d\n    // penalty\x0d\n    if (result !== undefined && result !== null) {\x0d\n      addCatch(this\x2C result\x2C type\x2C args);\x0d\n    }\x0d\n  } else {\x0d\n    const len = handler.length;\x0d\n    const listeners = arrayClone(handler);\x0d\n    for (let i = 0; i < len; ++i) {\x0d\n      const result = listeners[i].apply(this\x2C args);\x0d\n\x0d\n      // We check if result is undefined first because that\x0d\n      // is the most common case so we do not pay any perf\x0d\n      // penalty.\x0d\n      // This code is duplicated because extracting it away\x0d\n      // would make it non-inlineable.\x0d\n      if (result !== undefined && result !== null) {\x0d\n        addCatch(this\x2C result\x2C type\x2C args);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return true;\x0d\n};\x0d\n\x0d\nfunction _addListener(target\x2C type\x2C listener\x2C prepend) {\x0d\n  let m;\x0d\n  let events;\x0d\n  let existing;\x0d\n\x0d\n  checkListener(listener);\x0d\n\x0d\n  events = target._events;\x0d\n  if (events === undefined) {\x0d\n    events = target._events = ObjectCreate(null);\x0d\n    target._eventsCount = 0;\x0d\n  } else {\x0d\n    // To avoid recursion in the case that type === "newListener"! Before\x0d\n    // adding it to the listeners\x2C first emit "newListener".\x0d\n    if (events.newListener !== undefined) {\x0d\n      target.emit('newListener'\x2C type\x2C\x0d\n                  listener.listener ?? listener);\x0d\n\x0d\n      // Re-assign `events` because a newListener handler could have caused the\x0d\n      // this._events to be assigned to a new object\x0d\n      events = target._events;\x0d\n    }\x0d\n    existing = events[type];\x0d\n  }\x0d\n\x0d\n  if (existing === undefined) {\x0d\n    // Optimize the case of one listener. Don't need the extra array object.\x0d\n    events[type] = listener;\x0d\n    ++target._eventsCount;\x0d\n  } else {\x0d\n    if (typeof existing === 'function') {\x0d\n      // Adding the second element\x2C need to change to array.\x0d\n      existing = events[type] =\x0d\n        prepend ? [listener\x2C existing] : [existing\x2C listener];\x0d\n      // If we've already got an array\x2C just append.\x0d\n    } else if (prepend) {\x0d\n      existing.unshift(listener);\x0d\n    } else {\x0d\n      existing.push(listener);\x0d\n    }\x0d\n\x0d\n    // Check for listener leak\x0d\n    m = _getMaxListeners(target);\x0d\n    if (m > 0 && existing.length > m && !existing.warned) {\x0d\n      existing.warned = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      const w = genericNodeError(\x0d\n        `Possible EventEmitter memory leak detected. ${existing.length} ${String(type)} listeners ` +\x0d\n        `added to ${inspect(target\x2C { depth: -1 })}. Use emitter.setMaxListeners() to increase limit`\x2C\x0d\n        { name: 'MaxListenersExceededWarning'\x2C emitter: target\x2C type: type\x2C count: existing.length });\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return target;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a listener to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.addListener = function addListener(type\x2C listener) {\x0d\n  return _addListener(this\x2C type\x2C listener\x2C false);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\x0d\n\x0d\n/**\x0d\n * Adds the `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependListener =\x0d\n    function prependListener(type\x2C listener) {\x0d\n      return _addListener(this\x2C type\x2C listener\x2C true);\x0d\n    };\x0d\n\x0d\nfunction onceWrapper() {\x0d\n  if (!this.fired) {\x0d\n    this.target.removeListener(this.type\x2C this.wrapFn);\x0d\n    this.fired = true;\x0d\n    if (arguments.length === 0)\x0d\n      return this.listener.call(this.target);\x0d\n    return this.listener.apply(this.target\x2C arguments);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction _onceWrap(target\x2C type\x2C listener) {\x0d\n  const state = { fired: false\x2C wrapFn: undefined\x2C target\x2C type\x2C listener };\x0d\n  const wrapped = onceWrapper.bind(state);\x0d\n  wrapped.listener = listener;\x0d\n  state.wrapFn = wrapped;\x0d\n  return wrapped;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.once = function once(type\x2C listener) {\x0d\n  checkListener(listener);\x0d\n\x0d\n  this.on(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n  return this;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependOnceListener =\x0d\n    function prependOnceListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      this.prependListener(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n      return this;\x0d\n    };\x0d\n\x0d\n/**\x0d\n * Removes the specified `listener` from the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeListener =\x0d\n    function removeListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      const list = events[type];\x0d\n      if (list === undefined)\x0d\n        return this;\x0d\n\x0d\n      if (list === listener || list.listener === listener) {\x0d\n        if (--this._eventsCount === 0)\x0d\n          this._events = ObjectCreate(null);\x0d\n        else {\x0d\n          delete events[type];\x0d\n          if (events.removeListener)\x0d\n            this.emit('removeListener'\x2C type\x2C list.listener || listener);\x0d\n        }\x0d\n      } else if (typeof list !== 'function') {\x0d\n        let position = -1;\x0d\n\x0d\n        for (let i = list.length - 1; i >= 0; i--) {\x0d\n          if (list[i] === listener || list[i].listener === listener) {\x0d\n            position = i;\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (position < 0)\x0d\n          return this;\x0d\n\x0d\n        if (position === 0)\x0d\n          list.shift();\x0d\n        else {\x0d\n          if (spliceOne === undefined)\x0d\n            spliceOne = require('internal/util').spliceOne;\x0d\n          spliceOne(list\x2C position);\x0d\n        }\x0d\n\x0d\n        if (list.length === 1)\x0d\n          events[type] = list[0];\x0d\n\x0d\n        if (events.removeListener !== undefined)\x0d\n          this.emit('removeListener'\x2C type\x2C listener);\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\x0d\n\x0d\n/**\x0d\n * Removes all listeners from the event emitter. (Only\x0d\n * removes listeners for a specific event name if specified\x0d\n * as `type`).\x0d\n * @param {string | symbol} [type]\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeAllListeners =\x0d\n    function removeAllListeners(type) {\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      // Not listening for removeListener\x2C no need to emit\x0d\n      if (events.removeListener === undefined) {\x0d\n        if (arguments.length === 0) {\x0d\n          this._events = ObjectCreate(null);\x0d\n          this._eventsCount = 0;\x0d\n        } else if (events[type] !== undefined) {\x0d\n          if (--this._eventsCount === 0)\x0d\n            this._events = ObjectCreate(null);\x0d\n          else\x0d\n            delete events[type];\x0d\n        }\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      // Emit removeListener for all listeners on all events\x0d\n      if (arguments.length === 0) {\x0d\n        for (const key of ReflectOwnKeys(events)) {\x0d\n          if (key === 'removeListener') continue;\x0d\n          this.removeAllListeners(key);\x0d\n        }\x0d\n        this.removeAllListeners('removeListener');\x0d\n        this._events = ObjectCreate(null);\x0d\n        this._eventsCount = 0;\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      const listeners = events[type];\x0d\n\x0d\n      if (typeof listeners === 'function') {\x0d\n        this.removeListener(type\x2C listeners);\x0d\n      } else if (listeners !== undefined) {\x0d\n        // LIFO order\x0d\n        for (let i = listeners.length - 1; i >= 0; i--) {\x0d\n          this.removeListener(type\x2C listeners[i]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nfunction _listeners(target\x2C type\x2C unwrap) {\x0d\n  const events = target._events;\x0d\n\x0d\n  if (events === undefined)\x0d\n    return [];\x0d\n\x0d\n  const evlistener = events[type];\x0d\n  if (evlistener === undefined)\x0d\n    return [];\x0d\n\x0d\n  if (typeof evlistener === 'function')\x0d\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\x0d\n\x0d\n  return unwrap ?\x0d\n    unwrapListeners(evlistener) : arrayClone(evlistener);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.listeners = function listeners(type) {\x0d\n  return _listeners(this\x2C type\x2C true);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners and wrappers for\x0d\n * the event name specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\x0d\n  return _listeners(this\x2C type\x2C false);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to the event name\x0d\n * specified as `type`.\x0d\n * @deprecated since v3.2.0\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.listenerCount = function(emitter\x2C type) {\x0d\n  if (typeof emitter.listenerCount === 'function') {\x0d\n    return emitter.listenerCount(type);\x0d\n  }\x0d\n  return FunctionPrototypeCall(listenerCount\x2C emitter\x2C type);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.listenerCount = listenerCount;\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nfunction listenerCount(type) {\x0d\n  const events = this._events;\x0d\n\x0d\n  if (events !== undefined) {\x0d\n    const evlistener = events[type];\x0d\n\x0d\n    if (typeof evlistener === 'function') {\x0d\n      return 1;\x0d\n    } else if (evlistener !== undefined) {\x0d\n      return evlistener.length;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an array listing the events for which\x0d\n * the emitter has registered listeners.\x0d\n * @returns {any[]}\x0d\n */\x0d\nEventEmitter.prototype.eventNames = function eventNames() {\x0d\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\x0d\n};\x0d\n\x0d\nfunction arrayClone(arr) {\x0d\n  // At least since V8 8.3\x2C this implementation is faster than the previous\x0d\n  // which always used a simple for-loop\x0d\n  switch (arr.length) {\x0d\n    case 2: return [arr[0]\x2C arr[1]];\x0d\n    case 3: return [arr[0]\x2C arr[1]\x2C arr[2]];\x0d\n    case 4: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]];\x0d\n    case 5: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]];\x0d\n    case 6: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]\x2C arr[5]];\x0d\n  }\x0d\n  return ArrayPrototypeSlice(arr);\x0d\n}\x0d\n\x0d\nfunction unwrapListeners(arr) {\x0d\n  const ret = arrayClone(arr);\x0d\n  for (let i = 0; i < ret.length; ++i) {\x0d\n    const orig = ret[i].listener;\x0d\n    if (typeof orig === 'function')\x0d\n      ret[i] = orig;\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {EventEmitter | EventTarget} emitterOrTarget\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nfunction getEventListeners(emitterOrTarget\x2C type) {\x0d\n  // First check if EventEmitter\x0d\n  if (typeof emitterOrTarget.listeners === 'function') {\x0d\n    return emitterOrTarget.listeners(type);\x0d\n  }\x0d\n  // Require event target lazily to avoid always loading it\x0d\n  const { isEventTarget\x2C kEvents } = require('internal/event_target');\x0d\n  if (isEventTarget(emitterOrTarget)) {\x0d\n    const root = emitterOrTarget[kEvents].get(type);\x0d\n    const listeners = [];\x0d\n    let handler = root?.next;\x0d\n    while (handler?.listener !== undefined) {\x0d\n      const listener = handler.listener?.deref ?\x0d\n        handler.listener.deref() : handler.listener;\x0d\n      listeners.push(listener);\x0d\n      handler = handler.next;\x0d\n    }\x0d\n    return listeners;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\x0d\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n                                 emitterOrTarget);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a `Promise` that is fulfilled when the emitter\x0d\n * emits the given event.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string} name\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {Promise}\x0d\n */\x0d\nasync function once(emitter\x2C name\x2C options = kEmptyObject) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    const errorListener = (err) => {\x0d\n      emitter.removeListener(name\x2C resolver);\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      reject(err);\x0d\n    };\x0d\n    const resolver = (...args) => {\x0d\n      if (typeof emitter.removeListener === 'function') {\x0d\n        emitter.removeListener('error'\x2C errorListener);\x0d\n      }\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      resolve(args);\x0d\n    };\x0d\n    eventTargetAgnosticAddListener(emitter\x2C name\x2C resolver\x2C { once: true });\x0d\n    if (name !== 'error' && typeof emitter.once === 'function') {\x0d\n      // EventTarget does not have `error` event semantics like Node\x0d\n      // EventEmitters\x2C we listen to `error` events only on EventEmitters.\x0d\n      emitter.once('error'\x2C errorListener);\x0d\n    }\x0d\n    function abortListener() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C name\x2C resolver);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorListener);\x0d\n      reject(new AbortError(undefined\x2C { cause: signal?.reason }));\x0d\n    }\x0d\n    if (signal != null) {\x0d\n      eventTargetAgnosticAddListener(\x0d\n        signal\x2C 'abort'\x2C abortListener\x2C { once: true });\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst AsyncIteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf(async function* () {}).prototype);\x0d\n\x0d\nfunction createIterResult(value\x2C done) {\x0d\n  return { value\x2C done };\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticRemoveListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.removeListener === 'function') {\x0d\n    emitter.removeListener(name\x2C listener);\x0d\n  } else if (typeof emitter.removeEventListener === 'function') {\x0d\n    emitter.removeEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticAddListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.on === 'function') {\x0d\n    if (flags?.once) {\x0d\n      emitter.once(name\x2C listener);\x0d\n    } else {\x0d\n      emitter.on(name\x2C listener);\x0d\n    }\x0d\n  } else if (typeof emitter.addEventListener === 'function') {\x0d\n    emitter.addEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an `AsyncIterator` that iterates `event` events.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} event\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {AsyncIterator}\x0d\n */\x0d\nfunction on(emitter\x2C event\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n\x0d\n  const unconsumedEvents = [];\x0d\n  const unconsumedPromises = [];\x0d\n  let error = null;\x0d\n  let finished = false;\x0d\n\x0d\n  const iterator = ObjectSetPrototypeOf({\x0d\n    next() {\x0d\n      // First\x2C we consume all unread events\x0d\n      const value = unconsumedEvents.shift();\x0d\n      if (value) {\x0d\n        return PromiseResolve(createIterResult(value\x2C false));\x0d\n      }\x0d\n\x0d\n      // Then we error\x2C if an error happened\x0d\n      // This happens one time if at all\x2C because after 'error'\x0d\n      // we stop listening\x0d\n      if (error) {\x0d\n        const p = PromiseReject(error);\x0d\n        // Only the first element errors\x0d\n        error = null;\x0d\n        return p;\x0d\n      }\x0d\n\x0d\n      // If the iterator is finished\x2C resolve to done\x0d\n      if (finished) {\x0d\n        return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      // Wait until an event happens\x0d\n      return new Promise(function(resolve\x2C reject) {\x0d\n        unconsumedPromises.push({ resolve\x2C reject });\x0d\n      });\x0d\n    }\x2C\x0d\n\x0d\n    return() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n\x0d\n      if (signal) {\x0d\n        eventTargetAgnosticRemoveListener(\x0d\n          signal\x2C\x0d\n          'abort'\x2C\x0d\n          abortListener\x2C\x0d\n          { once: true });\x0d\n      }\x0d\n\x0d\n      finished = true;\x0d\n\x0d\n      for (const promise of unconsumedPromises) {\x0d\n        promise.resolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n    }\x2C\x0d\n\x0d\n    throw(err) {\x0d\n      if (!err || !(err instanceof Error)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('EventEmitter.AsyncIterator'\x2C\x0d\n                                       'Error'\x2C err);\x0d\n      }\x0d\n      error = err;\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n    }\x2C\x0d\n\x0d\n    [SymbolAsyncIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x2C AsyncIteratorPrototype);\x0d\n\x0d\n  eventTargetAgnosticAddListener(emitter\x2C event\x2C eventHandler);\x0d\n  if (event !== 'error' && typeof emitter.on === 'function') {\x0d\n    emitter.on('error'\x2C errorHandler);\x0d\n  }\x0d\n\x0d\n  if (signal) {\x0d\n    eventTargetAgnosticAddListener(\x0d\n      signal\x2C\x0d\n      'abort'\x2C\x0d\n      abortListener\x2C\x0d\n      { once: true });\x0d\n  }\x0d\n\x0d\n  return iterator;\x0d\n\x0d\n  function abortListener() {\x0d\n    errorHandler(new AbortError(undefined\x2C { cause: signal?.reason }));\x0d\n  }\x0d\n\x0d\n  function eventHandler(...args) {\x0d\n    const promise = ArrayPrototypeShift(unconsumedPromises);\x0d\n    if (promise) {\x0d\n      promise.resolve(createIterResult(args\x2C false));\x0d\n    } else {\x0d\n      unconsumedEvents.push(args);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function errorHandler(err) {\x0d\n    finished = true;\x0d\n\x0d\n    const toError = ArrayPrototypeShift(unconsumedPromises);\x0d\n\x0d\n    if (toError) {\x0d\n      toError.reject(err);\x0d\n    } else {\x0d\n      // The next time we call next()\x0d\n      error = err;\x0d\n    }\x0d\n\x0d\n    iterator.return();\x0d\n  }\x0d\n}\x0d\n
code-source-info,0x3d28625f6c6,23,18313,18387,C0O18335C14O18342C19O18384,,
tick,0x7ff6635903df,155974,0,0x0,3,0x7ff6633c5640,0x3d28625f48b,0x3d28624f27c,0x3d28624a9d5
code-creation,LazyCompile,10,156073,0x3d286261d1e,378,_addListener node:events:541:22,0xf28402f5e8,~
code-source-info,0x3d286261d1e
code-creation,LazyCompile,10,156158,0x3d28626202e,15,checkListener node:events:265:23,0xf28402ef98,~
code-source-info,0x3d28626202e,23,7994,8052,C0O8010C8O8010C14O8051,,
code-creation,LazyCompile,10,156210,0x3d28626211e,30, node:internal/validators:245:42,0xf284009828,~
code-source-info,0x3d28626211e,16,7817,7936,C0O7839C6O7877C22O7883C27O7877C29O7935,,
code-creation,LazyCompile,10,156331,0x3d286262386,380,emit node:events:460:44,0xf28402f528,~
code-source-info,0x3d
code-creation,LazyCompile,10,156443,0x3d28626272e,172,startListeningIfSignal node:internal/process/signal:22:32,0x233c003db90,~
script-source,97,node:internal/process/signal,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nlet Signal;\x0d\nconst signalWraps = new SafeMap();\x0d\n\x0d\nfunction isSignal(event) {\x0d\n  return typeof event === 'string' && signals[event] !== undefined;\x0d\n}\x0d\n\x0d\n// Detect presence of a listener for the special signal types\x0d\nfunction startListeningIfSignal(type) {\x0d\n  if (isSignal(type) && !signalWraps.has(type)) {\x0d\n    if (Signal === undefined)\x0d\n      Signal = internalBinding('signal_wrap').Signal;\x0d\n    const wrap = new Signal();\x0d\n\x0d\n    wrap.unref();\x0d\n\x0d\n    wrap.onsignal = FunctionPrototypeBind(process.emit\x2C process\x2C type\x2C type);\x0d\n\x0d\n    const signum = signals[type];\x0d\n    const err = wrap.start(signum);\x0d\n    if (err) {\x0d\n      wrap.close();\x0d\n      throw errnoException(err\x2C 'uv_signal_start');\x0d\n    }\x0d\n\x0d\n    signalWraps.set(type\x2C wrap);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction stopListeningIfSignal(type) {\x0d\n  const wrap = signalWraps.get(type);\x0d\n  if (wrap !== undefined && process.listenerCount(type) === 0) {\x0d\n    wrap.close();\x0d\n    signalWraps.delete(type);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  startListeningIfSignal\x2C\x0d\n  stopListeningIfSignal\x0d\n};\x0d\n
code-source-info,0x3d28626272e,97,450,944,C0O462C3O466C11O485C14O497C19O497C26O515C32O548C38O557C43O587C50O555C56O614C61O614C67O640C72O640C76O656C78O672C84O702C98O672C103O670C107O752C114O759C118O789C123O789C129O809C131O832C136O832C140O848C148O854C153O848C154O908C159O920C164O920C171O943,,
code-creation,LazyCompile,10,156544,0x3d286262aee,19,isSignal node:internal/process/signal:17:18,0x233c003d9d8,~
code-source-info,0x3d286262aee,97,271,352,C0O284C8O320C13O327C17O335C18O349,,
code-creation,LazyCompile,10,156592,0x3d286262d26,156,setupFetch node:internal/bootstrap/pre_execution:179:20,0x3d28624cc00,~
code-source-info,0x3d286262d26,100,5707,6176,C0O5715C8O5720C14O5767C15O5774C16O5785C24O5785C28O5839C34O5839C39O5882C46O5898C52O5926C57O5882C62O5937C69O5953C75O5984C80O5937C85O5998C92O6014C98O6044C103O5998C108O6057C115O6073C121O6103C126O6057C131O6116C138O6132C144O6163C149O6116C155O6175,,
code-creation,LazyCompile,10,156691,0x3d286263256,280,setupWebCrypto node:internal/bootstrap/pre_execution:196:24,0x3d28624cc50,~
code-source-info,0x3d286263256,100,6309,7539,C0O6309C8O6317C13O6329C18O6336C23O6346C33O6381C39O6381C45O6439C46O6446C47O6461C48O6461C50O6475C61O6496C76O6564C107O6564C120O6475C125O6843C133O6847C138O6872C144O6892C158O6906C162O6902C164O6949C175O6970C189O7118C197O6949C202O7139C213O7160C227O7311C235O7139C240O7335C251O7356C265O7510C273O7335C279O7538,,
code-creation,LazyCompile,10,156769,0x3d2862634de,5,get node:internal/bootstrap/node:136:6,0x56f5c95f78,~
script-source,10,node:internal/bootstrap/node,// Hello\x2C and welcome to hacking node.js!\x0d\n//\x0d\n// This file is invoked by `node::RunBootstrapping()` in `src/node.cc`\x2C and is\x0d\n// responsible for setting up node.js core before executing main scripts\x0d\n// under `lib/internal/main/`.\x0d\n//\x0d\n// This file is expected not to perform any asynchronous operations itself\x0d\n// when being executed - those should be done in either\x0d\n// `lib/internal/bootstrap/pre_execution.js` or in main scripts. The majority\x0d\n// of the code here focuses on setting up the global proxy and the process\x0d\n// object in a synchronous manner.\x0d\n// As special caution is given to the performance of the startup process\x2C\x0d\n// many dependencies are invoked lazily.\x0d\n//\x0d\n// Scripts run before this file:\x0d\n// - `lib/internal/per_context/primordials.js`: to save copies of JavaScript\x0d\n//   builtins that won't be affected by user land monkey-patching for internal\x0d\n//   modules to use.\x0d\n// - `lib/internal/bootstrap/loaders.js`: to setup internal binding and\x0d\n//   module loaders\x2C including `process.binding()`\x2C `process._linkedBinding()`\x2C\x0d\n//   `internalBinding()` and `NativeModule`.\x0d\n//\x0d\n// This file is run to bootstrap both the main thread and the worker threads.\x0d\n// After this file is run\x2C certain properties are setup according to the\x0d\n// configuration of the Node.js instance using the files in\x0d\n// `lib/internal/bootstrap/switches/`.\x0d\n//\x0d\n// Then\x2C depending on how the Node.js instance is launched\x2C one of the main\x0d\n// scripts in `lib/internal/main` will be selected by C++ to start the actual\x0d\n// execution. They may run additional setups exported by\x0d\n// `lib/internal/bootstrap/pre_execution.js` depending on the runtime states.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C require\x2C internalBinding\x2C primordials */\x0d\n\x0d\nsetupPrepareStackTrace();\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFill\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPreventExtensions\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectGet\x2C\x0d\n  ReflectSet\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst config = internalBinding('config');\x0d\nconst internalTimers = require('internal/timers');\x0d\nconst { deprecate } = require('internal/util');\x0d\n\x0d\nsetupProcessObject();\x0d\n\x0d\nsetupGlobalProxy();\x0d\nsetupBuffer();\x0d\n\x0d\nprocess.domain = null;\x0d\nprocess._exiting = false;\x0d\n\x0d\n// process.config is serialized config.gypi\x0d\nconst nativeModule = internalBinding('native_module');\x0d\n\x0d\n// TODO(@jasnell): Once this has gone through one full major\x0d\n// release cycle\x2C remove the Proxy and setter and update the\x0d\n// getter to either return a read-only object or always return\x0d\n// a freshly parsed version of nativeModule.config.\x0d\n\x0d\nconst deprecationHandler = {\x0d\n  warned: false\x2C\x0d\n  message: 'Setting process.config is deprecated. ' +\x0d\n           'In the future the property will be read-only.'\x2C\x0d\n  code: 'DEP0150'\x2C\x0d\n  maybeWarn() {\x0d\n    if (!this.warned) {\x0d\n      process.emitWarning(this.message\x2C {\x0d\n        type: 'DeprecationWarning'\x2C\x0d\n        code: this.code\x0d\n      });\x0d\n      this.warned = true;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C key\x2C descriptor) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectDefineProperty(target\x2C key\x2C descriptor);\x0d\n  }\x2C\x0d\n\x0d\n  deleteProperty(target\x2C key) {\x0d\n    this.maybeWarn();\x0d\n    delete target[key];\x0d\n  }\x2C\x0d\n\x0d\n  preventExtensions(target) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectPreventExtensions(target);\x0d\n  }\x2C\x0d\n\x0d\n  set(target\x2C key\x2C value) {\x0d\n    this.maybeWarn();\x0d\n    return ReflectSet(target\x2C key\x2C value);\x0d\n  }\x2C\x0d\n\x0d\n  get(target\x2C key\x2C receiver) {\x0d\n    const val = ReflectGet(target\x2C key\x2C receiver);\x0d\n    if (val != null && typeof val === 'object') {\x0d\n      // eslint-disable-next-line node-core/prefer-primordials\x0d\n      return new Proxy(val\x2C deprecationHandler);\x0d\n    }\x0d\n    return val;\x0d\n  }\x2C\x0d\n\x0d\n  setPrototypeOf(target\x2C proto) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectSetPrototypeOf(target\x2C proto);\x0d\n  }\x0d\n};\x0d\n\x0d\n// eslint-disable-next-line node-core/prefer-primordials\x0d\nlet processConfig = new Proxy(\x0d\n  JSONParse(nativeModule.config)\x2C\x0d\n  deprecationHandler);\x0d\n\x0d\nObjectDefineProperty(process\x2C 'config'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return processConfig; }\x2C\x0d\n  set(value) {\x0d\n    deprecationHandler.maybeWarn();\x0d\n    processConfig = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nrequire('internal/worker/js_transferable').setup();\x0d\n\x0d\n// Bootstrappers for all threads\x2C including worker threads and main thread\x0d\nconst perThreadSetup = require('internal/process/per_thread');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\n// Set up methods on the process object for all threads\x0d\n{\x0d\n  process.dlopen = rawMethods.dlopen;\x0d\n  process.uptime = rawMethods.uptime;\x0d\n\x0d\n  // TODO(joyeecheung): either remove them or make them public\x0d\n  process._getActiveRequests = rawMethods._getActiveRequests;\x0d\n  process._getActiveHandles = rawMethods._getActiveHandles;\x0d\n\x0d\n  process.getActiveResourcesInfo = function() {\x0d\n    const timerCounts = internalTimers.getTimerCounts();\x0d\n    return ArrayPrototypeConcat(\x0d\n      rawMethods._getActiveRequestsInfo()\x2C\x0d\n      rawMethods._getActiveHandlesInfo()\x2C\x0d\n      ArrayPrototypeFill(new Array(timerCounts.timeoutCount)\x2C 'Timeout')\x2C\x0d\n      ArrayPrototypeFill(new Array(timerCounts.immediateCount)\x2C 'Immediate'));\x0d\n  };\x0d\n\x0d\n  // TODO(joyeecheung): remove these\x0d\n  process.reallyExit = rawMethods.reallyExit;\x0d\n  process._kill = rawMethods._kill;\x0d\n\x0d\n  const wrapped = perThreadSetup.wrapProcessMethods(rawMethods);\x0d\n  process._rawDebug = wrapped._rawDebug;\x0d\n  process.cpuUsage = wrapped.cpuUsage;\x0d\n  process.resourceUsage = wrapped.resourceUsage;\x0d\n  process.memoryUsage = wrapped.memoryUsage;\x0d\n  process.kill = wrapped.kill;\x0d\n  process.exit = wrapped.exit;\x0d\n\x0d\n  process.hrtime = perThreadSetup.hrtime;\x0d\n  process.hrtime.bigint = perThreadSetup.hrtimeBigInt;\x0d\n\x0d\n  process.openStdin = function() {\x0d\n    process.stdin.resume();\x0d\n    return process.stdin;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  process.getuid = credentials.getuid;\x0d\n  process.geteuid = credentials.geteuid;\x0d\n  process.getgid = credentials.getgid;\x0d\n  process.getegid = credentials.getegid;\x0d\n  process.getgroups = credentials.getgroups;\x0d\n}\x0d\n\x0d\n// Setup the callbacks that node::AsyncWrap will call when there are hooks to\x0d\n// process. They use the same functions as the JS embedder API. These callbacks\x0d\n// are setup immediately to prevent async_wrap.setupHooks() from being hijacked\x0d\n// and the cost of doing so is negligible.\x0d\nconst { nativeHooks } = require('internal/async_hooks');\x0d\ninternalBinding('async_wrap').setupHooks(nativeHooks);\x0d\n\x0d\nconst {\x0d\n  setupTaskQueue\x2C\x0d\n  queueMicrotask\x0d\n} = require('internal/process/task_queues');\x0d\n\x0d\nif (!config.noBrowserGlobals) {\x0d\n  // Override global console from the one provided by the VM\x0d\n  // to the one implemented by Node.js\x0d\n  // https://console.spec.whatwg.org/#console-namespace\x0d\n  exposeNamespace(globalThis\x2C 'console'\x2C\x0d\n                  createGlobalConsole(globalThis.console));\x0d\n\x0d\n  const { URL\x2C URLSearchParams } = require('internal/url');\x0d\n  // https://url.spec.whatwg.org/#url\x0d\n  exposeInterface(globalThis\x2C 'URL'\x2C URL);\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams\x0d\n  exposeInterface(globalThis\x2C 'URLSearchParams'\x2C URLSearchParams);\x0d\n\x0d\n  const {\x0d\n    TextEncoder\x2C TextDecoder\x0d\n  } = require('internal/encoding');\x0d\n  // https://encoding.spec.whatwg.org/#textencoder\x0d\n  exposeInterface(globalThis\x2C 'TextEncoder'\x2C TextEncoder);\x0d\n  // https://encoding.spec.whatwg.org/#textdecoder\x0d\n  exposeInterface(globalThis\x2C 'TextDecoder'\x2C TextDecoder);\x0d\n\x0d\n  const {\x0d\n    AbortController\x2C\x0d\n    AbortSignal\x2C\x0d\n  } = require('internal/abort_controller');\x0d\n  exposeInterface(globalThis\x2C 'AbortController'\x2C AbortController);\x0d\n  exposeInterface(globalThis\x2C 'AbortSignal'\x2C AbortSignal);\x0d\n\x0d\n  const {\x0d\n    EventTarget\x2C\x0d\n    Event\x2C\x0d\n  } = require('internal/event_target');\x0d\n  exposeInterface(globalThis\x2C 'EventTarget'\x2C EventTarget);\x0d\n  exposeInterface(globalThis\x2C 'Event'\x2C Event);\x0d\n  const {\x0d\n    MessageChannel\x2C\x0d\n    MessagePort\x2C\x0d\n    MessageEvent\x2C\x0d\n  } = require('internal/worker/io');\x0d\n  exposeInterface(globalThis\x2C 'MessageChannel'\x2C MessageChannel);\x0d\n  exposeInterface(globalThis\x2C 'MessagePort'\x2C MessagePort);\x0d\n  exposeInterface(globalThis\x2C 'MessageEvent'\x2C MessageEvent);\x0d\n\x0d\n  // https://html.spec.whatwg.org/multipage/webappapis.html#windoworworkerglobalscope\x0d\n  const timers = require('timers');\x0d\n  defineOperation(globalThis\x2C 'clearInterval'\x2C timers.clearInterval);\x0d\n  defineOperation(globalThis\x2C 'clearTimeout'\x2C timers.clearTimeout);\x0d\n  defineOperation(globalThis\x2C 'setInterval'\x2C timers.setInterval);\x0d\n  defineOperation(globalThis\x2C 'setTimeout'\x2C timers.setTimeout);\x0d\n\x0d\n  defineOperation(globalThis\x2C 'queueMicrotask'\x2C queueMicrotask);\x0d\n\x0d\n  // https://www.w3.org/TR/hr-time-2/#the-performance-attribute\x0d\n  defineReplacableAttribute(globalThis\x2C 'performance'\x2C\x0d\n                            require('perf_hooks').performance);\x0d\n\x0d\n  // Non-standard extensions:\x0d\n  defineOperation(globalThis\x2C 'clearImmediate'\x2C timers.clearImmediate);\x0d\n  defineOperation(globalThis\x2C 'setImmediate'\x2C timers.setImmediate);\x0d\n}\x0d\n\x0d\n// Set the per-Environment callback that will be called\x0d\n// when the TrackingTraceStateObserver updates trace state.\x0d\n// Note that when NODE_USE_V8_PLATFORM is true\x2C the observer is\x0d\n// attached to the per-process TracingController.\x0d\nconst { setTraceCategoryStateUpdateHandler } = internalBinding('trace_events');\x0d\nsetTraceCategoryStateUpdateHandler(perThreadSetup.toggleTraceCategoryState);\x0d\n\x0d\n// process.allowedNodeEnvironmentFlags\x0d\nObjectDefineProperty(process\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    const flags = perThreadSetup.buildAllowedFlags();\x0d\n    process.allowedNodeEnvironmentFlags = flags;\x0d\n    return process.allowedNodeEnvironmentFlags;\x0d\n  }\x2C\x0d\n  // If the user tries to set this to another value\x2C override\x0d\n  // this completely to that value.\x0d\n  set(value) {\x0d\n    ObjectDefineProperty(this\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      writable: true\x0d\n    });\x0d\n  }\x2C\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n// process.assert\x0d\nprocess.assert = deprecate(\x0d\n  perThreadSetup.assert\x2C\x0d\n  'process.assert() is deprecated. Please use the `assert` module instead.'\x2C\x0d\n  'DEP0100');\x0d\n\x0d\n// TODO(joyeecheung): this property has not been well-maintained\x2C should we\x0d\n// deprecate it in favor of a better API?\x0d\nconst { isDebugBuild\x2C hasOpenSSL\x2C hasInspector } = config;\x0d\nconst features = {\x0d\n  inspector: hasInspector\x2C\x0d\n  debug: isDebugBuild\x2C\x0d\n  uv: true\x2C\x0d\n  ipv6: true\x2C  // TODO(bnoordhuis) ping libuv\x0d\n  tls_alpn: hasOpenSSL\x2C\x0d\n  tls_sni: hasOpenSSL\x2C\x0d\n  tls_ocsp: hasOpenSSL\x2C\x0d\n  tls: hasOpenSSL\x2C\x0d\n  // This needs to be dynamic because snapshot is built without code cache.\x0d\n  // TODO(joyeecheung): https://github.com/nodejs/node/issues/31074\x0d\n  // Make it possible to build snapshot with code cache\x0d\n  get cached_builtins() {\x0d\n    return nativeModule.hasCachedBuiltins();\x0d\n  }\x0d\n};\x0d\n\x0d\nObjectDefineProperty(process\x2C 'features'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x2C\x0d\n  configurable: false\x2C\x0d\n  value: features\x0d\n});\x0d\n\x0d\n{\x0d\n  const {\x0d\n    onGlobalUncaughtException\x2C\x0d\n    setUncaughtExceptionCaptureCallback\x2C\x0d\n    hasUncaughtExceptionCaptureCallback\x0d\n  } = require('internal/process/execution');\x0d\n\x0d\n  // For legacy reasons this is still called `_fatalException`\x2C even\x0d\n  // though it is now a global uncaught exception handler.\x0d\n  // The C++ land node::errors::TriggerUncaughtException grabs it\x0d\n  // from the process object because it has been monkey-patchable.\x0d\n  // TODO(joyeecheung): investigate whether process._fatalException\x0d\n  // can be deprecated.\x0d\n  process._fatalException = onGlobalUncaughtException;\x0d\n  process.setUncaughtExceptionCaptureCallback =\x0d\n    setUncaughtExceptionCaptureCallback;\x0d\n  process.hasUncaughtExceptionCaptureCallback =\x0d\n    hasUncaughtExceptionCaptureCallback;\x0d\n}\x0d\n\x0d\nconst { emitWarning } = require('internal/process/warning');\x0d\nprocess.emitWarning = emitWarning;\x0d\n\x0d\n// We initialize the tick callbacks and the timer callbacks last during\x0d\n// bootstrap to make sure that any operation done before this are synchronous.\x0d\n// If any ticks or timers are scheduled before this they are unlikely to work.\x0d\n{\x0d\n  const { nextTick\x2C runNextTicks } = setupTaskQueue();\x0d\n  process.nextTick = nextTick;\x0d\n  // Used to emulate a tick manually in the JS land.\x0d\n  // A better name for this function would be `runNextTicks` but\x0d\n  // it has been exposed to the process object so we keep this legacy name\x0d\n  // TODO(joyeecheung): either remove it or make it public\x0d\n  process._tickCallback = runNextTicks;\x0d\n\x0d\n  const { setupTimers } = internalBinding('timers');\x0d\n  const {\x0d\n    processImmediate\x2C\x0d\n    processTimers\x2C\x0d\n  } = internalTimers.getTimerCallbacks(runNextTicks);\x0d\n  // Sets two per-Environment callbacks that will be run from libuv:\x0d\n  // - processImmediate will be run in the callback of the per-Environment\x0d\n  //   check handle.\x0d\n  // - processTimers will be run in the callback of the per-Environment timer.\x0d\n  setupTimers(processImmediate\x2C processTimers);\x0d\n  // Note: only after this point are the timers effective\x0d\n}\x0d\n\x0d\n// Preload modules so that they are included in the builtin snapshot.\x0d\nrequire('fs');\x0d\nrequire('v8');\x0d\nrequire('vm');\x0d\nrequire('url');\x0d\nrequire('internal/options');\x0d\n\x0d\nfunction setupPrepareStackTrace() {\x0d\n  const {\x0d\n    setEnhanceStackForFatalException\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  const {\x0d\n    prepareStackTrace\x2C\x0d\n    fatalExceptionStackEnhancers: {\x0d\n      beforeInspector\x2C\x0d\n      afterInspector\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  // Tell our PrepareStackTraceCallback passed to the V8 API\x0d\n  // to call prepareStackTrace().\x0d\n  setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  // Set the function used to enhance the error stack for printing\x0d\n  setEnhanceStackForFatalException(beforeInspector\x2C afterInspector);\x0d\n}\x0d\n\x0d\nfunction setupProcessObject() {\x0d\n  const EventEmitter = require('events');\x0d\n  const origProcProto = ObjectGetPrototypeOf(process);\x0d\n  ObjectSetPrototypeOf(origProcProto\x2C EventEmitter.prototype);\x0d\n  FunctionPrototypeCall(EventEmitter\x2C process);\x0d\n  ObjectDefineProperty(process\x2C SymbolToStringTag\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: 'process'\x0d\n  });\x0d\n  // Make process globally available to users by putting it on the global proxy\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: process\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupGlobalProxy() {\x0d\n  ObjectDefineProperty(globalThis\x2C SymbolToStringTag\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: 'global'\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n  globalThis.global = globalThis;\x0d\n}\x0d\n\x0d\nfunction setupBuffer() {\x0d\n  const {\x0d\n    Buffer\x2C\x0d\n    atob\x2C\x0d\n    btoa\x2C\x0d\n  } = require('buffer');\x0d\n  const bufferBinding = internalBinding('buffer');\x0d\n\x0d\n  // Only after this point can C++ use Buffer::New()\x0d\n  bufferBinding.setBufferPrototype(Buffer.prototype);\x0d\n  delete bufferBinding.setBufferPrototype;\x0d\n  delete bufferBinding.zeroFill;\x0d\n\x0d\n  ObjectDefineProperties(globalThis\x2C {\x0d\n    'Buffer': {\x0d\n      __proto__: null\x2C\x0d\n      value: Buffer\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n    'atob': {\x0d\n      __proto__: null\x2C\x0d\n      value: atob\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n    'btoa': {\x0d\n      __proto__: null\x2C\x0d\n      value: btoa\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction createGlobalConsole(consoleFromVM) {\x0d\n  const consoleFromNode =\x0d\n    require('internal/console/global');\x0d\n  if (config.hasInspector) {\x0d\n    const inspector = require('internal/util/inspector');\x0d\n    // This will be exposed by `require('inspector').console` later.\x0d\n    inspector.consoleFromVM = consoleFromVM;\x0d\n    // TODO(joyeecheung): postpone this until the first time inspector\x0d\n    // is activated.\x0d\n    inspector.wrapConsole(consoleFromNode\x2C consoleFromVM);\x0d\n    const { setConsoleExtensionInstaller } = internalBinding('inspector');\x0d\n    // Setup inspector command line API.\x0d\n    setConsoleExtensionInstaller(inspector.installConsoleExtensions);\x0d\n  }\x0d\n  return consoleFromNode;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-namespaces\x0d\nfunction exposeNamespace(target\x2C name\x2C namespaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: namespaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-interfaces\x0d\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: interfaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#define-the-operations\x0d\nfunction defineOperation(target\x2C name\x2C method) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value: method\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#Replaceable\x0d\nfunction defineReplacableAttribute(target\x2C name\x2C value) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value\x2C\x0d\n  });\x0d\n}\x0d\n
code-source-info,0x3d2862634de,10,4287,4315,C0O4292C4O4313,,
code-creation,LazyCompile,10,157496,0x3d2862646c6,52,get node:internal/bootstrap/node:112:6,0x56f5c95ed8,~
code-source-info,0x3d2862646c6,10,3630,3901,C0O3673C14O3673C20O3713C29O3830C35O3852C43O3837C48O3872C49O3885C51O3896,,
code-creation,LazyCompile,10,157559,0x3d286264886,74,setupCustomEvent node:internal/bootstrap/pre_execution:238:26,0x3d28624ccc8,~
code-source-info,0x3d286264886,100,7676,7944,C0O7684C3O7696C8O7703C13O7713C21O7748C27O7748C33O7808C34O7815C35O7848C41O7848C46O7832C51O7885C58O7901C67O7885C73O7943,,
code-creation,LazyCompile,10,157620,0x3d286264a76,75,setupDebugEnv node:internal/bootstrap/pre_execution:290:23,0x3d28624ce30,~
code-source-info,0x3d286264a76,100,9275,9490,C0O9283C6O9283C11O9316C19O9344C24O9348C29O9317C34O9364C42O9368C48O9413C54O9413C59O9450C64O9463C69O9464C74O9489,,
code-creation,LazyCompile,10,157707,0x3d286264e0e,159,initializeDebugEnv node:internal/util/debuglog:22:28,0xf284025818,~
script-source,22,node:internal/util/debuglog,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\x0d\n\x0d\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\x0d\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\x0d\nlet debugImpls;\x0d\nlet testEnabled;\x0d\n\x0d\n\x0d\n// `debugEnv` is initial value of process.env.NODE_DEBUG\x0d\nfunction initializeDebugEnv(debugEnv) {\x0d\n  debugImpls = ObjectCreate(null);\x0d\n  if (debugEnv) {\x0d\n    // This is run before any user code\x2C it's OK not to use primordials.\x0d\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\x0d\n      .replaceAll('*'\x2C '.*')\x0d\n      .replaceAll('\x2C'\x2C '$|^');\x0d\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\x0d\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\x0d\n  } else {\x0d\n    testEnabled = () => false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Emits warning when user sets\x0d\n// NODE_DEBUG=http or NODE_DEBUG=http2.\x0d\nfunction emitWarningIfNeeded(set) {\x0d\n  if ('HTTP' === set || 'HTTP2' === set) {\x0d\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\x0d\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\x0d\n      'data (such as passwords\x2C tokens and authentication headers) ' +\x0d\n      'in the resulting log.');\x0d\n  }\x0d\n}\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction debuglogImpl(enabled\x2C set) {\x0d\n  if (debugImpls[set] === undefined) {\x0d\n    if (enabled) {\x0d\n      const pid = process.pid;\x0d\n      emitWarningIfNeeded(set);\x0d\n      debugImpls[set] = function debug(...args) {\x0d\n        const colors = process.stderr.hasColors && process.stderr.hasColors();\x0d\n        const msg = formatWithOptions({ colors }\x2C ...args);\x0d\n        const coloredPID = inspect(pid\x2C { colors });\x0d\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\x0d\n      };\x0d\n    } else {\x0d\n      debugImpls[set] = noop;\x0d\n    }\x0d\n  }\x0d\n  return debugImpls[set];\x0d\n}\x0d\n\x0d\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\x0d\n// so it needs to be called lazily in top scopes of internal modules\x0d\n// that may be loaded before these run time states are allowed to\x0d\n// be accessed.\x0d\nfunction debuglog(set\x2C cb) {\x0d\n  function init() {\x0d\n    set = StringPrototypeToUpperCase(set);\x0d\n    enabled = testEnabled(set);\x0d\n  }\x0d\n  let debug = (...args) => {\x0d\n    init();\x0d\n    // Only invokes debuglogImpl() when the debug function is\x0d\n    // called for the first time.\x0d\n    debug = debuglogImpl(enabled\x2C set);\x0d\n    if (typeof cb === 'function')\x0d\n      cb(debug);\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  let enabled;\x0d\n  let test = () => {\x0d\n    init();\x0d\n    test = () => enabled;\x0d\n    return enabled;\x0d\n  };\x0d\n  const logger = (...args) => {\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return test();\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n  return logger;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  debuglog\x2C\x0d\n  initializeDebugEnv\x0d\n};\x0d\n
code-source-info,0x3d286264e0e,22,567,1024,C0O583C7O596C14O594C20O619C31O734C44O734C51O779C62O780C69O809C80O810C88O861C100O876C116O861C121O861C123O900C132O912C144O990C151O1002C158O1023,,
code-creation,LazyCompile,10,157896,0x3d28626541e,49,setupStacktracePrinterOnSigint node:internal/bootstrap/pre_execution:268:40,0x3d28624cd68,~
code-source-info,0x3d28626541e,100,8797,8991,C0O8805C8O8810C14O8851C15O8858C16O8894C22O8894C27O8875C32O8946C38O8980C43O8980C48O8990,,
code-creation,LazyCompile,10,157943,0x3d286265636,62,initializeReport node:internal/bootstrap/pre_execution:278:26,0x3d28624cdb8,~
code-source-info,0x3d286265636,100,9020,9249,C0O9020C8O9047C16O9047C21O9036C27O9086C42O9107C47O9203C55O9086C61O9248,,
code-creation,Eval,10,158087,0x3d286265ba6,5, node:internal/process/report:1:1,0x3d2862659b0,~
script-source,102,node:internal/process/report,'use strict';\x0d\nconst {\x0d\n  ERR_SYNTHETIC\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst nr = internalBinding('report');\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n} = primordials;\x0d\nconst report = {\x0d\n  writeReport(file\x2C err) {\x0d\n    if (typeof file === 'object' && file !== null) {\x0d\n      err = file;\x0d\n      file = undefined;\x0d\n    } else if (file !== undefined) {\x0d\n      validateString(file\x2C 'file');\x0d\n    }\x0d\n\x0d\n    if (err === undefined) {\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    } else {\x0d\n      validateObject(err\x2C 'err');\x0d\n    }\x0d\n\x0d\n    return nr.writeReport('JavaScript API'\x2C 'API'\x2C file\x2C err);\x0d\n  }\x2C\x0d\n  getReport(err) {\x0d\n    if (err === undefined)\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    else\x0d\n      validateObject(err\x2C 'err');\x0d\n\x0d\n    return JSONParse(nr.getReport(err));\x0d\n  }\x2C\x0d\n  get directory() {\x0d\n    return nr.getDirectory();\x0d\n  }\x2C\x0d\n  set directory(dir) {\x0d\n    validateString(dir\x2C 'directory');\x0d\n    nr.setDirectory(dir);\x0d\n  }\x2C\x0d\n  get filename() {\x0d\n    return nr.getFilename();\x0d\n  }\x2C\x0d\n  set filename(name) {\x0d\n    validateString(name\x2C 'filename');\x0d\n    nr.setFilename(name);\x0d\n  }\x2C\x0d\n  get compact() {\x0d\n    return nr.getCompact();\x0d\n  }\x2C\x0d\n  set compact(b) {\x0d\n    validateBoolean(b\x2C 'compact');\x0d\n    nr.setCompact(b);\x0d\n  }\x2C\x0d\n  get signal() {\x0d\n    return nr.getSignal();\x0d\n  }\x2C\x0d\n  set signal(sig) {\x0d\n    validateSignalName(sig\x2C 'signal');\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler(sig);\x0d\n    nr.setSignal(sig);\x0d\n  }\x2C\x0d\n  get reportOnFatalError() {\x0d\n    return nr.shouldReportOnFatalError();\x0d\n  }\x2C\x0d\n  set reportOnFatalError(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnFatalError(trigger);\x0d\n  }\x2C\x0d\n  get reportOnSignal() {\x0d\n    return nr.shouldReportOnSignal();\x0d\n  }\x2C\x0d\n  set reportOnSignal(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnSignal(trigger);\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler();\x0d\n  }\x2C\x0d\n  get reportOnUncaughtException() {\x0d\n    return nr.shouldReportOnUncaughtException();\x0d\n  }\x2C\x0d\n  set reportOnUncaughtException(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnUncaughtException(trigger);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addSignalHandler(sig) {\x0d\n  if (nr.shouldReportOnSignal()) {\x0d\n    if (typeof sig !== 'string')\x0d\n      sig = nr.getSignal();\x0d\n\x0d\n    process.on(sig\x2C signalHandler);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeSignalHandler() {\x0d\n  const sig = nr.getSignal();\x0d\n\x0d\n  if (sig)\x0d\n    process.removeListener(sig\x2C signalHandler);\x0d\n}\x0d\n\x0d\nfunction signalHandler(sig) {\x0d\n  nr.writeReport(sig\x2C 'Signal'\x2C null\x2C '');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addSignalHandler\x2C\x0d\n  report\x0d\n};\x0d\n
code-source-info,0x3d286265ba6,102,0,2666,C0O0C4O2666,,
code-creation,Function,10,158231,0x3d2862666b6,306, node:internal/process/report:1:1,0x3d286265b20,~
code-source-info,0x3d2862666b6,102,0,2666,C0O0C48O45C51O45C56O71C61O26C67O174C70O174C75O91C81O111C87O130C93O153C99O218C102O218C106O218C108O257C114O302C119O307C127O709C281O2611C288O2633C294O2654C300O2626C305O2665,,
code-creation,LazyCompile,10,158411,0x3d28626851e,21,initializeReportSignalHandlers node:internal/bootstrap/pre_execution:298:40,0x3d28624ce80,~
code-source-info,0x3d28626851e,100,9594,9694,C0O9631C6O9631C11O9610C16O9672C20O9693,,
code-creation,LazyCompile,10,158460,0x3d286268626,57,addSignalHandler node:internal/process/report:98:26,0x3d286265bd8,~
code-source-info,0x3d286268626,102,2241,2394,C0O2252C5O2259C10O2259C16O2290C22O2326C27O2335C32O2335C38O2355C41O2363C49O2363C56O2393,,
code-creation,LazyCompile,10,158506,0x3d286268bee,92,initializeHeapSnapshotSignalHandlers node:internal/bootstrap/pre_execution:304:46,0x3d28624ced0,~
code-source-info,0x3d286268bee,100,9743,10017,C0O9743C8O9766C18O9766C23O9812C25O9830C26O9837C27O9843C35O9843C40O9873C45O9874C50O9935C58O9935C63O9913C69O9955C74O9963C79O9966C84O9963C91O10016,,
code-creation,LazyCompile,10,158565,0x3d286268e7e,138,setupChildProcessIpcChannel node:internal/bootstrap/pre_execution:437:37,0x3d28624d0a0,~
code-source-info,0x3d286268e7e,100,13955,14501,C0O13963C3O13975C8O13979C14O14018C20O14018C25O14064C33O14087C38O14091C46O14064C52O14118C53O14128C57O14118C61O14212C64O14227C73O14288C76O14296C81O14300C90O14348C93O14363C102O14407C108O14407C113O14431C118O14432C124O14472C127O14487C132O14472C137O14500,,
code-creation,LazyCompile,10,158629,0x3d28626900e,21,assert node:internal/assert:11:16,0xf2840247d8,~
script-source,21,node:internal/assert,'use strict';\x0d\n\x0d\nlet error;\x0d\nfunction lazyError() {\x0d\n  if (!error) {\x0d\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\x0d\n  }\x0d\n  return error;\x0d\n}\x0d\n\x0d\nfunction assert(value\x2C message) {\x0d\n  if (!value) {\x0d\n    const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n    throw new ERR_INTERNAL_ASSERTION(message);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction fail(message) {\x0d\n  const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n  throw new ERR_INTERNAL_ASSERTION(message);\x0d\n}\x0d\n\x0d\nassert.fail = fail;\x0d\n\x0d\nmodule.exports = assert;\x0d\n
code-source-info,0x3d28626900e,21,182,322,C0O204C4O254C7O254C11O272C13O278C18O272C20O321,,
code-creation,Eval,10,159121,0x3d286269e96,5, node:child_process:1:1,0x3d2862699b0,~
script-source,103,node:child_process,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeLastIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  convertToValidSignal\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  kEmptyObject\x2C\x0d\n  promisify\x2C\x0d\n} = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nlet debug = require('internal/util/debuglog').debuglog(\x0d\n  'child_process'\x2C\x0d\n  (fn) => {\x0d\n    debug = fn;\x0d\n  }\x0d\n);\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes: errorCodes\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_CHILD_PROCESS_IPC_REQUIRED\x2C\x0d\n  ERR_CHILD_PROCESS_STDIO_MAXBUFFER\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n} = errorCodes;\x0d\nconst { clearTimeout\x2C setTimeout } = require('timers');\x0d\nconst { getValidatedPath } = require('internal/fs/utils');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst child_process = require('internal/child_process');\x0d\nconst {\x0d\n  getValidStdio\x2C\x0d\n  setupChannel\x2C\x0d\n  ChildProcess\x2C\x0d\n  stdioStringToArray\x0d\n} = child_process;\x0d\n\x0d\nconst MAX_BUFFER = 1024 * 1024;\x0d\n\x0d\n/**\x0d\n * Spawns a new Node.js process + fork.\x0d\n * @param {string|URL} modulePath\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   detached?: boolean;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   execPath?: string;\x0d\n *   execArgv?: string[];\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   killSignal?: string | number;\x0d\n *   silent?: boolean;\x0d\n *   stdio?: Array | string;\x0d\n *   uid?: number;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   timeout?: number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction fork(modulePath\x2C args = []\x2C options) {\x0d\n  modulePath = getValidatedPath(modulePath\x2C 'modulePath');\x0d\n\x0d\n  // Get options and args arguments.\x0d\n  let execArgv;\x0d\n\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C args);\x0d\n  } else if (!ArrayIsArray(args)) {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = {};\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n  } else {\x0d\n    options = { ...options };\x0d\n  }\x0d\n\x0d\n  // Prepare arguments for fork:\x0d\n  execArgv = options.execArgv || process.execArgv;\x0d\n\x0d\n  if (execArgv === process.execArgv && process._eval != null) {\x0d\n    const index = ArrayPrototypeLastIndexOf(execArgv\x2C process._eval);\x0d\n    if (index > 0) {\x0d\n      // Remove the -e switch to avoid fork bombing ourselves.\x0d\n      execArgv = ArrayPrototypeSlice(execArgv);\x0d\n      ArrayPrototypeSplice(execArgv\x2C index - 1\x2C 2);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  args = [...execArgv\x2C modulePath\x2C ...args];\x0d\n\x0d\n  if (typeof options.stdio === 'string') {\x0d\n    options.stdio = stdioStringToArray(options.stdio\x2C 'ipc');\x0d\n  } else if (!ArrayIsArray(options.stdio)) {\x0d\n    // Use a separate fd=3 for the IPC channel. Inherit stdin\x2C stdout\x2C\x0d\n    // and stderr from the parent if silent isn't set.\x0d\n    options.stdio = stdioStringToArray(\x0d\n      options.silent ? 'pipe' : 'inherit'\x2C\x0d\n      'ipc');\x0d\n  } else if (!ArrayPrototypeIncludes(options.stdio\x2C 'ipc')) {\x0d\n    throw new ERR_CHILD_PROCESS_IPC_REQUIRED('options.stdio');\x0d\n  }\x0d\n\x0d\n  options.execPath = options.execPath || process.execPath;\x0d\n  options.shell = false;\x0d\n\x0d\n  return spawn(options.execPath\x2C args\x2C options);\x0d\n}\x0d\n\x0d\nfunction _forkChild(fd\x2C serializationMode) {\x0d\n  // set process.send()\x0d\n  const p = new Pipe(PipeConstants.IPC);\x0d\n  p.open(fd);\x0d\n  p.unref();\x0d\n  const control = setupChannel(process\x2C p\x2C serializationMode);\x0d\n  process.on('newListener'\x2C function onNewListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.refCounted();\x0d\n  });\x0d\n  process.on('removeListener'\x2C function onRemoveListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.unrefCounted();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction normalizeExecArgs(command\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  // Make a shallow copy so we don't clobber the user's options object.\x0d\n  options = { ...options };\x0d\n  options.shell = typeof options.shell === 'string' ? options.shell : true;\x0d\n\x0d\n  return {\x0d\n    file: command\x2C\x0d\n    options: options\x2C\x0d\n    callback: callback\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given command.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cmd?: string;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   encoding?: string;\x0d\n *   shell?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction exec(command\x2C options\x2C callback) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C callback);\x0d\n  return module.exports.execFile(opts.file\x2C\x0d\n                                 opts.options\x2C\x0d\n                                 opts.callback);\x0d\n}\x0d\n\x0d\nconst customPromiseExecFunction = (orig) => {\x0d\n  return (...args) => {\x0d\n    const { promise\x2C resolve\x2C reject } = createDeferredPromise();\x0d\n\x0d\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr) => {\x0d\n      if (err !== null) {\x0d\n        err.stdout = stdout;\x0d\n        err.stderr = stderr;\x0d\n        reject(err);\x0d\n      } else {\x0d\n        resolve({ stdout\x2C stderr });\x0d\n      }\x0d\n    });\x0d\n\x0d\n    return promise;\x0d\n  };\x0d\n};\x0d\n\x0d\nObjectDefineProperty(exec\x2C promisify.custom\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(exec)\x0d\n});\x0d\n\x0d\n/**\x0d\n * Spawns the specified file as a shell.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   encoding?: string;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction execFile(file\x2C args = []\x2C options\x2C callback) {\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args === 'object') {\x0d\n    if (!ArrayIsArray(args)) {\x0d\n      callback = options;\x0d\n      options = args;\x0d\n      args = [];\x0d\n    }\x0d\n  } else if (typeof args === 'function') {\x0d\n    callback = args;\x0d\n    options = {};\x0d\n    args = [];\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C args);\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = {};\x0d\n  } else if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n  }\x0d\n\x0d\n  if (callback && typeof callback !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('callback'\x2C callback);\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    encoding: 'utf8'\x2C\x0d\n    timeout: 0\x2C\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    killSignal: 'SIGTERM'\x2C\x0d\n    cwd: null\x2C\x0d\n    env: null\x2C\x0d\n    shell: false\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  const child = spawn(file\x2C args\x2C {\x0d\n    cwd: options.cwd\x2C\x0d\n    env: options.env\x2C\x0d\n    gid: options.gid\x2C\x0d\n    shell: options.shell\x2C\x0d\n    signal: options.signal\x2C\x0d\n    uid: options.uid\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!options.windowsVerbatimArguments\x0d\n  });\x0d\n\x0d\n  let encoding;\x0d\n  const _stdout = [];\x0d\n  const _stderr = [];\x0d\n  if (options.encoding !== 'buffer' && Buffer.isEncoding(options.encoding)) {\x0d\n    encoding = options.encoding;\x0d\n  } else {\x0d\n    encoding = null;\x0d\n  }\x0d\n  let stdoutLen = 0;\x0d\n  let stderrLen = 0;\x0d\n  let killed = false;\x0d\n  let exited = false;\x0d\n  let timeoutId;\x0d\n\x0d\n  let ex = null;\x0d\n\x0d\n  let cmd = file;\x0d\n\x0d\n  function exithandler(code\x2C signal) {\x0d\n    if (exited) return;\x0d\n    exited = true;\x0d\n\x0d\n    if (timeoutId) {\x0d\n      clearTimeout(timeoutId);\x0d\n      timeoutId = null;\x0d\n    }\x0d\n\x0d\n    if (!callback) return;\x0d\n\x0d\n    // merge chunks\x0d\n    let stdout;\x0d\n    let stderr;\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stdout &&\x0d\n        child.stdout.readableEncoding\x0d\n      )) {\x0d\n      stdout = ArrayPrototypeJoin(_stdout\x2C '');\x0d\n    } else {\x0d\n      stdout = Buffer.concat(_stdout);\x0d\n    }\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stderr &&\x0d\n        child.stderr.readableEncoding\x0d\n      )) {\x0d\n      stderr = ArrayPrototypeJoin(_stderr\x2C '');\x0d\n    } else {\x0d\n      stderr = Buffer.concat(_stderr);\x0d\n    }\x0d\n\x0d\n    if (!ex && code === 0 && signal === null) {\x0d\n      callback(null\x2C stdout\x2C stderr);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (args.length !== 0)\x0d\n      cmd += ` ${ArrayPrototypeJoin(args\x2C ' ')}`;\x0d\n\x0d\n    if (!ex) {\x0d\n      ex = genericNodeError(`Command failed: ${cmd}\\n${stderr}`\x2C {\x0d\n        code: code < 0 ? getSystemErrorName(code) : code\x2C\x0d\n        killed: child.killed || killed\x2C\x0d\n        signal: signal\x0d\n      });\x0d\n    }\x0d\n\x0d\n    ex.cmd = cmd;\x0d\n    callback(ex\x2C stdout\x2C stderr);\x0d\n  }\x0d\n\x0d\n  function errorhandler(e) {\x0d\n    ex = e;\x0d\n\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    exithandler();\x0d\n  }\x0d\n\x0d\n  function kill() {\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    killed = true;\x0d\n    try {\x0d\n      child.kill(options.killSignal);\x0d\n    } catch (e) {\x0d\n      ex = e;\x0d\n      exithandler();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    timeoutId = setTimeout(function delayedKill() {\x0d\n      kill();\x0d\n      timeoutId = null;\x0d\n    }\x2C options.timeout);\x0d\n  }\x0d\n\x0d\n  if (child.stdout) {\x0d\n    if (encoding)\x0d\n      child.stdout.setEncoding(encoding);\x0d\n\x0d\n    child.stdout.on('data'\x2C function onChildStdout(chunk) {\x0d\n      // Do not need to count the length\x0d\n      if (options.maxBuffer === Infinity) {\x0d\n        ArrayPrototypePush(_stdout\x2C chunk);\x0d\n        return;\x0d\n      }\x0d\n      const encoding = child.stdout.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      const slice = encoding ? StringPrototypeSlice :\x0d\n        (buf\x2C ...args) => buf.slice(...args);\x0d\n      stdoutLen += length;\x0d\n\x0d\n      if (stdoutLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stdoutLen - length);\x0d\n        ArrayPrototypePush(_stdout\x2C slice(chunk\x2C 0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stdout');\x0d\n        kill();\x0d\n      } else {\x0d\n        ArrayPrototypePush(_stdout\x2C chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (child.stderr) {\x0d\n    if (encoding)\x0d\n      child.stderr.setEncoding(encoding);\x0d\n\x0d\n    child.stderr.on('data'\x2C function onChildStderr(chunk) {\x0d\n      // Do not need to count the length\x0d\n      if (options.maxBuffer === Infinity) {\x0d\n        ArrayPrototypePush(_stderr\x2C chunk);\x0d\n        return;\x0d\n      }\x0d\n      const encoding = child.stderr.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      stderrLen += length;\x0d\n\x0d\n      if (stderrLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stderrLen - length);\x0d\n        ArrayPrototypePush(_stderr\x2C\x0d\n                           chunk.slice(0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stderr');\x0d\n        kill();\x0d\n      } else {\x0d\n        ArrayPrototypePush(_stderr\x2C chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  child.addListener('close'\x2C exithandler);\x0d\n  child.addListener('error'\x2C errorhandler);\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\nObjectDefineProperty(execFile\x2C promisify.custom\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(execFile)\x0d\n});\x0d\n\x0d\nfunction normalizeSpawnArguments(file\x2C args\x2C options) {\x0d\n  validateString(file\x2C 'file');\x0d\n\x0d\n  if (file.length === 0)\x0d\n    throw new ERR_INVALID_ARG_VALUE('file'\x2C file\x2C 'cannot be empty');\x0d\n\x0d\n  if (ArrayIsArray(args)) {\x0d\n    args = ArrayPrototypeSlice(args);\x0d\n  } else if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('args'\x2C 'object'\x2C args);\x0d\n  } else {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options === undefined)\x0d\n    options = kEmptyObject;\x0d\n  else\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n  let cwd = options.cwd;\x0d\n\x0d\n  // Validate the cwd\x2C if present.\x0d\n  if (cwd != null) {\x0d\n    cwd = getValidatedPath(cwd\x2C 'options.cwd');\x0d\n  }\x0d\n\x0d\n  // Validate detached\x2C if present.\x0d\n  if (options.detached != null) {\x0d\n    validateBoolean(options.detached\x2C 'options.detached');\x0d\n  }\x0d\n\x0d\n  // Validate the uid\x2C if present.\x0d\n  if (options.uid != null && !isInt32(options.uid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.uid'\x2C 'int32'\x2C options.uid);\x0d\n  }\x0d\n\x0d\n  // Validate the gid\x2C if present.\x0d\n  if (options.gid != null && !isInt32(options.gid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.gid'\x2C 'int32'\x2C options.gid);\x0d\n  }\x0d\n\x0d\n  // Validate the shell\x2C if present.\x0d\n  if (options.shell != null &&\x0d\n      typeof options.shell !== 'boolean' &&\x0d\n      typeof options.shell !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.shell'\x2C\x0d\n                                   ['boolean'\x2C 'string']\x2C options.shell);\x0d\n  }\x0d\n\x0d\n  // Validate argv0\x2C if present.\x0d\n  if (options.argv0 != null) {\x0d\n    validateString(options.argv0\x2C 'options.argv0');\x0d\n  }\x0d\n\x0d\n  // Validate windowsHide\x2C if present.\x0d\n  if (options.windowsHide != null) {\x0d\n    validateBoolean(options.windowsHide\x2C 'options.windowsHide');\x0d\n  }\x0d\n\x0d\n  // Validate windowsVerbatimArguments\x2C if present.\x0d\n  let { windowsVerbatimArguments } = options;\x0d\n  if (windowsVerbatimArguments != null) {\x0d\n    validateBoolean(windowsVerbatimArguments\x2C\x0d\n                    'options.windowsVerbatimArguments');\x0d\n  }\x0d\n\x0d\n  if (options.shell) {\x0d\n    const command = ArrayPrototypeJoin([file\x2C ...args]\x2C ' ');\x0d\n    // Set the shell\x2C switches\x2C and commands.\x0d\n    if (process.platform === 'win32') {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else\x0d\n        file = process.env.comspec || 'cmd.exe';\x0d\n      // '/d /s /c' is used only for cmd.exe.\x0d\n      if (RegExpPrototypeExec(/^(?:.*\\\\)?cmd(?:\\.exe)?$/i\x2C file) !== null) {\x0d\n        args = ['/d'\x2C '/s'\x2C '/c'\x2C `"${command}"`];\x0d\n        windowsVerbatimArguments = true;\x0d\n      } else {\x0d\n        args = ['-c'\x2C command];\x0d\n      }\x0d\n    } else {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else if (process.platform === 'android')\x0d\n        file = '/system/bin/sh';\x0d\n      else\x0d\n        file = '/bin/sh';\x0d\n      args = ['-c'\x2C command];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof options.argv0 === 'string') {\x0d\n    ArrayPrototypeUnshift(args\x2C options.argv0);\x0d\n  } else {\x0d\n    ArrayPrototypeUnshift(args\x2C file);\x0d\n  }\x0d\n\x0d\n  const env = options.env || process.env;\x0d\n  const envPairs = [];\x0d\n\x0d\n  // process.env.NODE_V8_COVERAGE always propagates\x2C making it possible to\x0d\n  // collect coverage for programs that spawn with white-listed environment.\x0d\n  if (process.env.NODE_V8_COVERAGE &&\x0d\n      !ObjectPrototypeHasOwnProperty(options.env || {}\x2C 'NODE_V8_COVERAGE')) {\x0d\n    env.NODE_V8_COVERAGE = process.env.NODE_V8_COVERAGE;\x0d\n  }\x0d\n\x0d\n  let envKeys = [];\x0d\n  // Prototype values are intentionally included.\x0d\n  for (const key in env) {\x0d\n    ArrayPrototypePush(envKeys\x2C key);\x0d\n  }\x0d\n\x0d\n  if (process.platform === 'win32') {\x0d\n    // On Windows env keys are case insensitive. Filter out duplicates\x2C\x0d\n    // keeping only the first one (in lexicographic order)\x0d\n    const sawKey = new SafeSet();\x0d\n    envKeys = ArrayPrototypeFilter(\x0d\n      ArrayPrototypeSort(envKeys)\x2C\x0d\n      (key) => {\x0d\n        const uppercaseKey = StringPrototypeToUpperCase(key);\x0d\n        if (sawKey.has(uppercaseKey)) {\x0d\n          return false;\x0d\n        }\x0d\n        sawKey.add(uppercaseKey);\x0d\n        return true;\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n\x0d\n  for (const key of envKeys) {\x0d\n    const value = env[key];\x0d\n    if (value !== undefined) {\x0d\n      ArrayPrototypePush(envPairs\x2C `${key}=${value}`);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    // Make a shallow copy so we don't clobber the user's options object.\x0d\n    ...options\x2C\x0d\n    args\x2C\x0d\n    cwd\x2C\x0d\n    detached: !!options.detached\x2C\x0d\n    envPairs\x2C\x0d\n    file\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!windowsVerbatimArguments\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction abortChildProcess(child\x2C killSignal) {\x0d\n  if (!child)\x0d\n    return;\x0d\n  try {\x0d\n    if (child.kill(killSignal)) {\x0d\n      child.emit('error'\x2C new AbortError());\x0d\n    }\x0d\n  } catch (err) {\x0d\n    child.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   argv0?: string;\x0d\n *   stdio?: Array | string;\x0d\n *   detached?: boolean;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction spawn(file\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(file\x2C args\x2C options);\x0d\n  validateTimeout(options.timeout);\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const killSignal = sanitizeKillSignal(options.killSignal);\x0d\n  const child = new ChildProcess();\x0d\n\x0d\n  debug('spawn'\x2C options);\x0d\n  child.spawn(options);\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    let timeoutId = setTimeout(() => {\x0d\n      if (timeoutId) {\x0d\n        try {\x0d\n          child.kill(killSignal);\x0d\n        } catch (err) {\x0d\n          child.emit('error'\x2C err);\x0d\n        }\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    }\x2C options.timeout);\x0d\n\x0d\n    child.once('exit'\x2C () => {\x0d\n      if (timeoutId) {\x0d\n        clearTimeout(timeoutId);\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (options.signal) {\x0d\n    const signal = options.signal;\x0d\n    if (signal.aborted) {\x0d\n      process.nextTick(onAbortListener);\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAbortListener\x2C { once: true });\x0d\n      child.once('exit'\x2C\x0d\n                 () => signal.removeEventListener('abort'\x2C onAbortListener));\x0d\n    }\x0d\n\x0d\n    function onAbortListener() {\x0d\n      abortChildProcess(child\x2C killSignal);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process synchronously using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   argv0?: string;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {{\x0d\n *   pid: number;\x0d\n *   output: Array;\x0d\n *   stdout: Buffer | string;\x0d\n *   stderr: Buffer | string;\x0d\n *   status: number | null;\x0d\n *   signal: string | null;\x0d\n *   error: Error;\x0d\n *   }}\x0d\n */\x0d\nfunction spawnSync(file\x2C args\x2C options) {\x0d\n  options = {\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    ...normalizeSpawnArguments(file\x2C args\x2C options)\x0d\n  };\x0d\n\x0d\n  debug('spawnSync'\x2C options);\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  // Validate and translate the kill signal\x2C if present.\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  options.stdio = getValidStdio(options.stdio || 'pipe'\x2C true).stdio;\x0d\n\x0d\n  if (options.input) {\x0d\n    const stdin = options.stdio[0] = { ...options.stdio[0] };\x0d\n    stdin.input = options.input;\x0d\n  }\x0d\n\x0d\n  // We may want to pass data in on any given fd\x2C ensure it is a valid buffer\x0d\n  for (let i = 0; i < options.stdio.length; i++) {\x0d\n    const input = options.stdio[i] && options.stdio[i].input;\x0d\n    if (input != null) {\x0d\n      const pipe = options.stdio[i] = { ...options.stdio[i] };\x0d\n      if (isArrayBufferView(input)) {\x0d\n        pipe.input = input;\x0d\n      } else if (typeof input === 'string') {\x0d\n        pipe.input = Buffer.from(input\x2C options.encoding);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE(`options.stdio[${i}]`\x2C\x0d\n                                       ['Buffer'\x2C\x0d\n                                        'TypedArray'\x2C\x0d\n                                        'DataView'\x2C\x0d\n                                        'string']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child_process.spawnSync(options);\x0d\n}\x0d\n\x0d\n\x0d\nfunction checkExecSyncError(ret\x2C args\x2C cmd) {\x0d\n  let err;\x0d\n  if (ret.error) {\x0d\n    err = ret.error;\x0d\n    ObjectAssign(err\x2C ret);\x0d\n  } else if (ret.status !== 0) {\x0d\n    let msg = 'Command failed: ';\x0d\n    msg += cmd || ArrayPrototypeJoin(args\x2C ' ');\x0d\n    if (ret.stderr && ret.stderr.length > 0)\x0d\n      msg += `\\n${ret.stderr.toString()}`;\x0d\n    err = genericNodeError(msg\x2C ret);\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a file as a shell synchronously.\x0d\n * @param {string} command\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execFileSync(command\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(command\x2C args\x2C options);\x0d\n\x0d\n  const inheritStderr = !options.stdio;\x0d\n  const ret = spawnSync(options.file\x2C\x0d\n                        ArrayPrototypeSlice(options.args\x2C 1)\x2C options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C options.args\x2C undefined);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given `command` synchronously.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   shell?: string;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execSync(command\x2C options) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C null);\x0d\n  const inheritStderr = !opts.options.stdio;\x0d\n\x0d\n  const ret = spawnSync(opts.file\x2C opts.options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C opts.args\x2C command);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateTimeout(timeout) {\x0d\n  if (timeout != null && !(NumberIsInteger(timeout) && timeout >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('timeout'\x2C 'an unsigned integer'\x2C timeout);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateMaxBuffer(maxBuffer) {\x0d\n  if (maxBuffer != null && !(typeof maxBuffer === 'number' && maxBuffer >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('options.maxBuffer'\x2C\x0d\n                               'a positive number'\x2C\x0d\n                               maxBuffer);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction sanitizeKillSignal(killSignal) {\x0d\n  if (typeof killSignal === 'string' || typeof killSignal === 'number') {\x0d\n    return convertToValidSignal(killSignal);\x0d\n  } else if (killSignal != null) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.killSignal'\x2C\x0d\n                                   ['string'\x2C 'number']\x2C\x0d\n                                   killSignal);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _forkChild\x2C\x0d\n  ChildProcess\x2C\x0d\n  exec\x2C\x0d\n  execFile\x2C\x0d\n  execFileSync\x2C\x0d\n  execSync\x2C\x0d\n  fork\x2C\x0d\n  spawn\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x3d286269e96,103,0,25941,C0O0C4O25941,,
code-creation,Function,10,160655,0x3d28626a8fe,757, node:child_process:1:1,0x3d286269e10,~
code-source-info,0x3d28626a8fe
code-creation,LazyCompile,10,160904,0x3d28626cf3e,82,debuglog node:internal/util/debuglog:71:18,0xf284025b68,~
code-source-info,0x3d28626cf3e,22,2302,3350,C0O2302C28O2432C32O2432C34O2847C35O2847C37O2870C41O2870C43O2963C48O3169C58O3190C63O3238C74O3169C79O3333C81O3347,,
code-creation,Eval,10,161685,0x3d28626ff0e,5, node:internal/child_process:1:1,0x3d28626f810,~
script-source,104,node:internal/child_process,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_HANDLE_TYPE\x2C\x0d\n    ERR_INVALID_SYNC_FORK_INPUT\x2C\x0d\n    ERR_IPC_CHANNEL_CLOSED\x2C\x0d\n    ERR_IPC_DISCONNECTED\x2C\x0d\n    ERR_IPC_ONE_PIPE\x2C\x0d\n    ERR_IPC_SYNC_FORK\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst EventEmitter = require('events');\x0d\nconst net = require('net');\x0d\nconst dgram = require('dgram');\x0d\nconst inspect = require('internal/util/inspect').inspect;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { Process } = internalBinding('process_wrap');\x0d\nconst {\x0d\n  WriteWrap\x2C\x0d\n  kReadBytesOrError\x2C\x0d\n  kArrayBufferOffset\x2C\x0d\n  kLastWriteWasAsync\x2C\x0d\n  streamBaseState\x0d\n} = internalBinding('stream_wrap');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\nconst { TCP } = internalBinding('tcp_wrap');\x0d\nconst { TTY } = internalBinding('tty_wrap');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst SocketList = require('internal/socket_list');\x0d\nconst { owner_symbol } = require('internal/async_hooks').symbols;\x0d\nconst { convertToValidSignal\x2C deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst spawn_sync = internalBinding('spawn_sync');\x0d\nconst { kStateSymbol } = require('internal/dgram');\x0d\n\x0d\nconst {\x0d\n  UV_EACCES\x2C\x0d\n  UV_EAGAIN\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_EMFILE\x2C\x0d\n  UV_ENFILE\x2C\x0d\n  UV_ENOENT\x2C\x0d\n  UV_ENOSYS\x2C\x0d\n  UV_ESRCH\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { SocketListSend\x2C SocketListReceive } = SocketList;\x0d\n\x0d\n// Lazy loaded for startup performance and to allow monkey patching of\x0d\n// internalBinding('http_parser').HTTPParser.\x0d\nlet freeParser;\x0d\nlet HTTPParser;\x0d\n\x0d\nconst MAX_HANDLE_RETRANSMISSIONS = 3;\x0d\nconst kChannelHandle = Symbol('kChannelHandle');\x0d\nconst kIsUsedAsStdio = Symbol('kIsUsedAsStdio');\x0d\nconst kPendingMessages = Symbol('kPendingMessages');\x0d\n\x0d\n// This object contain function to convert TCP objects to native handle objects\x0d\n// and back again.\x0d\nconst handleConversion = {\x0d\n  'net.Native': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Server': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C server\x2C options) {\x0d\n      return server._handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const server = new net.Server();\x0d\n      server.listen(handle\x2C () => {\x0d\n        emit(server);\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Socket': {\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      if (!socket._handle)\x0d\n        return;\x0d\n\x0d\n      // If the socket was created by net.Server\x0d\n      if (socket.server) {\x0d\n        // The worker should keep track of the socket\x0d\n        message.key = socket.server._connectionKey;\x0d\n\x0d\n        const firstTime = !this[kChannelHandle].sockets.send[message.key];\x0d\n        const socketList = getSocketList('send'\x2C this\x2C message.key);\x0d\n\x0d\n        // The server should no longer expose a .connection property\x0d\n        // and when asked to close it should query the socket status from\x0d\n        // the workers\x0d\n        if (firstTime) socket.server._setupWorker(socketList);\x0d\n\x0d\n        // Act like socket is detached\x0d\n        if (!options.keepOpen)\x0d\n          socket.server._connections--;\x0d\n      }\x0d\n\x0d\n      const handle = socket._handle;\x0d\n\x0d\n      // Remove handle from socket object\x2C it will be closed when the socket\x0d\n      // will be sent\x0d\n      if (!options.keepOpen) {\x0d\n        handle.onread = nop;\x0d\n        socket._handle = null;\x0d\n        socket.setTimeout(0);\x0d\n\x0d\n        if (freeParser === undefined)\x0d\n          freeParser = require('_http_common').freeParser;\x0d\n        if (HTTPParser === undefined)\x0d\n          HTTPParser = require('_http_common').HTTPParser;\x0d\n\x0d\n        // In case of an HTTP connection socket\x2C release the associated\x0d\n        // resources\x0d\n        if (socket.parser && socket.parser instanceof HTTPParser) {\x0d\n          freeParser(socket.parser\x2C null\x2C socket);\x0d\n          if (socket._httpMessage)\x0d\n            socket._httpMessage.detachSocket(socket);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    postSend(message\x2C handle\x2C options\x2C callback\x2C target) {\x0d\n      // Store the handle after successfully sending it\x2C so it can be closed\x0d\n      // when the NODE_HANDLE_ACK is received. If the handle could not be sent\x2C\x0d\n      // just close it.\x0d\n      if (handle && !options.keepOpen) {\x0d\n        if (target) {\x0d\n          // There can only be one _pendingMessage as passing handles are\x0d\n          // processed one at a time: handles are stored in _handleQueue while\x0d\n          // waiting for the NODE_HANDLE_ACK of the current passing handle.\x0d\n          assert(!target._pendingMessage);\x0d\n          target._pendingMessage =\x0d\n              { callback\x2C message\x2C handle\x2C options\x2C retransmissions: 0 };\x0d\n        } else {\x0d\n          handle.close();\x0d\n        }\x0d\n      }\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new net.Socket({\x0d\n        handle: handle\x2C\x0d\n        readable: true\x2C\x0d\n        writable: true\x0d\n      });\x0d\n\x0d\n      // If the socket was created by net.Server we will track the socket\x0d\n      if (message.key) {\x0d\n\x0d\n        // Add socket to connections list\x0d\n        const socketList = getSocketList('got'\x2C this\x2C message.key);\x0d\n        socketList.add({\x0d\n          socket: socket\x0d\n        });\x0d\n      }\x0d\n\x0d\n      emit(socket);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Native': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Socket': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      message.dgramType = socket.type;\x0d\n\x0d\n      return socket[kStateSymbol].handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new dgram.Socket(message.dgramType);\x0d\n\x0d\n      socket.bind(handle\x2C () => {\x0d\n        emit(socket);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction stdioStringToArray(stdio\x2C channel) {\x0d\n  const options = [];\x0d\n\x0d\n  switch (stdio) {\x0d\n    case 'ignore':\x0d\n    case 'overlapped':\x0d\n    case 'pipe': ArrayPrototypePush(options\x2C stdio\x2C stdio\x2C stdio); break;\x0d\n    case 'inherit': ArrayPrototypePush(options\x2C 0\x2C 1\x2C 2); break;\x0d\n    default:\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  if (channel) ArrayPrototypePush(options\x2C channel);\x0d\n\x0d\n  return options;\x0d\n}\x0d\n\x0d\nfunction ChildProcess() {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  this._closesNeeded = 1;\x0d\n  this._closesGot = 0;\x0d\n  this.connected = false;\x0d\n\x0d\n  this.signalCode = null;\x0d\n  this.exitCode = null;\x0d\n  this.killed = false;\x0d\n  this.spawnfile = null;\x0d\n\x0d\n  this._handle = new Process();\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  this._handle.onexit = (exitCode\x2C signalCode) => {\x0d\n    if (signalCode) {\x0d\n      this.signalCode = signalCode;\x0d\n    } else {\x0d\n      this.exitCode = exitCode;\x0d\n    }\x0d\n\x0d\n    if (this.stdin) {\x0d\n      this.stdin.destroy();\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n\x0d\n    if (exitCode < 0) {\x0d\n      const syscall = this.spawnfile ? 'spawn ' + this.spawnfile : 'spawn';\x0d\n      const err = errnoException(exitCode\x2C syscall);\x0d\n\x0d\n      if (this.spawnfile)\x0d\n        err.path = this.spawnfile;\x0d\n\x0d\n      err.spawnargs = ArrayPrototypeSlice(this.spawnargs\x2C 1);\x0d\n      this.emit('error'\x2C err);\x0d\n    } else {\x0d\n      this.emit('exit'\x2C this.exitCode\x2C this.signalCode);\x0d\n    }\x0d\n\x0d\n    // If any of the stdio streams have not been touched\x2C\x0d\n    // then pull all the data through so that it can get the\x0d\n    // eof and emit a 'close' event.\x0d\n    // Do it on nextTick so that the user has one last chance\x0d\n    // to consume the output\x2C if for example they only want to\x0d\n    // start reading the data once the process exits.\x0d\n    process.nextTick(flushStdio\x2C this);\x0d\n\x0d\n    maybeClose(this);\x0d\n  };\x0d\n}\x0d\nObjectSetPrototypeOf(ChildProcess.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(ChildProcess\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction flushStdio(subprocess) {\x0d\n  const stdio = subprocess.stdio;\x0d\n\x0d\n  if (stdio == null) return;\x0d\n\x0d\n  for (let i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    // TODO(addaleax): This doesn't necessarily account for all the ways in\x0d\n    // which data can be read from a stream\x2C e.g. being consumed on the\x0d\n    // native layer directly as a StreamBase.\x0d\n    if (!stream || !stream.readable || stream[kIsUsedAsStdio]) {\x0d\n      continue;\x0d\n    }\x0d\n    stream.resume();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction createSocket(pipe\x2C readable) {\x0d\n  return net.Socket({ handle: pipe\x2C readable\x2C writable: !readable });\x0d\n}\x0d\n\x0d\n\x0d\nfunction getHandleWrapType(stream) {\x0d\n  if (stream instanceof Pipe) return 'pipe';\x0d\n  if (stream instanceof TTY) return 'tty';\x0d\n  if (stream instanceof TCP) return 'tcp';\x0d\n  if (stream instanceof UDP) return 'udp';\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction closePendingHandle(target) {\x0d\n  target._pendingMessage.handle.close();\x0d\n  target._pendingMessage = null;\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.spawn = function(options) {\x0d\n  let i = 0;\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  // If no `stdio` option was given - use default\x0d\n  let stdio = options.stdio || 'pipe';\x0d\n\x0d\n  stdio = getValidStdio(stdio\x2C false);\x0d\n\x0d\n  const ipc = stdio.ipc;\x0d\n  const ipcFd = stdio.ipcFd;\x0d\n  stdio = options.stdio = stdio.stdio;\x0d\n\x0d\n\x0d\n  validateOneOf(options.serialization\x2C 'options.serialization'\x2C\x0d\n                [undefined\x2C 'json'\x2C 'advanced']);\x0d\n  const serialization = options.serialization || 'json';\x0d\n\x0d\n  if (ipc !== undefined) {\x0d\n    // Let child process know about opened IPC channel\x0d\n    if (options.envPairs === undefined)\x0d\n      options.envPairs = [];\x0d\n    else\x0d\n      validateArray(options.envPairs\x2C 'options.envPairs');\x0d\n\x0d\n    ArrayPrototypePush(options.envPairs\x2C `NODE_CHANNEL_FD=${ipcFd}`);\x0d\n    ArrayPrototypePush(options.envPairs\x2C\x0d\n                       `NODE_CHANNEL_SERIALIZATION_MODE=${serialization}`);\x0d\n  }\x0d\n\x0d\n  validateString(options.file\x2C 'options.file');\x0d\n  this.spawnfile = options.file;\x0d\n\x0d\n  if (options.args === undefined) {\x0d\n    this.spawnargs = [];\x0d\n  } else {\x0d\n    validateArray(options.args\x2C 'options.args');\x0d\n    this.spawnargs = options.args;\x0d\n  }\x0d\n\x0d\n  const err = this._handle.spawn(options);\x0d\n\x0d\n  // Run-time errors should emit an error\x2C not throw an exception.\x0d\n  if (err === UV_EACCES ||\x0d\n      err === UV_EAGAIN ||\x0d\n      err === UV_EMFILE ||\x0d\n      err === UV_ENFILE ||\x0d\n      err === UV_ENOENT) {\x0d\n    process.nextTick(onErrorNT\x2C this\x2C err);\x0d\n\x0d\n    // There is no point in continuing when we've hit EMFILE or ENFILE\x0d\n    // because we won't be able to set up the stdio file descriptors.\x0d\n    if (err === UV_EMFILE || err === UV_ENFILE)\x0d\n      return err;\x0d\n  } else if (err) {\x0d\n    // Close all opened fds on error\x0d\n    for (i = 0; i < stdio.length; i++) {\x0d\n      const stream = stdio[i];\x0d\n      if (stream.type === 'pipe') {\x0d\n        stream.handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    throw errnoException(err\x2C 'spawn');\x0d\n  } else {\x0d\n    process.nextTick(onSpawnNT\x2C this);\x0d\n  }\x0d\n\x0d\n  this.pid = this._handle.pid;\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    if (stream.type === 'ignore') continue;\x0d\n\x0d\n    if (stream.ipc) {\x0d\n      this._closesNeeded++;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // The stream is already cloned and piped\x2C thus stop its readable side\x2C\x0d\n    // otherwise we might attempt to read from the stream when at the same time\x0d\n    // the child process does.\x0d\n    if (stream.type === 'wrap') {\x0d\n      stream.handle.reading = false;\x0d\n      stream.handle.readStop();\x0d\n      stream._stdio.pause();\x0d\n      stream._stdio.readableFlowing = false;\x0d\n      stream._stdio._readableState.reading = false;\x0d\n      stream._stdio[kIsUsedAsStdio] = true;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    if (stream.handle) {\x0d\n      // When i === 0 - we're dealing with stdin\x0d\n      // (which is the only one writable pipe).\x0d\n      stream.socket = createSocket(this.pid !== 0 ?\x0d\n        stream.handle : null\x2C i > 0);\x0d\n\x0d\n      if (i > 0 && this.pid !== 0) {\x0d\n        this._closesNeeded++;\x0d\n        stream.socket.on('close'\x2C () => {\x0d\n          maybeClose(this);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.stdin = stdio.length >= 1 && stdio[0].socket !== undefined ?\x0d\n    stdio[0].socket : null;\x0d\n  this.stdout = stdio.length >= 2 && stdio[1].socket !== undefined ?\x0d\n    stdio[1].socket : null;\x0d\n  this.stderr = stdio.length >= 3 && stdio[2].socket !== undefined ?\x0d\n    stdio[2].socket : null;\x0d\n\x0d\n  this.stdio = [];\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++)\x0d\n    ArrayPrototypePush(this.stdio\x2C\x0d\n                       stdio[i].socket === undefined ? null : stdio[i].socket);\x0d\n\x0d\n  // Add .send() method and start listening for IPC data\x0d\n  if (ipc !== undefined) setupChannel(this\x2C ipc\x2C serialization);\x0d\n\x0d\n  return err;\x0d\n};\x0d\n\x0d\n\x0d\nfunction onErrorNT(self\x2C err) {\x0d\n  self._handle.onexit(err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onSpawnNT(self) {\x0d\n  self.emit('spawn');\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.kill = function(sig) {\x0d\n\x0d\n  const signal = sig === 0 ? sig :\x0d\n    convertToValidSignal(sig === undefined ? 'SIGTERM' : sig);\x0d\n\x0d\n  if (this._handle) {\x0d\n    const err = this._handle.kill(signal);\x0d\n    if (err === 0) {\x0d\n      /* Success. */\x0d\n      this.killed = true;\x0d\n      return true;\x0d\n    }\x0d\n    if (err === UV_ESRCH) {\x0d\n      /* Already dead. */\x0d\n    } else if (err === UV_EINVAL || err === UV_ENOSYS) {\x0d\n      /* The underlying platform doesn't support this signal. */\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n    } else {\x0d\n      /* Other error\x2C almost certainly EPERM. */\x0d\n      this.emit('error'\x2C errnoException(err\x2C 'kill'));\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /* Kill didn't succeed. */\x0d\n  return false;\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.ref = function() {\x0d\n  if (this._handle) this._handle.ref();\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.unref = function() {\x0d\n  if (this._handle) this._handle.unref();\x0d\n};\x0d\n\x0d\nclass Control extends EventEmitter {\x0d\n  #channel = null;\x0d\n  #refs = 0;\x0d\n  #refExplicitlySet = false;\x0d\n\x0d\n  constructor(channel) {\x0d\n    super();\x0d\n    this.#channel = channel;\x0d\n    this[kPendingMessages] = [];\x0d\n  }\x0d\n\x0d\n  // The methods keeping track of the counter are being used to track the\x0d\n  // listener count on the child process object as well as when writes are\x0d\n  // in progress. Once the user has explicitly requested a certain state\x2C these\x0d\n  // methods become no-ops in order to not interfere with the user's intentions.\x0d\n  refCounted() {\x0d\n    if (++this.#refs === 1 && !this.#refExplicitlySet) {\x0d\n      this.#channel.ref();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  unrefCounted() {\x0d\n    if (--this.#refs === 0 && !this.#refExplicitlySet) {\x0d\n      this.#channel.unref();\x0d\n      this.emit('unref');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.unref();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this.#channel ? this.#channel.fd : undefined;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst channelDeprecationMsg = '_channel is deprecated. ' +\x0d\n                              'Use ChildProcess.channel instead.';\x0d\n\x0d\nlet serialization;\x0d\nfunction setupChannel(target\x2C channel\x2C serializationMode) {\x0d\n  const control = new Control(channel);\x0d\n  target.channel = control;\x0d\n  target[kChannelHandle] = channel;\x0d\n\x0d\n  ObjectDefineProperty(target\x2C '_channel'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get: deprecate(() => {\x0d\n      return target.channel;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    set: deprecate((val) => {\x0d\n      target.channel = val;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x0d\n  });\x0d\n\x0d\n  target._handleQueue = null;\x0d\n  target._pendingMessage = null;\x0d\n\x0d\n  if (serialization === undefined)\x0d\n    serialization = require('internal/child_process/serialization');\x0d\n  const {\x0d\n    initMessageChannel\x2C\x0d\n    parseChannelMessages\x2C\x0d\n    writeChannelMessage\x0d\n  } = serialization[serializationMode];\x0d\n\x0d\n  let pendingHandle = null;\x0d\n  initMessageChannel(channel);\x0d\n  channel.pendingHandle = null;\x0d\n  channel.onread = function(arrayBuffer) {\x0d\n    const recvHandle = channel.pendingHandle;\x0d\n    channel.pendingHandle = null;\x0d\n    if (arrayBuffer) {\x0d\n      const nread = streamBaseState[kReadBytesOrError];\x0d\n      const offset = streamBaseState[kArrayBufferOffset];\x0d\n      const pool = new Uint8Array(arrayBuffer\x2C offset\x2C nread);\x0d\n      if (recvHandle)\x0d\n        pendingHandle = recvHandle;\x0d\n\x0d\n      for (const message of parseChannelMessages(channel\x2C pool)) {\x0d\n        // There will be at most one NODE_HANDLE message in every chunk we\x0d\n        // read because SCM_RIGHTS messages don't get coalesced. Make sure\x0d\n        // that we deliver the handle with the right message however.\x0d\n        if (isInternal(message)) {\x0d\n          if (message.cmd === 'NODE_HANDLE') {\x0d\n            handleMessage(message\x2C pendingHandle\x2C true);\x0d\n            pendingHandle = null;\x0d\n          } else {\x0d\n            handleMessage(message\x2C undefined\x2C true);\x0d\n          }\x0d\n        } else {\x0d\n          handleMessage(message\x2C undefined\x2C false);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      this.buffering = false;\x0d\n      target.disconnect();\x0d\n      channel.onread = nop;\x0d\n      channel.close();\x0d\n      target.channel = null;\x0d\n      maybeClose(target);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Object where socket lists will live\x0d\n  channel.sockets = { got: {}\x2C send: {} };\x0d\n\x0d\n  // Handlers will go through this\x0d\n  target.on('internalMessage'\x2C function(message\x2C handle) {\x0d\n    // Once acknowledged - continue sending handles.\x0d\n    if (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n        message.cmd === 'NODE_HANDLE_NACK') {\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        if (message.cmd === 'NODE_HANDLE_ACK') {\x0d\n          closePendingHandle(target);\x0d\n        } else if (target._pendingMessage.retransmissions++ ===\x0d\n                   MAX_HANDLE_RETRANSMISSIONS) {\x0d\n          closePendingHandle(target);\x0d\n          process.emitWarning('Handle did not reach the receiving process ' +\x0d\n                              'correctly'\x2C 'SentHandleNotReceivedWarning');\x0d\n        }\x0d\n      }\x0d\n\x0d\n      assert(ArrayIsArray(target._handleQueue));\x0d\n      const queue = target._handleQueue;\x0d\n      target._handleQueue = null;\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        target._send(target._pendingMessage.message\x2C\x0d\n                     target._pendingMessage.handle\x2C\x0d\n                     target._pendingMessage.options\x2C\x0d\n                     target._pendingMessage.callback);\x0d\n      }\x0d\n\x0d\n      for (let i = 0; i < queue.length; i++) {\x0d\n        const args = queue[i];\x0d\n        target._send(args.message\x2C args.handle\x2C args.options\x2C args.callback);\x0d\n      }\x0d\n\x0d\n      // Process a pending disconnect (if any).\x0d\n      if (!target.connected && target.channel && !target._handleQueue)\x0d\n        target._disconnect();\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (message.cmd !== 'NODE_HANDLE') return;\x0d\n\x0d\n    // It is possible that the handle is not received because of some error on\x0d\n    // ancillary data reception such as MSG_CTRUNC. In this case\x2C report the\x0d\n    // sender about it by sending a NODE_HANDLE_NACK message.\x0d\n    if (!handle)\x0d\n      return target._send({ cmd: 'NODE_HANDLE_NACK' }\x2C null\x2C true);\x0d\n\x0d\n    // Acknowledge handle receival. Don't emit error events (for example if\x0d\n    // the other side has disconnected) because this call to send() is not\x0d\n    // initiated by the user and it shouldn't be fatal to be unable to ACK\x0d\n    // a message.\x0d\n    target._send({ cmd: 'NODE_HANDLE_ACK' }\x2C null\x2C true);\x0d\n\x0d\n    const obj = handleConversion[message.type];\x0d\n\x0d\n    // Update simultaneous accepts on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      handle.setSimultaneousAccepts(false);\x0d\n    }\x0d\n\x0d\n    // Convert handle object\x0d\n    obj.got.call(this\x2C message\x2C handle\x2C (handle) => {\x0d\n      handleMessage(message.msg\x2C handle\x2C isInternal(message.msg));\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.on('newListener'\x2C function() {\x0d\n\x0d\n    process.nextTick(() => {\x0d\n      if (!target.channel || !target.listenerCount('message'))\x0d\n        return;\x0d\n\x0d\n      const messages = target.channel[kPendingMessages];\x0d\n      const { length } = messages;\x0d\n      if (!length) return;\x0d\n\x0d\n      for (let i = 0; i < length; i++) {\x0d\n        ReflectApply(target.emit\x2C target\x2C messages[i]);\x0d\n      }\x0d\n\x0d\n      target.channel[kPendingMessages] = [];\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    if (typeof handle === 'function') {\x0d\n      callback = handle;\x0d\n      handle = undefined;\x0d\n      options = undefined;\x0d\n    } else if (typeof options === 'function') {\x0d\n      callback = options;\x0d\n      options = undefined;\x0d\n    } else if (options !== undefined) {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    options = { swallowErrors: false\x2C ...options };\x0d\n\x0d\n    if (this.connected) {\x0d\n      return this._send(message\x2C handle\x2C options\x2C callback);\x0d\n    }\x0d\n    const ex = new ERR_IPC_CHANNEL_CLOSED();\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n    } else {\x0d\n      process.nextTick(() => this.emit('error'\x2C ex));\x0d\n    }\x0d\n    return false;\x0d\n  };\x0d\n\x0d\n  target._send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    assert(this.connected || this.channel);\x0d\n\x0d\n    if (message === undefined)\x0d\n      throw new ERR_MISSING_ARGS('message');\x0d\n\x0d\n    // Non-serializable messages should not reach the remote\x0d\n    // end point; as any failure in the stringification there\x0d\n    // will result in error message that is weakly consumable.\x0d\n    // So perform a final check on message prior to sending.\x0d\n    if (typeof message !== 'string' &&\x0d\n        typeof message !== 'object' &&\x0d\n        typeof message !== 'number' &&\x0d\n        typeof message !== 'boolean') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'message'\x2C ['string'\x2C 'object'\x2C 'number'\x2C 'boolean']\x2C message);\x0d\n    }\x0d\n\x0d\n    // Support legacy function signature\x0d\n    if (typeof options === 'boolean') {\x0d\n      options = { swallowErrors: options };\x0d\n    }\x0d\n\x0d\n    let obj;\x0d\n\x0d\n    // Package messages with a handle object\x0d\n    if (handle) {\x0d\n      // This message will be handled by an internalMessage event handler\x0d\n      message = {\x0d\n        cmd: 'NODE_HANDLE'\x2C\x0d\n        type: null\x2C\x0d\n        msg: message\x0d\n      };\x0d\n\x0d\n      if (handle instanceof net.Socket) {\x0d\n        message.type = 'net.Socket';\x0d\n      } else if (handle instanceof net.Server) {\x0d\n        message.type = 'net.Server';\x0d\n      } else if (handle instanceof TCP || handle instanceof Pipe) {\x0d\n        message.type = 'net.Native';\x0d\n      } else if (handle instanceof dgram.Socket) {\x0d\n        message.type = 'dgram.Socket';\x0d\n      } else if (handle instanceof UDP) {\x0d\n        message.type = 'dgram.Native';\x0d\n      } else {\x0d\n        throw new ERR_INVALID_HANDLE_TYPE();\x0d\n      }\x0d\n\x0d\n      // Queue-up message and handle if we haven't received ACK yet.\x0d\n      if (this._handleQueue) {\x0d\n        ArrayPrototypePush(this._handleQueue\x2C {\x0d\n          callback: callback\x2C\x0d\n          handle: handle\x2C\x0d\n          options: options\x2C\x0d\n          message: message.msg\x2C\x0d\n        });\x0d\n        return this._handleQueue.length === 1;\x0d\n      }\x0d\n\x0d\n      obj = handleConversion[message.type];\x0d\n\x0d\n      // convert TCP object to native handle object\x0d\n      handle = ReflectApply(handleConversion[message.type].send\x2C\x0d\n                            target\x2C [message\x2C handle\x2C options]);\x0d\n\x0d\n      // If handle was sent twice\x2C or it is impossible to get native handle\x0d\n      // out of it - just send a text without the handle.\x0d\n      if (!handle)\x0d\n        message = message.msg;\x0d\n\x0d\n      // Update simultaneous accepts on Windows\x0d\n      if (obj.simultaneousAccepts && process.platform === 'win32') {\x0d\n        handle.setSimultaneousAccepts(true);\x0d\n      }\x0d\n    } else if (this._handleQueue &&\x0d\n               !(message && (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n                             message.cmd === 'NODE_HANDLE_NACK'))) {\x0d\n      // Queue request anyway to avoid out-of-order messages.\x0d\n      ArrayPrototypePush(this._handleQueue\x2C {\x0d\n        callback: callback\x2C\x0d\n        handle: null\x2C\x0d\n        options: options\x2C\x0d\n        message: message\x2C\x0d\n      });\x0d\n      return this._handleQueue.length === 1;\x0d\n    }\x0d\n\x0d\n    const req = new WriteWrap();\x0d\n\x0d\n    const err = writeChannelMessage(channel\x2C req\x2C message\x2C handle);\x0d\n    const wasAsyncWrite = streamBaseState[kLastWriteWasAsync];\x0d\n\x0d\n    if (err === 0) {\x0d\n      if (handle) {\x0d\n        if (!this._handleQueue)\x0d\n          this._handleQueue = [];\x0d\n        if (obj && obj.postSend)\x0d\n          obj.postSend(message\x2C handle\x2C options\x2C callback\x2C target);\x0d\n      }\x0d\n\x0d\n      if (wasAsyncWrite) {\x0d\n        req.oncomplete = () => {\x0d\n          control.unrefCounted();\x0d\n          if (typeof callback === 'function')\x0d\n            callback(null);\x0d\n        };\x0d\n        control.refCounted();\x0d\n      } else if (typeof callback === 'function') {\x0d\n        process.nextTick(callback\x2C null);\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup handle on error\x0d\n      if (obj && obj.postSend)\x0d\n        obj.postSend(message\x2C handle\x2C options\x2C callback);\x0d\n\x0d\n      if (!options.swallowErrors) {\x0d\n        const ex = errnoException(err\x2C 'write');\x0d\n        if (typeof callback === 'function') {\x0d\n          process.nextTick(callback\x2C ex);\x0d\n        } else {\x0d\n          process.nextTick(() => this.emit('error'\x2C ex));\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    /* If the primary is > 2 read() calls behind\x2C please stop sending. */\x0d\n    return channel.writeQueueSize < (65536 * 2);\x0d\n  };\x0d\n\x0d\n  // Connected will be set to false immediately when a disconnect() is\x0d\n  // requested\x2C even though the channel might still be alive internally to\x0d\n  // process queued messages. The three states are distinguished as follows:\x0d\n  // - disconnect() never requested: channel is not null and connected\x0d\n  //   is true\x0d\n  // - disconnect() requested\x2C messages in the queue: channel is not null\x0d\n  //   and connected is false\x0d\n  // - disconnect() requested\x2C channel actually disconnected: channel is\x0d\n  //   null and connected is false\x0d\n  target.connected = true;\x0d\n\x0d\n  target.disconnect = function() {\x0d\n    if (!this.connected) {\x0d\n      this.emit('error'\x2C new ERR_IPC_DISCONNECTED());\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // Do not allow any new messages to be written.\x0d\n    this.connected = false;\x0d\n\x0d\n    // If there are no queued messages\x2C disconnect immediately. Otherwise\x2C\x0d\n    // postpone the disconnect so that it happens internally after the\x0d\n    // queue is flushed.\x0d\n    if (!this._handleQueue)\x0d\n      this._disconnect();\x0d\n  };\x0d\n\x0d\n  target._disconnect = function() {\x0d\n    assert(this.channel);\x0d\n\x0d\n    // This marks the fact that the channel is actually disconnected.\x0d\n    this.channel = null;\x0d\n    this[kChannelHandle] = null;\x0d\n\x0d\n    if (this._pendingMessage)\x0d\n      closePendingHandle(this);\x0d\n\x0d\n    let fired = false;\x0d\n    function finish() {\x0d\n      if (fired) return;\x0d\n      fired = true;\x0d\n\x0d\n      channel.close();\x0d\n      target.emit('disconnect');\x0d\n    }\x0d\n\x0d\n    // If a message is being read\x2C then wait for it to complete.\x0d\n    if (channel.buffering) {\x0d\n      this.once('message'\x2C finish);\x0d\n      this.once('internalMessage'\x2C finish);\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(finish);\x0d\n  };\x0d\n\x0d\n  function emit(event\x2C message\x2C handle) {\x0d\n    if ('internalMessage' === event || target.listenerCount('message')) {\x0d\n      target.emit(event\x2C message\x2C handle);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(\x0d\n      target.channel[kPendingMessages]\x2C\x0d\n      [event\x2C message\x2C handle]\x0d\n    );\x0d\n  }\x0d\n\x0d\n  function handleMessage(message\x2C handle\x2C internal) {\x0d\n    if (!target.channel)\x0d\n      return;\x0d\n\x0d\n    const eventName = (internal ? 'internalMessage' : 'message');\x0d\n\x0d\n    process.nextTick(emit\x2C eventName\x2C message\x2C handle);\x0d\n  }\x0d\n\x0d\n  channel.readStart();\x0d\n  return control;\x0d\n}\x0d\n\x0d\nconst INTERNAL_PREFIX = 'NODE_';\x0d\nfunction isInternal(message) {\x0d\n  return (message !== null &&\x0d\n          typeof message === 'object' &&\x0d\n          typeof message.cmd === 'string' &&\x0d\n          message.cmd.length > INTERNAL_PREFIX.length &&\x0d\n          StringPrototypeSlice(message.cmd\x2C 0\x2C INTERNAL_PREFIX.length) ===\x0d\n            INTERNAL_PREFIX);\x0d\n}\x0d\n\x0d\nconst nop = FunctionPrototype;\x0d\n\x0d\nfunction getValidStdio(stdio\x2C sync) {\x0d\n  let ipc;\x0d\n  let ipcFd;\x0d\n\x0d\n  // Replace shortcut with an array\x0d\n  if (typeof stdio === 'string') {\x0d\n    stdio = stdioStringToArray(stdio);\x0d\n  } else if (!ArrayIsArray(stdio)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  // At least 3 stdio will be created\x0d\n  // Don't concat() a new Array() because it would be sparse\x2C and\x0d\n  // stdio.reduce() would skip the sparse elements of stdio.\x0d\n  // See https://stackoverflow.com/a/5501711/3561\x0d\n  while (stdio.length < 3) ArrayPrototypePush(stdio\x2C undefined);\x0d\n\x0d\n  // Translate stdio into C++-readable form\x0d\n  // (i.e. PipeWraps or fds)\x0d\n  stdio = ArrayPrototypeReduce(stdio\x2C (acc\x2C stdio\x2C i) => {\x0d\n    function cleanup() {\x0d\n      for (let i = 0; i < acc.length; i++) {\x0d\n        if ((acc[i].type === 'pipe' || acc[i].type === 'ipc') && acc[i].handle)\x0d\n          acc[i].handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Defaults\x0d\n    if (stdio == null) {\x0d\n      stdio = i < 3 ? 'pipe' : 'ignore';\x0d\n    }\x0d\n\x0d\n    if (stdio === 'ignore') {\x0d\n      ArrayPrototypePush(acc\x2C { type: 'ignore' });\x0d\n    } else if (stdio === 'pipe' || stdio === 'overlapped' ||\x0d\n               (typeof stdio === 'number' && stdio < 0)) {\x0d\n      const a = {\x0d\n        type: stdio === 'overlapped' ? 'overlapped' : 'pipe'\x2C\x0d\n        readable: i === 0\x2C\x0d\n        writable: i !== 0\x0d\n      };\x0d\n\x0d\n      if (!sync)\x0d\n        a.handle = new Pipe(PipeConstants.SOCKET);\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C a);\x0d\n    } else if (stdio === 'ipc') {\x0d\n      if (sync || ipc !== undefined) {\x0d\n        // Cleanup previously created pipes\x0d\n        cleanup();\x0d\n        if (!sync)\x0d\n          throw new ERR_IPC_ONE_PIPE();\x0d\n        else\x0d\n          throw new ERR_IPC_SYNC_FORK();\x0d\n      }\x0d\n\x0d\n      ipc = new Pipe(PipeConstants.IPC);\x0d\n      ipcFd = i;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'pipe'\x2C\x0d\n        handle: ipc\x2C\x0d\n        ipc: true\x0d\n      });\x0d\n    } else if (stdio === 'inherit') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'inherit'\x2C\x0d\n        fd: i\x0d\n      });\x0d\n    } else if (typeof stdio === 'number' || typeof stdio.fd === 'number') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'fd'\x2C\x0d\n        fd: typeof stdio === 'number' ? stdio : stdio.fd\x0d\n      });\x0d\n    } else if (getHandleWrapType(stdio) || getHandleWrapType(stdio.handle) ||\x0d\n               getHandleWrapType(stdio._handle)) {\x0d\n      const handle = getHandleWrapType(stdio) ?\x0d\n        stdio :\x0d\n        getHandleWrapType(stdio.handle) ? stdio.handle : stdio._handle;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'wrap'\x2C\x0d\n        wrapType: getHandleWrapType(handle)\x2C\x0d\n        handle: handle\x2C\x0d\n        _stdio: stdio\x0d\n      });\x0d\n    } else if (isArrayBufferView(stdio) || typeof stdio === 'string') {\x0d\n      if (!sync) {\x0d\n        cleanup();\x0d\n        throw new ERR_INVALID_SYNC_FORK_INPUT(inspect(stdio));\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup\x0d\n      cleanup();\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n    }\x0d\n\x0d\n    return acc;\x0d\n  }\x2C []);\x0d\n\x0d\n  return { stdio\x2C ipc\x2C ipcFd };\x0d\n}\x0d\n\x0d\n\x0d\nfunction getSocketList(type\x2C worker\x2C key) {\x0d\n  const sockets = worker[kChannelHandle].sockets[type];\x0d\n  let socketList = sockets[key];\x0d\n  if (!socketList) {\x0d\n    const Construct = type === 'send' ? SocketListSend : SocketListReceive;\x0d\n    socketList = sockets[key] = new Construct(worker\x2C key);\x0d\n  }\x0d\n  return socketList;\x0d\n}\x0d\n\x0d\n\x0d\nfunction maybeClose(subprocess) {\x0d\n  subprocess._closesGot++;\x0d\n\x0d\n  if (subprocess._closesGot === subprocess._closesNeeded) {\x0d\n    subprocess.emit('close'\x2C subprocess.exitCode\x2C subprocess.signalCode);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction spawnSync(options) {\x0d\n  const result = spawn_sync.spawn(options);\x0d\n\x0d\n  if (result.output && options.encoding && options.encoding !== 'buffer') {\x0d\n    for (let i = 0; i < result.output.length; i++) {\x0d\n      if (!result.output[i])\x0d\n        continue;\x0d\n      result.output[i] = result.output[i].toString(options.encoding);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  result.stdout = result.output && result.output[1];\x0d\n  result.stderr = result.output && result.output[2];\x0d\n\x0d\n  if (result.error) {\x0d\n    result.error = errnoException(result.error\x2C 'spawnSync ' + options.file);\x0d\n    result.error.path = options.file;\x0d\n    result.error.spawnargs = ArrayPrototypeSlice(options.args\x2C 1);\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ChildProcess\x2C\x0d\n  kChannelHandle\x2C\x0d\n  setupChannel\x2C\x0d\n  getValidStdio\x2C\x0d\n  stdioStringToArray\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x3d28626ff0e,104,0,32672,C0O0C4O32672,,
code-creation,Function,10,162940,0x3d28627152e,1265, node:internal/child_process:1:1,0x3d28626fe88,~
code-source-info,0x3d28627152e
code-creation,Function,10,163061,0x3d286271ca6,35,<instance_members_initializer> node:internal/child_process:525:3,0x3d286270bf0,~
code-source-info,0x3d286271ca6,104,14231,14290,C3O14242C16O14259C26O14285C34O14290,,
code-creation,Eval,10,164134,0x3d2862760d6,5, node:net:1:1,0x3d286275878,~
script-source,105,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  Boolean\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n  ObjectCreate\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst stream = require('stream');\x0d\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  normalizedArgsSymbol\x2C\x0d\n  makeSyncWrite\x0d\n} = require('internal/net');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  UV_EADDRINUSE\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_ENOTCONN\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst { ShutdownWrap } = internalBinding('stream_wrap');\x0d\nconst {\x0d\n  TCP\x2C\x0d\n  TCPConnectWrap\x2C\x0d\n  constants: TCPConstants\x0d\n} = internalBinding('tcp_wrap');\x0d\nconst {\x0d\n  Pipe\x2C\x0d\n  PipeConnectWrap\x2C\x0d\n  constants: PipeConstants\x0d\n} = internalBinding('pipe_wrap');\x0d\nconst {\x0d\n  newAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst {\x0d\n  writevGeneric\x2C\x0d\n  writeGeneric\x2C\x0d\n  onStreamRead\x2C\x0d\n  kAfterAsyncWrite\x2C\x0d\n  kHandle\x2C\x0d\n  kUpdateTimer\x2C\x0d\n  setStreamTimeout\x2C\x0d\n  kBuffer\x2C\x0d\n  kBufferCb\x2C\x0d\n  kBufferGen\x0d\n} = require('internal/stream_base_commons');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ADDRESS_FAMILY\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FD_TYPE\x2C\x0d\n    ERR_INVALID_IP_ADDRESS\x2C\x0d\n    ERR_INVALID_HANDLE_TYPE\x2C\x0d\n    ERR_SERVER_ALREADY_LISTEN\x2C\x0d\n    ERR_SERVER_NOT_RUNNING\x2C\x0d\n    ERR_SOCKET_CLOSED\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n  errnoException\x2C\x0d\n  exceptionWithHostPort\x2C\x0d\n  genericNodeError\x2C\x0d\n  uvExceptionWithHostPort\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\x0d\nconst {\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n} = require('internal/dtrace');\x0d\n\x0d\n// Lazy loaded to improve startup performance.\x0d\nlet cluster;\x0d\nlet dns;\x0d\nlet BlockList;\x0d\nlet SocketAddress;\x0d\n\x0d\nconst { clearTimeout } = require('timers');\x0d\nconst { kTimeout } = require('internal/timers');\x0d\n\x0d\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\x0d\nconst DEFAULT_IPV6_ADDR = '::';\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nconst kPerfHooksNetConnectContext = Symbol('kPerfHooksNetConnectContext');\x0d\nconst {\x0d\n  hasObserver\x2C\x0d\n  startPerf\x2C\x0d\n  stopPerf\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nfunction getFlags(ipv6Only) {\x0d\n  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;\x0d\n}\x0d\n\x0d\nfunction createHandle(fd\x2C is_server) {\x0d\n  validateInt32(fd\x2C 'fd'\x2C 0);\x0d\n  const type = guessHandleType(fd);\x0d\n  if (type === 'PIPE') {\x0d\n    return new Pipe(\x0d\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  if (type === 'TCP') {\x0d\n    return new TCP(\x0d\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_FD_TYPE(type);\x0d\n}\x0d\n\x0d\n\x0d\nfunction getNewAsyncId(handle) {\x0d\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\x0d\n    newAsyncId() : handle.getAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\nfunction isPipeName(s) {\x0d\n  return typeof s === 'string' && toNumber(s) === false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new TCP or IPC server\x0d\n * @param {{\x0d\n *   allowHalfOpen?: boolean;\x0d\n *   pauseOnConnect?: boolean;\x0d\n *   }} [options]\x0d\n * @param {Function} [connectionListener]\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nfunction createServer(options\x2C connectionListener) {\x0d\n  return new Server(options\x2C connectionListener);\x0d\n}\x0d\n\x0d\n\x0d\n// Target API:\x0d\n//\x0d\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\x0d\n//   ...\x0d\n// });\x0d\n//\x0d\n// There are various forms:\x0d\n//\x0d\n// connect(options\x2C [cb])\x0d\n// connect(port\x2C [host]\x2C [cb])\x0d\n// connect(path\x2C [cb]);\x0d\n//\x0d\nfunction connect(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  const options = normalized[0];\x0d\n  debug('createConnection'\x2C normalized);\x0d\n  const socket = new Socket(options);\x0d\n\x0d\n  if (options.timeout) {\x0d\n    socket.setTimeout(options.timeout);\x0d\n  }\x0d\n\x0d\n  return socket.connect(normalized);\x0d\n}\x0d\n\x0d\n\x0d\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\x0d\n// cb is either a function or null.\x0d\n// Used to normalize arguments of Socket.prototype.connect() and\x0d\n// Server.prototype.listen(). Possible combinations of parameters:\x0d\n//   (options[...][\x2C cb])\x0d\n//   (path[...][\x2C cb])\x0d\n//   ([port][\x2C host][...][\x2C cb])\x0d\n// For Socket.prototype.connect()\x2C the [...] part is ignored\x0d\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\x0d\n// but will not be handled here (handled in listen())\x0d\nfunction normalizeArgs(args) {\x0d\n  let arr;\x0d\n\x0d\n  if (args.length === 0) {\x0d\n    arr = [{}\x2C null];\x0d\n    arr[normalizedArgsSymbol] = true;\x0d\n    return arr;\x0d\n  }\x0d\n\x0d\n  const arg0 = args[0];\x0d\n  let options = {};\x0d\n  if (typeof arg0 === 'object' && arg0 !== null) {\x0d\n    // (options[...][\x2C cb])\x0d\n    options = arg0;\x0d\n  } else if (isPipeName(arg0)) {\x0d\n    // (path[...][\x2C cb])\x0d\n    options.path = arg0;\x0d\n  } else {\x0d\n    // ([port][\x2C host][...][\x2C cb])\x0d\n    options.port = arg0;\x0d\n    if (args.length > 1 && typeof args[1] === 'string') {\x0d\n      options.host = args[1];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const cb = args[args.length - 1];\x0d\n  if (typeof cb !== 'function')\x0d\n    arr = [options\x2C null];\x0d\n  else\x0d\n    arr = [options\x2C cb];\x0d\n\x0d\n  arr[normalizedArgsSymbol] = true;\x0d\n  return arr;\x0d\n}\x0d\n\x0d\n\x0d\n// Called when creating new Socket\x2C or when re-using a closed Socket\x0d\nfunction initSocketHandle(self) {\x0d\n  self._undestroy();\x0d\n  self._sockname = null;\x0d\n\x0d\n  // Handle creation may be deferred to bind() or connect() time.\x0d\n  if (self._handle) {\x0d\n    self._handle[owner_symbol] = self;\x0d\n    self._handle.onread = onStreamRead;\x0d\n    self[async_id_symbol] = getNewAsyncId(self._handle);\x0d\n\x0d\n    let userBuf = self[kBuffer];\x0d\n    if (userBuf) {\x0d\n      const bufGen = self[kBufferGen];\x0d\n      if (bufGen !== null) {\x0d\n        userBuf = bufGen();\x0d\n        if (!isUint8Array(userBuf))\x0d\n          return;\x0d\n        self[kBuffer] = userBuf;\x0d\n      }\x0d\n      self._handle.useUserBuffer(userBuf);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nconst kBytesRead = Symbol('kBytesRead');\x0d\nconst kBytesWritten = Symbol('kBytesWritten');\x0d\nconst kSetNoDelay = Symbol('kSetNoDelay');\x0d\nconst kSetKeepAlive = Symbol('kSetKeepAlive');\x0d\nconst kSetKeepAliveInitialDelay = Symbol('kSetKeepAliveInitialDelay');\x0d\n\x0d\nfunction Socket(options) {\x0d\n  if (!(this instanceof Socket)) return new Socket(options);\x0d\n  if (options?.objectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      'options.objectMode'\x2C\x0d\n      options.objectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      `options.${\x0d\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\x0d\n      }`\x2C\x0d\n      options.readableObjectMode || options.writableObjectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  }\x0d\n  if (typeof options?.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options?.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.connecting = false;\x0d\n  // Problem with this is that users can supply their own handle\x2C that may not\x0d\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\x0d\n  // probably be supplied by async_hooks.\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._hadError = false;\x0d\n  this[kHandle] = null;\x0d\n  this._parent = null;\x0d\n  this._host = null;\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n  this[kTimeout] = null;\x0d\n  this[kBuffer] = null;\x0d\n  this[kBufferCb] = null;\x0d\n  this[kBufferGen] = null;\x0d\n\x0d\n  if (typeof options === 'number')\x0d\n    options = { fd: options }; // Legacy interface.\x0d\n  else\x0d\n    options = { ...options };\x0d\n\x0d\n  // Default to *not* allowing half open sockets.\x0d\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\x0d\n  // For backwards compat do not emit close on destroy.\x0d\n  options.emitClose = false;\x0d\n  options.autoDestroy = true;\x0d\n  // Handle strings directly.\x0d\n  options.decodeStrings = false;\x0d\n  stream.Duplex.call(this\x2C options);\x0d\n\x0d\n  if (options.handle) {\x0d\n    this._handle = options.handle; // private\x0d\n    this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  } else if (options.fd !== undefined) {\x0d\n    const { fd } = options;\x0d\n    let err;\x0d\n\x0d\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\x0d\n    // a valid `PIPE` or `TCP` descriptor\x0d\n    this._handle = createHandle(fd\x2C false);\x0d\n\x0d\n    err = this._handle.open(fd);\x0d\n\x0d\n    // While difficult to fabricate\x2C in some architectures\x0d\n    // `open` may return an error code for valid file descriptors\x0d\n    // which cannot be opened. This is difficult to test as most\x0d\n    // un-openable fds will throw on `createHandle`\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n\x0d\n    if ((fd === 1 || fd === 2) &&\x0d\n        (this._handle instanceof Pipe) && isWindows) {\x0d\n      // Make stdout and stderr blocking on Windows\x0d\n      err = this._handle.setBlocking(true);\x0d\n      if (err)\x0d\n        throw errnoException(err\x2C 'setBlocking');\x0d\n\x0d\n      this._writev = null;\x0d\n      this._write = makeSyncWrite(fd);\x0d\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\x0d\n      // we need to let it do that by turning it into a writable\x2C own\x0d\n      // property.\x0d\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\x0d\n        __proto__: null\x2C\x0d\n        value: 0\x2C writable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const onread = options.onread;\x0d\n  if (onread !== null && typeof onread === 'object' &&\x0d\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\x0d\n      typeof onread.callback === 'function') {\x0d\n    if (typeof onread.buffer === 'function') {\x0d\n      this[kBuffer] = true;\x0d\n      this[kBufferGen] = onread.buffer;\x0d\n    } else {\x0d\n      this[kBuffer] = onread.buffer;\x0d\n    }\x0d\n    this[kBufferCb] = onread.callback;\x0d\n  }\x0d\n\x0d\n  this[kSetNoDelay] = Boolean(options.noDelay);\x0d\n  this[kSetKeepAlive] = Boolean(options.keepAlive);\x0d\n  this[kSetKeepAliveInitialDelay] = ~~(options.keepAliveInitialDelay / 1000);\x0d\n\x0d\n  // Shut down the socket when we're finished with it.\x0d\n  this.on('end'\x2C onReadableStreamEnd);\x0d\n\x0d\n  initSocketHandle(this);\x0d\n\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  // If we have a handle\x2C then start the flow of data into the\x0d\n  // buffer.  if not\x2C then this will happen when we connect\x0d\n  if (this._handle && options.readable !== false) {\x0d\n    if (options.pauseOnCreate) {\x0d\n      // Stop the handle from reading and pause the stream\x0d\n      this._handle.reading = false;\x0d\n      this._handle.readStop();\x0d\n      this.readableFlowing = false;\x0d\n    } else if (!options.manualStart) {\x0d\n      this.read(0);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Reserve properties\x0d\n  this.server = null;\x0d\n  this._server = null;\x0d\n\x0d\n  // Used after `.destroy()`\x0d\n  this[kBytesRead] = 0;\x0d\n  this[kBytesWritten] = 0;\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\x0d\n\x0d\n// Refresh existing timeouts.\x0d\nSocket.prototype._unrefTimer = function _unrefTimer() {\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    if (s[kTimeout])\x0d\n      s[kTimeout].refresh();\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// The user has called .end()\x2C and all the bytes have been\x0d\n// sent out to the other side.\x0d\nSocket.prototype._final = function(cb) {\x0d\n  // If still connecting - defer handling `_final` until 'connect' will happen\x0d\n  if (this.pending) {\x0d\n    debug('_final: not yet connected');\x0d\n    return this.once('connect'\x2C () => this._final(cb));\x0d\n  }\x0d\n\x0d\n  if (!this._handle)\x0d\n    return cb();\x0d\n\x0d\n  debug('_final: not ended\x2C call shutdown()');\x0d\n\x0d\n  const req = new ShutdownWrap();\x0d\n  req.oncomplete = afterShutdown;\x0d\n  req.handle = this._handle;\x0d\n  req.callback = cb;\x0d\n  const err = this._handle.shutdown(req);\x0d\n\x0d\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\x0d\n    return cb();\x0d\n  else if (err !== 0)\x0d\n    return cb(errnoException(err\x2C 'shutdown'));\x0d\n};\x0d\n\x0d\nfunction afterShutdown() {\x0d\n  const self = this.handle[owner_symbol];\x0d\n\x0d\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed\x2C\x0d\n        self._readableState);\x0d\n\x0d\n  this.callback();\x0d\n}\x0d\n\x0d\n// Provide a better error message when we call end() as a result\x0d\n// of the other side sending a FIN.  The standard 'write after end'\x0d\n// is overly vague\x2C and makes it seem like the user's code is to blame.\x0d\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\x0d\n  if (!this.writableEnded) {\x0d\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\x0d\n  }\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  const er = genericNodeError(\x0d\n    'This socket has been ended by the other party'\x2C\x0d\n    { code: 'EPIPE' }\x0d\n  );\x0d\n  if (typeof cb === 'function') {\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\x0d\n  }\x0d\n  this.destroy(er);\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nSocket.prototype.setTimeout = setStreamTimeout;\x0d\n\x0d\n\x0d\nSocket.prototype._onTimeout = function() {\x0d\n  const handle = this._handle;\x0d\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\x0d\n  if (lastWriteQueueSize > 0 && handle) {\x0d\n    // `lastWriteQueueSize !== writeQueueSize` means there is\x0d\n    // an active write in progress\x2C so we suppress the timeout.\x0d\n    const { writeQueueSize } = handle;\x0d\n    if (lastWriteQueueSize !== writeQueueSize) {\x0d\n      this[kLastWriteQueueSize] = writeQueueSize;\x0d\n      this._unrefTimer();\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  debug('_onTimeout');\x0d\n  this.emit('timeout');\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setNoDelay = function(enable) {\x0d\n  // Backwards compatibility: assume true when `enable` is omitted\x0d\n  enable = Boolean(enable === undefined ? true : enable);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setNoDelay && enable !== this[kSetNoDelay]) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    this._handle.setNoDelay(enable);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setKeepAlive = function(enable\x2C initialDelayMsecs) {\x0d\n  enable = Boolean(enable);\x0d\n  const initialDelay = ~~(initialDelayMsecs / 1000);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!this._handle.setKeepAlive) {\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (enable !== this[kSetKeepAlive] ||\x0d\n      (\x0d\n        enable &&\x0d\n        this[kSetKeepAliveInitialDelay] !== initialDelay\x0d\n      )\x0d\n  ) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    this._handle.setKeepAlive(enable\x2C initialDelay);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  return this._getsockname();\x0d\n};\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return this.connecting;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return !this._handle || this.connecting;\x0d\n  }\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    if (this.connecting) {\x0d\n      return 'opening';\x0d\n    } else if (this.readable && this.writable) {\x0d\n      return 'open';\x0d\n    } else if (this.readable && !this.writable) {\x0d\n      return 'readOnly';\x0d\n    } else if (!this.readable && this.writable) {\x0d\n      return 'writeOnly';\x0d\n    }\x0d\n    return 'closed';\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    if (this._handle) {\x0d\n      return this.writableLength;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return this._unrefTimer;\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nfunction tryReadStart(socket) {\x0d\n  // Not already reading\x2C start the flow\x0d\n  debug('Socket._handle.readStart');\x0d\n  socket._handle.reading = true;\x0d\n  const err = socket._handle.readStart();\x0d\n  if (err)\x0d\n    socket.destroy(errnoException(err\x2C 'read'));\x0d\n}\x0d\n\x0d\n// Just call handle.readStart until we have enough in the buffer\x0d\nSocket.prototype._read = function(n) {\x0d\n  debug('_read');\x0d\n\x0d\n  if (this.connecting || !this._handle) {\x0d\n    debug('_read wait for connection');\x0d\n    this.once('connect'\x2C () => this._read(n));\x0d\n  } else if (!this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\x0d\n  stream.Duplex.prototype.end.call(this\x2C\x0d\n                                   data\x2C encoding\x2C callback);\x0d\n  DTRACE_NET_STREAM_END(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.resetAndDestroy = function() {\x0d\n  if (this._handle) {\x0d\n    if (!(this._handle instanceof TCP))\x0d\n      throw new ERR_INVALID_HANDLE_TYPE();\x0d\n    if (this.connecting) {\x0d\n      debug('reset wait for connection');\x0d\n      this.once('connect'\x2C () => this._reset());\x0d\n    } else {\x0d\n      this._reset();\x0d\n    }\x0d\n  } else {\x0d\n    this.destroy(new ERR_SOCKET_CLOSED());\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.pause = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      this._handle.reading) {\x0d\n    this._handle.reading = false;\x0d\n    if (!this.destroyed) {\x0d\n      const err = this._handle.readStop();\x0d\n      if (err)\x0d\n        this.destroy(errnoException(err\x2C 'read'));\x0d\n    }\x0d\n  }\x0d\n  return stream.Duplex.prototype.pause.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.resume = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.resume.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.read = function(n) {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.read.call(this\x2C n);\x0d\n};\x0d\n\x0d\n\x0d\n// Called when the 'end' event is emitted.\x0d\nfunction onReadableStreamEnd() {\x0d\n  if (!this.allowHalfOpen) {\x0d\n    this.write = writeAfterFIN;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.destroySoon = function() {\x0d\n  if (this.writable)\x0d\n    this.end();\x0d\n\x0d\n  if (this.writableFinished)\x0d\n    this.destroy();\x0d\n  else\x0d\n    this.once('finish'\x2C this.destroy);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._destroy = function(exception\x2C cb) {\x0d\n  debug('destroy');\x0d\n\x0d\n  this.connecting = false;\x0d\n\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    clearTimeout(s[kTimeout]);\x0d\n  }\x0d\n\x0d\n  debug('close');\x0d\n  if (this._handle) {\x0d\n    if (this !== process.stderr)\x0d\n      debug('close handle');\x0d\n    const isException = exception ? true : false;\x0d\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\x0d\n    this[kBytesRead] = this._handle.bytesRead;\x0d\n    this[kBytesWritten] = this._handle.bytesWritten;\x0d\n\x0d\n    if (this.resetAndClosing) {\x0d\n      this.resetAndClosing = false;\x0d\n      const err = this._handle.reset(() => {\x0d\n        debug('emit close');\x0d\n        this.emit('close'\x2C isException);\x0d\n      });\x0d\n      if (err)\x0d\n        this.emit('error'\x2C errnoException(err\x2C 'reset'));\x0d\n    } else {\x0d\n      this._handle.close(() => {\x0d\n        debug('emit close');\x0d\n        this.emit('close'\x2C isException);\x0d\n      });\x0d\n    }\x0d\n    this._handle.onread = noop;\x0d\n    this._handle = null;\x0d\n    this._sockname = null;\x0d\n    cb(exception);\x0d\n  } else {\x0d\n    cb(exception);\x0d\n    process.nextTick(emitCloseNT\x2C this);\x0d\n  }\x0d\n\x0d\n  if (this._server) {\x0d\n    debug('has server');\x0d\n    this._server._connections--;\x0d\n    if (this._server._emitCloseIfDrained) {\x0d\n      this._server._emitCloseIfDrained();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype._reset = function() {\x0d\n  debug('reset connection');\x0d\n  this.resetAndClosing = true;\x0d\n  return this.destroy();\x0d\n};\x0d\n\x0d\nSocket.prototype._getpeername = function() {\x0d\n  if (!this._handle || !this._handle.getpeername) {\x0d\n    return this._peername || {};\x0d\n  } else if (!this._peername) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getpeername(out);\x0d\n    if (err) return out;\x0d\n    this._peername = out;\x0d\n  }\x0d\n  return this._peername;\x0d\n};\x0d\n\x0d\nfunction protoGetter(name\x2C callback) {\x0d\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    get: callback\x0d\n  });\x0d\n}\x0d\n\x0d\nprotoGetter('bytesRead'\x2C function bytesRead() {\x0d\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\x0d\n});\x0d\n\x0d\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\x0d\n  return this._getpeername().address;\x0d\n});\x0d\n\x0d\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\x0d\n  return this._getpeername().family;\x0d\n});\x0d\n\x0d\nprotoGetter('remotePort'\x2C function remotePort() {\x0d\n  return this._getpeername().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._getsockname = function() {\x0d\n  if (!this._handle || !this._handle.getsockname) {\x0d\n    return {};\x0d\n  } else if (!this._sockname) {\x0d\n    this._sockname = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getsockname(this._sockname);\x0d\n  }\x0d\n  return this._sockname;\x0d\n};\x0d\n\x0d\n\x0d\nprotoGetter('localAddress'\x2C function localAddress() {\x0d\n  return this._getsockname().address;\x0d\n});\x0d\n\x0d\n\x0d\nprotoGetter('localPort'\x2C function localPort() {\x0d\n  return this._getsockname().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype[kAfterAsyncWrite] = function() {\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n};\x0d\n\x0d\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\x0d\n  // If we are still connecting\x2C then buffer this for later.\x0d\n  // The Writable logic will buffer up any more writes while\x0d\n  // waiting for this one to be done.\x0d\n  if (this.connecting) {\x0d\n    this._pendingData = data;\x0d\n    this._pendingEncoding = encoding;\x0d\n    this.once('connect'\x2C function connect() {\x0d\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  if (!this._handle) {\x0d\n    cb(new ERR_SOCKET_CLOSED());\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  let req;\x0d\n  if (writev)\x0d\n    req = writevGeneric(this\x2C data\x2C cb);\x0d\n  else\x0d\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\x0d\n  if (req.async)\x0d\n    this[kLastWriteQueueSize] = req.bytes;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._writev = function(chunks\x2C cb) {\x0d\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\x0d\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\x0d\n// really hurt anyone either. This can probably be removed safely if desired.\x0d\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\x0d\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\x0d\n});\x0d\n\x0d\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\x0d\n  let bytes = this._bytesDispatched;\x0d\n  const data = this._pendingData;\x0d\n  const encoding = this._pendingEncoding;\x0d\n  const writableBuffer = this.writableBuffer;\x0d\n\x0d\n  if (!writableBuffer)\x0d\n    return undefined;\x0d\n\x0d\n  for (const el of writableBuffer) {\x0d\n    bytes += el.chunk instanceof Buffer ?\x0d\n      el.chunk.length :\x0d\n      Buffer.byteLength(el.chunk\x2C el.encoding);\x0d\n  }\x0d\n\x0d\n  if (ArrayIsArray(data)) {\x0d\n    // Was a writev\x2C iterate over chunks to get total length\x0d\n    for (let i = 0; i < data.length; i++) {\x0d\n      const chunk = data[i];\x0d\n\x0d\n      if (data.allBuffers || chunk instanceof Buffer)\x0d\n        bytes += chunk.length;\x0d\n      else\x0d\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\x0d\n    }\x0d\n  } else if (data) {\x0d\n    // Writes are either a string or a Buffer.\x0d\n    if (typeof data !== 'string')\x0d\n      bytes += data.length;\x0d\n    else\x0d\n      bytes += Buffer.byteLength(data\x2C encoding);\x0d\n  }\x0d\n\x0d\n  return bytes;\x0d\n});\x0d\n\x0d\n\x0d\nfunction checkBindError(err\x2C port\x2C handle) {\x0d\n  // EADDRINUSE may not be reported until we call listen() or connect().\x0d\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\x0d\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\x0d\n  // bound to the expected port before calling listen() or connect().\x0d\n  //\x0d\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\x0d\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\x0d\n  // really support pipes anyway.\x0d\n  if (err === 0 && port > 0 && handle.getsockname) {\x0d\n    const out = {};\x0d\n    err = handle.getsockname(out);\x0d\n    if (err === 0 && port !== out.port) {\x0d\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\x0d\n      err = UV_EADDRINUSE;\x0d\n    }\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n\x0d\nfunction internalConnect(\x0d\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\x0d\n  // TODO return promise from Socket.prototype.connect which\x0d\n  // wraps _connectReq.\x0d\n\x0d\n  assert(self.connecting);\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (localAddress || localPort) {\x0d\n    if (addressType === 4) {\x0d\n      localAddress = localAddress || DEFAULT_IPV4_ADDR;\x0d\n      err = self._handle.bind(localAddress\x2C localPort);\x0d\n    } else { // addressType === 6\x0d\n      localAddress = localAddress || DEFAULT_IPV6_ADDR;\x0d\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\x0d\n    }\x0d\n    debug('binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\x0d\n          localAddress\x2C localPort\x2C addressType);\x0d\n\x0d\n    err = checkBindError(err\x2C localPort\x2C self._handle);\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\x0d\n      self.destroy(ex);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (addressType === 6 || addressType === 4) {\x0d\n    const req = new TCPConnectWrap();\x0d\n    req.oncomplete = afterConnect;\x0d\n    req.address = address;\x0d\n    req.port = port;\x0d\n    req.localAddress = localAddress;\x0d\n    req.localPort = localPort;\x0d\n\x0d\n    if (addressType === 4)\x0d\n      err = self._handle.connect(req\x2C address\x2C port);\x0d\n    else\x0d\n      err = self._handle.connect6(req\x2C address\x2C port);\x0d\n  } else {\x0d\n    const req = new PipeConnectWrap();\x0d\n    req.address = address;\x0d\n    req.oncomplete = afterConnect;\x0d\n\x0d\n    err = self._handle.connect(req\x2C address\x2C afterConnect);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    const sockname = self._getsockname();\x0d\n    let details;\x0d\n\x0d\n    if (sockname) {\x0d\n      details = sockname.address + ':' + sockname.port;\x0d\n    }\x0d\n\x0d\n    const ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\x0d\n    self.destroy(ex);\x0d\n  } else if ((addressType === 6 || addressType === 4) && hasObserver('net')) {\x0d\n    startPerf(self\x2C kPerfHooksNetConnectContext\x2C { type: 'net'\x2C name: 'connect'\x2C detail: { host: address\x2C port } });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.connect = function(...args) {\x0d\n  let normalized;\x0d\n  // If passed an array\x2C it's treated as an array of arguments that have\x0d\n  // already been normalized (so we don't normalize more than once). This has\x0d\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\x0d\n  // reverted as it had unintended side effects.\x0d\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\x0d\n    normalized = args[0];\x0d\n  } else {\x0d\n    normalized = normalizeArgs(args);\x0d\n  }\x0d\n  const options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  // options.port === null will be checked later.\x0d\n  if (options.port === undefined && options.path == null)\x0d\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\x0d\n\x0d\n  if (this.write !== Socket.prototype.write)\x0d\n    this.write = Socket.prototype.write;\x0d\n\x0d\n  if (this.destroyed) {\x0d\n    this._handle = null;\x0d\n    this._peername = null;\x0d\n    this._sockname = null;\x0d\n  }\x0d\n\x0d\n  const { path } = options;\x0d\n  const pipe = !!path;\x0d\n  debug('pipe'\x2C pipe\x2C path);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this._handle = pipe ?\x0d\n      new Pipe(PipeConstants.SOCKET) :\x0d\n      new TCP(TCPConstants.SOCKET);\x0d\n    initSocketHandle(this);\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('connect'\x2C cb);\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  this.connecting = true;\x0d\n\x0d\n  if (pipe) {\x0d\n    validateString(path\x2C 'options.path');\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\x0d\n    );\x0d\n  } else {\x0d\n    lookupAndConnect(this\x2C options);\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction lookupAndConnect(self\x2C options) {\x0d\n  const { localAddress\x2C localPort } = options;\x0d\n  const host = options.host || 'localhost';\x0d\n  let { port } = options;\x0d\n\x0d\n  if (localAddress && !isIP(localAddress)) {\x0d\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\x0d\n  }\x0d\n\x0d\n  if (localPort) {\x0d\n    validateNumber(localPort\x2C 'options.localPort');\x0d\n  }\x0d\n\x0d\n  if (typeof port !== 'undefined') {\x0d\n    if (typeof port !== 'number' && typeof port !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\x0d\n                                     ['number'\x2C 'string']\x2C port);\x0d\n    }\x0d\n    validatePort(port);\x0d\n  }\x0d\n  port |= 0;\x0d\n\x0d\n  // If host is an IP\x2C skip performing a lookup\x0d\n  const addressType = isIP(host);\x0d\n  if (addressType) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\x0d\n      if (self.connecting)\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (options.lookup !== undefined)\x0d\n    validateFunction(options.lookup\x2C 'options.lookup');\x0d\n\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  const dnsopts = {\x0d\n    family: options.family\x2C\x0d\n    hints: options.hints || 0\x0d\n  };\x0d\n\x0d\n  if (!isWindows &&\x0d\n      dnsopts.family !== 4 &&\x0d\n      dnsopts.family !== 6 &&\x0d\n      dnsopts.hints === 0) {\x0d\n    dnsopts.hints = dns.ADDRCONFIG;\x0d\n  }\x0d\n\x0d\n  debug('connect: find host'\x2C host);\x0d\n  debug('connect: dns options'\x2C dnsopts);\x0d\n  self._host = host;\x0d\n  const lookup = options.lookup || dns.lookup;\x0d\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\x0d\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\x0d\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\x0d\n\x0d\n      // It's possible we were destroyed while looking this up.\x0d\n      // XXX it would be great if we could cancel the promise returned by\x0d\n      // the look up.\x0d\n      if (!self.connecting) return;\x0d\n\x0d\n      if (err) {\x0d\n        // net.createConnection() creates a net.Socket object and immediately\x0d\n        // calls net.Socket.connect() on it (that's us). There are no event\x0d\n        // listeners registered yet so defer the error event to the next tick.\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (!isIP(ip)) {\x0d\n        err = new ERR_INVALID_IP_ADDRESS(ip);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (addressType !== 4 && addressType !== 6) {\x0d\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\x0d\n                                             options.host\x2C\x0d\n                                             options.port);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else {\x0d\n        self._unrefTimer();\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n      }\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction connectErrorNT(self\x2C err) {\x0d\n  self.destroy(err);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.ref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.ref === 'function') {\x0d\n    this._handle.ref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.unref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.unref === 'function') {\x0d\n    this._handle.unref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  // Callback may come after call to destroy\x0d\n  if (self.destroyed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  debug('afterConnect');\x0d\n\x0d\n  assert(self.connecting);\x0d\n  self.connecting = false;\x0d\n  self._sockname = null;\x0d\n\x0d\n  if (status === 0) {\x0d\n    if (self.readable && !readable) {\x0d\n      self.push(null);\x0d\n      self.read();\x0d\n    }\x0d\n    if (self.writable && !writable) {\x0d\n      self.end();\x0d\n    }\x0d\n    self._unrefTimer();\x0d\n\x0d\n    if (self[kSetNoDelay] && self._handle.setNoDelay) {\x0d\n      self._handle.setNoDelay(true);\x0d\n    }\x0d\n\x0d\n    if (self[kSetKeepAlive] && self._handle.setKeepAlive) {\x0d\n      self._handle.setKeepAlive(true\x2C self[kSetKeepAliveInitialDelay]);\x0d\n    }\x0d\n\x0d\n    self.emit('connect');\x0d\n    self.emit('ready');\x0d\n\x0d\n    // Start the first read\x2C or get an immediate EOF.\x0d\n    // this doesn't actually consume any bytes\x2C because len=0.\x0d\n    if (readable && !self.isPaused())\x0d\n      self.read(0);\x0d\n    if (self[kPerfHooksNetConnectContext] && hasObserver('net')) {\x0d\n      stopPerf(self\x2C kPerfHooksNetConnectContext);\x0d\n    }\x0d\n  } else {\x0d\n    let details;\x0d\n    if (req.localAddress && req.localPort) {\x0d\n      details = req.localAddress + ':' + req.localPort;\x0d\n    }\x0d\n    const ex = exceptionWithHostPort(status\x2C\x0d\n                                     'connect'\x2C\x0d\n                                     req.address\x2C\x0d\n                                     req.port\x2C\x0d\n                                     details);\x0d\n    if (details) {\x0d\n      ex.localAddress = req.localAddress;\x0d\n      ex.localPort = req.localPort;\x0d\n    }\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addAbortSignalOption(self\x2C options) {\x0d\n  if (options?.signal === undefined) {\x0d\n    return;\x0d\n  }\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const { signal } = options;\x0d\n  const onAborted = () => {\x0d\n    self.close();\x0d\n  };\x0d\n  if (signal.aborted) {\x0d\n    process.nextTick(onAborted);\x0d\n  } else {\x0d\n    signal.addEventListener('abort'\x2C onAborted);\x0d\n    self.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Server(options\x2C connectionListener) {\x0d\n  if (!(this instanceof Server))\x0d\n    return new Server(options\x2C connectionListener);\x0d\n\x0d\n  EventEmitter.call(this);\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    connectionListener = options;\x0d\n    options = {};\x0d\n    this.on('connection'\x2C connectionListener);\x0d\n  } else if (options == null || typeof options === 'object') {\x0d\n    options = { ...options };\x0d\n\x0d\n    if (typeof connectionListener === 'function') {\x0d\n      this.on('connection'\x2C connectionListener);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\x0d\n  }\x0d\n  if (typeof options.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this._connections = 0;\x0d\n\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._handle = null;\x0d\n  this._usingWorkers = false;\x0d\n  this._workers = [];\x0d\n  this._unref = false;\x0d\n\x0d\n  this.allowHalfOpen = options.allowHalfOpen || false;\x0d\n  this.pauseOnConnect = !!options.pauseOnConnect;\x0d\n  this.noDelay = Boolean(options.noDelay);\x0d\n  this.keepAlive = Boolean(options.keepAlive);\x0d\n  this.keepAliveInitialDelay = ~~(options.keepAliveInitialDelay / 1000);\x0d\n}\x0d\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Server\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\x0d\n\x0d\n// Returns handle if it can be created\x2C or error code if it can't\x0d\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  let err = 0;\x0d\n  // Assign handle in listen\x2C and clean up if bind or listen fails\x0d\n  let handle;\x0d\n\x0d\n  let isTCP = false;\x0d\n  if (typeof fd === 'number' && fd >= 0) {\x0d\n    try {\x0d\n      handle = createHandle(fd\x2C true);\x0d\n    } catch (e) {\x0d\n      // Not a fd we can listen on.  This will trigger an error.\x0d\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\x0d\n      return UV_EINVAL;\x0d\n    }\x0d\n\x0d\n    err = handle.open(fd);\x0d\n    if (err)\x0d\n      return err;\x0d\n\x0d\n    assert(!address && !port);\x0d\n  } else if (port === -1 && addressType === -1) {\x0d\n    handle = new Pipe(PipeConstants.SERVER);\x0d\n    if (isWindows) {\x0d\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\x0d\n      if (!NumberIsNaN(instances)) {\x0d\n        handle.setPendingInstances(instances);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    handle = new TCP(TCPConstants.SERVER);\x0d\n    isTCP = true;\x0d\n  }\x0d\n\x0d\n  if (address || port || isTCP) {\x0d\n    debug('bind to'\x2C address || 'any');\x0d\n    if (!address) {\x0d\n      // Try binding to ipv6 first\x0d\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\x0d\n      if (err) {\x0d\n        handle.close();\x0d\n        // Fallback to ipv4\x0d\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port);\x0d\n      }\x0d\n    } else if (addressType === 6) {\x0d\n      err = handle.bind6(address\x2C port\x2C flags);\x0d\n    } else {\x0d\n      err = handle.bind(address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\x0d\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\x0d\n\x0d\n  // If there is not yet a handle\x2C we need to create one and bind.\x0d\n  // In the case of a server sent via IPC\x2C we don't need to do this.\x0d\n  if (this._handle) {\x0d\n    debug('setupListenHandle: have a handle already');\x0d\n  } else {\x0d\n    debug('setupListenHandle: create a handle');\x0d\n\x0d\n    let rval = null;\x0d\n\x0d\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\x0d\n    if (!address && typeof fd !== 'number') {\x0d\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\x0d\n\x0d\n      if (typeof rval === 'number') {\x0d\n        rval = null;\x0d\n        address = DEFAULT_IPV4_ADDR;\x0d\n        addressType = 4;\x0d\n      } else {\x0d\n        address = DEFAULT_IPV6_ADDR;\x0d\n        addressType = 6;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (rval === null)\x0d\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n    if (typeof rval === 'number') {\x0d\n      const error = uvExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\x0d\n      process.nextTick(emitErrorNT\x2C this\x2C error);\x0d\n      return;\x0d\n    }\x0d\n    this._handle = rval;\x0d\n  }\x0d\n\x0d\n  this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  this._handle.onconnection = onconnection;\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\x0d\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\x0d\n  // which will thus give us a backlog of 512 entries.\x0d\n  const err = this._handle.listen(backlog || 511);\x0d\n\x0d\n  if (err) {\x0d\n    const ex = uvExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               emitErrorNT\x2C\x0d\n                               this\x2C\x0d\n                               ex);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Generate connection key\x2C this should be unique to the connection\x0d\n  this._connectionKey = addressType + ':' + address + ':' + port;\x0d\n\x0d\n  // Unref the handle if the server was unref'ed prior to listening\x0d\n  if (this._unref)\x0d\n    this.unref();\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitListeningNT\x2C\x0d\n                             this);\x0d\n}\x0d\n\x0d\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitListeningNT(self) {\x0d\n  // Ensure handle hasn't closed\x0d\n  if (self._handle)\x0d\n    self.emit('listening');\x0d\n}\x0d\n\x0d\n\x0d\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\x0d\n                         backlog\x2C fd\x2C exclusive\x2C flags\x2C options) {\x0d\n  exclusive = !!exclusive;\x0d\n\x0d\n  if (cluster === undefined) cluster = require('cluster');\x0d\n\x0d\n  if (cluster.isPrimary || exclusive) {\x0d\n    // Will create a new handle\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const serverQuery = {\x0d\n    address: address\x2C\x0d\n    port: port\x2C\x0d\n    addressType: addressType\x2C\x0d\n    fd: fd\x2C\x0d\n    flags\x2C\x0d\n    backlog\x2C\x0d\n    ...options\x2C\x0d\n  };\x0d\n  // Get the primary's server handle\x2C and listen on it\x0d\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\x0d\n\x0d\n  function listenOnPrimaryHandle(err\x2C handle) {\x0d\n    err = checkBindError(err\x2C port\x2C handle);\x0d\n\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\x0d\n      return server.emit('error'\x2C ex);\x0d\n    }\x0d\n\x0d\n    // Reuse primary's server handle\x0d\n    server._handle = handle;\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype.listen = function(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  let options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  if (this._handle) {\x0d\n    throw new ERR_SERVER_ALREADY_LISTEN();\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('listening'\x2C cb);\x0d\n  }\x0d\n  const backlogFromArgs =\x0d\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\x0d\n    toNumber(args.length > 1 && args[1]) ||\x0d\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\x0d\n\x0d\n  options = options._handle || options.handle || options;\x0d\n  const flags = getFlags(options.ipv6Only);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\x0d\n  if (options instanceof TCP) {\x0d\n    this._handle = options;\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs);\x0d\n    return this;\x0d\n  }\x0d\n  addAbortSignalOption(this\x2C options);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\x0d\n  if (typeof options.fd === 'number' && options.fd >= 0) {\x0d\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\x0d\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\x0d\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\x0d\n  // null\x2C bind to an arbitrary unused port\x0d\n  if (args.length === 0 || typeof args[0] === 'function' ||\x0d\n      (typeof options.port === 'undefined' && 'port' in options) ||\x0d\n      options.port === null) {\x0d\n    options.port = 0;\x0d\n  }\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\x0d\n  // or (options[\x2C cb]) where options.port is specified\x0d\n  // or if options.port is normalized as 0 before\x0d\n  let backlog;\x0d\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\x0d\n    validatePort(options.port\x2C 'options.port');\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    // start TCP server listening on host:port\x0d\n    if (options.host) {\x0d\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\x0d\n                      options.exclusive\x2C flags);\x0d\n    } else { // Undefined host\x2C listens on unspecified address\x0d\n      // Default addressType 4 will be used to search for primary server\x0d\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\x0d\n                      backlog\x2C undefined\x2C options.exclusive);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\x0d\n  // where path or options.path is a UNIX domain socket or Windows pipe\x0d\n  if (options.path && isPipeName(options.path)) {\x0d\n    const pipeName = this._pipeName = options.path;\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    listenInCluster(this\x2C\x0d\n                    pipeName\x2C\x0d\n                    -1\x2C\x0d\n                    -1\x2C\x0d\n                    backlog\x2C\x0d\n                    undefined\x2C\x0d\n                    options.exclusive\x2C\x0d\n                    undefined\x2C\x0d\n                    {\x0d\n                      readableAll: options.readableAll\x2C\x0d\n                      writableAll: options.writableAll\x2C\x0d\n                    });\x0d\n\x0d\n    if (!this._handle) {\x0d\n      // Failed and an error shall be emitted in the next tick.\x0d\n      // Therefore\x2C we directly return.\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    let mode = 0;\x0d\n    if (options.readableAll === true)\x0d\n      mode |= PipeConstants.UV_READABLE;\x0d\n    if (options.writableAll === true)\x0d\n      mode |= PipeConstants.UV_WRITABLE;\x0d\n    if (mode !== 0) {\x0d\n      const err = this._handle.fchmod(mode);\x0d\n      if (err) {\x0d\n        this._handle.close();\x0d\n        this._handle = null;\x0d\n        throw errnoException(err\x2C 'uv_pipe_chmod');\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!(('port' in options) || ('path' in options))) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\x0d\n                                    'must have the property "port" or "path"');\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n};\x0d\n\x0d\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C exclusive\x2C flags) {\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  dns.lookup(address\x2C function doListen(err\x2C ip\x2C addressType) {\x0d\n    if (err) {\x0d\n      self.emit('error'\x2C err);\x0d\n    } else {\x0d\n      addressType = ip ? addressType : 4;\x0d\n      listenInCluster(self\x2C ip\x2C port\x2C addressType\x2C\x0d\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return !!this._handle;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nServer.prototype.address = function() {\x0d\n  if (this._handle && this._handle.getsockname) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getsockname(out);\x0d\n    if (err) {\x0d\n      throw errnoException(err\x2C 'address');\x0d\n    }\x0d\n    return out;\x0d\n  } else if (this._pipeName) {\x0d\n    return this._pipeName;\x0d\n  }\x0d\n  return null;\x0d\n};\x0d\n\x0d\nfunction onconnection(err\x2C clientHandle) {\x0d\n  const handle = this;\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  debug('onconnection');\x0d\n\x0d\n  if (err) {\x0d\n    self.emit('error'\x2C errnoException(err\x2C 'accept'));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (self.maxConnections && self._connections >= self.maxConnections) {\x0d\n    if (clientHandle.getsockname || clientHandle.getpeername) {\x0d\n      const data = ObjectCreate(null);\x0d\n      if (clientHandle.getsockname) {\x0d\n        const localInfo = ObjectCreate(null);\x0d\n        clientHandle.getsockname(localInfo);\x0d\n        data.localAddress = localInfo.address;\x0d\n        data.localPort = localInfo.port;\x0d\n      }\x0d\n      if (clientHandle.getpeername) {\x0d\n        const remoteInfo = ObjectCreate(null);\x0d\n        clientHandle.getpeername(remoteInfo);\x0d\n        data.remoteAddress = remoteInfo.address;\x0d\n        data.remotePort = remoteInfo.port;\x0d\n        data.remoteFamily = remoteInfo.family;\x0d\n      }\x0d\n      self.emit('drop'\x2C data);\x0d\n    } else {\x0d\n      self.emit('drop');\x0d\n    }\x0d\n    clientHandle.close();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const socket = new Socket({\x0d\n    handle: clientHandle\x2C\x0d\n    allowHalfOpen: self.allowHalfOpen\x2C\x0d\n    pauseOnCreate: self.pauseOnConnect\x2C\x0d\n    readable: true\x2C\x0d\n    writable: true\x0d\n  });\x0d\n\x0d\n  if (self.noDelay && clientHandle.setNoDelay) {\x0d\n    socket[kSetNoDelay] = true;\x0d\n    clientHandle.setNoDelay(true);\x0d\n  }\x0d\n  if (self.keepAlive && clientHandle.setKeepAlive) {\x0d\n    socket[kSetKeepAlive] = true;\x0d\n    socket[kSetKeepAliveInitialDelay] = self.keepAliveInitialDelay;\x0d\n    clientHandle.setKeepAlive(true\x2C self.keepAliveInitialDelay);\x0d\n  }\x0d\n\x0d\n  self._connections++;\x0d\n  socket.server = self;\x0d\n  socket._server = self;\x0d\n\x0d\n  DTRACE_NET_SERVER_CONNECTION(socket);\x0d\n  self.emit('connection'\x2C socket);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Gets the number of concurrent connections on the server\x0d\n * @param {Function} cb\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nServer.prototype.getConnections = function(cb) {\x0d\n  const self = this;\x0d\n\x0d\n  function end(err\x2C connections) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               cb\x2C\x0d\n                               err\x2C\x0d\n                               connections);\x0d\n  }\x0d\n\x0d\n  if (!this._usingWorkers) {\x0d\n    end(null\x2C this._connections);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Poll workers\x0d\n  let left = this._workers.length;\x0d\n  let total = this._connections;\x0d\n\x0d\n  function oncount(err\x2C count) {\x0d\n    if (err) {\x0d\n      left = -1;\x0d\n      return end(err);\x0d\n    }\x0d\n\x0d\n    total += count;\x0d\n    if (--left === 0) return end(null\x2C total);\x0d\n  }\x0d\n\x0d\n  for (let n = 0; n < this._workers.length; n++) {\x0d\n    this._workers[n].getConnections(oncount);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nServer.prototype.close = function(cb) {\x0d\n  if (typeof cb === 'function') {\x0d\n    if (!this._handle) {\x0d\n      this.once('close'\x2C function close() {\x0d\n        cb(new ERR_SERVER_NOT_RUNNING());\x0d\n      });\x0d\n    } else {\x0d\n      this.once('close'\x2C cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (this._handle) {\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n  }\x0d\n\x0d\n  if (this._usingWorkers) {\x0d\n    let left = this._workers.length;\x0d\n    const onWorkerClose = () => {\x0d\n      if (--left !== 0) return;\x0d\n\x0d\n      this._connections = 0;\x0d\n      this._emitCloseIfDrained();\x0d\n    };\x0d\n\x0d\n    // Increment connections to be sure that\x2C even if all sockets will be closed\x0d\n    // during polling of workers\x2C `close` event will be emitted only once.\x0d\n    this._connections++;\x0d\n\x0d\n    // Poll workers\x0d\n    for (let n = 0; n < this._workers.length; n++)\x0d\n      this._workers[n].close(onWorkerClose);\x0d\n  } else {\x0d\n    this._emitCloseIfDrained();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype._emitCloseIfDrained = function() {\x0d\n  debug('SERVER _emitCloseIfDrained');\x0d\n\x0d\n  if (this._handle || this._connections) {\x0d\n    debug('SERVER handle? %j   connections? %d'\x2C\x0d\n          !!this._handle\x2C this._connections);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitCloseNT\x2C\x0d\n                             this);\x0d\n};\x0d\n\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  debug('SERVER: emit close');\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\x0d\n  err\x2C event\x2C sock) {\x0d\n\x0d\n  switch (event) {\x0d\n    case 'connection':\x0d\n      sock.destroy(err);\x0d\n      break;\x0d\n    default:\x0d\n      this.emit('error'\x2C err);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return this[kHandle]; }\x2C\x0d\n  set(v) { return this[kHandle] = v; }\x0d\n});\x0d\n\x0d\nServer.prototype._setupWorker = function(socketList) {\x0d\n  this._usingWorkers = true;\x0d\n  this._workers.push(socketList);\x0d\n  socketList.once('exit'\x2C (socketList) => {\x0d\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\x0d\n    this._workers.splice(index\x2C 1);\x0d\n  });\x0d\n};\x0d\n\x0d\nServer.prototype.ref = function() {\x0d\n  this._unref = false;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype.unref = function() {\x0d\n  this._unref = true;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nlet _setSimultaneousAccepts;\x0d\nlet warnSimultaneousAccepts = true;\x0d\n\x0d\nif (isWindows) {\x0d\n  let simultaneousAccepts;\x0d\n\x0d\n  _setSimultaneousAccepts = function(handle) {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n    if (handle === undefined) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (simultaneousAccepts === undefined) {\x0d\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\x0d\n                             process.env.NODE_MANY_ACCEPTS !== '0');\x0d\n    }\x0d\n\x0d\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\x0d\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\x0d\n      handle._simultaneousAccepts = simultaneousAccepts;\x0d\n    }\x0d\n  };\x0d\n} else {\x0d\n  _setSimultaneousAccepts = function() {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _createServerHandle: createServerHandle\x2C\x0d\n  _normalizeArgs: normalizeArgs\x2C\x0d\n  _setSimultaneousAccepts\x2C\x0d\n  get BlockList() {\x0d\n    BlockList ??= require('internal/blocklist').BlockList;\x0d\n    return BlockList;\x0d\n  }\x2C\x0d\n  get SocketAddress() {\x0d\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\x0d\n    return SocketAddress;\x0d\n  }\x2C\x0d\n  connect\x2C\x0d\n  createConnection: connect\x2C\x0d\n  createServer\x2C\x0d\n  isIP: isIP\x2C\x0d\n  isIPv4: isIPv4\x2C\x0d\n  isIPv6: isIPv6\x2C\x0d\n  Server\x2C\x0d\n  Socket\x2C\x0d\n  Stream: Socket\x2C // Legacy naming\x0d\n};\x0d\n
code-source-info,0x3d2862760d6,105,0,53892,C0O0C4O53892,,
code-creation,Function,10,167250,0x3d286279126,2694, node:net:1:1,0x3d286276050,~
code-source-info,0x3d286279126,105,0,53892,C0O0C435O1183C441O1200C447O1226C453O1238C459O1249C465O1265C471O1284C477O1309C482O1334C487O1345C493O1401C499O1401C503O1401C505O1436C511O1436C515O1436C517O1468C523O1468C528O1501C542O1502C548O1468C550O1635C556O1635C561O1560C567O1569C572O1580C577O1591C583O1616C589O1676C595O1676C599O1676C601O1765C604O1765C609O1716C615O1734C621O1748C627O1810C633O1810C638O1799C644O1858C647O1858C652O1838C658O1909C661O1909C666O1892C672O2009C675O2009C680O1953C686O1961C692O1991C698O2109C701O2109C706O2050C712O2059C718O2090C724O2245C730O2245C735O2151C741O2166C752O2208C758O2225C764O2455C770O2455C775O2290C781O2308C787O2325C793O2342C798O2363C804O2375C809O2392C814O2413C820O2425C826O2439C832O2903C838O2903C843O2903C848O2522C854O2555C860O2582C866O2610C872O2636C878O2665C884O2695C890O2727C896O2756C902O2780C908O2807C914O2826C920O2852C926O2873C932O2957C938O2957C943O2940C949O3120C955O3120C960O3001C966O3025C972O3046C978O3064C984O3083C990O3100C996O3181C999O3181C1003O3181C1005O3283C1011O3283C1016O3223C1022O3256C1028O3366C1029O3366C1031O3380C1032O3380C1034O3390C1035O3390C1037O3406C1038O3406C1040O3449C1046O3449C1051O3432C1057O3490C1063O3490C1068O3477C1074O3547C1076O3547C1078O3585C1080O3585C1082O3612C1085O3620C1092O3629C1095O3612C1097O3658C1101O3658C1103O3707C1106O3707C1110O3707C1112O3803C1118O3803C1123O3758C1129O3774C1135O3788C1141O7427C1144O7427C1148O7427C1150O7472C1153O7472C1157O7472C1159O7518C1162O7518C1166O7518C1168O7564C1171O7564C1175O7564C1177O7624C1180O7624C1184O7624C1186O12306C1189O12334C1197O12352C1202O12359C1207O12306C1212O12372C1218O12408C1223O12372C1228O12451C1231O12458C1240O12480C1244O12716C1247O12723C1256O12740C1260O14310C1263O14317C1270O14338C1274O14363C1277O14370C1286O14391C1290O14919C1293O14926C1302O14947C1306O15348C1309O15355C1318O15378C1322O16019C1325O16026C1334O16044C1338O16099C1344O16127C1358O16183C1366O16099C1371O16238C1377O16266C1391O16313C1399O16238C1404O16405C1410O16433C1424O16488C1432O16405C1437O16825C1443O16853C1457O16908C1465O16825C1470O17001C1476O17029C1481O17040C1487O17084C1498O17001C1503O17465C1506O17472C1515O17488C1519O17735C1522O17742C1531O17756C1535O17955C1538O17962C1547O17988C1555O18359C1558O18366C1567O18382C1575O18736C1578O18743C1587O18760C1595O18959C1598O18966C1607O18981C1615O19335C1618O19342C1627O19364C1635O19528C1638O19535C1647O19554C1655O20856C1658O20863C1667O20880C1675O20990C1678O20997C1687O21020C1695O21507C1703O21507C1713O21631C1721O21631C1731O21734C1739O21734C1749O21834C1757O21834C1767O21930C1770O21937C1779O21960C1787O22254C1795O22254C1805O22357C1813O22357C1823O22451C1826O22458C1831O22468C1835O22486C1843O22542C1846O22549C1855O22573C1863O23372C1866O23379C1875O23397C1883O23476C1886O23483C1895O23500C1903O23751C1911O23751C1921O23895C1929O23895C1939O27685C1942O27692C1951O27710C1959O32265C1962O32272C1971O32286C1979O32493C1982O32500C1991O32516C1999O36136C2002O36164C2014O36188C2023O36136C2033O36201C2039O36201C2049O40322C2052O40329C2063O40348C2071O41890C2074O41897C2087O41914C2095O46281C2101O46309C2122O46363C2134O46281C2144O46461C2147O46468C2160O46486C2168O48663C2171O48670C2184O48695C2192O49492C2195O49499C2208O49515C2216O50426C2219O50433C2232O50463C2240O50963C2243O50970C2255O50993C2268O51017C2276O51350C2282O51375C2303O51420C2315O51461C2327O51350C2337O51511C2343O51539C2360O51586C2372O51622C2384O51511C2394O51667C2397O51674C2410O51697C2418O51952C2421O51959C2434O51973C2442O52085C2445O52092C2458O52108C2466O52225C2468O52281C2469O52281C2471O52290C2482O52314C2483O52314C2485O52340C2494O53070C2499O53352C2509O53395C2519O53434C2529O53452C2539O53720C2549O53750C2559O53762C2569O53785C2579O53802C2589O53821C2599O53832C2609O53843C2619O53862C2684O53367C2693O53891,,
code-creation,Eval,10,167907,0x3d28627eebe,5, node:internal/net:1:1,0x3d28627ecf8,~
script-source,106,node:internal/net,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst { writeBuffer } = internalBinding('fs');\x0d\nconst errors = require('internal/errors');\x0d\n\x0d\n// IPv4 Segment\x0d\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\x0d\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`;\x0d\nconst IPv4Reg = new RegExp(`^${v4Str}$`);\x0d\n\x0d\n// IPv6 Segment\x0d\nconst v6Seg = '(?:[0-9a-fA-F]{1\x2C4})';\x0d\nconst IPv6Reg = new RegExp('^(' +\x0d\n  `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1\x2C2}|:)|` +\x0d\n  `(?:${v6Seg}:){4}(?:(:${v6Seg}){0\x2C1}:${v4Str}|(:${v6Seg}){1\x2C3}|:)|` +\x0d\n  `(?:${v6Seg}:){3}(?:(:${v6Seg}){0\x2C2}:${v4Str}|(:${v6Seg}){1\x2C4}|:)|` +\x0d\n  `(?:${v6Seg}:){2}(?:(:${v6Seg}){0\x2C3}:${v4Str}|(:${v6Seg}){1\x2C5}|:)|` +\x0d\n  `(?:${v6Seg}:){1}(?:(:${v6Seg}){0\x2C4}:${v4Str}|(:${v6Seg}){1\x2C6}|:)|` +\x0d\n  `(?::((?::${v6Seg}){0\x2C5}:${v4Str}|(?::${v6Seg}){1\x2C7}|:))` +\x0d\n')(%[0-9a-zA-Z-.:]{1\x2C})?$');\x0d\n\x0d\nfunction isIPv4(s) {\x0d\n  return RegExpPrototypeTest(IPv4Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIPv6(s) {\x0d\n  return RegExpPrototypeTest(IPv6Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIP(s) {\x0d\n  if (isIPv4(s)) return 4;\x0d\n  if (isIPv6(s)) return 6;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\nfunction makeSyncWrite(fd) {\x0d\n  return function(chunk\x2C enc\x2C cb) {\x0d\n    if (enc !== 'buffer')\x0d\n      chunk = Buffer.from(chunk\x2C enc);\x0d\n\x0d\n    this._handle.bytesWritten += chunk.length;\x0d\n\x0d\n    const ctx = {};\x0d\n    writeBuffer(fd\x2C chunk\x2C 0\x2C chunk.length\x2C null\x2C undefined\x2C ctx);\x0d\n    if (ctx.errno !== undefined) {\x0d\n      const ex = errors.uvException(ctx);\x0d\n      ex.errno = ctx.errno;\x0d\n      return cb(ex);\x0d\n    }\x0d\n    cb();\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  makeSyncWrite\x2C\x0d\n  normalizedArgsSymbol: Symbol('normalizedArgs')\x0d\n};\x0d\n
code-source-info,0x3d28627eebe,106,0,1818,C0O0C4O1818,,
code-creation,Function,10,168005,0x3d28627f2ae,617, node:internal/net:1:1,0x3d28627ee38,~
code-source-info,0x3d28627f2ae,106,0,1818,C0O0C45O28C50O39C56O63C61O107C64O107C69O124C73O107C75O158C78O158C83O142C89O197C92O197C96O197C98O259C101O330C106O334C119O349C124O375C129O390C142O375C147O375C149O435C152O476C160O503C173O519C183O492C192O542C205O558C218O568C228O531C237O591C250O608C263O619C273O580C282O648C295O666C308O681C321O692C331O637C340O721C353O739C366O754C379O765C389O710C398O794C411O812C424O827C437O838C447O783C456O867C469O885C482O900C495O911C505O856C514O946C527O961C540O974C550O929C556O992C562O476C567O476C569O1695C576O1717C582O1726C588O1737C594O1748C601O1788C611O1710C616O1817,,
new,MemoryChunk,0xc4d9900000,262144
code-creation,Eval,10,168330,0x3d28627ffd6,5, node:internal/dtrace:1:1,0x1fe3b27fed0,~
script-source,107,node:internal/dtrace,'use strict';\x0d\n\x0d\nconst config = internalBinding('config');\x0d\n\x0d\nconst {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE = () => {}\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION = () => {}\x2C\x0d\n  DTRACE_NET_STREAM_END = () => {}\x0d\n} = (config.hasDtrace ? internalBinding('dtrace') : {});\x0d\n\x0d\nmodule.exports = {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n};\x0d\n
code-source-info,0x3d28627ffd6,107,0,589,C0O0C4O589,,
code-creation,Function,10,168413,0xc4d99015be,140, node:internal/dtrace:1:1,0x1fe3b27ff90,~
code-source-info,0xc4d99015be,107,0,589,C0O32C3O32C8O333C17O345C25O73C36O115C47O158C58O200C69O243C80O287C91O381C98O403C104O434C110O466C116O497C122O529C128O562C134O396C139O588,,
code-creation,LazyCompile,10,168638,0xc4d990254e,34,protoGetter node:net:796:21,0x3d286276518,~
code-source-info,0xc4d990254e,105,21335,21503,C0O21357C8O21385C13O21396C20O21485C27O21357C33O21502,,
code-creation,Eval,10,170496,0xc4d9907c46,5, node:dgram:1:1,0xc4d99076d0,~
script-source,108,node:dgram,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst errors = require('internal/errors');\x0d\nconst {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x2C\x0d\n} = require('internal/dgram');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_MISSING_ARGS\x2C\x0d\n  ERR_SOCKET_ALREADY_BOUND\x2C\x0d\n  ERR_SOCKET_BAD_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_DGRAM_IS_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_RUNNING\x2C\x0d\n  ERR_INVALID_FD_TYPE\x0d\n} = errors.codes;\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateString\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n} = require('internal/validators');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst { UV_UDP_REUSEADDR } = internalBinding('constants').os;\x0d\n\x0d\nconst {\x0d\n  constants: { UV_UDP_IPV6ONLY }\x2C\x0d\n  UDP\x2C\x0d\n  SendWrap\x0d\n} = internalBinding('udp_wrap');\x0d\n\x0d\nconst BIND_STATE_UNBOUND = 0;\x0d\nconst BIND_STATE_BINDING = 1;\x0d\nconst BIND_STATE_BOUND = 2;\x0d\n\x0d\nconst CONNECT_STATE_DISCONNECTED = 0;\x0d\nconst CONNECT_STATE_CONNECTING = 1;\x0d\nconst CONNECT_STATE_CONNECTED = 2;\x0d\n\x0d\nconst RECV_BUFFER = true;\x0d\nconst SEND_BUFFER = false;\x0d\n\x0d\n// Lazily loaded\x0d\nlet _cluster = null;\x0d\nfunction lazyLoadCluster() {\x0d\n  if (!_cluster) _cluster = require('cluster');\x0d\n  return _cluster;\x0d\n}\x0d\n\x0d\nconst errnoException = errors.errnoException;\x0d\nconst exceptionWithHostPort = errors.exceptionWithHostPort;\x0d\n\x0d\n\x0d\nfunction Socket(type\x2C listener) {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n  let lookup;\x0d\n  let recvBufferSize;\x0d\n  let sendBufferSize;\x0d\n\x0d\n  let options;\x0d\n  if (type !== null && typeof type === 'object') {\x0d\n    options = type;\x0d\n    type = options.type;\x0d\n    lookup = options.lookup;\x0d\n    recvBufferSize = options.recvBufferSize;\x0d\n    sendBufferSize = options.sendBufferSize;\x0d\n  }\x0d\n\x0d\n  const handle = newHandle(type\x2C lookup);\x0d\n  handle[owner_symbol] = this;\x0d\n\x0d\n  this[async_id_symbol] = handle.getAsyncId();\x0d\n  this.type = type;\x0d\n\x0d\n  if (typeof listener === 'function')\x0d\n    this.on('message'\x2C listener);\x0d\n\x0d\n  this[kStateSymbol] = {\x0d\n    handle\x2C\x0d\n    receiving: false\x2C\x0d\n    bindState: BIND_STATE_UNBOUND\x2C\x0d\n    connectState: CONNECT_STATE_DISCONNECTED\x2C\x0d\n    queue: undefined\x2C\x0d\n    reuseAddr: options && options.reuseAddr\x2C // Use UV_UDP_REUSEADDR if true.\x0d\n    ipv6Only: options && options.ipv6Only\x2C\x0d\n    recvBufferSize\x2C\x0d\n    sendBufferSize\x0d\n  };\x0d\n\x0d\n  if (options?.signal !== undefined) {\x0d\n    const { signal } = options;\x0d\n    validateAbortSignal(signal\x2C 'options.signal');\x0d\n    const onAborted = () => {\x0d\n      this.close();\x0d\n    };\x0d\n    if (signal.aborted) {\x0d\n      onAborted();\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAborted);\x0d\n      this.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n    }\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction createSocket(type\x2C listener) {\x0d\n  return new Socket(type\x2C listener);\x0d\n}\x0d\n\x0d\n\x0d\nfunction startListening(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  state.handle.onmessage = onMessage;\x0d\n  state.handle.onerror = onError;\x0d\n  state.handle.recvStart();\x0d\n  state.receiving = true;\x0d\n  state.bindState = BIND_STATE_BOUND;\x0d\n\x0d\n  if (state.recvBufferSize)\x0d\n    bufferSize(socket\x2C state.recvBufferSize\x2C RECV_BUFFER);\x0d\n\x0d\n  if (state.sendBufferSize)\x0d\n    bufferSize(socket\x2C state.sendBufferSize\x2C SEND_BUFFER);\x0d\n\x0d\n  socket.emit('listening');\x0d\n}\x0d\n\x0d\nfunction replaceHandle(self\x2C newHandle) {\x0d\n  const state = self[kStateSymbol];\x0d\n  const oldHandle = state.handle;\x0d\n\x0d\n  // Set up the handle that we got from primary.\x0d\n  newHandle.lookup = oldHandle.lookup;\x0d\n  newHandle.bind = oldHandle.bind;\x0d\n  newHandle.send = oldHandle.send;\x0d\n  newHandle[owner_symbol] = self;\x0d\n\x0d\n  // Replace the existing handle by the handle we got from primary.\x0d\n  oldHandle.close();\x0d\n  state.handle = newHandle;\x0d\n}\x0d\n\x0d\nfunction bufferSize(self\x2C size\x2C buffer) {\x0d\n  if (size >>> 0 !== size)\x0d\n    throw new ERR_SOCKET_BAD_BUFFER_SIZE();\x0d\n\x0d\n  const ctx = {};\x0d\n  const ret = self[kStateSymbol].handle.bufferSize(size\x2C buffer\x2C ctx);\x0d\n  if (ret === undefined) {\x0d\n    throw new ERR_SOCKET_BUFFER_SIZE(ctx);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n// Query primary process to get the server handle and utilize it.\x0d\nfunction bindServerHandle(self\x2C options\x2C errCb) {\x0d\n  const cluster = lazyLoadCluster();\x0d\n\x0d\n  const state = self[kStateSymbol];\x0d\n  cluster._getServer(self\x2C options\x2C (err\x2C handle) => {\x0d\n    if (err) {\x0d\n      errCb(err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!state.handle) {\x0d\n      // Handle has been closed in the mean time.\x0d\n      return handle.close();\x0d\n    }\x0d\n\x0d\n    replaceHandle(self\x2C handle);\x0d\n    startListening(self);\x0d\n  });\x0d\n}\x0d\n\x0d\nSocket.prototype.bind = function(port_\x2C address_ /* \x2C callback */) {\x0d\n  let port = port_;\x0d\n\x0d\n  healthCheck(this);\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_UNBOUND)\x0d\n    throw new ERR_SOCKET_ALREADY_BOUND();\x0d\n\x0d\n  state.bindState = BIND_STATE_BINDING;\x0d\n\x0d\n  const cb = arguments.length && arguments[arguments.length - 1];\x0d\n  if (typeof cb === 'function') {\x0d\n    function removeListeners() {\x0d\n      this.removeListener('error'\x2C removeListeners);\x0d\n      this.removeListener('listening'\x2C onListening);\x0d\n    }\x0d\n\x0d\n    function onListening() {\x0d\n      FunctionPrototypeCall(removeListeners\x2C this);\x0d\n      FunctionPrototypeCall(cb\x2C this);\x0d\n    }\x0d\n\x0d\n    this.on('error'\x2C removeListeners);\x0d\n    this.on('listening'\x2C onListening);\x0d\n  }\x0d\n\x0d\n  if (port !== null &&\x0d\n      typeof port === 'object' &&\x0d\n      typeof port.recvStart === 'function') {\x0d\n    replaceHandle(this\x2C port);\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Open an existing fd instead of creating a new one.\x0d\n  if (port !== null && typeof port === 'object' &&\x0d\n      isInt32(port.fd) && port.fd > 0) {\x0d\n    const fd = port.fd;\x0d\n    const exclusive = !!port.exclusive;\x0d\n    const state = this[kStateSymbol];\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: null\x2C\x0d\n        port: null\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd\x2C\x0d\n        flags: null\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = errnoException(err\x2C 'open');\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP')\x0d\n      throw new ERR_INVALID_FD_TYPE(type);\x0d\n    const err = state.handle.open(fd);\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  let address;\x0d\n  let exclusive;\x0d\n\x0d\n  if (port !== null && typeof port === 'object') {\x0d\n    address = port.address || '';\x0d\n    exclusive = !!port.exclusive;\x0d\n    port = port.port;\x0d\n  } else {\x0d\n    address = typeof address_ === 'function' ? '' : address_;\x0d\n    exclusive = false;\x0d\n  }\x0d\n\x0d\n  // Defaulting address for bind to all interfaces\x0d\n  if (!address) {\x0d\n    if (this.type === 'udp4')\x0d\n      address = '0.0.0.0';\x0d\n    else\x0d\n      address = '::';\x0d\n  }\x0d\n\x0d\n  // Resolve address first\x0d\n  state.handle.lookup(address\x2C (err\x2C ip) => {\x0d\n    if (err) {\x0d\n      state.bindState = BIND_STATE_UNBOUND;\x0d\n      this.emit('error'\x2C err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    let flags = 0;\x0d\n    if (state.reuseAddr)\x0d\n      flags |= UV_UDP_REUSEADDR;\x0d\n    if (state.ipv6Only)\x0d\n      flags |= UV_UDP_IPV6ONLY;\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: ip\x2C\x0d\n        port: port\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd: -1\x2C\x0d\n        flags: flags\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n    } else {\x0d\n      if (!state.handle)\x0d\n        return; // Handle has been closed in the mean time\x0d\n\x0d\n      const err = state.handle.bind(ip\x2C port || 0\x2C flags);\x0d\n      if (err) {\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n        // Todo: close?\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      startListening(this);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.connect = function(port\x2C address\x2C callback) {\x0d\n  port = validatePort(port\x2C 'Port'\x2C false);\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = '';\x0d\n  } else if (address === undefined) {\x0d\n    address = '';\x0d\n  }\x0d\n\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.connectState !== CONNECT_STATE_DISCONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTING;\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(_connect\x2C this\x2C\x0d\n                                        port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  ReflectApply(_connect\x2C this\x2C [port\x2C address\x2C callback]);\x0d\n};\x0d\n\x0d\n\x0d\nfunction _connect(port\x2C address\x2C callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (callback)\x0d\n    this.once('connect'\x2C callback);\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doConnect\x2C\x0d\n      ex\x2C this\x2C ip\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  state.handle.lookup(address\x2C afterDns);\x0d\n}\x0d\n\x0d\n\x0d\nfunction doConnect(ex\x2C self\x2C ip\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n  if (!state.handle)\x0d\n    return;\x0d\n\x0d\n  if (!ex) {\x0d\n    const err = state.handle.connect(ip\x2C port);\x0d\n    if (err) {\x0d\n      ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (ex) {\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n    return process.nextTick(() => {\x0d\n      if (callback) {\x0d\n        self.removeListener('connect'\x2C callback);\x0d\n        callback(ex);\x0d\n      } else {\x0d\n        self.emit('error'\x2C ex);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTED;\x0d\n  process.nextTick(() => self.emit('connect'));\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.disconnect = function() {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const err = state.handle.disconnect();\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'connect');\x0d\n  else\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n};\x0d\n\x0d\n\x0d\n// Thin wrapper around `send`\x2C here for compatibility with dgram_legacy.js\x0d\nSocket.prototype.sendto = function(buffer\x2C\x0d\n                                   offset\x2C\x0d\n                                   length\x2C\x0d\n                                   port\x2C\x0d\n                                   address\x2C\x0d\n                                   callback) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  validateNumber(length\x2C 'length');\x0d\n  validateNumber(port\x2C 'port');\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  this.send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback);\x0d\n};\x0d\n\x0d\n\x0d\nfunction sliceBuffer(buffer\x2C offset\x2C length) {\x0d\n  if (typeof buffer === 'string') {\x0d\n    buffer = Buffer.from(buffer);\x0d\n  } else if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  offset = offset >>> 0;\x0d\n  length = length >>> 0;\x0d\n  if (offset > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n  }\x0d\n\x0d\n  if (offset + length > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n  }\x0d\n\x0d\n  return Buffer.from(buffer.buffer\x2C buffer.byteOffset + offset\x2C length);\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixBufferList(list) {\x0d\n  const newlist = new Array(list.length);\x0d\n\x0d\n  for (let i = 0\x2C l = list.length; i < l; i++) {\x0d\n    const buf = list[i];\x0d\n    if (typeof buf === 'string')\x0d\n      newlist[i] = Buffer.from(buf);\x0d\n    else if (!isArrayBufferView(buf))\x0d\n      return null;\x0d\n    else\x0d\n      newlist[i] = Buffer.from(buf.buffer\x2C buf.byteOffset\x2C buf.byteLength);\x0d\n  }\x0d\n\x0d\n  return newlist;\x0d\n}\x0d\n\x0d\n\x0d\nfunction enqueue(self\x2C toEnqueue) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  // If the send queue hasn't been initialized yet\x2C do it\x2C and install an\x0d\n  // event handler that flushes the send queue after binding is done.\x0d\n  if (state.queue === undefined) {\x0d\n    state.queue = [];\x0d\n    self.once(EventEmitter.errorMonitor\x2C onListenError);\x0d\n    self.once('listening'\x2C onListenSuccess);\x0d\n  }\x0d\n  ArrayPrototypePush(state.queue\x2C toEnqueue);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenSuccess() {\x0d\n  this.removeListener(EventEmitter.errorMonitor\x2C onListenError);\x0d\n  FunctionPrototypeCall(clearQueue\x2C this);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenError(err) {\x0d\n  this.removeListener('listening'\x2C onListenSuccess);\x0d\n  this[kStateSymbol].queue = undefined;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearQueue() {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n  state.queue = undefined;\x0d\n\x0d\n  // Flush the send queue.\x0d\n  for (const queueEntry of queue)\x0d\n    queueEntry();\x0d\n}\x0d\n\x0d\n// valid combinations\x0d\n// For connectionless sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port)\x0d\n// send(bufferOrList\x2C port\x2C address\x2C callback)\x0d\n// send(bufferOrList\x2C port\x2C address)\x0d\n// send(bufferOrList\x2C port\x2C callback)\x0d\n// send(bufferOrList\x2C port)\x0d\n// For connected sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length)\x0d\n// send(bufferOrList\x2C callback)\x0d\n// send(bufferOrList)\x0d\nSocket.prototype.send = function(buffer\x2C\x0d\n                                 offset\x2C\x0d\n                                 length\x2C\x0d\n                                 port\x2C\x0d\n                                 address\x2C\x0d\n                                 callback) {\x0d\n\x0d\n  let list;\x0d\n  const state = this[kStateSymbol];\x0d\n  const connected = state.connectState === CONNECT_STATE_CONNECTED;\x0d\n  if (!connected) {\x0d\n    if (address || (port && typeof port !== 'function')) {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n    } else {\x0d\n      callback = port;\x0d\n      port = offset;\x0d\n      address = length;\x0d\n    }\x0d\n  } else {\x0d\n    if (typeof length === 'number') {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n      if (typeof port === 'function') {\x0d\n        callback = port;\x0d\n        port = null;\x0d\n      }\x0d\n    } else {\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    if (port || address)\x0d\n      throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n  }\x0d\n\x0d\n  if (!ArrayIsArray(buffer)) {\x0d\n    if (typeof buffer === 'string') {\x0d\n      list = [ Buffer.from(buffer) ];\x0d\n    } else if (!isArrayBufferView(buffer)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                     ['Buffer'\x2C\x0d\n                                      'TypedArray'\x2C\x0d\n                                      'DataView'\x2C\x0d\n                                      'string']\x2C\x0d\n                                     buffer);\x0d\n    } else {\x0d\n      list = [ buffer ];\x0d\n    }\x0d\n  } else if (!(list = fixBufferList(buffer))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer list arguments'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  if (!connected)\x0d\n    port = validatePort(port\x2C 'Port'\x2C false);\x0d\n\x0d\n  // Normalize callback so it's either a function or undefined but not anything\x0d\n  // else.\x0d\n  if (typeof callback !== 'function')\x0d\n    callback = undefined;\x0d\n\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = undefined;\x0d\n  } else if (address && typeof address !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('address'\x2C ['string'\x2C 'falsy']\x2C address);\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (list.length === 0)\x0d\n    ArrayPrototypePush(list\x2C Buffer.alloc(0));\x0d\n\x0d\n  // If the socket hasn't been bound yet\x2C push the outbound packet onto the\x0d\n  // send queue and send after binding is complete.\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(this.send\x2C this\x2C\x0d\n                                        list\x2C port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doSend\x2C\x0d\n      ex\x2C this\x2C ip\x2C list\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  if (!connected) {\x0d\n    state.handle.lookup(address\x2C afterDns);\x0d\n  } else {\x0d\n    afterDns(null\x2C null);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction doSend(ex\x2C self\x2C ip\x2C list\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  if (ex) {\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(() => self.emit('error'\x2C ex));\x0d\n    return;\x0d\n  } else if (!state.handle) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new SendWrap();\x0d\n  req.list = list;  // Keep reference alive.\x0d\n  req.address = address;\x0d\n  req.port = port;\x0d\n  if (callback) {\x0d\n    req.callback = callback;\x0d\n    req.oncomplete = afterSend;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (port)\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C port\x2C ip\x2C !!callback);\x0d\n  else\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C !!callback);\x0d\n\x0d\n  if (err >= 1) {\x0d\n    // Synchronous finish. The return code is msg_length + 1 so that we can\x0d\n    // distinguish between synchronous success and asynchronous success.\x0d\n    if (callback)\x0d\n      process.nextTick(callback\x2C null\x2C err - 1);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (err && callback) {\x0d\n    // Don't emit as error\x2C dgram_legacy.js compatibility\x0d\n    const ex = exceptionWithHostPort(err\x2C 'send'\x2C address\x2C port);\x0d\n    process.nextTick(callback\x2C ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterSend(err\x2C sent) {\x0d\n  if (err) {\x0d\n    err = exceptionWithHostPort(err\x2C 'send'\x2C this.address\x2C this.port);\x0d\n  } else {\x0d\n    err = null;\x0d\n  }\x0d\n\x0d\n  this.callback(err\x2C sent);\x0d\n}\x0d\n\x0d\nSocket.prototype.close = function(callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n\x0d\n  if (typeof callback === 'function')\x0d\n    this.on('close'\x2C callback);\x0d\n\x0d\n  if (queue !== undefined) {\x0d\n    ArrayPrototypePush(queue\x2C FunctionPrototypeBind(this.close\x2C this));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n  stopReceiving(this);\x0d\n  state.handle.close();\x0d\n  state.handle = null;\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             socketCloseNT\x2C\x0d\n                             this);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction socketCloseNT(self) {\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const out = {};\x0d\n  const err = this[kStateSymbol].handle.getsockname(out);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'getsockname');\x0d\n  }\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\nSocket.prototype.remoteAddress = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const out = {};\x0d\n  const err = state.handle.getpeername(out);\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'getpeername');\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setBroadcast = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setBroadcast(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setBroadcast');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastLoopback = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setMulticastLoopback(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastLoopback');\x0d\n  }\x0d\n\x0d\n  return arg; // 0.4 compatibility\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastInterface = function(interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n  validateString(interfaceAddress\x2C 'interfaceAddress');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastInterface(interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastInterface');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addMembership = function(multicastAddress\x2C\x0d\n                                          interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.addMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropMembership = function(multicastAddress\x2C\x0d\n                                           interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.dropMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                        groupAddress\x2C\x0d\n                                                        interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.addSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                          groupAddress\x2C\x0d\n                                                          interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                         groupAddress\x2C\x0d\n                                                         interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.dropSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                           groupAddress\x2C\x0d\n                                                           interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nfunction healthCheck(socket) {\x0d\n  if (!socket[kStateSymbol].handle) {\x0d\n    // Error message from dgram_legacy.js.\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_RUNNING();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction stopReceiving(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  if (!state.receiving)\x0d\n    return;\x0d\n\x0d\n  state.handle.recvStop();\x0d\n  state.receiving = false;\x0d\n}\x0d\n\x0d\n\x0d\nfunction onMessage(nread\x2C handle\x2C buf\x2C rinfo) {\x0d\n  const self = handle[owner_symbol];\x0d\n  if (nread < 0) {\x0d\n    return self.emit('error'\x2C errnoException(nread\x2C 'recvmsg'));\x0d\n  }\x0d\n  rinfo.size = buf.length; // compatibility\x0d\n  self.emit('message'\x2C buf\x2C rinfo);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onError(nread\x2C handle\x2C error) {\x0d\n  const self = handle[owner_symbol];\x0d\n  return self.emit('error'\x2C error);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setRecvBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setSendBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getRecvBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getSendBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\n// Deprecated private APIs.\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].handle;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].handle = val;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_receiving'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].receiving;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].receiving = val;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_bindState'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].bindState;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].bindState = val;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_queue'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].queue;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].queue = val;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_reuseAddr'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].reuseAddr;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].reuseAddr = val;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._healthCheck = deprecate(function() {\x0d\n  healthCheck(this);\x0d\n}\x2C 'Socket.prototype._healthCheck() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\nSocket.prototype._stopReceiving = deprecate(function() {\x0d\n  stopReceiving(this);\x0d\n}\x2C 'Socket.prototype._stopReceiving() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(UDP.prototype\x2C 'owner'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  _createSocketHandle: deprecate(\x0d\n    _createSocketHandle\x2C\x0d\n    'dgram._createSocketHandle() is deprecated'\x2C\x0d\n    'DEP0112'\x0d\n  )\x2C\x0d\n  createSocket\x2C\x0d\n  Socket\x0d\n};\x0d\n
tick,0x7ff6632de0d4,175233,1,0x7ff662e52230,3,0x7ff663796a40,0x3d28624b9e4,0x21ab36432e5,0x3d286271728,0x3d28624ba05,0x21ab36432e5,0x3d28626ab4b,0x3d28624ba05,0x21ab36432e5,0x3d286268eea,0x3d28624f2e0,0x3d28624a9d5
code-source-info,0xc4d9907c46,108,0,28578,C0O0C4O28578,,
code-creation,Function,10,175270,0xc4d9909bae,1507, node:dgram:1:1,0xc4d9907bc0,~
code-source-info,0xc4d9909bae
code-creation,Eval,10,175768,0xc4d990d03e,5, node:internal/dgram:1:1,0xc4d990ce38,~
script-source,109,node:internal/dgram,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { codes } = require('internal/errors');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst { UV_EINVAL } = internalBinding('uv');\x0d\nconst {\x0d\n  ERR_SOCKET_BAD_TYPE\x2C\x0d\n} = codes;\x0d\nconst kStateSymbol = Symbol('state symbol');\x0d\nlet dns;  // Lazy load for startup performance.\x0d\n\x0d\n\x0d\nfunction lookup4(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '127.0.0.1'\x2C 4\x2C callback);\x0d\n}\x0d\n\x0d\n\x0d\nfunction lookup6(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '::1'\x2C 6\x2C callback);\x0d\n}\x0d\n\x0d\nfunction newHandle(type\x2C lookup) {\x0d\n  if (lookup === undefined) {\x0d\n    if (dns === undefined) {\x0d\n      dns = require('dns');\x0d\n    }\x0d\n\x0d\n    lookup = dns.lookup;\x0d\n  } else {\x0d\n    validateFunction(lookup\x2C 'lookup');\x0d\n  }\x0d\n\x0d\n  if (type === 'udp4') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup4\x2C handle\x2C lookup);\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  if (type === 'udp6') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup6\x2C handle\x2C lookup);\x0d\n    handle.bind = handle.bind6;\x0d\n    handle.connect = handle.connect6;\x0d\n    handle.send = handle.send6;\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  throw new ERR_SOCKET_BAD_TYPE();\x0d\n}\x0d\n\x0d\n\x0d\nfunction _createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  const handle = newHandle(addressType);\x0d\n  let err;\x0d\n\x0d\n  if (isInt32(fd) && fd > 0) {\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP') {\x0d\n      err = UV_EINVAL;\x0d\n    } else {\x0d\n      err = handle.open(fd);\x0d\n    }\x0d\n  } else if (port || address) {\x0d\n    err = handle.bind(address\x2C port || 0\x2C flags);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x0d\n};\x0d\n
code-source-info,0xc4d990d03e,109,0,1941,C0O0C4O1941,,
code-creation,Function,10,175919,0xc4d990d306,196, node:internal/dgram:1:1,0xc4d990cfb8,~
code-source-info,0xc4d990d306,109,0,1941,C0O0C56O28C62O54C67O101C73O101C78O91C83O146C86O146C91O138C97O204C100O204C105O184C111O276C117O276C122O241C128O253C134O331C137O331C142O317C148O366C154O421C157O421C162O450C163O450C165O1863C172O1885C178O1902C184O1926C190O1878C195O1940,,
code-creation,LazyCompile,10,176220,0xc4d990fbc6,152,deprecate node:internal/util:96:19,0xf284005bf0,~
script-source,15,node:internal/util,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  overrideStackTrace\x2C\x0d\n} = require('internal/errors');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\nconst {\x0d\n  getHiddenValue\x2C\x0d\n  setHiddenValue\x2C\x0d\n  arrow_message_private_symbol: kArrowMessagePrivateSymbolIndex\x2C\x0d\n  decorated_private_symbol: kDecoratedPrivateSymbolIndex\x2C\x0d\n  sleep: _sleep\x2C\x0d\n  toUSVString: _toUSVString\x2C\x0d\n} = internalBinding('util');\x0d\nconst { isNativeError } = internalBinding('types');\x0d\n\x0d\nconst noCrypto = !process.versions.openssl;\x0d\n\x0d\nconst experimentalWarnings = new SafeSet();\x0d\n\x0d\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\x0d\n\x0d\nconst unpairedSurrogateRe =\x0d\n  /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/;\x0d\nfunction toUSVString(val) {\x0d\n  const str = `${val}`;\x0d\n  // As of V8 5.5\x2C `str.search()` (and `unpairedSurrogateRe[@@search]()`) are\x0d\n  // slower than `unpairedSurrogateRe.exec()`.\x0d\n  const match = RegExpPrototypeExec(unpairedSurrogateRe\x2C str);\x0d\n  if (!match)\x0d\n    return str;\x0d\n  return _toUSVString(str\x2C match.index);\x0d\n}\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  uvBinding ??= internalBinding('uv');\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nfunction removeColors(str) {\x0d\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\x0d\n}\x0d\n\x0d\nfunction isError(e) {\x0d\n  // An error could be an instance of Error while not being a native error\x0d\n  // or could be from a different realm and not be instance of Error but still\x0d\n  // be a native error.\x0d\n  return isNativeError(e) || e instanceof Error;\x0d\n}\x0d\n\x0d\n// Keep a list of deprecation codes that have been warned on so we only warn on\x0d\n// each one once.\x0d\nconst codesWarned = new SafeSet();\x0d\n\x0d\nlet validateString;\x0d\n\x0d\n// Mark that a method should not be used.\x0d\n// Returns a modified function which warns once by default.\x0d\n// If --no-deprecation is set\x2C then it is a no-op.\x0d\nfunction deprecate(fn\x2C msg\x2C code) {\x0d\n  if (process.noDeprecation === true) {\x0d\n    return fn;\x0d\n  }\x0d\n\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateString === undefined)\x0d\n    ({ validateString } = require('internal/validators'));\x0d\n\x0d\n  if (code !== undefined)\x0d\n    validateString(code\x2C 'code');\x0d\n\x0d\n  let warned = false;\x0d\n  function deprecated(...args) {\x0d\n    if (!warned) {\x0d\n      warned = true;\x0d\n      if (code !== undefined) {\x0d\n        if (!codesWarned.has(code)) {\x0d\n          process.emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\x0d\n          codesWarned.add(code);\x0d\n        }\x0d\n      } else {\x0d\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\x0d\n      }\x0d\n    }\x0d\n    if (new.target) {\x0d\n      return ReflectConstruct(fn\x2C args\x2C new.target);\x0d\n    }\x0d\n    return ReflectApply(fn\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\x0d\n  ObjectSetPrototypeOf(deprecated\x2C fn);\x0d\n  if (fn.prototype) {\x0d\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\x0d\n    // that calling the unwrapped constructor gives an instanceof the wrapped\x0d\n    // constructor.\x0d\n    deprecated.prototype = fn.prototype;\x0d\n  }\x0d\n\x0d\n  return deprecated;\x0d\n}\x0d\n\x0d\nfunction decorateErrorStack(err) {\x0d\n  if (!(isError(err) && err.stack) ||\x0d\n      getHiddenValue(err\x2C kDecoratedPrivateSymbolIndex) === true)\x0d\n    return;\x0d\n\x0d\n  const arrow = getHiddenValue(err\x2C kArrowMessagePrivateSymbolIndex);\x0d\n\x0d\n  if (arrow) {\x0d\n    err.stack = arrow + err.stack;\x0d\n    setHiddenValue(err\x2C kDecoratedPrivateSymbolIndex\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction assertCrypto() {\x0d\n  if (noCrypto)\x0d\n    throw new ERR_NO_CRYPTO();\x0d\n}\x0d\n\x0d\n// Return undefined if there is no match.\x0d\n// Move the "slow cases" to a separate function to make sure this function gets\x0d\n// inlined properly. That prioritizes the common case.\x0d\nfunction normalizeEncoding(enc) {\x0d\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\x0d\n  return slowCases(enc);\x0d\n}\x0d\n\x0d\nfunction slowCases(enc) {\x0d\n  switch (enc.length) {\x0d\n    case 4:\x0d\n      if (enc === 'UTF8') return 'utf8';\x0d\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf8') return 'utf8';\x0d\n      if (enc === 'ucs2') return 'utf16le';\x0d\n      break;\x0d\n    case 3:\x0d\n      if (enc === 'hex' || enc === 'HEX' ||\x0d\n          `${enc}`.toLowerCase() === 'hex')\x0d\n        return 'hex';\x0d\n      break;\x0d\n    case 5:\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      if (enc === 'UTF-8') return 'utf8';\x0d\n      if (enc === 'ASCII') return 'ascii';\x0d\n      if (enc === 'UCS-2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf-8') return 'utf8';\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      break;\x0d\n    case 6:\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      if (enc === 'BASE64') return 'base64';\x0d\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      break;\x0d\n    case 7:\x0d\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\x0d\n          `${enc}`.toLowerCase() === 'utf16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 8:\x0d\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\x0d\n        `${enc}`.toLowerCase() === 'utf-16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 9:\x0d\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\x0d\n          `${enc}`.toLowerCase() === 'base64url')\x0d\n        return 'base64url';\x0d\n      break;\x0d\n    default:\x0d\n      if (enc === '') return 'utf8';\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitExperimentalWarning(feature) {\x0d\n  if (experimentalWarnings.has(feature)) return;\x0d\n  const msg = `${feature} is an experimental feature. This feature could ` +\x0d\n       'change at any time';\x0d\n  experimentalWarnings.add(feature);\x0d\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\x0d\n}\x0d\n\x0d\nfunction filterDuplicateStrings(items\x2C low) {\x0d\n  const map = new SafeMap();\x0d\n  for (let i = 0; i < items.length; i++) {\x0d\n    const item = items[i];\x0d\n    const key = StringPrototypeToLowerCase(item);\x0d\n    if (low) {\x0d\n      map.set(key\x2C key);\x0d\n    } else {\x0d\n      map.set(key\x2C item);\x0d\n    }\x0d\n  }\x0d\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\x0d\n}\x0d\n\x0d\nfunction cachedResult(fn) {\x0d\n  let result;\x0d\n  return () => {\x0d\n    if (result === undefined)\x0d\n      result = fn();\x0d\n    return ArrayPrototypeSlice(result);\x0d\n  };\x0d\n}\x0d\n\x0d\n// Useful for Wrapping an ES6 Class with a constructor Function that\x0d\n// does not require the new keyword. For instance:\x0d\n//   class A { constructor(x) {this.x = x;}}\x0d\n//   const B = createClassWrapper(A);\x0d\n//   B() instanceof A // true\x0d\n//   B() instanceof B // true\x0d\nfunction createClassWrapper(type) {\x0d\n  function fn(...args) {\x0d\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\x0d\n  }\x0d\n  // Mask the wrapper function name and length values\x0d\n  ObjectDefineProperties(fn\x2C {\x0d\n    name: { __proto__: null\x2C value: type.name }\x2C\x0d\n    length: { __proto__: null\x2C value: type.length }\x2C\x0d\n  });\x0d\n  ObjectSetPrototypeOf(fn\x2C type);\x0d\n  fn.prototype = type.prototype;\x0d\n  return fn;\x0d\n}\x0d\n\x0d\nlet signalsToNamesMapping;\x0d\nfunction getSignalsToNamesMapping() {\x0d\n  if (signalsToNamesMapping !== undefined)\x0d\n    return signalsToNamesMapping;\x0d\n\x0d\n  signalsToNamesMapping = ObjectCreate(null);\x0d\n  for (const key in signals) {\x0d\n    signalsToNamesMapping[signals[key]] = key;\x0d\n  }\x0d\n\x0d\n  return signalsToNamesMapping;\x0d\n}\x0d\n\x0d\nfunction convertToValidSignal(signal) {\x0d\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\x0d\n    return signal;\x0d\n\x0d\n  if (typeof signal === 'string') {\x0d\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\x0d\n    if (signalName) return signalName;\x0d\n  }\x0d\n\x0d\n  throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n}\x0d\n\x0d\nfunction getConstructorOf(obj) {\x0d\n  while (obj) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '') {\x0d\n      return descriptor.value;\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n  }\x0d\n\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorName(err) {\x0d\n  const entry = uvErrmapGet(err);\x0d\n  return entry ? entry[0] : `Unknown system error ${err}`;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorMap() {\x0d\n  return lazyUv().getErrorMap();\x0d\n}\x0d\n\x0d\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\x0d\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\x0d\n\x0d\nlet validateFunction;\x0d\n\x0d\nfunction promisify(original) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateFunction === undefined)\x0d\n    ({ validateFunction } = require('internal/validators'));\x0d\n\x0d\n  validateFunction(original\x2C 'original');\x0d\n\x0d\n  if (original[kCustomPromisifiedSymbol]) {\x0d\n    const fn = original[kCustomPromisifiedSymbol];\x0d\n\x0d\n    validateFunction(fn\x2C 'util.promisify.custom');\x0d\n\x0d\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // Names to create an object from in case the callback receives multiple\x0d\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\x0d\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\x0d\n\x0d\n  function fn(...args) {\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\x0d\n        if (err) {\x0d\n          return reject(err);\x0d\n        }\x0d\n        if (argumentNames !== undefined && values.length > 1) {\x0d\n          const obj = {};\x0d\n          for (let i = 0; i < argumentNames.length; i++)\x0d\n            obj[argumentNames[i]] = values[i];\x0d\n          resolve(obj);\x0d\n        } else {\x0d\n          resolve(values[0]);\x0d\n        }\x0d\n      });\x0d\n      ReflectApply(original\x2C this\x2C args);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\x0d\n\x0d\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n  });\x0d\n  return ObjectDefineProperties(\x0d\n    fn\x2C\x0d\n    ObjectGetOwnPropertyDescriptors(original)\x0d\n  );\x0d\n}\x0d\n\x0d\npromisify.custom = kCustomPromisifiedSymbol;\x0d\n\x0d\n// The built-in Array#join is slower in v8 6.0\x0d\nfunction join(output\x2C separator) {\x0d\n  let str = '';\x0d\n  if (output.length !== 0) {\x0d\n    const lastIndex = output.length - 1;\x0d\n    for (let i = 0; i < lastIndex; i++) {\x0d\n      // It is faster not to use a template string here\x0d\n      str += output[i];\x0d\n      str += separator;\x0d\n    }\x0d\n    str += output[lastIndex];\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\x0d\n// between 1.5-10x faster than the two-arg version of Array#splice()\x0d\nfunction spliceOne(list\x2C index) {\x0d\n  for (; index + 1 < list.length; index++)\x0d\n    list[index] = list[index + 1];\x0d\n  list.pop();\x0d\n}\x0d\n\x0d\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\x0d\n\x0d\nlet getStructuredStack;\x0d\n\x0d\nfunction isInsideNodeModules() {\x0d\n  if (getStructuredStack === undefined) {\x0d\n    // Lazy-load to avoid a circular dependency.\x0d\n    const { runInNewContext } = require('vm');\x0d\n    // Use `runInNewContext()` to get something tamper-proof and\x0d\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\x0d\n    // the perf implications should be okay.\x0d\n    getStructuredStack = runInNewContext(`(function() {\x0d\n      try { Error.stackTraceLimit = Infinity; } catch {}\x0d\n      return function structuredStack() {\x0d\n        const e = new Error();\x0d\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\x0d\n        return e.stack;\x0d\n      };\x0d\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\x0d\n  }\x0d\n\x0d\n  const stack = getStructuredStack();\x0d\n\x0d\n  // Iterate over all stack frames and look for the first one not coming\x0d\n  // from inside Node.js itself:\x0d\n  if (ArrayIsArray(stack)) {\x0d\n    for (const frame of stack) {\x0d\n      const filename = frame.getFileName();\x0d\n      // If a filename does not start with / or contain \\\x2C\x0d\n      // it's likely from Node.js core.\x0d\n      if (RegExpPrototypeExec(/^\\/|\\\\/\x2C filename) === null)\x0d\n        continue;\x0d\n      return RegExpPrototypeExec(kNodeModulesRE\x2C filename) !== null;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction once(callback) {\x0d\n  let called = false;\x0d\n  return function(...args) {\x0d\n    if (called) return;\x0d\n    called = true;\x0d\n    ReflectApply(callback\x2C this\x2C args);\x0d\n  };\x0d\n}\x0d\n\x0d\nlet validateUint32;\x0d\n\x0d\nfunction sleep(msec) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateUint32 === undefined)\x0d\n    ({ validateUint32 } = require('internal/validators'));\x0d\n\x0d\n  validateUint32(msec\x2C 'msec');\x0d\n  _sleep(msec);\x0d\n}\x0d\n\x0d\nfunction createDeferredPromise() {\x0d\n  let resolve;\x0d\n  let reject;\x0d\n  const promise = new Promise((res\x2C rej) => {\x0d\n    resolve = res;\x0d\n    reject = rej;\x0d\n  });\x0d\n\x0d\n  return { promise\x2C resolve\x2C reject };\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#define-the-operations\x0d\nfunction defineOperation(target\x2C name\x2C method) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value: method\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-interfaces\x0d\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: interfaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\nlet DOMException;\x0d\nconst lazyDOMException = hideStackFrames((message\x2C name) => {\x0d\n  if (DOMException === undefined)\x0d\n    DOMException = internalBinding('messaging').DOMException;\x0d\n  return new DOMException(message\x2C name);\x0d\n});\x0d\n\x0d\nfunction structuredClone(value) {\x0d\n  const {\x0d\n    DefaultSerializer\x2C\x0d\n    DefaultDeserializer\x2C\x0d\n  } = require('v8');\x0d\n  const ser = new DefaultSerializer();\x0d\n  ser._getDataCloneError = hideStackFrames((message) =>\x0d\n    lazyDOMException(message\x2C 'DataCloneError'));\x0d\n  ser.writeValue(value);\x0d\n  const serialized = ser.releaseBuffer();\x0d\n\x0d\n  const des = new DefaultDeserializer(serialized);\x0d\n  return des.readValue();\x0d\n}\x0d\n\x0d\nconst kEnumerableProperty = ObjectCreate(null);\x0d\nkEnumerableProperty.enumerable = true;\x0d\nObjectFreeze(kEnumerableProperty);\x0d\n\x0d\nconst kEmptyObject = ObjectFreeze(ObjectCreate(null));\x0d\n\x0d\nmodule.exports = {\x0d\n  assertCrypto\x2C\x0d\n  cachedResult\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createClassWrapper\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  decorateErrorStack\x2C\x0d\n  defineOperation\x2C\x0d\n  deprecate\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  exposeInterface\x2C\x0d\n  filterDuplicateStrings\x2C\x0d\n  getConstructorOf\x2C\x0d\n  getSystemErrorMap\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  isError\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  join\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  once\x2C\x0d\n  promisify\x2C\x0d\n  sleep\x2C\x0d\n  spliceOne\x2C\x0d\n  structuredClone\x2C\x0d\n  toUSVString\x2C\x0d\n  removeColors\x2C\x0d\n\x0d\n  // Symbol used to customize promisify conversion\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n\x0d\n  // Symbol used to provide a custom inspect function for an object as an\x0d\n  // alternative to using 'inspect'\x0d\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\x0d\n\x0d\n  // Used by the buffer module to capture an internal reference to the\x0d\n  // default isEncoding implementation\x2C just in case userland overrides it.\x0d\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\x0d\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x2C\x0d\n\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n};\x0d\n
code-source-info,0xc4d990fbc6,15,2496,3713,C0O2496C26O2517C31O2529C37O2543C42O2560C44O2570C45O2629C53O2668C61O2690C66O2671C83O2728C87O2757C100O2757C105O2805C106O2805C108O3400C121O3400C126O3441C129O3448C135O3645C141O3671C145O3666C149O3692C151O3710,,
code-creation,Function,11,177021,0x21ab3644120,1344,deprecate node:internal/util:96:19,0xf284005bf0,^
code-source-info,0x21ab3644120,15,2496,3713,,,
code-creation,Function,11,177059,0x21ab36446c0,572,getOptionValue node:internal/options:44:24,0x3a93d9fe938,^
code-source-info,0x21ab36446c0,95,1028,1278,,,
code-creation,Function,11,177094,0x21ab3644960,1252,compileForInternalLoader node:internal/bootstrap/loaders:316:27,0x56f5c91108,^
code-source-info,0x21ab3644960,9,10306,10889,,,
code-creation,Function,11,177119,0x21ab3644ec0,548,internalBinding node:internal/bootstrap/loaders:171:45,0x56f5c90b60,^
code-source-info,0x21ab3644ec0,9,5433,5678,,,
code-creation,Eval,10,177351,0xc4d99122d6,5, node:internal/socket_list:1:1,0xc4d9912180,~
script-source,110,node:internal/socket_list,'use strict';\x0d\n\x0d\nconst { ERR_CHILD_CLOSED_BEFORE_REPLY } = require('internal/errors').codes;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\n// This object keeps track of the sockets that are sent\x0d\nclass SocketListSend extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n    child.once('exit'\x2C () => this.emit('exit'\x2C this));\x0d\n  }\x0d\n\x0d\n  _request(msg\x2C cmd\x2C swallowErrors\x2C callback) {\x0d\n    const self = this;\x0d\n\x0d\n    if (!this.child.connected) return onclose();\x0d\n    this.child._send(msg\x2C undefined\x2C swallowErrors);\x0d\n\x0d\n    function onclose() {\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n      callback(new ERR_CHILD_CLOSED_BEFORE_REPLY());\x0d\n    }\x0d\n\x0d\n    function onreply(msg) {\x0d\n      if (!(msg.cmd === cmd && msg.key === self.key)) return;\x0d\n      self.child.removeListener('disconnect'\x2C onclose);\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n\x0d\n      callback(null\x2C msg);\x0d\n    }\x0d\n\x0d\n    this.child.once('disconnect'\x2C onclose);\x0d\n    this.child.on('internalMessage'\x2C onreply);\x0d\n  }\x0d\n\x0d\n  close(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_NOTIFY_CLOSE'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_ALL_CLOSED'\x2C true\x2C callback);\x0d\n  }\x0d\n\x0d\n  getConnections(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_GET_COUNT'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_COUNT'\x2C false\x2C (err\x2C msg) => {\x0d\n      if (err) return callback(err);\x0d\n      callback(null\x2C msg.count);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\n// This object keeps track of the sockets that are received\x0d\nclass SocketListReceive extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n\x0d\n    this.connections = 0;\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n\x0d\n    function onempty(self) {\x0d\n      if (!self.child.connected) return;\x0d\n\x0d\n      self.child._send({\x0d\n        cmd: 'NODE_SOCKET_ALL_CLOSED'\x2C\x0d\n        key: self.key\x0d\n      }\x2C undefined\x2C true);\x0d\n    }\x0d\n\x0d\n    this.child.on('internalMessage'\x2C (msg) => {\x0d\n      if (msg.key !== this.key) return;\x0d\n\x0d\n      if (msg.cmd === 'NODE_SOCKET_NOTIFY_CLOSE') {\x0d\n        // Already empty\x0d\n        if (this.connections === 0) return onempty(this);\x0d\n\x0d\n        // Wait for sockets to get closed\x0d\n        this.once('empty'\x2C onempty);\x0d\n      } else if (msg.cmd === 'NODE_SOCKET_GET_COUNT') {\x0d\n        if (!this.child.connected) return;\x0d\n        this.child._send({\x0d\n          cmd: 'NODE_SOCKET_COUNT'\x2C\x0d\n          key: this.key\x2C\x0d\n          count: this.connections\x0d\n        });\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  add(obj) {\x0d\n    this.connections++;\x0d\n\x0d\n    // Notify the previous owner of the socket about its state change\x0d\n    obj.socket.once('close'\x2C () => {\x0d\n      this.connections--;\x0d\n\x0d\n      if (this.connections === 0) this.emit('empty'\x2C this);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = { SocketListSend\x2C SocketListReceive };\x0d\n
code-source-info,0xc4d99122d6,110,0,2813,C0O0C4O2813,,
code-creation,Function,10,177537,0xc4d9912916,126, node:internal/socket_list:1:1,0xc4d9912250,~
code-source-info,0xc4d9912916,110,0,2813,C0O0C8O59C11O59C16O85C21O25C27O117C30O117C35O225C73O1583C101O2756C108O2775C114O2791C120O2771C125O2812,,
code-creation,LazyCompile,10,177786,0xc4d99134c6,14,customPromiseExecFunction node:child_process:231:35,0x3d28626a478,~
code-source-info,0xc4d99134c6,103,6853,7233,C0O6853C9O6868C13O7230,,
code-creation,LazyCompile,10,177874,0xc4d991555e,129,_forkChild node:child_process:170:20,0x3d286269f18,~
code-source-info,0xc4d991555e,103,5092,5574,C0O5092C8O5156C19O5165C22O5179C29O5156C35O5190C40O5190C45O5205C50O5205C54O5233C72O5233C77O5233C79O5281C84O5289C97O5289C103O5424C108O5432C121O5432C128O5573,,
code-creation,LazyCompile,10,182276,0xc4d9915f5e,396,setupChannel node:internal/child_process:571:22,0x3d2862701c0,~
code-source-info,0xc4d9915f5e
code-creation,LazyCompile,10,182375,0xc4d991873e,72,Control node:internal/child_process:529:14,0x3d2862709f8,~
code-source-info,0xc4d991873e,104,14308,14402,C3O14325C11O14325C40O14339C48O14353C52O14369C59O14374C64O14392C71O14401,,
code-creation,LazyCompile,10,182412,0xc4d9918876,21,EventEmitter node:events:212:22,0xf28402ee50,~
code-source-info,0xc4d9918876,23,6524,6574,C0O6536C3O6549C8O6554C13O6554C20O6573,,
code-creation,LazyCompile,10,182469,0xc4d99189be,149,EventEmitter.init node:events:337:29,0xf28402f248,~
code-source-info,0xc4d99189be,23,10180,10788,C0O10203C6O10240C13O10252C16O10252C21O10278C25O10248C30O10295C32O10310C37O10310C41O10308C45O10335C46O10353C50O10394C60O10387C64O10429C71O10437C80O10465C85O10486C93O10465C98O10540C100O10545C105O10557C108O10570C113O10557C117O10555C123O10730C125O10735C131O10760C138O10770C140O10769C143O10745C148O10787,,
code-creation,Eval,10,182736,0xc4d99192e6,5, node:internal/child_process/serialization:1:1,0xc4d9918fe0,~
script-source,111,node:internal/child_process/serialization,'use strict';\x0d\n\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeSubarray\x2C\x0d\n} = primordials;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst v8 = require('v8');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst assert = require('internal/assert');\x0d\nconst { streamBaseState\x2C kLastWriteWasAsync } = internalBinding('stream_wrap');\x0d\n\x0d\nconst kMessageBuffer = Symbol('kMessageBuffer');\x0d\nconst kMessageBufferSize = Symbol('kMessageBufferSize');\x0d\nconst kJSONBuffer = Symbol('kJSONBuffer');\x0d\nconst kStringDecoder = Symbol('kStringDecoder');\x0d\n\x0d\n// Extend V8's serializer APIs to give more JSON-like behaviour in\x0d\n// some cases; in particular\x2C for native objects this serializes them the same\x0d\n// way that JSON does rather than throwing an exception.\x0d\nconst kArrayBufferViewTag = 0;\x0d\nconst kNotArrayBufferViewTag = 1;\x0d\nclass ChildProcessSerializer extends v8.DefaultSerializer {\x0d\n  _writeHostObject(object) {\x0d\n    if (isArrayBufferView(object)) {\x0d\n      this.writeUint32(kArrayBufferViewTag);\x0d\n      return super._writeHostObject(object);\x0d\n    }\x0d\n    this.writeUint32(kNotArrayBufferViewTag);\x0d\n    this.writeValue({ ...object });\x0d\n  }\x0d\n}\x0d\n\x0d\nclass ChildProcessDeserializer extends v8.DefaultDeserializer {\x0d\n  _readHostObject() {\x0d\n    const tag = this.readUint32();\x0d\n    if (tag === kArrayBufferViewTag)\x0d\n      return super._readHostObject();\x0d\n\x0d\n    assert(tag === kNotArrayBufferViewTag);\x0d\n    return this.readValue();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Messages are parsed in either of the following formats:\x0d\n// - Newline-delimited JSON\x2C or\x0d\n// - V8-serialized buffers\x2C prefixed with their length as a big endian uint32\x0d\n//   (aka 'advanced')\x0d\nconst advanced = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kMessageBuffer] = [];\x0d\n    channel[kMessageBufferSize] = 0;\x0d\n    channel.buffering = false;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    ArrayPrototypePush(channel[kMessageBuffer]\x2C readData);\x0d\n    channel[kMessageBufferSize] += readData.length;\x0d\n\x0d\n    // Index 0 should always be present because we just pushed data into it.\x0d\n    let messageBufferHead = channel[kMessageBuffer][0];\x0d\n    while (messageBufferHead.length >= 4) {\x0d\n      // We call `readUInt32BE` manually here\x2C because this is faster than first converting\x0d\n      // it to a buffer and using `readUInt32BE` on that.\x0d\n      const fullMessageSize = (\x0d\n        messageBufferHead[0] << 24 |\x0d\n        messageBufferHead[1] << 16 |\x0d\n        messageBufferHead[2] << 8 |\x0d\n        messageBufferHead[3]\x0d\n      ) + 4;\x0d\n\x0d\n      if (channel[kMessageBufferSize] < fullMessageSize) break;\x0d\n\x0d\n      const concatenatedBuffer = channel[kMessageBuffer].length === 1 ?\x0d\n        channel[kMessageBuffer][0] :\x0d\n        Buffer.concat(\x0d\n          channel[kMessageBuffer]\x2C\x0d\n          channel[kMessageBufferSize]\x0d\n        );\x0d\n\x0d\n      const deserializer = new ChildProcessDeserializer(\x0d\n        TypedArrayPrototypeSubarray(concatenatedBuffer\x2C 4\x2C fullMessageSize)\x0d\n      );\x0d\n\x0d\n      messageBufferHead = TypedArrayPrototypeSubarray(concatenatedBuffer\x2C fullMessageSize);\x0d\n      channel[kMessageBufferSize] = messageBufferHead.length;\x0d\n      channel[kMessageBuffer] =\x0d\n        channel[kMessageBufferSize] !== 0 ? [messageBufferHead] : [];\x0d\n\x0d\n      deserializer.readHeader();\x0d\n      yield deserializer.readValue();\x0d\n    }\x0d\n\x0d\n    channel.buffering = channel[kMessageBufferSize] > 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const ser = new ChildProcessSerializer();\x0d\n    // Add 4 bytes\x2C to later populate with message length\x0d\n    ser.writeRawBytes(Buffer.allocUnsafe(4));\x0d\n    ser.writeHeader();\x0d\n    ser.writeValue(message);\x0d\n\x0d\n    const serializedMessage = ser.releaseBuffer();\x0d\n    const serializedMessageLength = serializedMessage.length - 4;\x0d\n\x0d\n    serializedMessage.set([\x0d\n      serializedMessageLength >> 24 & 0xFF\x2C\x0d\n      serializedMessageLength >> 16 & 0xFF\x2C\x0d\n      serializedMessageLength >> 8 & 0xFF\x2C\x0d\n      serializedMessageLength & 0xFF\x2C\x0d\n    ]\x2C 0);\x0d\n\x0d\n    const result = channel.writeBuffer(req\x2C serializedMessage\x2C handle);\x0d\n\x0d\n    // Mirror what stream_base_commons.js does for Buffer retention.\x0d\n    if (streamBaseState[kLastWriteWasAsync])\x0d\n      req.buffer = serializedMessage;\x0d\n\x0d\n    return result;\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nconst json = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kJSONBuffer] = '';\x0d\n    channel[kStringDecoder] = undefined;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    if (channel[kStringDecoder] === undefined)\x0d\n      channel[kStringDecoder] = new StringDecoder('utf8');\x0d\n    const chunks =\x0d\n      StringPrototypeSplit(channel[kStringDecoder].write(readData)\x2C '\\n');\x0d\n    const numCompleteChunks = chunks.length - 1;\x0d\n    // Last line does not have trailing linebreak\x0d\n    const incompleteChunk = chunks[numCompleteChunks];\x0d\n    if (numCompleteChunks === 0) {\x0d\n      channel[kJSONBuffer] += incompleteChunk;\x0d\n    } else {\x0d\n      chunks[0] = channel[kJSONBuffer] + chunks[0];\x0d\n      for (let i = 0; i < numCompleteChunks; i++)\x0d\n        yield JSONParse(chunks[i]);\x0d\n      channel[kJSONBuffer] = incompleteChunk;\x0d\n    }\x0d\n    channel.buffering = channel[kJSONBuffer].length !== 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const string = JSONStringify(message) + '\\n';\x0d\n    return channel.writeUtf8String(req\x2C string\x2C handle);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nmodule.exports = { advanced\x2C json };\x0d\n
code-source-info,0xc4d99192e6,111,0,5522,C0O0C4O5522,,
code-creation,Function,10,182961,0xc4d9919b5e,390, node:internal/child_process/serialization:1:1,0xc4d9919260,~
code-source-info,0xc4d9919b5e,111,0,5522,C0O0C62O28C68O42C74O60C80O85C86O108C91O119C97O186C100O186C105O175C111O232C114O232C119O214C125O271C128O271C133O317C136O317C141O295C147O365C150O365C154O365C156O442C159O442C164O402C170O419C176O500C179O500C183O500C185O554C188O554C192O554C194O605C197O605C201O605C203O652C206O652C210O652C212O915C213O915C215O950C217O950C223O994C258O954C264O1318C299O1276C301O1776C306O1781C314O1927C322O3502C333O4379C338O4384C346O4499C354O5309C365O5484C372O5503C378O5513C384O5499C389O5521,,
code-creation,LazyCompile,10,183128,0xc4d991a756,23,initMessageChannel node:internal/child_process/serialization:132:21,0xc4d9919548,~
code-source-info,0xc4d991a756,111,4402,4492,C0O4419C2O4427C7O4440C11O4451C13O4459C17O4475C22O4491,,
code-creation,LazyCompile,10,183205,0xc4d991b07e,19,_getMaxListeners node:events:414:26,0xf28402f418,~
code-source-info,0xc4d991b07e,23,12446,12574,C0O12467C6O12501C9O12521C13O12541C14O12557C18O12571,,
code-creation,LazyCompile,10,183236,0xc4d991b176,5,get node:events:272:16,0xf28402f038,~
code-source-info,0xc4d991b176,23,8173,8215,C0O8183C4O8210,,
code-creation,LazyCompile,10,183299,0xc4d991b4d6,322,arrayClone node:events:865:20,0xf28402fc90,~
code-source-info,0xc4d991b4d6,23,25538,26003,C0O25680C42O25703C50O25714C62O25722C71O25727C72O25741C80O25752C92O25760C104O25768C113O25773C114O25787C122O25798C134O25806C146O25814C158O25822C167O25827C168O25841C176O25852C188O25860C200O25868C212O25876C224O25884C233O25889C234O25903C242O25914C254O25922C266O25930C278O25938C290O25946C302O25954C311O25959C312O25968C317O25975C321O26000,,
code-creation,LazyCompile,10,183423,0xc4d991b7a6,22, node:internal/child_process:707:36,0xc4d9915a78,~
code-source-info,0xc4d991b7a6,104,20117,20530,C0O20129C5O20137C15O20137C21O20529,,
code-creation,LazyCompile,10,183514,0xc4d991ba46,368,nextTick node:internal/process/task_queues:104:18,0x233c001ae08,~
script-source,32,node:internal/process/task_queues,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  // For easy access to the nextTick state in the C++ land\x2C\x0d\n  // and to avoid unnecessary calls into JS land.\x0d\n  tickInfo\x2C\x0d\n  // Used to run V8's micro task queue.\x0d\n  runMicrotasks\x2C\x0d\n  setTickCallback\x2C\x0d\n  enqueueMicrotask\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  setHasRejectionToWarn\x2C\x0d\n  hasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x0d\n} = require('internal/process/promises');\x0d\n\x0d\nconst {\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  newAsyncId\x2C\x0d\n  initHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit\x2C\x0d\n  emitBefore\x2C\x0d\n  emitAfter\x2C\x0d\n  emitDestroy\x2C\x0d\n  symbols: { async_id_symbol\x2C trigger_async_id_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst FixedQueue = require('internal/fixed_queue');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { AsyncResource } = require('async_hooks');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasTickScheduled = 0;\x0d\n\x0d\nfunction hasTickScheduled() {\x0d\n  return tickInfo[kHasTickScheduled] === 1;\x0d\n}\x0d\n\x0d\nfunction setHasTickScheduled(value) {\x0d\n  tickInfo[kHasTickScheduled] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nconst queue = new FixedQueue();\x0d\n\x0d\n// Should be in sync with RunNextTicksNative in node_task_queue.cc\x0d\nfunction runNextTicks() {\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    runMicrotasks();\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    return;\x0d\n\x0d\n  processTicksAndRejections();\x0d\n}\x0d\n\x0d\nfunction processTicksAndRejections() {\x0d\n  let tock;\x0d\n  do {\x0d\n    while ((tock = queue.shift()) !== null) {\x0d\n      const asyncId = tock[async_id_symbol];\x0d\n      emitBefore(asyncId\x2C tock[trigger_async_id_symbol]\x2C tock);\x0d\n\x0d\n      try {\x0d\n        const callback = tock.callback;\x0d\n        if (tock.args === undefined) {\x0d\n          callback();\x0d\n        } else {\x0d\n          const args = tock.args;\x0d\n          switch (args.length) {\x0d\n            case 1: callback(args[0]); break;\x0d\n            case 2: callback(args[0]\x2C args[1]); break;\x0d\n            case 3: callback(args[0]\x2C args[1]\x2C args[2]); break;\x0d\n            case 4: callback(args[0]\x2C args[1]\x2C args[2]\x2C args[3]); break;\x0d\n            default: callback(...args);\x0d\n          }\x0d\n        }\x0d\n      } finally {\x0d\n        if (destroyHooksExist())\x0d\n          emitDestroy(asyncId);\x0d\n      }\x0d\n\x0d\n      emitAfter(asyncId);\x0d\n    }\x0d\n    runMicrotasks();\x0d\n  } while (!queue.isEmpty() || processPromiseRejections());\x0d\n  setHasTickScheduled(false);\x0d\n  setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\n// `nextTick()` will not enqueue any callback when the process is about to\x0d\n// exit since the callback would not have a chance to be executed.\x0d\nfunction nextTick(callback) {\x0d\n  validateCallback(callback);\x0d\n\x0d\n  if (process._exiting)\x0d\n    return;\x0d\n\x0d\n  let args;\x0d\n  switch (arguments.length) {\x0d\n    case 1: break;\x0d\n    case 2: args = [arguments[1]]; break;\x0d\n    case 3: args = [arguments[1]\x2C arguments[2]]; break;\x0d\n    case 4: args = [arguments[1]\x2C arguments[2]\x2C arguments[3]]; break;\x0d\n    default:\x0d\n      args = new Array(arguments.length - 1);\x0d\n      for (let i = 1; i < arguments.length; i++)\x0d\n        args[i - 1] = arguments[i];\x0d\n  }\x0d\n\x0d\n  if (queue.isEmpty())\x0d\n    setHasTickScheduled(true);\x0d\n  const asyncId = newAsyncId();\x0d\n  const triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  const tickObject = {\x0d\n    [async_id_symbol]: asyncId\x2C\x0d\n    [trigger_async_id_symbol]: triggerAsyncId\x2C\x0d\n    callback\x2C\x0d\n    args\x0d\n  };\x0d\n  if (initHooksExist())\x0d\n    emitInit(asyncId\x2C 'TickObject'\x2C triggerAsyncId\x2C tickObject);\x0d\n  queue.push(tickObject);\x0d\n}\x0d\n\x0d\nfunction runMicrotask() {\x0d\n  this.runInAsyncScope(() => {\x0d\n    const callback = this.callback;\x0d\n    try {\x0d\n      callback();\x0d\n    } finally {\x0d\n      this.emitDestroy();\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst defaultMicrotaskResourceOpts = { requireManualDestroy: true };\x0d\n\x0d\nfunction queueMicrotask(callback) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  const asyncResource = new AsyncResource(\x0d\n    'Microtask'\x2C\x0d\n    defaultMicrotaskResourceOpts\x0d\n  );\x0d\n  asyncResource.callback = callback;\x0d\n\x0d\n  enqueueMicrotask(FunctionPrototypeBind(runMicrotask\x2C asyncResource));\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  setupTaskQueue() {\x0d\n    // Sets the per-isolate promise rejection callback\x0d\n    listenForRejections();\x0d\n    // Sets the callback to be run in every tick.\x0d\n    setTickCallback(processTicksAndRejections);\x0d\n    return {\x0d\n      nextTick\x2C\x0d\n      runNextTicks\x0d\n    };\x0d\n  }\x2C\x0d\n  queueMicrotask\x0d\n};\x0d\n
code-source-info,0xc4d991ba
code-creation,LazyCompile,10,183761,0xc4d991c2b6,21, node:internal/validators:231:42,0xf284009788,~
code-source-info,0xc4d991c2b6,16,7392,7496,C0O7411C6O7452C13O7458C18O7452C20O7495,,
code-creation,LazyCompile,10,183795,0xc4d991c3b6,15,isEmpty node:internal/fixed_queue:95:10,0x233c0020050,~
script-source,34,node:internal/fixed_queue,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Currently optimal queue size\x2C tested on V8 6.0 - 6.6. Must be power of two.\x0d\nconst kSize = 2048;\x0d\nconst kMask = kSize - 1;\x0d\n\x0d\n// The FixedQueue is implemented as a singly-linked list of fixed-size\x0d\n// circular buffers. It looks something like this:\x0d\n//\x0d\n//  head                                                       tail\x0d\n//    |                                                          |\x0d\n//    v                                                          v\x0d\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\x0d\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |       bottom --> |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |    ...    |               |    ...    |                  |    ...    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |  [empty]  | <-- top       |   item    |                  |   item    |\x0d\n// |  [empty]  |               |   item    |                  |   item    |\x0d\n// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n//\x0d\n// Or\x2C if there is only one circular buffer\x2C it looks something\x0d\n// like either of these:\x0d\n//\x0d\n//  head   tail                                 head   tail\x0d\n//    |     |                                     |     |\x0d\n//    v     v                                     v     v\x0d\n// +-----------+                               +-----------+\x0d\n// |  [null]   |                               |  [null]   |\x0d\n// +-----------+                               +-----------+\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |   item    | <-- bottom            top --> |  [empty]  |\x0d\n// |   item    |                               |  [empty]  |\x0d\n// |  [empty]  | <-- top            bottom --> |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// +-----------+                               +-----------+\x0d\n//\x0d\n// Adding a value means moving `top` forward by one\x2C removing means\x0d\n// moving `bottom` forward by one. After reaching the end\x2C the queue\x0d\n// wraps around.\x0d\n//\x0d\n// When `top === bottom` the current queue is empty and when\x0d\n// `top + 1 === bottom` it's full. This wastes a single space of storage\x0d\n// but allows much quicker checks.\x0d\n\x0d\nclass FixedCircularBuffer {\x0d\n  constructor() {\x0d\n    this.bottom = 0;\x0d\n    this.top = 0;\x0d\n    this.list = new Array(kSize);\x0d\n    this.next = null;\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.top === this.bottom;\x0d\n  }\x0d\n\x0d\n  isFull() {\x0d\n    return ((this.top + 1) & kMask) === this.bottom;\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    this.list[this.top] = data;\x0d\n    this.top = (this.top + 1) & kMask;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const nextItem = this.list[this.bottom];\x0d\n    if (nextItem === undefined)\x0d\n      return null;\x0d\n    this.list[this.bottom] = undefined;\x0d\n    this.bottom = (this.bottom + 1) & kMask;\x0d\n    return nextItem;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = class FixedQueue {\x0d\n  constructor() {\x0d\n    this.head = this.tail = new FixedCircularBuffer();\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.head.isEmpty();\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    if (this.head.isFull()) {\x0d\n      // Head is full: Creates a new queue\x2C sets the old queue's `.next` to it\x2C\x0d\n      // and sets it as the new main queue.\x0d\n      this.head = this.head.next = new FixedCircularBuffer();\x0d\n    }\x0d\n    this.head.push(data);\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const tail = this.tail;\x0d\n    const next = tail.shift();\x0d\n    if (tail.isEmpty() && tail.next !== null) {\x0d\n      // If there is another queue\x2C it forms the new tail.\x0d\n      this.tail = tail.next;\x0d\n    }\x0d\n    return next;\x0d\n  }\x0d\n};\x0d\n
code-source-info,0xc4d991c3b6,34,3731,3773,C0O3753C5O3758C10O3758C14O3768,,
code-creation,LazyCompile,10,183980,0xc4d991c86e,13,isEmpty node:internal/fixed_queue:67:10,0x233c001fde0,~
code-source-info,0xc4d991c86e,34,3150,3197,C0O3172C5O3185C9O3176C12O3192,,
code-creation,LazyCompile,10,184010,0xc4d991c95e,25,setHasTickScheduled node:internal/process/task_queues:52:29,0x233c001ad18,~
code-source-info,0xc4d991c95e,32,1155,1215,C0O1168C7O1177C12O1198C19O1196C24O1214,,
code-creation,LazyCompile,10,184065,0xc4d991ca56,23,newAsyncId node:internal/async_hooks:416:20,0x56f5cba668,~
script-source,13,node:internal/async_hooks,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst promiseHooks = require('internal/promise_hooks');\x0d\n\x0d\nconst async_wrap = internalBinding('async_wrap');\x0d\nconst { setCallbackTrampoline } = async_wrap;\x0d\n/* async_hook_fields is a Uint32Array wrapping the uint32_t array of\x0d\n * Environment::AsyncHooks::fields_[]. Each index tracks the number of active\x0d\n * hooks for each type.\x0d\n *\x0d\n * async_id_fields is a Float64Array wrapping the double array of\x0d\n * Environment::AsyncHooks::async_id_fields_[]. Each index contains the ids for\x0d\n * the various asynchronous states of the application. These are:\x0d\n *  kExecutionAsyncId: The async_id assigned to the resource responsible for the\x0d\n *    current execution stack.\x0d\n *  kTriggerAsyncId: The async_id of the resource that caused (or 'triggered')\x0d\n *    the resource corresponding to the current execution stack.\x0d\n *  kAsyncIdCounter: Incremental counter tracking the next assigned async_id.\x0d\n *  kDefaultTriggerAsyncId: Written immediately before a resource's constructor\x0d\n *    that sets the value of the init()'s triggerAsyncId. The precedence order\x0d\n *    of retrieving the triggerAsyncId value is:\x0d\n *    1. the value passed directly to the constructor\x0d\n *    2. value set in kDefaultTriggerAsyncId\x0d\n *    3. executionAsyncId of the current resource.\x0d\n *\x0d\n * async_ids_stack is a Float64Array that contains part of the async ID\x0d\n * stack. Each pushAsyncContext() call adds two doubles to it\x2C and each\x0d\n * popAsyncContext() call removes two doubles from it.\x0d\n * It has a fixed size\x2C so if that is exceeded\x2C calls to the native\x0d\n * side are used instead in pushAsyncContext() and popAsyncContext().\x0d\n */\x0d\nconst {\x0d\n  async_hook_fields\x2C\x0d\n  async_id_fields\x2C\x0d\n  execution_async_resources\x0d\n} = async_wrap;\x0d\n// Store the pair executionAsyncId and triggerAsyncId in a AliasedFloat64Array\x0d\n// in Environment::AsyncHooks::async_ids_stack_ which tracks the resource\x0d\n// responsible for the current execution stack. This is unwound as each resource\x0d\n// exits. In the case of a fatal exception this stack is emptied after calling\x0d\n// each hook's after() callback.\x0d\nconst {\x0d\n  pushAsyncContext: pushAsyncContext_\x2C\x0d\n  popAsyncContext: popAsyncContext_\x2C\x0d\n  executionAsyncResource: executionAsyncResource_\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n} = async_wrap;\x0d\n// Properties in active_hooks are used to keep track of the set of hooks being\x0d\n// executed in case another hook is enabled/disabled. The new set of hooks is\x0d\n// then restored once the active set of hooks is finished executing.\x0d\nconst active_hooks = {\x0d\n  // Array of all AsyncHooks that will be iterated whenever an async event\x0d\n  // fires. Using var instead of (preferably const) in order to assign\x0d\n  // active_hooks.tmp_array if a hook is enabled/disabled during hook\x0d\n  // execution.\x0d\n  array: []\x2C\x0d\n  // Use a counter to track nested calls of async hook callbacks and make sure\x0d\n  // the active_hooks.array isn't altered mid execution.\x0d\n  call_depth: 0\x2C\x0d\n  // Use to temporarily store and updated active_hooks.array if the user\x0d\n  // enables or disables a hook while hooks are being processed. If a hook is\x0d\n  // enabled() or disabled() during hook execution then the current set of\x0d\n  // active hooks is duplicated and set equal to active_hooks.tmp_array. Any\x0d\n  // subsequent changes are on the duplicated array. When all hooks have\x0d\n  // completed executing active_hooks.tmp_array is assigned to\x0d\n  // active_hooks.array.\x0d\n  tmp_array: null\x2C\x0d\n  // Keep track of the field counts held in active_hooks.tmp_array. Because the\x0d\n  // async_hook_fields can't be reassigned\x2C store each uint32 in an array that\x0d\n  // is written back to async_hook_fields when active_hooks.array is restored.\x0d\n  tmp_fields: null\x0d\n};\x0d\n\x0d\nconst { registerDestroyHook } = async_wrap;\x0d\nconst { enqueueMicrotask } = internalBinding('task_queue');\x0d\nconst { resource_symbol\x2C owner_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Each constant tracks how many callbacks there are for any given step of\x0d\n// async execution. These are tracked so if the user didn't include callbacks\x0d\n// for a given step\x2C that step can bail out early.\x0d\nconst {\x0d\n  kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\x0d\n  kCheck\x2C kExecutionAsyncId\x2C kAsyncIdCounter\x2C kTriggerAsyncId\x2C\x0d\n  kDefaultTriggerAsyncId\x2C kStackLength\x2C kUsesExecutionAsyncResource\x2C\x0d\n} = async_wrap.constants;\x0d\n\x0d\nconst { async_id_symbol\x2C\x0d\n        trigger_async_id_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Lazy load of internal/util/inspect;\x0d\nlet inspect;\x0d\n\x0d\n// Used in AsyncHook and AsyncResource.\x0d\nconst init_symbol = Symbol('init');\x0d\nconst before_symbol = Symbol('before');\x0d\nconst after_symbol = Symbol('after');\x0d\nconst destroy_symbol = Symbol('destroy');\x0d\nconst promise_resolve_symbol = Symbol('promiseResolve');\x0d\nconst emitBeforeNative = emitHookFactory(before_symbol\x2C 'emitBeforeNative');\x0d\nconst emitAfterNative = emitHookFactory(after_symbol\x2C 'emitAfterNative');\x0d\nconst emitDestroyNative = emitHookFactory(destroy_symbol\x2C 'emitDestroyNative');\x0d\nconst emitPromiseResolveNative =\x0d\n    emitHookFactory(promise_resolve_symbol\x2C 'emitPromiseResolveNative');\x0d\n\x0d\nlet domain_cb;\x0d\nfunction useDomainTrampoline(fn) {\x0d\n  domain_cb = fn;\x0d\n}\x0d\n\x0d\nfunction callbackTrampoline(asyncId\x2C resource\x2C cb\x2C ...args) {\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  execution_async_resources[index] = resource;\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n\x0d\n  let result;\x0d\n  if (asyncId === 0 && typeof domain_cb === 'function') {\x0d\n    args.unshift(cb);\x0d\n    result = domain_cb.apply(this\x2C args);\x0d\n  } else {\x0d\n    result = cb.apply(this\x2C args);\x0d\n  }\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  execution_async_resources.pop();\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst topLevelResource = {};\x0d\n\x0d\nfunction executionAsyncResource() {\x0d\n  // Indicate to the native layer that this function is likely to be used\x2C\x0d\n  // in which case it will inform JS about the current async resource via\x0d\n  // the trampoline above.\x0d\n  async_hook_fields[kUsesExecutionAsyncResource] = 1;\x0d\n\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  if (index === -1) return topLevelResource;\x0d\n  const resource = execution_async_resources[index] ||\x0d\n    executionAsyncResource_(index);\x0d\n  return lookupPublicResource(resource);\x0d\n}\x0d\n\x0d\nfunction inspectExceptionValue(e) {\x0d\n  inspect ??= require('internal/util/inspect').inspect;\x0d\n  return { message: inspect(e) };\x0d\n}\x0d\n\x0d\n// Used to fatally abort the process if a callback throws.\x0d\nfunction fatalError(e) {\x0d\n  if (typeof e?.stack === 'string') {\x0d\n    process._rawDebug(e.stack);\x0d\n  } else {\x0d\n    const o = inspectExceptionValue(e);\x0d\n    ErrorCaptureStackTrace(o\x2C fatalError);\x0d\n    process._rawDebug(o.stack);\x0d\n  }\x0d\n\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (getOptionValue('--abort-on-uncaught-exception')) {\x0d\n    process.abort();\x0d\n  }\x0d\n  process.exit(1);\x0d\n}\x0d\n\x0d\nfunction lookupPublicResource(resource) {\x0d\n  if (typeof resource !== 'object' || resource === null) return resource;\x0d\n  // TODO(addaleax): Merge this with owner_symbol and use it across all\x0d\n  // AsyncWrap instances.\x0d\n  const publicResource = resource[resource_symbol];\x0d\n  if (publicResource !== undefined)\x0d\n    return publicResource;\x0d\n  return resource;\x0d\n}\x0d\n\x0d\n// Emit From Native //\x0d\n\x0d\n// Used by C++ to call all init() callbacks. Because some state can be setup\x0d\n// from C++ there's no need to perform all the same operations as in\x0d\n// emitInitScript.\x0d\nfunction emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  resource = lookupPublicResource(resource);\x0d\n  // Use a single try/catch for all hooks to avoid setting up one per iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    // eslint-disable-next-line no-var\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][init_symbol] === 'function') {\x0d\n        active_hooks.array[i][init_symbol](\x0d\n          asyncId\x2C type\x2C triggerAsyncId\x2C\x0d\n          resource\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case active_hooks.tmp_array\x0d\n  // will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Called from native. The asyncId stack handling is taken care of there\x0d\n// before this is called.\x0d\nfunction emitHook(symbol\x2C asyncId) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  // Use a single try/catch for all hook to avoid setting up one per\x0d\n  // iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    // eslint-disable-next-line no-var\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][symbol] === 'function') {\x0d\n        active_hooks.array[i][symbol](asyncId);\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case\x0d\n  // active_hooks.tmp_array will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitHookFactory(symbol\x2C name) {\x0d\n  const fn = emitHook.bind(undefined\x2C symbol);\x0d\n\x0d\n  // Set the name property of the function as it looks good in the stack trace.\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: name\x0d\n  });\x0d\n  return fn;\x0d\n}\x0d\n\x0d\n// Manage Active Hooks //\x0d\n\x0d\nfunction getHookArrays() {\x0d\n  if (active_hooks.call_depth === 0)\x0d\n    return [active_hooks.array\x2C async_hook_fields];\x0d\n  // If this hook is being enabled while in the middle of processing the array\x0d\n  // of currently active hooks then duplicate the current set of active hooks\x0d\n  // and store this there. This shouldn't fire until the next time hooks are\x0d\n  // processed.\x0d\n  if (active_hooks.tmp_array === null)\x0d\n    storeActiveHooks();\x0d\n  return [active_hooks.tmp_array\x2C active_hooks.tmp_fields];\x0d\n}\x0d\n\x0d\n\x0d\nfunction storeActiveHooks() {\x0d\n  active_hooks.tmp_array = ArrayPrototypeSlice(active_hooks.array);\x0d\n  // Don't want to make the assumption that kInit to kDestroy are indexes 0 to\x0d\n  // 4. So do this the long way.\x0d\n  active_hooks.tmp_fields = [];\x0d\n  copyHooks(active_hooks.tmp_fields\x2C async_hook_fields);\x0d\n}\x0d\n\x0d\nfunction copyHooks(destination\x2C source) {\x0d\n  destination[kInit] = source[kInit];\x0d\n  destination[kBefore] = source[kBefore];\x0d\n  destination[kAfter] = source[kAfter];\x0d\n  destination[kDestroy] = source[kDestroy];\x0d\n  destination[kPromiseResolve] = source[kPromiseResolve];\x0d\n}\x0d\n\x0d\n\x0d\n// Then restore the correct hooks array in case any hooks were added/removed\x0d\n// during hook callback execution.\x0d\nfunction restoreActiveHooks() {\x0d\n  active_hooks.array = active_hooks.tmp_array;\x0d\n  copyHooks(async_hook_fields\x2C active_hooks.tmp_fields);\x0d\n\x0d\n  active_hooks.tmp_array = null;\x0d\n  active_hooks.tmp_fields = null;\x0d\n}\x0d\n\x0d\nfunction trackPromise(promise\x2C parent) {\x0d\n  if (promise[async_id_symbol]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Get trigger id from parent async id before making the async id of the\x0d\n  // child so if a new one must be made it will be lower than the child.\x0d\n  const triggerAsyncId = parent ? getOrSetAsyncId(parent) :\x0d\n    getDefaultTriggerAsyncId();\x0d\n\x0d\n  promise[async_id_symbol] = newAsyncId();\x0d\n  promise[trigger_async_id_symbol] = triggerAsyncId;\x0d\n}\x0d\n\x0d\nfunction promiseInitHook(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerAsyncId = promise[trigger_async_id_symbol];\x0d\n  emitInitScript(asyncId\x2C 'PROMISE'\x2C triggerAsyncId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseInitHookWithDestroyTracking(promise\x2C parent) {\x0d\n  promiseInitHook(promise\x2C parent);\x0d\n  destroyTracking(promise\x2C parent);\x0d\n}\x0d\n\x0d\nfunction destroyTracking(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  registerDestroyHook(promise\x2C asyncId);\x0d\n}\x0d\n\x0d\nfunction promiseBeforeHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerId = promise[trigger_async_id_symbol];\x0d\n  emitBeforeScript(asyncId\x2C triggerId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseAfterHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  if (hasHooks(kAfter)) {\x0d\n    emitAfterNative(asyncId);\x0d\n  }\x0d\n  if (asyncId === executionAsyncId()) {\x0d\n    // This condition might not be true if async_hooks was enabled during\x0d\n    // the promise callback execution.\x0d\n    // Popping it off the stack can be skipped in that case\x2C because it is\x0d\n    // known that it would correspond to exactly one call with\x0d\n    // PromiseHookType::kBefore that was not witnessed by the PromiseHook.\x0d\n    popAsyncContext(asyncId);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseResolveHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  emitPromiseResolveNative(asyncId);\x0d\n}\x0d\n\x0d\nlet wantPromiseHook = false;\x0d\nfunction enableHooks() {\x0d\n  async_hook_fields[kCheck] += 1;\x0d\n\x0d\n  setCallbackTrampoline(callbackTrampoline);\x0d\n}\x0d\n\x0d\nlet stopPromiseHook;\x0d\nfunction updatePromiseHookMode() {\x0d\n  wantPromiseHook = true;\x0d\n  let initHook;\x0d\n  if (initHooksExist()) {\x0d\n    initHook = destroyHooksExist() ? promiseInitHookWithDestroyTracking :\x0d\n      promiseInitHook;\x0d\n  } else if (destroyHooksExist()) {\x0d\n    initHook = destroyTracking;\x0d\n  }\x0d\n  if (stopPromiseHook) stopPromiseHook();\x0d\n  stopPromiseHook = promiseHooks.createHook({\x0d\n    init: initHook\x2C\x0d\n    before: promiseBeforeHook\x2C\x0d\n    after: promiseAfterHook\x2C\x0d\n    settled: promiseResolveHooksExist() ? promiseResolveHook : undefined\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction disableHooks() {\x0d\n  async_hook_fields[kCheck] -= 1;\x0d\n\x0d\n  wantPromiseHook = false;\x0d\n\x0d\n  setCallbackTrampoline();\x0d\n\x0d\n  // Delay the call to `disablePromiseHook()` because we might currently be\x0d\n  // between the `before` and `after` calls of a Promise.\x0d\n  enqueueMicrotask(disablePromiseHookIfNecessary);\x0d\n}\x0d\n\x0d\nfunction disablePromiseHookIfNecessary() {\x0d\n  if (!wantPromiseHook && stopPromiseHook) {\x0d\n    stopPromiseHook();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Internal Embedder API //\x0d\n\x0d\n// Increment the internal id counter and return the value. Important that the\x0d\n// counter increment first. Since it's done the same way in\x0d\n// Environment::new_async_uid()\x0d\nfunction newAsyncId() {\x0d\n  return ++async_id_fields[kAsyncIdCounter];\x0d\n}\x0d\n\x0d\nfunction getOrSetAsyncId(object) {\x0d\n  if (ObjectPrototypeHasOwnProperty(object\x2C async_id_symbol)) {\x0d\n    return object[async_id_symbol];\x0d\n  }\x0d\n\x0d\n  return object[async_id_symbol] = newAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\n// Return the triggerAsyncId meant for the constructor calling it. It's up to\x0d\n// the user to safeguard this call and make sure it's zero'd out when the\x0d\n// constructor is complete.\x0d\nfunction getDefaultTriggerAsyncId() {\x0d\n  const defaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  // If defaultTriggerAsyncId isn't set\x2C use the executionAsyncId\x0d\n  if (defaultTriggerAsyncId < 0)\x0d\n    return async_id_fields[kExecutionAsyncId];\x0d\n  return defaultTriggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearDefaultTriggerAsyncId() {\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = -1;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets a default top level trigger ID to be used\x0d\n *\x0d\n * @template {Array<unknown>} T\x0d\n * @template {unknown} R\x0d\n * @param {number} triggerAsyncId\x0d\n * @param { (...T: args) => R } block\x0d\n * @param  {T} args\x0d\n * @returns {R}\x0d\n */\x0d\nfunction defaultTriggerAsyncIdScope(triggerAsyncId\x2C block\x2C ...args) {\x0d\n  if (triggerAsyncId === undefined)\x0d\n    return block.apply(null\x2C args);\x0d\n  // CHECK(NumberIsSafeInteger(triggerAsyncId))\x0d\n  // CHECK(triggerAsyncId > 0)\x0d\n  const oldDefaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = triggerAsyncId;\x0d\n\x0d\n  try {\x0d\n    return block.apply(null\x2C args);\x0d\n  } finally {\x0d\n    async_id_fields[kDefaultTriggerAsyncId] = oldDefaultTriggerAsyncId;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction hasHooks(key) {\x0d\n  return async_hook_fields[key] > 0;\x0d\n}\x0d\n\x0d\nfunction enabledHooksExist() {\x0d\n  return hasHooks(kCheck);\x0d\n}\x0d\n\x0d\nfunction initHooksExist() {\x0d\n  return hasHooks(kInit);\x0d\n}\x0d\n\x0d\nfunction afterHooksExist() {\x0d\n  return hasHooks(kAfter);\x0d\n}\x0d\n\x0d\nfunction destroyHooksExist() {\x0d\n  return hasHooks(kDestroy);\x0d\n}\x0d\n\x0d\nfunction promiseResolveHooksExist() {\x0d\n  return hasHooks(kPromiseResolve);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitInitScript(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  // Short circuit all checks for the common case. Which is that no hooks have\x0d\n  // been set. Do this to remove performance impact for embedders (and core).\x0d\n  if (!hasHooks(kInit))\x0d\n    return;\x0d\n\x0d\n  if (triggerAsyncId === null) {\x0d\n    triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  }\x0d\n\x0d\n  emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitBeforeScript(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource);\x0d\n\x0d\n  if (hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitAfterScript(asyncId) {\x0d\n  if (hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  popAsyncContext(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitDestroyScript(asyncId) {\x0d\n  // Return early if there are no destroy callbacks\x2C or invalid asyncId.\x0d\n  if (!hasHooks(kDestroy) || asyncId <= 0)\x0d\n    return;\x0d\n  async_wrap.queueDestroyAsyncId(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction hasAsyncIdStack() {\x0d\n  return hasHooks(kStackLength);\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native push_async_ids() call.\x0d\nfunction pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  const offset = async_hook_fields[kStackLength];\x0d\n  execution_async_resources[offset] = resource;\x0d\n  if (offset * 2 >= async_wrap.async_ids_stack.length)\x0d\n    return pushAsyncContext_(asyncId\x2C triggerAsyncId);\x0d\n  async_wrap.async_ids_stack[offset * 2] = async_id_fields[kExecutionAsyncId];\x0d\n  async_wrap.async_ids_stack[offset * 2 + 1] = async_id_fields[kTriggerAsyncId];\x0d\n  async_hook_fields[kStackLength]++;\x0d\n  async_id_fields[kExecutionAsyncId] = asyncId;\x0d\n  async_id_fields[kTriggerAsyncId] = triggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native pop_async_ids() call.\x0d\nfunction popAsyncContext(asyncId) {\x0d\n  const stackLength = async_hook_fields[kStackLength];\x0d\n  if (stackLength === 0) return false;\x0d\n\x0d\n  if (enabledHooksExist() && async_id_fields[kExecutionAsyncId] !== asyncId) {\x0d\n    // Do the same thing as the native code (i.e. crash hard).\x0d\n    return popAsyncContext_(asyncId);\x0d\n  }\x0d\n\x0d\n  const offset = stackLength - 1;\x0d\n  async_id_fields[kExecutionAsyncId] = async_wrap.async_ids_stack[2 * offset];\x0d\n  async_id_fields[kTriggerAsyncId] = async_wrap.async_ids_stack[2 * offset + 1];\x0d\n  execution_async_resources.pop();\x0d\n  async_hook_fields[kStackLength] = offset;\x0d\n  return offset > 0;\x0d\n}\x0d\n\x0d\n\x0d\nfunction executionAsyncId() {\x0d\n  return async_id_fields[kExecutionAsyncId];\x0d\n}\x0d\n\x0d\nfunction triggerAsyncId() {\x0d\n  return async_id_fields[kTriggerAsyncId];\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  executionAsyncId\x2C\x0d\n  triggerAsyncId\x2C\x0d\n  // Private API\x0d\n  getHookArrays\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol\x2C trigger_async_id_symbol\x2C\x0d\n    init_symbol\x2C before_symbol\x2C after_symbol\x2C destroy_symbol\x2C\x0d\n    promise_resolve_symbol\x2C owner_symbol\x0d\n  }\x2C\x0d\n  constants: {\x0d\n    kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x0d\n  }\x2C\x0d\n  enableHooks\x2C\x0d\n  disableHooks\x2C\x0d\n  updatePromiseHookMode\x2C\x0d\n  clearDefaultTriggerAsyncId\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n  hasAsyncIdStack\x2C\x0d\n  executionAsyncResource\x2C\x0d\n  // Internal Embedder API\x0d\n  newAsyncId\x2C\x0d\n  getOrSetAsyncId\x2C\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  enabledHooksExist\x2C\x0d\n  initHooksExist\x2C\x0d\n  afterHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit: emitInitScript\x2C\x0d\n  emitBefore: emitBeforeScript\x2C\x0d\n  emitAfter: emitAfterScript\x2C\x0d\n  emitDestroy: emitDestroyScript\x2C\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  registerDestroyHook\x2C\x0d\n  useDomainTrampoline\x2C\x0d\n  nativeHooks: {\x0d\n    init: emitInitNative\x2C\x0d\n    before: emitBeforeNative\x2C\x0d\n    after: emitAfterNative\x2C\x0d\n    destroy: emitDestroyNative\x2C\x0d\n    promise_resolve: emitPromiseResolveNative\x0d\n  }\x2C\x0d\n  asyncWrap: {\x0d\n    Providers: async_wrap.Providers\x2C\x0d\n  }\x0d\n};\x0d\n
code-source-info,0xc4d991ca56,13,14888,14941,C0O14896C7O14921C16O14936C22O14938,,
code-creation,LazyCompile,10,184806,0xc4d991df2e,35,getDefaultTriggerAsyncId node:internal/async_hooks:432:34,0x56f5cba708,~
code-source-info,0xc4d991df2e,13,15363,15626,C0O15401C7O15417C9O15416C13O15512C14O15538C19O15548C26O15571C28O15570C31O15590C32O15594C34O15623,,
code-creation,LazyCompile,10,184853,0xc4d991e03e,13,initHooksExist node:internal/async_hooks:478:24,0x56f5cba8f8,~
code-source-info,0xc4d991e03e,13,16630,16664,C0O16638C5O16654C8O16645C12O16661,,
code-creation,LazyCompile,10,184884,0xc4d991e126,16,hasHooks node:internal/async_hooks:470:18,0x56f5cba858,~
code-source-info,0xc4d991e126,13,16490,16538,C0O16501C7O16525C12O16531C15O16535,,
code-creation,LazyCompile,10,184918,0xc4d991e236,59,push node:internal/fixed_queue:99:7,0x233c00200a0,~
code-source-info,0xc4d991e236,34,3783,4050,C0O3806C5O3811C10O3811C16O3973C23O3989C26O3985C32O3983C38O3966C42O4029C47O4034C52O4034C58O4049,,
code-creation,LazyCompile,10,184952,0xc4d991e37e,24,isFull node:internal/fixed_queue:71:9,0x233c001fe30,~
code-source-info,0xc4d991e37e,34,3209,3272,C0O3233C4O3237C10O3244C12O3242C16O3260C20O3251C23O3267,,
code-creation,LazyCompile,10,184987,0xc4d991e48e,37,push node:internal/fixed_queue:75:7,0x233c001fe98,~
code-source-info,0xc4d991e48e,34,3282,3368,C0O3301C5O3311C12O3316C16O3346C20O3350C26O3357C28O3355C31O3338C36O3367,,
code-creation,LazyCompile,10,185041,0xc4d991e5ae,30,onNewListener node:child_process:176:51,0xc4d9915418,~
code-source-info,0xc4d991e5ae,103,5329,5418,C0O5343C2O5352C9O5374C14O5392C19O5400C24O5400C29O5417,,
code-creation,LazyCompile,10,185146,0xc4d991e8fe,455,initializePolicy node:internal/bootstrap/pre_execution:465:26,0x3d28624d140,~
code-source-info,0xc4d991e8fe
code-creation,LazyCompile,10,185245,0xc4d991ecce,63,initializeClusterIPC node:internal/bootstrap/pre_execution:456:30,0x3d28624d0f0,~
code-source-info,0xc4d991ecce,100,14534,14782,C0O14542C3O14554C10O14558C18O14573C23O14577C29O14616C35O14616C40O14649C45O14649C49O14740C52O14755C62O14781,,
code-creation,LazyCompile,10,185302,0xc4d991ee3e,27,initializeSourceMapsHandlers node:internal/bootstrap/pre_execution:560:38,0x3d28624d280,~
code-source-info,0xc4d991ee3e,100,18437,18590,C0O18483C6O18483C11O18453C16O18535C21O18564C26O18589,,
code-creation,Eval,10,185521,0xc4d991f8ae,5, node:internal/source_map/source_map_cache:1:1,0xc4d991f518,~
script-source,112,node:internal/source_map/source_map_cache,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolSplit\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction ObjectGetValueSafe(obj\x2C key) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\x0d\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'value') ? desc.value : undefined;\x0d\n}\x0d\n\x0d\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\x0d\nconst { Buffer } = require('buffer');\x0d\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst fs = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { IterableWeakMap } = require('internal/util/iterable_weak_map');\x0d\nconst {\x0d\n  normalizeReferrerURL\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { validateBoolean } = require('internal/validators');\x0d\nconst { setMaybeCacheGeneratedSourceMap } = internalBinding('errors');\x0d\n\x0d\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\x0d\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\x0d\n// be purged automatically:\x0d\nconst cjsSourceMapCache = new IterableWeakMap();\x0d\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst esmSourceMapCache = new SafeMap();\x0d\n// The generated sources is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst generatedSourceMapCache = new SafeMap();\x0d\nconst kLeadingProtocol = /^\\w+:\\/\\//;\x0d\n\x0d\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\x0d\nlet SourceMap;\x0d\n\x0d\nlet sourceMapsEnabled;\x0d\nfunction getSourceMapsEnabled() {\x0d\n  if (sourceMapsEnabled === undefined) {\x0d\n    setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\x0d\n  }\x0d\n  return sourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction setSourceMapsEnabled(val) {\x0d\n  validateBoolean(val\x2C 'val');\x0d\n\x0d\n  const {\x0d\n    setSourceMapsEnabled\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  setSourceMapsEnabled(val);\x0d\n  if (val) {\x0d\n    const {\x0d\n      prepareStackTrace\x0d\n    } = require('internal/source_map/prepare_stack_trace');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  } else if (sourceMapsEnabled !== undefined) {\x0d\n    // Reset prepare stack trace callback only when disabling source maps.\x0d\n    const {\x0d\n      prepareStackTrace\x2C\x0d\n    } = require('internal/errors');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  }\x0d\n\x0d\n  sourceMapsEnabled = val;\x0d\n}\x0d\n\x0d\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance\x2C isGeneratedSource) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n  try {\x0d\n    filename = normalizeReferrerURL(filename);\x0d\n  } catch (err) {\x0d\n    // This is most likely an invalid filename in sourceURL of [eval]-wrapper.\x0d\n    debug(err);\x0d\n    return;\x0d\n  }\x0d\n  const match = RegExpPrototypeExec(\x0d\n    /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/\x2C\x0d\n    content\x2C\x0d\n  );\x0d\n  if (match) {\x0d\n    const data = dataFromUrl(filename\x2C match.groups.sourceMappingURL);\x0d\n    const url = data ? null : match.groups.sourceMappingURL;\x0d\n    if (cjsModuleInstance) {\x0d\n      cjsSourceMapCache.set(cjsModuleInstance\x2C {\x0d\n        filename\x2C\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    } else if (isGeneratedSource) {\x0d\n      generatedSourceMapCache.set(filename\x2C {\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    } else {\x0d\n      // If there is no cjsModuleInstance and is not generated source assume we are in a\x0d\n      // "modules/esm" context.\x0d\n      esmSourceMapCache.set(filename\x2C {\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCacheGeneratedSourceMap(content) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n\x0d\n  const matchSourceURL = RegExpPrototypeExec(\x0d\n    /\\/[*/]#\\s+sourceURL=(?<sourceURL>[^\\s]+)/\x2C\x0d\n    content\x0d\n  );\x0d\n  if (matchSourceURL == null) {\x0d\n    return;\x0d\n  }\x0d\n  let sourceURL = matchSourceURL.groups.sourceURL;\x0d\n  if (RegExpPrototypeExec(kLeadingProtocol\x2C sourceURL) === null) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  try {\x0d\n    maybeCacheSourceMap(sourceURL\x2C content\x2C null\x2C true);\x0d\n  } catch (err) {\x0d\n    // This can happen if the filename is not a valid URL.\x0d\n    // If we fail to cache the source map\x2C we should not fail the whole process.\x0d\n    debug(err);\x0d\n  }\x0d\n}\x0d\nsetMaybeCacheGeneratedSourceMap(maybeCacheGeneratedSourceMap);\x0d\n\x0d\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\x0d\n  try {\x0d\n    const url = new URL(sourceMappingURL);\x0d\n    switch (url.protocol) {\x0d\n      case 'data:':\x0d\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\x0d\n      default:\x0d\n        debug(`unknown protocol ${url.protocol}`);\x0d\n        return null;\x0d\n    }\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    // If no scheme is present\x2C we assume we are dealing with a file path.\x0d\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\x0d\n    return sourceMapFromFile(mapURL);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Cache the length of each line in the file that a source map was extracted\x0d\n// from. This allows translation from byte offset V8 coverage reports\x2C\x0d\n// to line/column offset Source Map V3.\x0d\nfunction lineLengths(content) {\x0d\n  // We purposefully keep \\r as part of the line-length calculation\x2C in\x0d\n  // cases where there is a \\r\\n separator\x2C so that this can be taken into\x0d\n  // account in coverage calculations.\x0d\n  return ArrayPrototypeMap(RegExpPrototypeSymbolSplit(/\\n|\\u2028|\\u2029/\x2C content)\x2C (line) => {\x0d\n    return line.length;\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction sourceMapFromFile(mapURL) {\x0d\n  try {\x0d\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\x0d\n    const data = JSONParse(content);\x0d\n    return sourcesToAbsolute(mapURL\x2C data);\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// data:[<mediatype>][;base64]\x2C<data> see:\x0d\n// https://tools.ietf.org/html/rfc2397#section-2\x0d\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\x0d\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\x0d\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\x0d\n  const contentType = splitFormat[0];\x0d\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\x0d\n  if (contentType === 'application/json') {\x0d\n    const decodedData = base64 ?\x0d\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\x0d\n    try {\x0d\n      const parsedData = JSONParse(decodedData);\x0d\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\x0d\n    } catch (err) {\x0d\n      debug(err);\x0d\n      return null;\x0d\n    }\x0d\n  } else {\x0d\n    debug(`unknown content-type ${contentType}`);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\x0d\n// the sources are resolved relative to the SourceMap (like resolving script\x0d\n// src in a html document).\x0d\nfunction sourcesToAbsolute(baseURL\x2C data) {\x0d\n  data.sources = data.sources.map((source) => {\x0d\n    source = (data.sourceRoot || '') + source;\x0d\n    return new URL(source\x2C baseURL).href;\x0d\n  });\x0d\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\x0d\n  // be updated to noop.\x0d\n  data.sourceRoot = '';\x0d\n  return data;\x0d\n}\x0d\n\x0d\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\x0d\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\x0d\n// it important that they do not call out to any user-provided code\x2C including\x0d\n// built-in prototypes that might have been tampered with.\x0d\n\x0d\n// Get serialized representation of source-map cache\x2C this is used\x0d\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\x0d\nfunction sourceMapCacheToObject() {\x0d\n  const obj = ObjectCreate(null);\x0d\n\x0d\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\x0d\n    obj[k] = v;\x0d\n  }\x0d\n\x0d\n  appendCJSCache(obj);\x0d\n\x0d\n  if (ObjectKeys(obj).length === 0) {\x0d\n    return undefined;\x0d\n  }\x0d\n  return obj;\x0d\n}\x0d\n\x0d\nfunction appendCJSCache(obj) {\x0d\n  for (const value of cjsSourceMapCache) {\x0d\n    obj[ObjectGetValueSafe(value\x2C 'filename')] = {\x0d\n      lineLengths: ObjectGetValueSafe(value\x2C 'lineLengths')\x2C\x0d\n      data: ObjectGetValueSafe(value\x2C 'data')\x2C\x0d\n      url: ObjectGetValueSafe(value\x2C 'url')\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction findSourceMap(sourceURL\x2C isGenerated) {\x0d\n  if (RegExpPrototypeExec(kLeadingProtocol\x2C sourceURL) === null) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  if (!SourceMap) {\x0d\n    SourceMap = require('internal/source_map/source_map').SourceMap;\x0d\n  }\x0d\n  let sourceMap;\x0d\n  if (isGenerated) {\x0d\n    sourceMap = generatedSourceMapCache.get(sourceURL);\x0d\n  } else {\x0d\n    sourceMap = esmSourceMapCache.get(sourceURL);\x0d\n    if (sourceMap === undefined) {\x0d\n      for (const value of cjsSourceMapCache) {\x0d\n        const filename = ObjectGetValueSafe(value\x2C 'filename');\x0d\n        if (sourceURL === filename) {\x0d\n          sourceMap = {\x0d\n            data: ObjectGetValueSafe(value\x2C 'data')\x0d\n          };\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (sourceMap && sourceMap.data) {\x0d\n    return new SourceMap(sourceMap.data);\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  findSourceMap\x2C\x0d\n  getSourceMapsEnabled\x2C\x0d\n  setSourceMapsEnabled\x2C\x0d\n  maybeCacheSourceMap\x2C\x0d\n  sourceMapCacheToObject\x2C\x0d\n};\x0d\n
code-source-info,0xc4d991f8ae,112,0,9338,C0O0C4O9338,,
tick,0x7ff662d9ad10,186040,1,0x7ff662e52230,3,0x7ff663796a40,0x21ab3644b9b,0x21ab36432e5,0xc4d991ee44,0x3d28624f2f2,0x3d28624a9d5
code-creation,Function,10,186114,0xc4d991ff96,482, node:internal/source_map/source_map_cache:1:1,0xc4d991f828,~
code-source-info,0xc4d991ff96,112,0,9338,C0O0C164O28C170O50C176O64C182O81C188O96C194O131C200O165C206O189C212O220C217O232C223O553C229O553C234O542C240O585C246O585C251O618C264O619C270O585C272O684C278O684C282O684C284O727C290O727C295O708C301O785C307O785C312O765C317O868C323O868C328O841C334O938C340O938C345O918C351O1015C357O1015C362O979C367O1252C369O1252C374O1252C376O1381C378O1381C383O1381C385O1516C387O1516C392O1516C394O1557C398O1557C400O1619C406O1619C411O1581C417O1596C423O1611C429O1649C430O1649C432O1667C433O1667C435O4606C439O9195C446O9217C452O9235C458O9260C464O9285C470O9309C476O9210C481O9337,,
code-creation,Eval,10,186382,0xc4d9921176,5, node:internal/util/iterable_weak_map:1:1,0xc4d9920f28,~
script-source,113,node:internal/util/iterable_weak_map,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectFreeze\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SymbolIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\n// This class is modified from the example code in the WeakRefs specification:\x0d\n// https://github.com/tc39/proposal-weakrefs\x0d\n// Licensed under ECMA's MIT-style license\x2C see:\x0d\n// https://github.com/tc39/ecma262/blob/HEAD/LICENSE.md\x0d\nclass IterableWeakMap {\x0d\n  #weakMap = new SafeWeakMap();\x0d\n  #refSet = new SafeSet();\x0d\n  #finalizationGroup = new SafeFinalizationRegistry(cleanup);\x0d\n\x0d\n  set(key\x2C value) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (entry) {\x0d\n      // If there's already an entry for the object represented by "key"\x2C\x0d\n      // the value can be updated without creating a new WeakRef:\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref: entry.ref });\x0d\n    } else {\x0d\n      const ref = new SafeWeakRef(key);\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref });\x0d\n      this.#refSet.add(ref);\x0d\n      this.#finalizationGroup.register(key\x2C {\x0d\n        set: this.#refSet\x2C\x0d\n        ref\x0d\n      }\x2C ref);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get(key) {\x0d\n    return this.#weakMap.get(key)?.value;\x0d\n  }\x0d\n\x0d\n  has(key) {\x0d\n    return this.#weakMap.has(key);\x0d\n  }\x0d\n\x0d\n  delete(key) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (!entry) {\x0d\n      return false;\x0d\n    }\x0d\n    this.#weakMap.delete(key);\x0d\n    this.#refSet.delete(entry.ref);\x0d\n    this.#finalizationGroup.unregister(entry.ref);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  [SymbolIterator]() {\x0d\n    const iterator = this.#refSet[SymbolIterator]();\x0d\n\x0d\n    const next = () => {\x0d\n      const result = iterator.next();\x0d\n      if (result.done) return result;\x0d\n      const key = result.value.deref();\x0d\n      if (key == null) return next();\x0d\n      const { value } = this.#weakMap.get(key);\x0d\n      return { done: false\x2C value };\x0d\n    };\x0d\n\x0d\n    return {\x0d\n      [SymbolIterator]() { return this; }\x2C\x0d\n      next\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction cleanup({ set\x2C ref }) {\x0d\n  set.delete(ref);\x0d\n}\x0d\n\x0d\nObjectFreeze(IterableWeakMap.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  IterableWeakMap\x2C\x0d\n};\x0d\n
code-source-info,0xc4d9921176,113,0,2042,C0O0C4O2042,,
code-creation,Function,10,186490,0xc4d99218d6,196, node:internal/util/iterable_weak_map:1:1,0xc4d99210f0,~
code-source-info,0xc4d99218d6,113,0,2042,C0O0C26O28C31O45C37O74C43O86C49O102C55O118C134O1448C168O1983C173O1954C177O1998C184O2020C190O2013C195O2041,,
code-creation,Function,10,186512,0xc4d9921a56,75,<instance_members_initializer> node:internal/util/iterable_weak_map:17:3,0xc4d9921400,~
code-source-info,0xc4d9921a56,113,415,534,C3O426C10O426C27O458C34O458C48O497C62O497C74O534,,
code-creation,Eval,10,186772,0xc4d992273e,5, node:internal/modules/cjs/helpers:1:1,0xc4d9922488,~
script-source,114,node:internal/modules/cjs/helpers,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x0d\n} = require('internal/errors').codes;\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\n\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst path = require('path');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C URL } = require('internal/url');\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\n// TODO: Use this set when resolving pkg#exports conditions in loader.js.\x0d\nconst cjsConditions = new SafeSet([\x0d\n  'require'\x2C\x0d\n  'node'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nfunction loadNativeModule(filename\x2C request) {\x0d\n  const mod = NativeModule.map.get(filename);\x0d\n  if (mod?.canBeRequiredByUsers) {\x0d\n    debug('load native module %s'\x2C request);\x0d\n    // compileForPublicLoader() throws if mod.canBeRequiredByUsers is false:\x0d\n    mod.compileForPublicLoader();\x0d\n    return mod;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Invoke with makeRequireFunction(module) where |module| is the Module object\x0d\n// to use as the context for the require() function.\x0d\n// Use redirects to set up a mapping from a policy and restrict dependencies\x0d\nconst urlToFileCache = new SafeMap();\x0d\nfunction makeRequireFunction(mod\x2C redirects) {\x0d\n  const Module = mod.constructor;\x0d\n\x0d\n  let require;\x0d\n  if (redirects) {\x0d\n    const id = mod.filename || mod.id;\x0d\n    const conditions = cjsConditions;\x0d\n    const { resolve\x2C reaction } = redirects;\x0d\n    require = function require(specifier) {\x0d\n      let missing = true;\x0d\n      const destination = resolve(specifier\x2C conditions);\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        if (destination.protocol === 'node:') {\x0d\n          const specifier = destination.pathname;\x0d\n          const mod = loadNativeModule(specifier\x2C href);\x0d\n          if (mod && mod.canBeRequiredByUsers) {\x0d\n            return mod.exports;\x0d\n          }\x0d\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\x0d\n        } else if (destination.protocol === 'file:') {\x0d\n          let filepath;\x0d\n          if (urlToFileCache.has(href)) {\x0d\n            filepath = urlToFileCache.get(href);\x0d\n          } else {\x0d\n            filepath = fileURLToPath(destination);\x0d\n            urlToFileCache.set(href\x2C filepath);\x0d\n          }\x0d\n          return mod.require(filepath);\x0d\n        }\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          id\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\x0d\n        ));\x0d\n      }\x0d\n      return mod.require(specifier);\x0d\n    };\x0d\n  } else {\x0d\n    require = function require(path) {\x0d\n      return mod.require(path);\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function resolve(request\x2C options) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\x0d\n  }\x0d\n\x0d\n  require.resolve = resolve;\x0d\n\x0d\n  function paths(request) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveLookupPaths(request\x2C mod);\x0d\n  }\x0d\n\x0d\n  resolve.paths = paths;\x0d\n\x0d\n  require.main = process.mainModule;\x0d\n\x0d\n  // Enable support to add extra extension types.\x0d\n  require.extensions = Module._extensions;\x0d\n\x0d\n  require.cache = Module._cache;\x0d\n\x0d\n  return require;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\x0d\n * because the buffer-to-string conversion in `fs.readFileSync()`\x0d\n * translates it to FEFF\x2C the UTF-16 BOM.\x0d\n */\x0d\nfunction stripBOM(content) {\x0d\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\x0d\n    content = StringPrototypeSlice(content\x2C 1);\x0d\n  }\x0d\n  return content;\x0d\n}\x0d\n\x0d\nfunction addBuiltinLibsToObject(object\x2C dummyModuleName) {\x0d\n  // Make built-in modules available directly (loaded lazily).\x0d\n  const Module = require('internal/modules/cjs/loader').Module;\x0d\n  const { builtinModules } = Module;\x0d\n\x0d\n  // To require built-in modules in user-land and ignore modules whose\x0d\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\x0d\n  // use `require()` directly.\x0d\n  const dummyModule = new Module(dummyModuleName);\x0d\n\x0d\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\x0d\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\x0d\n    // 'fs/promises') or ones that are already defined.\x0d\n    if (StringPrototypeStartsWith(name\x2C '_') ||\x0d\n        StringPrototypeIncludes(name\x2C '/') ||\x0d\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\x0d\n      return;\x0d\n    }\x0d\n    // Goals of this mechanism are:\x0d\n    // - Lazy loading of built-in modules\x0d\n    // - Having all built-in modules available as non-enumerable properties\x0d\n    // - Allowing the user to re-assign these variables as if there were no\x0d\n    //   pre-existing globals with the same name.\x0d\n\x0d\n    const setReal = (val) => {\x0d\n      // Deleting the property before re-assigning it disables the\x0d\n      // getter/setter mechanism.\x0d\n      delete object[name];\x0d\n      object[name] = val;\x0d\n    };\x0d\n\x0d\n    ObjectDefineProperty(object\x2C name\x2C {\x0d\n      __proto__: null\x2C\x0d\n      get: () => {\x0d\n        const lib = dummyModule.require(name);\x0d\n\x0d\n        // Disable the current getter/setter and set up a new\x0d\n        // non-enumerable property.\x0d\n        delete object[name];\x0d\n        ObjectDefineProperty(object\x2C name\x2C {\x0d\n          __proto__: null\x2C\x0d\n          get: () => lib\x2C\x0d\n          set: setReal\x2C\x0d\n          configurable: true\x2C\x0d\n          enumerable: false\x0d\n        });\x0d\n\x0d\n        return lib;\x0d\n      }\x2C\x0d\n      set: setReal\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} referrer\x0d\n * @returns {string}\x0d\n */\x0d\nfunction normalizeReferrerURL(referrer) {\x0d\n  if (typeof referrer === 'string' && path.isAbsolute(referrer)) {\x0d\n    return pathToFileURL(referrer).href;\x0d\n  }\x0d\n  return new URL(referrer).href;\x0d\n}\x0d\n\x0d\n// For error messages only - used to check if ESM syntax is in use.\x0d\nfunction hasEsmSyntax(code) {\x0d\n  debug('Checking for ESM syntax');\x0d\n  const parser = require('internal/deps/acorn/acorn/dist/acorn').Parser;\x0d\n  let root;\x0d\n  try {\x0d\n    root = parser.parse(code\x2C { sourceType: 'module'\x2C ecmaVersion: 'latest' });\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return ArrayPrototypeSome(root.body\x2C (stmt) =>\x0d\n    stmt.type === 'ExportDefaultDeclaration' ||\x0d\n    stmt.type === 'ExportNamedDeclaration' ||\x0d\n    stmt.type === 'ImportDeclaration' ||\x0d\n    stmt.type === 'ExportAllDeclaration');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addBuiltinLibsToObject\x2C\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n};\x0d\n
code-source-info,0xc4d992273e,114,0,7098,C0O0C4O7098,,
code-creation,Function,10,187056,0xc4d9922cbe,536, node:internal/modules/cjs/helpers:1:1,0xc4d99226b8,~
code-source-info,0xc4d9922cbe,114,0,7098,C0O0C104O28C110O54C116O77C122O100C128O125C134O159C139O171C144O183C150O213C156O241C162O266C168O391C174O391C179O417C184O323C190O359C196O451C202O451C207O434C213O520C219O520C224O501C230O566C236O566C240O566C242O630C248O630C253O592C259O607C265O622C271O685C277O685C282O666C287O738C290O738C295O785C301O785C306O818C319O819C325O785C327O888C330O888C335O944C346O1077C353O1122C354O1122C410O1145C465O1077C470O1077C472O1721C474O1721C479O1721C481O6929C488O6951C494O6978C500O6996C506O7013C512O7034C518O7058C524O7083C530O6944C535O7097,,
code-creation,LazyCompile,10,187199,0xc4d9923986,27,SafeSet node:internal/per_context/primordials:379:16,0x56f5c8abe0,~
code-source-info,0xc4d9923986,6,11306,11323,C3O11312C7O11318C11O11312C26O11322,,
code-creation,LazyCompile,10,187259,0xc4d9923b4e,16,IterableWeakMap node:internal/util/iterable_weak_map:16:1,0xc4d99211f8,~
code-source-info,0xc4d9923b4e,113,388,388,C0O388C15O388,,
code-creation,LazyCompile,10,187292,0xc4d9923ed6,27,SafeWeakMap node:internal/per_context/primordials:372:16,0x56f5c8ab18,~
code-source-info,0xc4d9923ed6,6,11143,11160,C3O11149C7O11155C11O11149C26O11159,,
code-creation,LazyCompile,10,187336,0xc4d9923fde,27,SafeFinalizationRegistry node:internal/per_context/primordials:393:16,0x56f5c8ad68,~
code-source-info,0xc4d9923fde,6,11770,11815,C3O11790C7O11796C11O11790C26O11814,,
code-creation,LazyCompile,10,187474,0xc4d992485e,492,initializeDeprecations node:internal/bootstrap/pre_execution:347:32,0x3d28624d010,~
code-source-info,0xc4d992485e
code-creation,LazyCompile,10,187570,0xc4d9924d76,53,initializeWASI node:internal/bootstrap/pre_execution:514:24,0x3d28624d190,~
code-source-info,0xc4d9924d76,100,16683,16894,C0O16716C6O16716C11O16699C16O16783C21O16787C29O16787C35O16803C37O16835C43O16835C47O16828C52O16893,,
code-creation,LazyCompile,10,187629,0xc4d9924eae,53,runDeserializeCallbacks node:internal/v8/startup_snapshot:31:33,0x39c7b62f858,~
script-source,89,node:internal/v8/startup_snapshot,'use strict';\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  ERR_NOT_BUILDING_SNAPSHOT\x2C\x0d\n  ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  setSerializeCallback\x2C\x0d\n  setDeserializeCallback\x2C\x0d\n  setDeserializeMainFunction: _setDeserializeMainFunction\x2C\x0d\n  markBootstrapComplete\x0d\n} = internalBinding('mksnapshot');\x0d\n\x0d\nfunction isBuildingSnapshot() {\x0d\n  // For now this is the only way to build a snapshot.\x0d\n  return require('internal/options').getOptionValue('--build-snapshot');\x0d\n}\x0d\n\x0d\nfunction throwIfNotBuildingSnapshot() {\x0d\n  if (!isBuildingSnapshot()) {\x0d\n    throw new ERR_NOT_BUILDING_SNAPSHOT();\x0d\n  }\x0d\n}\x0d\n\x0d\nconst deserializeCallbacks = [];\x0d\nlet deserializeCallbackIsSet = false;\x0d\nfunction runDeserializeCallbacks() {\x0d\n  while (deserializeCallbacks.length > 0) {\x0d\n    const { 0: callback\x2C 1: data } = deserializeCallbacks.shift();\x0d\n    callback(data);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addDeserializeCallback(callback\x2C data) {\x0d\n  throwIfNotBuildingSnapshot();\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  if (!deserializeCallbackIsSet) {\x0d\n    // TODO(joyeecheung): when the main function handling is done in JS\x2C\x0d\n    // the deserialize callbacks can always be invoked. For now only\x0d\n    // store it in C++ when it's actually used to avoid unnecessary\x0d\n    // C++ -> JS costs.\x0d\n    setDeserializeCallback(runDeserializeCallbacks);\x0d\n    deserializeCallbackIsSet = true;\x0d\n  }\x0d\n  deserializeCallbacks.push([callback\x2C data]);\x0d\n}\x0d\n\x0d\nconst serializeCallbacks = [];\x0d\nfunction runSerializeCallbacks() {\x0d\n  while (serializeCallbacks.length > 0) {\x0d\n    const { 0: callback\x2C 1: data } = serializeCallbacks.shift();\x0d\n    callback(data);\x0d\n  }\x0d\n  // Remove the hooks from the snapshot.\x0d\n  require('v8').startupSnapshot = undefined;\x0d\n}\x0d\n\x0d\nfunction addSerializeCallback(callback\x2C data) {\x0d\n  throwIfNotBuildingSnapshot();\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  serializeCallbacks.push([callback\x2C data]);\x0d\n}\x0d\n\x0d\nfunction initializeCallbacks() {\x0d\n  // Only run the serialize callbacks in snapshot building mode\x2C otherwise\x0d\n  // they throw.\x0d\n  if (isBuildingSnapshot()) {\x0d\n    setSerializeCallback(runSerializeCallbacks);\x0d\n  }\x0d\n}\x0d\n\x0d\nlet deserializeMainIsSet = false;\x0d\nfunction setDeserializeMainFunction(callback\x2C data) {\x0d\n  throwIfNotBuildingSnapshot();\x0d\n  // TODO(joyeecheung): In lib/internal/bootstrap/node.js\x2C create a default\x0d\n  // main function to run the lib/internal/main scripts and make sure that\x0d\n  // the main function set in the snapshot building process takes precedence.\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  if (deserializeMainIsSet) {\x0d\n    throw new ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION();\x0d\n  }\x0d\n  deserializeMainIsSet = true;\x0d\n\x0d\n  _setDeserializeMainFunction(function deserializeMain() {\x0d\n    const {\x0d\n      prepareMainThreadExecution\x0d\n    } = require('internal/bootstrap/pre_execution');\x0d\n\x0d\n    // This should be in sync with run_main_module.js until we make that\x0d\n    // a built-in main function.\x0d\n    prepareMainThreadExecution(true);\x0d\n    markBootstrapComplete();\x0d\n    callback(data);\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  initializeCallbacks\x2C\x0d\n  runDeserializeCallbacks\x2C\x0d\n  // Exposed to require('v8').startupSnapshot\x0d\n  namespace: {\x0d\n    addDeserializeCallback\x2C\x0d\n    addSerializeCallback\x2C\x0d\n    setDeserializeMainFunction\x2C\x0d\n    isBuildingSnapshot\x0d\n  }\x0d\n};\x0d\n
code-source-info,0xc4d9924eae,89,790,936,C0O833C5O826C11O833C16O878C21O899C26O899C31O856C37O869C44O913C48O798C52O935,,
code-creation,LazyCompile,10,187834,0xc4d992543e,66,initializeCJSLoader node:internal/bootstrap/pre_execution:521:29,0x3d28624d1e0,~
code-source-info,0xc4d992543e,100,16926,17249,C0O16952C6O16952C11O16995C16O17000C20O17020C26O17059C31O17066C36O17066C40O17165C51O17187C56O17223C60O17180C65O17248,,
code-creation,Eval,10,188639,0xc4d992744e,5, node:internal/modules/cjs/loader:1:1,0xc4d9926b68,~
script-source,115,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  ArrayPrototypeUnshiftApply\x2C\x0d\n  ArrayPrototypeFlatMap\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototype\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Proxy\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectSet\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Map used to store CJS parsing data.\x0d\nconst cjsParseCache = new SafeWeakMap();\x0d\n\x0d\n// Set first due to cycle with ESM loader functions.\x0d\nmodule.exports = {\x0d\n  wrapSafe\x2C Module\x2C toRealPath\x2C readPackageScope\x2C cjsParseCache\x2C\x0d\n  get hasLoadedAnyUserCJSModule() { return hasLoadedAnyUserCJSModule; }\x0d\n};\x0d\n\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  maybeCacheSourceMap\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C isURLInstance } = require('internal/url');\x0d\nconst { deprecate\x2C kEmptyObject } = require('internal/util');\x0d\nconst vm = require('vm');\x0d\nconst assert = require('internal/assert');\x0d\nconst fs = require('fs');\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst path = require('path');\x0d\nconst { sep } = path;\x0d\nconst { internalModuleStat } = internalBinding('fs');\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst { safeGetenv } = internalBinding('credentials');\x0d\nconst {\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\n\x0d\n// Whether any user-provided CJS modules had been loaded (executed).\x0d\n// Used for internal assertions.\x0d\nlet hasLoadedAnyUserCJSModule = false;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n    ERR_REQUIRE_ESM\x2C\x0d\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  }\x2C\x0d\n  setArrowMessage\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x0d\n} = require('internal/constants');\x0d\n\x0d\nconst {\x0d\n  isProxy\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { enrichCJSError } = require('internal/modules/esm/translators');\x0d\nconst { kEvaluated } = internalBinding('module_wrap');\x0d\nconst {\x0d\n  encodedSepRegEx\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x0d\n} = require('internal/modules/esm/resolve');\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst relativeResolveCache = ObjectCreate(null);\x0d\n\x0d\nlet requireDepth = 0;\x0d\nlet statCache = null;\x0d\nlet isPreloading = false;\x0d\n\x0d\nfunction stat(filename) {\x0d\n  filename = path.toNamespacedPath(filename);\x0d\n  if (statCache !== null) {\x0d\n    const result = statCache.get(filename);\x0d\n    if (result !== undefined) return result;\x0d\n  }\x0d\n  const result = internalModuleStat(filename);\x0d\n  if (statCache !== null && result >= 0) {\x0d\n    // Only set cache when `internalModuleStat(filename)` succeeds.\x0d\n    statCache.set(filename\x2C result);\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nfunction updateChildren(parent\x2C child\x2C scan) {\x0d\n  const children = parent?.children;\x0d\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child)))\x0d\n    ArrayPrototypePush(children\x2C child);\x0d\n}\x0d\n\x0d\nconst moduleParentCache = new SafeWeakMap();\x0d\nfunction Module(id = ''\x2C parent) {\x0d\n  this.id = id;\x0d\n  this.path = path.dirname(id);\x0d\n  this.exports = {};\x0d\n  moduleParentCache.set(this\x2C parent);\x0d\n  updateChildren(parent\x2C this\x2C false);\x0d\n  this.filename = null;\x0d\n  this.loaded = false;\x0d\n  this.children = [];\x0d\n}\x0d\n\x0d\nconst builtinModules = [];\x0d\nfor (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n  if (mod.canBeRequiredByUsers &&\x0d\n    NativeModule.canBeRequiredWithoutScheme(id)) {\x0d\n    ArrayPrototypePush(builtinModules\x2C id);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst allBuiltins = new SafeSet(\x0d\n  ArrayPrototypeFlatMap(builtinModules\x2C (bm) => [bm\x2C `node:${bm}`])\x0d\n);\x0d\nNativeModule.getSchemeOnlyModuleNames().forEach((builtin) => allBuiltins.add(`node:${builtin}`));\x0d\n\x0d\nObjectFreeze(builtinModules);\x0d\nModule.builtinModules = builtinModules;\x0d\n\x0d\nModule._cache = ObjectCreate(null);\x0d\nModule._pathCache = ObjectCreate(null);\x0d\nModule._extensions = ObjectCreate(null);\x0d\nlet modulePaths = [];\x0d\nModule.globalPaths = [];\x0d\n\x0d\nlet patched = false;\x0d\n\x0d\n// eslint-disable-next-line func-style\x0d\nlet wrap = function(script) {\x0d\n  return Module.wrapper[0] + script + Module.wrapper[1];\x0d\n};\x0d\n\x0d\nconst wrapper = [\x0d\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\x0d\n  '\\n});'\x2C\x0d\n];\x0d\n\x0d\nlet wrapperProxy = new Proxy(wrapper\x2C {\x0d\n  __proto__: null\x2C\x0d\n\x0d\n  set(target\x2C property\x2C value\x2C receiver) {\x0d\n    patched = true;\x0d\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C property\x2C descriptor) {\x0d\n    patched = true;\x0d\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return wrap;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrap = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return wrapperProxy;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrapperProxy = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst isPreloadingDesc = { get() { return isPreloading; } };\x0d\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\nObjectDefineProperty(NativeModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\n\x0d\nfunction getModuleParent() {\x0d\n  return moduleParentCache.get(this);\x0d\n}\x0d\n\x0d\nfunction setModuleParent(value) {\x0d\n  moduleParentCache.set(this\x2C value);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: pendingDeprecation ? deprecate(\x0d\n    getModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : getModuleParent\x2C\x0d\n  set: pendingDeprecation ? deprecate(\x0d\n    setModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : setModuleParent\x2C\x0d\n});\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nModule._debug = deprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\x0d\n\x0d\n// Given a module name\x2C and a list of paths to test\x2C returns the first\x0d\n// matching file in the following precedence.\x0d\n//\x0d\n// require("a.<ext>")\x0d\n//   -> a.<ext>\x0d\n//\x0d\n// require("a")\x0d\n//   -> a\x0d\n//   -> a.<ext>\x0d\n//   -> a/index.<ext>\x0d\n\x0d\nconst packageJsonCache = new SafeMap();\x0d\n\x0d\nfunction readPackage(requestPath) {\x0d\n  const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n\x0d\n  const existing = packageJsonCache.get(jsonPath);\x0d\n  if (existing !== undefined) return existing;\x0d\n\x0d\n  const result = packageJsonReader.read(jsonPath);\x0d\n  const json = result.containsKeys === false ? '{}' : result.string;\x0d\n  if (json === undefined) {\x0d\n    packageJsonCache.set(jsonPath\x2C false);\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const parsed = JSONParse(json);\x0d\n    const filtered = {\x0d\n      name: parsed.name\x2C\x0d\n      main: parsed.main\x2C\x0d\n      exports: parsed.exports\x2C\x0d\n      imports: parsed.imports\x2C\x0d\n      type: parsed.type\x0d\n    };\x0d\n    packageJsonCache.set(jsonPath\x2C filtered);\x0d\n    return filtered;\x0d\n  } catch (e) {\x0d\n    e.path = jsonPath;\x0d\n    e.message = 'Error parsing ' + jsonPath + ': ' + e.message;\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction readPackageScope(checkPath) {\x0d\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath\x2C sep);\x0d\n  let separatorIndex;\x0d\n  do {\x0d\n    separatorIndex = StringPrototypeLastIndexOf(checkPath\x2C sep);\x0d\n    checkPath = StringPrototypeSlice(checkPath\x2C 0\x2C separatorIndex);\x0d\n    if (StringPrototypeEndsWith(checkPath\x2C sep + 'node_modules'))\x0d\n      return false;\x0d\n    const pjson = readPackage(checkPath + sep);\x0d\n    if (pjson) return {\x0d\n      data: pjson\x2C\x0d\n      path: checkPath\x2C\x0d\n    };\x0d\n  } while (separatorIndex > rootSeparatorIndex);\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\x0d\n  const pkg = readPackage(requestPath)?.main;\x0d\n\x0d\n  if (!pkg) {\x0d\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n  }\x0d\n\x0d\n  const filename = path.resolve(requestPath\x2C pkg);\x0d\n  let actual = tryFile(filename\x2C isMain) ||\x0d\n    tryExtensions(filename\x2C exts\x2C isMain) ||\x0d\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\x0d\n  if (actual === false) {\x0d\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n    if (!actual) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const err = new Error(\x0d\n        `Cannot find module '${filename}'. ` +\x0d\n        'Please verify that the package.json has a valid "main" entry'\x0d\n      );\x0d\n      err.code = 'MODULE_NOT_FOUND';\x0d\n      err.path = path.resolve(requestPath\x2C 'package.json');\x0d\n      err.requestPath = originalPath;\x0d\n      // TODO(BridgeAR): Add the requireStack as well.\x0d\n      throw err;\x0d\n    } else {\x0d\n      const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n      process.emitWarning(\x0d\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\x0d\n          'Please either fix that or report it to the module author'\x2C\x0d\n        'DeprecationWarning'\x2C\x0d\n        'DEP0128'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  return actual;\x0d\n}\x0d\n\x0d\n// In order to minimize unnecessary lstat() calls\x2C\x0d\n// this cache is a list of known-real paths.\x0d\n// Set to an empty Map to reset.\x0d\nconst realpathCache = new SafeMap();\x0d\n\x0d\n// Check if the file exists and is not a directory\x0d\n// if using --preserve-symlinks and isMain is false\x2C\x0d\n// keep symlinks intact\x2C otherwise resolve to the\x0d\n// absolute realpath.\x0d\nfunction tryFile(requestPath\x2C isMain) {\x0d\n  const rc = stat(requestPath);\x0d\n  if (rc !== 0) return;\x0d\n  if (preserveSymlinks && !isMain) {\x0d\n    return path.resolve(requestPath);\x0d\n  }\x0d\n  return toRealPath(requestPath);\x0d\n}\x0d\n\x0d\nfunction toRealPath(requestPath) {\x0d\n  return fs.realpathSync(requestPath\x2C {\x0d\n    [internalFS.realpathCacheKey]: realpathCache\x0d\n  });\x0d\n}\x0d\n\x0d\n// Given a path\x2C check if the file exists with any of the set extensions\x0d\nfunction tryExtensions(p\x2C exts\x2C isMain) {\x0d\n  for (let i = 0; i < exts.length; i++) {\x0d\n    const filename = tryFile(p + exts[i]\x2C isMain);\x0d\n\x0d\n    if (filename) {\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n// Find the longest (possibly multi-dot) extension registered in\x0d\n// Module._extensions\x0d\nfunction findLongestRegisteredExtension(filename) {\x0d\n  const name = path.basename(filename);\x0d\n  let currentExtension;\x0d\n  let index;\x0d\n  let startIndex = 0;\x0d\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\x0d\n    startIndex = index + 1;\x0d\n    if (index === 0) continue; // Skip dotfiles like .gitignore\x0d\n    currentExtension = StringPrototypeSlice(name\x2C index);\x0d\n    if (Module._extensions[currentExtension]) return currentExtension;\x0d\n  }\x0d\n  return '.js';\x0d\n}\x0d\n\x0d\nfunction trySelfParentPath(parent) {\x0d\n  if (!parent) return false;\x0d\n\x0d\n  if (parent.filename) {\x0d\n    return parent.filename;\x0d\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\x0d\n    try {\x0d\n      return process.cwd() + path.sep;\x0d\n    } catch {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction trySelf(parentPath\x2C request) {\x0d\n  if (!parentPath) return false;\x0d\n\x0d\n  const { data: pkg\x2C path: pkgPath } = readPackageScope(parentPath) || {};\x0d\n  if (!pkg || pkg.exports === undefined) return false;\x0d\n  if (typeof pkg.name !== 'string') return false;\x0d\n\x0d\n  let expansion;\x0d\n  if (request === pkg.name) {\x0d\n    expansion = '.';\x0d\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.name}/`)) {\x0d\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.name.length);\x0d\n  } else {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    return finalizeEsmResolution(packageExportsResolve(\x0d\n      pathToFileURL(pkgPath + '/package.json')\x2C expansion\x2C pkg\x2C\x0d\n      pathToFileURL(parentPath)\x2C cjsConditions)\x2C request\x2C parentPath\x2C pkgPath);\x0d\n  } catch (e) {\x0d\n    if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n      throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\n// This only applies to requests of a specific form:\x0d\n// 1. name/.*\x0d\n// 2. @scope/name/.*\x0d\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\x0d\nfunction resolveExports(nmPath\x2C request) {\x0d\n  // The implementation's behavior is meant to mirror resolution in ESM.\x0d\n  const { 1: name\x2C 2: expansion = '' } =\x0d\n    RegExpPrototypeExec(EXPORTS_PATTERN\x2C request) || kEmptyObject;\x0d\n  if (!name)\x0d\n    return;\x0d\n  const pkgPath = path.resolve(nmPath\x2C name);\x0d\n  const pkg = readPackage(pkgPath);\x0d\n  if (pkg?.exports != null) {\x0d\n    try {\x0d\n      return finalizeEsmResolution(packageExportsResolve(\x0d\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\x0d\n        cjsConditions)\x2C request\x2C null\x2C pkgPath);\x0d\n    } catch (e) {\x0d\n      if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst trailingSlashRegex = /(?:^|\\/)\\.?\\.$/;\x0d\nModule._findPath = function(request\x2C paths\x2C isMain) {\x0d\n  const absoluteRequest = path.isAbsolute(request);\x0d\n  if (absoluteRequest) {\x0d\n    paths = [''];\x0d\n  } else if (!paths || paths.length === 0) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\x0d\n  const entry = Module._pathCache[cacheKey];\x0d\n  if (entry)\x0d\n    return entry;\x0d\n\x0d\n  let exts;\x0d\n  let trailingSlash = request.length > 0 &&\x0d\n    StringPrototypeCharCodeAt(request\x2C request.length - 1) ===\x0d\n    CHAR_FORWARD_SLASH;\x0d\n  if (!trailingSlash) {\x0d\n    trailingSlash = RegExpPrototypeExec(trailingSlashRegex\x2C request) !== null;\x0d\n  }\x0d\n\x0d\n  // For each path\x0d\n  for (let i = 0; i < paths.length; i++) {\x0d\n    // Don't search further if path doesn't exist\x0d\n    const curPath = paths[i];\x0d\n    if (curPath && stat(curPath) < 1) continue;\x0d\n\x0d\n    if (!absoluteRequest) {\x0d\n      const exportsResolved = resolveExports(curPath\x2C request);\x0d\n      if (exportsResolved)\x0d\n        return exportsResolved;\x0d\n    }\x0d\n\x0d\n    const basePath = path.resolve(curPath\x2C request);\x0d\n    let filename;\x0d\n\x0d\n    const rc = stat(basePath);\x0d\n    if (!trailingSlash) {\x0d\n      if (rc === 0) {  // File.\x0d\n        if (!isMain) {\x0d\n          if (preserveSymlinks) {\x0d\n            filename = path.resolve(basePath);\x0d\n          } else {\x0d\n            filename = toRealPath(basePath);\x0d\n          }\x0d\n        } else if (preserveSymlinksMain) {\x0d\n          // For the main module\x2C we use the preserveSymlinksMain flag instead\x0d\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\x0d\n          // historically has not applied to the main module.  Most likely this\x0d\n          // was intended to keep .bin/ binaries working\x2C as following those\x0d\n          // symlinks is usually required for the imports in the corresponding\x0d\n          // files to resolve; that said\x2C in some use cases following symlinks\x0d\n          // causes bigger problems which is why the preserveSymlinksMain option\x0d\n          // is needed.\x0d\n          filename = path.resolve(basePath);\x0d\n        } else {\x0d\n          filename = toRealPath(basePath);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (!filename) {\x0d\n        // Try it with each of the extensions\x0d\n        if (exts === undefined)\x0d\n          exts = ObjectKeys(Module._extensions);\x0d\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (!filename && rc === 1) {  // Directory.\x0d\n      // try it with each of the extensions at "index"\x0d\n      if (exts === undefined)\x0d\n        exts = ObjectKeys(Module._extensions);\x0d\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\x0d\n    }\x0d\n\x0d\n    if (filename) {\x0d\n      Module._pathCache[cacheKey] = filename;\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n};\x0d\n\x0d\n// 'node_modules' character codes reversed\x0d\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\x0d\nconst nmLen = nmChars.length;\x0d\nif (isWindows) {\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n\x0d\n    // return root node_modules when path is 'D:\\\\'.\x0d\n    // path.resolve will make sure from.length >=3 in Windows.\x0d\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\x0d\n          CHAR_BACKWARD_SLASH &&\x0d\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON)\x0d\n      return [from + 'node_modules'];\x0d\n\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      // The path segment separator check ('\\' and '/') was used to get\x0d\n      // node_modules path for every path segment.\x0d\n      // Use colon as an extra condition since we can get node_modules\x0d\n      // path for drive root like 'C:\\node_modules' and don't need to\x0d\n      // parse drive name.\x0d\n      if (code === CHAR_BACKWARD_SLASH ||\x0d\n          code === CHAR_FORWARD_SLASH ||\x0d\n          code === CHAR_COLON) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n} else { // posix\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\x0d\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\x0d\n    if (from === '/')\x0d\n      return ['/node_modules'];\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Append /node_modules to handle root paths.\x0d\n    ArrayPrototypePush(paths\x2C '/node_modules');\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n}\x0d\n\x0d\nModule._resolveLookupPaths = function(request\x2C parent) {\x0d\n  if (NativeModule.canBeRequiredByUsers(request) &&\x0d\n      NativeModule.canBeRequiredWithoutScheme(request)) {\x0d\n    debug('looking for %j in []'\x2C request);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // Check for node modules paths.\x0d\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\x0d\n      (request.length > 1 &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\x0d\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\x0d\n\x0d\n    let paths = modulePaths;\x0d\n    if (parent?.paths?.length) {\x0d\n      paths = ArrayPrototypeConcat(parent.paths\x2C paths);\x0d\n    }\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C paths);\x0d\n    return paths.length > 0 ? paths : null;\x0d\n  }\x0d\n\x0d\n  // In REPL\x2C parent.filename is null.\x0d\n  if (!parent || !parent.id || !parent.filename) {\x0d\n    // Make require('./path/to/foo') work - normally the path is taken\x0d\n    // from realpath(__filename) but in REPL there is no filename\x0d\n    const mainPaths = ['.'];\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\x0d\n    return mainPaths;\x0d\n  }\x0d\n\x0d\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\x0d\n\x0d\n  const parentDir = [path.dirname(parent.filename)];\x0d\n  debug('looking for %j'\x2C parentDir);\x0d\n  return parentDir;\x0d\n};\x0d\n\x0d\nfunction emitCircularRequireWarning(prop) {\x0d\n  process.emitWarning(\x0d\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\x0d\n    'inside circular dependency'\x0d\n  );\x0d\n}\x0d\n\x0d\n// A Proxy that can be used as the prototype of a module.exports object and\x0d\n// warns when non-existent properties are accessed.\x0d\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\x0d\n  __proto__: null\x2C\x0d\n\x0d\n  get(target\x2C prop) {\x0d\n    // Allow __esModule access in any case because it is used in the output\x0d\n    // of transpiled code to determine whether something comes from an\x0d\n    // ES module\x2C and is not used as a regular key of `module.exports`.\x0d\n    if (prop in target || prop === '__esModule') return target[prop];\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x2C\x0d\n\x0d\n  getOwnPropertyDescriptor(target\x2C prop) {\x0d\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule')\x0d\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction getExportsForCircularRequire(module) {\x0d\n  if (module.exports &&\x0d\n      !isProxy(module.exports) &&\x0d\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\x0d\n      // Exclude transpiled ES6 modules / TypeScript code because those may\x0d\n      // employ unusual patterns for accessing 'module.exports'. That should\x0d\n      // be okay because ES6 modules have a different approach to circular\x0d\n      // dependencies anyway.\x0d\n      !module.exports.__esModule) {\x0d\n    // This is later unset once the module is done loading.\x0d\n    ObjectSetPrototypeOf(\x0d\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n}\x0d\n\x0d\n// Check the cache for the requested file.\x0d\n// 1. If a module already exists in the cache: return its exports object.\x0d\n// 2. If the module is native: call\x0d\n//    `NativeModule.prototype.compileForPublicLoader()` and return the exports.\x0d\n// 3. Otherwise\x2C create a new module for the file and save it to the cache.\x0d\n//    Then have it load  the file contents before returning its exports\x0d\n//    object.\x0d\nModule._load = function(request\x2C parent\x2C isMain) {\x0d\n  let relResolveCacheIdentifier;\x0d\n  if (parent) {\x0d\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\x0d\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\x0d\n    // caching is required to allow cache invalidation without changing the old\x0d\n    // cache key names.\x0d\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\x0d\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\x0d\n    if (filename !== undefined) {\x0d\n      const cachedModule = Module._cache[filename];\x0d\n      if (cachedModule !== undefined) {\x0d\n        updateChildren(parent\x2C cachedModule\x2C true);\x0d\n        if (!cachedModule.loaded)\x0d\n          return getExportsForCircularRequire(cachedModule);\x0d\n        return cachedModule.exports;\x0d\n      }\x0d\n      delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (StringPrototypeStartsWith(request\x2C 'node:')) {\x0d\n    // Slice 'node:' prefix\x0d\n    const id = StringPrototypeSlice(request\x2C 5);\x0d\n\x0d\n    const module = loadNativeModule(id\x2C request);\x0d\n    if (!module?.canBeRequiredByUsers) {\x0d\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(request);\x0d\n    }\x0d\n\x0d\n    return module.exports;\x0d\n  }\x0d\n\x0d\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\x0d\n  const cachedModule = Module._cache[filename];\x0d\n  if (cachedModule !== undefined) {\x0d\n    updateChildren(parent\x2C cachedModule\x2C true);\x0d\n    if (!cachedModule.loaded) {\x0d\n      const parseCachedModule = cjsParseCache.get(cachedModule);\x0d\n      if (!parseCachedModule || parseCachedModule.loaded)\x0d\n        return getExportsForCircularRequire(cachedModule);\x0d\n      parseCachedModule.loaded = true;\x0d\n    } else {\x0d\n      return cachedModule.exports;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const mod = loadNativeModule(filename\x2C request);\x0d\n  if (mod?.canBeRequiredByUsers &&\x0d\n      NativeModule.canBeRequiredWithoutScheme(filename)) {\x0d\n    return mod.exports;\x0d\n  }\x0d\n\x0d\n  // Don't call updateChildren()\x2C Module constructor already does.\x0d\n  const module = cachedModule || new Module(filename\x2C parent);\x0d\n\x0d\n  if (isMain) {\x0d\n    process.mainModule = module;\x0d\n    module.id = '.';\x0d\n  }\x0d\n\x0d\n  Module._cache[filename] = module;\x0d\n  if (parent !== undefined) {\x0d\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\x0d\n  }\x0d\n\x0d\n  let threw = true;\x0d\n  try {\x0d\n    module.load(filename);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw) {\x0d\n      delete Module._cache[filename];\x0d\n      if (parent !== undefined) {\x0d\n        delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n        const children = parent?.children;\x0d\n        if (ArrayIsArray(children)) {\x0d\n          const index = ArrayPrototypeIndexOf(children\x2C module);\x0d\n          if (index !== -1) {\x0d\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (module.exports &&\x0d\n               !isProxy(module.exports) &&\x0d\n               ObjectGetPrototypeOf(module.exports) ===\x0d\n                 CircularRequirePrototypeWarningProxy) {\x0d\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n};\x0d\n\x0d\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\x0d\n  if (\x0d\n    (\x0d\n      StringPrototypeStartsWith(request\x2C 'node:') &&\x0d\n      NativeModule.canBeRequiredByUsers(StringPrototypeSlice(request\x2C 5))\x0d\n    ) || (\x0d\n      NativeModule.canBeRequiredByUsers(request) &&\x0d\n      NativeModule.canBeRequiredWithoutScheme(request)\x0d\n    )\x0d\n  ) {\x0d\n    return request;\x0d\n  }\x0d\n\x0d\n  let paths;\x0d\n\x0d\n  if (typeof options === 'object' && options !== null) {\x0d\n    if (ArrayIsArray(options.paths)) {\x0d\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\x0d\n          StringPrototypeStartsWith(request\x2C '../') ||\x0d\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\x0d\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\x0d\n\x0d\n      if (isRelative) {\x0d\n        paths = options.paths;\x0d\n      } else {\x0d\n        const fakeParent = new Module(''\x2C null);\x0d\n\x0d\n        paths = [];\x0d\n\x0d\n        for (let i = 0; i < options.paths.length; i++) {\x0d\n          const path = options.paths[i];\x0d\n          fakeParent.paths = Module._nodeModulePaths(path);\x0d\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\x0d\n\x0d\n          for (let j = 0; j < lookupPaths.length; j++) {\x0d\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j]))\x0d\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (options.paths === undefined) {\x0d\n      paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\x0d\n    }\x0d\n  } else {\x0d\n    paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n  }\x0d\n\x0d\n  if (request[0] === '#' && (parent?.filename || parent?.id === '<repl>')) {\x0d\n    const parentPath = parent?.filename ?? process.cwd() + path.sep;\x0d\n    const pkg = readPackageScope(parentPath) || {};\x0d\n    if (pkg.data?.imports != null) {\x0d\n      try {\x0d\n        return finalizeEsmResolution(\x0d\n          packageImportsResolve(request\x2C pathToFileURL(parentPath)\x2C\x0d\n                                cjsConditions)\x2C parentPath\x2C request\x2C\x0d\n          pkg.path);\x0d\n      } catch (e) {\x0d\n        if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n          throw createEsmNotFoundErr(request);\x0d\n        throw e;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Try module self resolution first\x0d\n  const parentPath = trySelfParentPath(parent);\x0d\n  const selfResolved = trySelf(parentPath\x2C request);\x0d\n  if (selfResolved) {\x0d\n    const cacheKey = request + '\\x00' +\x0d\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\x0d\n    Module._pathCache[cacheKey] = selfResolved;\x0d\n    return selfResolved;\x0d\n  }\x0d\n\x0d\n  // Look up the filename first\x2C since that's the cache key.\x0d\n  const filename = Module._findPath(request\x2C paths\x2C isMain\x2C false);\x0d\n  if (filename) return filename;\x0d\n  const requireStack = [];\x0d\n  for (let cursor = parent;\x0d\n    cursor;\x0d\n    cursor = moduleParentCache.get(cursor)) {\x0d\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\x0d\n  }\x0d\n  let message = `Cannot find module '${request}'`;\x0d\n  if (requireStack.length > 0) {\x0d\n    message = message + '\\nRequire stack:\\n- ' +\x0d\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\x0d\n  }\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  err.requireStack = requireStack;\x0d\n  throw err;\x0d\n};\x0d\n\x0d\nfunction finalizeEsmResolution(match\x2C request\x2C parentPath\x2C pkgPath) {\x0d\n  const { resolved\x2C exact } = match;\x0d\n  if (RegExpPrototypeExec(encodedSepRegEx\x2C resolved) !== null)\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\x0d\n  const filename = fileURLToPath(resolved);\x0d\n  let actual = tryFile(filename);\x0d\n  if (!exact && !actual) {\x0d\n    const exts = ObjectKeys(Module._extensions);\x0d\n    actual = tryExtensions(filename\x2C exts\x2C false) ||\x0d\n      tryPackage(filename\x2C exts\x2C false\x2C request);\x0d\n  }\x0d\n  if (actual)\x0d\n    return actual;\x0d\n  const err = createEsmNotFoundErr(filename\x2C\x0d\n                                   path.resolve(pkgPath\x2C 'package.json'));\x0d\n  throw err;\x0d\n}\x0d\n\x0d\nfunction createEsmNotFoundErr(request\x2C path) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(`Cannot find module '${request}'`);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  if (path)\x0d\n    err.path = path;\x0d\n  // TODO(BridgeAR): Add the requireStack as well.\x0d\n  return err;\x0d\n}\x0d\n\x0d\n// Given a file name\x2C pass it to the proper extension handler.\x0d\nModule.prototype.load = function(filename) {\x0d\n  debug('load %j for module %j'\x2C filename\x2C this.id);\x0d\n\x0d\n  assert(!this.loaded);\x0d\n  this.filename = filename;\x0d\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\x0d\n\x0d\n  const extension = findLongestRegisteredExtension(filename);\x0d\n  // allow .mjs to be overridden\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs'])\x0d\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\x0d\n\x0d\n  Module._extensions[extension](this\x2C filename);\x0d\n  this.loaded = true;\x0d\n\x0d\n  const esmLoader = asyncESM.esmLoader;\x0d\n  // Create module entry at load time to snapshot exports correctly\x0d\n  const exports = this.exports;\x0d\n  // Preemptively cache\x0d\n  if ((module?.module === undefined ||\x0d\n       module.module.getStatus() < kEvaluated) &&\x0d\n      !esmLoader.cjsCache.has(this))\x0d\n    esmLoader.cjsCache.set(this\x2C exports);\x0d\n};\x0d\n\x0d\n\x0d\n// Loads a module at the given file path. Returns that module's\x0d\n// `exports` property.\x0d\nModule.prototype.require = function(id) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (id === '') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\x0d\n                                    'must be a non-empty string');\x0d\n  }\x0d\n  requireDepth++;\x0d\n  try {\x0d\n    return Module._load(id\x2C this\x2C /* isMain */ false);\x0d\n  } finally {\x0d\n    requireDepth--;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Resolved path to process.argv[1] will be lazily placed here\x0d\n// (needed for setting breakpoint when called with --inspect-brk)\x0d\nlet resolvedArgv;\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  if (patched) {\x0d\n    const wrapper = Module.wrap(content);\x0d\n    return vm.runInThisContext(wrapper\x2C {\x0d\n      filename\x2C\x0d\n      lineOffset: 0\x2C\x0d\n      displayErrors: true\x2C\x0d\n      importModuleDynamically: async (specifier\x2C _\x2C importAssertions) => {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C normalizeReferrerURL(filename)\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n  try {\x0d\n    return vm.compileFunction(content\x2C [\x0d\n      'exports'\x2C\x0d\n      'require'\x2C\x0d\n      'module'\x2C\x0d\n      '__filename'\x2C\x0d\n      '__dirname'\x2C\x0d\n    ]\x2C {\x0d\n      filename\x2C\x0d\n      importModuleDynamically(specifier\x2C _\x2C importAssertions) {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C normalizeReferrerURL(filename)\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n  } catch (err) {\x0d\n    if (process.mainModule === cjsModuleInstance)\x0d\n      enrichCJSError(err\x2C content);\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Run the file contents in the correct scope or sandbox. Expose\x0d\n// the correct helper variables (require\x2C module\x2C exports) to\x0d\n// the file.\x0d\n// Returns exception\x2C if any.\x0d\nModule.prototype._compile = function(content\x2C filename) {\x0d\n  let moduleURL;\x0d\n  let redirects;\x0d\n  if (policy?.manifest) {\x0d\n    moduleURL = pathToFileURL(filename);\x0d\n    redirects = policy.manifest.getDependencyMapper(moduleURL);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  maybeCacheSourceMap(filename\x2C content\x2C this);\x0d\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\x0d\n\x0d\n  let inspectorWrapper = null;\x0d\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\x0d\n    if (!resolvedArgv) {\x0d\n      // We enter the repl if we're not given a filename argument.\x0d\n      if (process.argv[1]) {\x0d\n        try {\x0d\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\x0d\n        } catch {\x0d\n          // We only expect this codepath to be reached in the case of a\x0d\n          // preloaded module (it will fail earlier with the main entry)\x0d\n          assert(ArrayIsArray(getOptionValue('--require')));\x0d\n        }\x0d\n      } else {\x0d\n        resolvedArgv = 'repl';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Set breakpoint on module start\x0d\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\x0d\n      hasPausedEntry = true;\x0d\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n    }\x0d\n  }\x0d\n  const dirname = path.dirname(filename);\x0d\n  const require = makeRequireFunction(this\x2C redirects);\x0d\n  let result;\x0d\n  const exports = this.exports;\x0d\n  const thisValue = exports;\x0d\n  const module = this;\x0d\n  if (requireDepth === 0) statCache = new SafeMap();\x0d\n  if (inspectorWrapper) {\x0d\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\x0d\n                              require\x2C module\x2C filename\x2C dirname);\x0d\n  } else {\x0d\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\x0d\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\x0d\n  }\x0d\n  hasLoadedAnyUserCJSModule = true;\x0d\n  if (requireDepth === 0) statCache = null;\x0d\n  return result;\x0d\n};\x0d\n\x0d\n// Native extension for .js\x0d\nModule._extensions['.js'] = function(module\x2C filename) {\x0d\n  // If already analyzed the source\x2C then it will be cached.\x0d\n  const cached = cjsParseCache.get(module);\x0d\n  let content;\x0d\n  if (cached?.source) {\x0d\n    content = cached.source;\x0d\n    cached.source = undefined;\x0d\n  } else {\x0d\n    content = fs.readFileSync(filename\x2C 'utf8');\x0d\n  }\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\x0d\n    const pkg = readPackageScope(filename);\x0d\n    // Function require shouldn't be used in ES modules.\x0d\n    if (pkg?.data?.type === 'module') {\x0d\n      const parent = moduleParentCache.get(module);\x0d\n      const parentPath = parent?.filename;\x0d\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\x0d\n      const usesEsm = hasEsmSyntax(content);\x0d\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\x0d\n                                      packageJsonPath);\x0d\n      // Attempt to reconstruct the parent require frame.\x0d\n      if (Module._cache[parentPath]) {\x0d\n        let parentSource;\x0d\n        try {\x0d\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n        if (parentSource) {\x0d\n          const errLine = StringPrototypeSplit(\x0d\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\x0d\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\x0d\n          const { 1: line\x2C 2: col } =\x0d\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\x0d\n          if (line && col) {\x0d\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\x0d\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\x0d\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\x0d\n            setArrowMessage(err\x2C frame);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      throw err;\x0d\n    }\x0d\n  }\x0d\n  module._compile(content\x2C filename);\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .json\x0d\nModule._extensions['.json'] = function(module\x2C filename) {\x0d\n  const content = fs.readFileSync(filename\x2C 'utf8');\x0d\n\x0d\n  if (policy?.manifest) {\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    module.exports = JSONParse(stripBOM(content));\x0d\n  } catch (err) {\x0d\n    err.message = filename + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .node\x0d\nModule._extensions['.node'] = function(module\x2C filename) {\x0d\n  if (policy?.manifest) {\x0d\n    const content = fs.readFileSync(filename);\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n  // Be aware this doesn't use `content`\x0d\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\x0d\n};\x0d\n\x0d\nfunction createRequireFromPath(filename) {\x0d\n  // Allow a directory to be passed as the filename\x0d\n  const trailingSlash =\x0d\n    StringPrototypeEndsWith(filename\x2C '/') ||\x0d\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\x0d\n\x0d\n  const proxyPath = trailingSlash ?\x0d\n    path.join(filename\x2C 'noop.js') :\x0d\n    filename;\x0d\n\x0d\n  const m = new Module(proxyPath);\x0d\n  m.filename = proxyPath;\x0d\n\x0d\n  m.paths = Module._nodeModulePaths(m.path);\x0d\n  return makeRequireFunction(m\x2C null);\x0d\n}\x0d\n\x0d\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\x0d\n  'absolute path string';\x0d\n\x0d\nfunction createRequire(filename) {\x0d\n  let filepath;\x0d\n\x0d\n  if (isURLInstance(filename) ||\x0d\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\x0d\n    try {\x0d\n      filepath = fileURLToPath(filename);\x0d\n    } catch {\x0d\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\x0d\n                                      createRequireError);\x0d\n    }\x0d\n  } else if (typeof filename !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\x0d\n  } else {\x0d\n    filepath = filename;\x0d\n  }\x0d\n  return createRequireFromPath(filepath);\x0d\n}\x0d\n\x0d\nModule.createRequire = createRequire;\x0d\n\x0d\nModule._initPaths = function() {\x0d\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\x0d\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\x0d\n\x0d\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\x0d\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\x0d\n  const prefixDir = isWindows ?\x0d\n    path.resolve(process.execPath\x2C '..') :\x0d\n    path.resolve(process.execPath\x2C '..'\x2C '..');\x0d\n\x0d\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\x0d\n\x0d\n  if (homeDir) {\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\x0d\n  }\x0d\n\x0d\n  if (nodePath) {\x0d\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\x0d\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\x0d\n      Boolean\x0d\n    ));\x0d\n  }\x0d\n\x0d\n  modulePaths = paths;\x0d\n\x0d\n  // Clone as a shallow copy\x2C for introspection.\x0d\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\x0d\n};\x0d\n\x0d\nModule._preloadModules = function(requests) {\x0d\n  if (!ArrayIsArray(requests))\x0d\n    return;\x0d\n\x0d\n  isPreloading = true;\x0d\n\x0d\n  // Preloaded modules have a dummy parent module which is deemed to exist\x0d\n  // in the current working directory. This seeds the search path for\x0d\n  // preloaded modules.\x0d\n  const parent = new Module('internal/preload'\x2C null);\x0d\n  try {\x0d\n    parent.paths = Module._nodeModulePaths(process.cwd());\x0d\n  } catch (e) {\x0d\n    if (e.code !== 'ENOENT') {\x0d\n      isPreloading = false;\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n  for (let n = 0; n < requests.length; n++)\x0d\n    parent.require(requests[n]);\x0d\n  isPreloading = false;\x0d\n};\x0d\n\x0d\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\x0d\n  for (const mod of NativeModule.map.values()) {\x0d\n    if (mod.canBeRequiredByUsers &&\x0d\n        NativeModule.canBeRequiredWithoutScheme(mod.id)) {\x0d\n      mod.syncExports();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nModule.isBuiltin = function isBuiltin(moduleName) {\x0d\n  return allBuiltins.has(moduleName);\x0d\n};\x0d\n\x0d\n// Backwards compatibility\x0d\nModule.Module = Module;\x0d\n
code-source-info,0xc4d992744e,115,0,42557,C0O0C4O42557,,
code-creation,Function,10,190166,0xc4d992931e,2678, node:internal/modules/cjs/loader:1:1,0xc4d99273c8,~
code-source-info,0xc4d992931e
code-creation,Eval,10,190598,0xc4d992d596,5, node:internal/modules/package_json_reader:1:1,0xc4d992d3f0,~
script-source,116,node:internal/modules/package_json_reader,'use strict';\x0d\n\x0d\nconst { SafeMap } = primordials;\x0d\nconst { internalModuleReadJSON } = internalBinding('fs');\x0d\nconst { pathToFileURL } = require('url');\x0d\nconst { toNamespacedPath } = require('path');\x0d\n\x0d\nconst cache = new SafeMap();\x0d\n\x0d\nlet manifest;\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string} jsonPath\x0d\n */\x0d\nfunction read(jsonPath) {\x0d\n  if (cache.has(jsonPath)) {\x0d\n    return cache.get(jsonPath);\x0d\n  }\x0d\n\x0d\n  const { 0: string\x2C 1: containsKeys } = internalModuleReadJSON(\x0d\n    toNamespacedPath(jsonPath)\x0d\n  );\x0d\n  const result = { string\x2C containsKeys };\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (string !== undefined) {\x0d\n    if (manifest === undefined) {\x0d\n      manifest = getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').manifest :\x0d\n        null;\x0d\n    }\x0d\n    if (manifest !== null) {\x0d\n      const jsonURL = pathToFileURL(jsonPath);\x0d\n      manifest.assertIntegrity(jsonURL\x2C string);\x0d\n    }\x0d\n  }\x0d\n  cache.set(jsonPath\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = { read };\x0d\n
code-source-info,0xc4d992d596,116,0,1024,C0O0C4O1024,,
code-creation,Function,10,190672,0xc4d992d6e6,113, node:internal/modules/package_json_reader:1:1,0xc4d992d510,~
code-source-info,0xc4d992d6e6,116,0,1024,C0O0C29O25C34O86C37O86C42O59C48O136C54O136C59O118C65O182C71O182C76O161C82O216C84O216C89O216C91O238C92O238C94O996C101O1015C107O1011C112O1023,,
code-creation,Eval,10,190822,0xc4d992de9e,5, node:internal/process/esm_loader:1:1,0xc4d992dc98,~
script-source,117,node:internal/process/esm_loader,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { ESMLoader } = require('internal/modules/esm/loader');\x0d\nconst {\x0d\n  hasUncaughtExceptionCaptureCallback\x2C\x0d\n} = require('internal/process/execution');\x0d\nconst { pathToFileURL } = require('internal/url');\x0d\nconst {\x0d\n  getModuleFromWrap\x2C\x0d\n} = require('internal/vm/module');\x0d\n\x0d\nexports.initializeImportMetaObject = function(wrap\x2C meta) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { initializeImportMeta } = callbackMap.get(wrap);\x0d\n    if (initializeImportMeta !== undefined) {\x0d\n      initializeImportMeta(meta\x2C getModuleFromWrap(wrap) || wrap);\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nexports.importModuleDynamicallyCallback =\x0d\nasync function importModuleDynamicallyCallback(wrap\x2C specifier\x2C assertions) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { importModuleDynamically } = callbackMap.get(wrap);\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      return importModuleDynamically(\x0d\n        specifier\x2C getModuleFromWrap(wrap) || wrap\x2C assertions);\x0d\n    }\x0d\n  }\x0d\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\x0d\n};\x0d\n\x0d\nconst esmLoader = new ESMLoader();\x0d\nexports.esmLoader = esmLoader;\x0d\n\x0d\n// Module.runMain() causes loadESM() to re-run (which it should do); however\x2C this should NOT cause\x0d\n// ESM to be re-initialised; doing so causes duplicate custom loaders to be added to the public\x0d\n// esmLoader.\x0d\nlet isESMInitialized = false;\x0d\n\x0d\n/**\x0d\n * Causes side-effects: user-defined loader hooks are added to esmLoader.\x0d\n * @returns {void}\x0d\n */\x0d\nasync function initializeLoader() {\x0d\n  if (isESMInitialized) { return; }\x0d\n\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  const customLoaders = getOptionValue('--experimental-loader');\x0d\n\x0d\n  if (customLoaders.length === 0) return;\x0d\n\x0d\n  let cwd;\x0d\n  try {\x0d\n    cwd = process.cwd() + '/';\x0d\n  } catch {\x0d\n    cwd = 'file:///';\x0d\n  }\x0d\n\x0d\n  // A separate loader instance is necessary to avoid cross-contamination\x0d\n  // between internal Node.js and userland. For example\x2C a module with internal\x0d\n  // state (such as a counter) should be independent.\x0d\n  const internalEsmLoader = new ESMLoader();\x0d\n\x0d\n  // Importation must be handled by internal loader to avoid poluting userland\x0d\n  const keyedExportsList = await internalEsmLoader.import(\x0d\n    customLoaders\x2C\x0d\n    pathToFileURL(cwd).href\x2C\x0d\n    ObjectCreate(null)\x2C\x0d\n  );\x0d\n\x0d\n  // Hooks must then be added to external/public loader\x0d\n  // (so they're triggered in userland)\x0d\n  await esmLoader.addCustomLoaders(keyedExportsList);\x0d\n\x0d\n  isESMInitialized = true;\x0d\n}\x0d\n\x0d\nexports.loadESM = async function loadESM(callback) {\x0d\n  try {\x0d\n    await initializeLoader();\x0d\n    await callback(esmLoader);\x0d\n  } catch (err) {\x0d\n    if (hasUncaughtExceptionCaptureCallback()) {\x0d\n      process._fatalException(err);\x0d\n      return;\x0d\n    }\x0d\n    internalBinding('errors').triggerUncaughtException(\x0d\n      err\x2C\x0d\n      true /* fromPromise */\x0d\n    );\x0d\n  }\x0d\n};\x0d\n
code-source-info,0xc4d992de9e,117,0,3087,C0O0C4O3087,,
code-creation,Function,10,190953,0xc4d992e13e,188, node:internal/process/esm_loader:1:1,0xc4d992de18,~
code-source-info,0xc4d992e13e,117,0,3087,C0O0C47O28C53O119C59O119C64O145C69O74C75O176C81O176C86O162C92O270C98O270C103O228C109O336C115O336C120O318C126O397C132O397C137O373C143O431C147O466C151O777C155O817C159O1300C162O1300C167O1300C169O1318C171O1336C175O1588C176O1588C178O2717C182O2733C187O3086,,
code-creation,Eval,10,191391,0xc4d992f766,5, node:internal/modules/esm/loader:1:1,0xc4d992f268,~
script-source,118,node:internal/modules/esm/loader,'use strict';\x0d\n\x0d\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\x0d\nrequire('internal/modules/cjs/loader');\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst { MessageChannel } = require('internal/worker/io');\x0d\n\x0d\nconst {\x0d\n  ERR_LOADER_CHAIN_INCOMPLETE\x2C\x0d\n  ERR_INTERNAL_ASSERTION\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_VALUE\x2C\x0d\n  ERR_UNKNOWN_MODULE_FORMAT\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { pathToFileURL\x2C isURLInstance\x2C URL } = require('internal/url');\x0d\nconst { emitExperimentalWarning } = require('internal/util');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst ModuleMap = require('internal/modules/esm/module_map');\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\n\x0d\nconst {\x0d\n  defaultResolve\x2C\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n} = require('internal/modules/esm/resolve');\x0d\nconst {\x0d\n  initializeImportMeta\x0d\n} = require('internal/modules/esm/initialize_import_meta');\x0d\nconst { defaultLoad } = require('internal/modules/esm/load');\x0d\nconst { translators } = require(\x0d\n  'internal/modules/esm/translators');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\n/**\x0d\n * @typedef {object} ExportedHooks\x0d\n * @property {Function} globalPreload\x0d\n * @property {Function} resolve\x0d\n * @property {Function} load\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {Record<string\x2C any>} ModuleExports\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {object} KeyedExports\x0d\n * @property {ModuleExports} exports\x0d\n * @property {URL['href']} url\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {object} KeyedHook\x0d\n * @property {Function} fn\x0d\n * @property {URL['href']} url\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {'builtin'|'commonjs'|'json'|'module'|'wasm'} ModuleFormat\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {ArrayBuffer|TypedArray|string} ModuleSource\x0d\n */\x0d\n\x0d\n// [2] `validate...()`s throw the wrong error\x0d\n\x0d\nlet emittedSpecifierResolutionWarning = false;\x0d\n\x0d\n/**\x0d\n * A utility function to iterate through a hook chain\x2C track advancement in the\x0d\n * chain\x2C and generate and supply the `next<HookName>` argument to the custom\x0d\n * hook.\x0d\n * @param {KeyedHook[]} chain The whole hook chain.\x0d\n * @param {object} meta Properties that change as the current hook advances\x0d\n * along the chain.\x0d\n * @param {boolean} meta.chainFinished Whether the end of the chain has been\x0d\n * reached AND invoked.\x0d\n * @param {string} meta.hookErrIdentifier A user-facing identifier to help\x0d\n *  pinpoint where an error occurred. Ex "file:///foo.mjs 'resolve'".\x0d\n * @param {number} meta.hookIndex A non-negative integer tracking the current\x0d\n * position in the hook chain.\x0d\n * @param {string} meta.hookName The kind of hook the chain is (ex 'resolve')\x0d\n * @param {boolean} meta.shortCircuited Whether a hook signaled a short-circuit.\x0d\n * @param {(hookErrIdentifier\x2C hookArgs) => void} validate A wrapper function\x0d\n *  containing all validation of a custom loader hook's intermediary output. Any\x0d\n *  validation within MUST throw.\x0d\n * @returns {function next<HookName>(...hookArgs)} The next hook in the chain.\x0d\n */\x0d\nfunction nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput }) {\x0d\n  // First\x2C prepare the current\x0d\n  const { hookName } = meta;\x0d\n  const {\x0d\n    fn: hook\x2C\x0d\n    url: hookFilePath\x2C\x0d\n  } = chain[meta.hookIndex];\x0d\n\x0d\n  // ex 'nextResolve'\x0d\n  const nextHookName = `next${\x0d\n    StringPrototypeToUpperCase(hookName[0]) +\x0d\n    StringPrototypeSlice(hookName\x2C 1)\x0d\n  }`;\x0d\n\x0d\n  // When hookIndex is 0\x2C it's reached the default\x2C which does not call next()\x0d\n  // so feed it a noop that blows up if called\x2C so the problem is obvious.\x0d\n  const generatedHookIndex = meta.hookIndex;\x0d\n  let nextNextHook;\x0d\n  if (meta.hookIndex > 0) {\x0d\n    // Now\x2C prepare the next: decrement the pointer so the next call to the\x0d\n    // factory generates the next link in the chain.\x0d\n    meta.hookIndex--;\x0d\n\x0d\n    nextNextHook = nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput });\x0d\n  } else {\x0d\n    // eslint-disable-next-line func-name-matching\x0d\n    nextNextHook = function chainAdvancedTooFar() {\x0d\n      throw new ERR_INTERNAL_ASSERTION(\x0d\n        `ESM custom loader '${hookName}' advanced beyond the end of the chain.`\x0d\n      );\x0d\n    };\x0d\n  }\x0d\n\x0d\n  return ObjectDefineProperty(\x0d\n    async (arg0 = undefined\x2C context) => {\x0d\n      // Update only when hook is invoked to avoid fingering the wrong filePath\x0d\n      meta.hookErrIdentifier = `${hookFilePath} '${hookName}'`;\x0d\n\x0d\n      validateArgs(`${meta.hookErrIdentifier} hook's ${nextHookName}()`\x2C arg0\x2C context);\x0d\n\x0d\n      const outputErrIdentifier = `${chain[generatedHookIndex].url} '${hookName}' hook's ${nextHookName}()`;\x0d\n\x0d\n      // Set when next<HookName> is actually called\x2C not just generated.\x0d\n      if (generatedHookIndex === 0) { meta.chainFinished = true; }\x0d\n\x0d\n      if (context) { // `context` has already been validated\x2C so no fancy check needed.\x0d\n        ObjectAssign(meta.context\x2C context);\x0d\n      }\x0d\n\x0d\n      const output = await hook(arg0\x2C meta.context\x2C nextNextHook);\x0d\n\x0d\n      validateOutput(outputErrIdentifier\x2C output);\x0d\n\x0d\n      if (output?.shortCircuit === true) { meta.shortCircuited = true; }\x0d\n      return output;\x0d\n\x0d\n    }\x2C\x0d\n    'name'\x2C\x0d\n    { __proto__: null\x2C value: nextHookName }\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * An ESMLoader instance is used as the main entry point for loading ES modules.\x0d\n * Currently\x2C this is a singleton -- there is only one used for loading\x0d\n * the main module and everything in its dependency graph.\x0d\n */\x0d\nclass ESMLoader {\x0d\n  /**\x0d\n   * Prior to ESM loading. These are called once before any modules are started.\x0d\n   * @private\x0d\n   * @property {KeyedHook[]} globalPreloaders Last-in-first-out\x0d\n   *  list of preload hooks.\x0d\n   */\x0d\n  #globalPreloaders = [];\x0d\n\x0d\n  /**\x0d\n   * Phase 2 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {KeyedHook[]} loaders Last-in-first-out\x0d\n   *  collection of loader hooks.\x0d\n   */\x0d\n  #loaders = [\x0d\n    {\x0d\n      fn: defaultLoad\x2C\x0d\n      url: 'node:internal/modules/esm/load'\x2C\x0d\n    }\x2C\x0d\n  ];\x0d\n\x0d\n  /**\x0d\n   * Phase 1 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {KeyedHook[]} resolvers Last-in-first-out\x0d\n   *  collection of resolver hooks.\x0d\n   */\x0d\n  #resolvers = [\x0d\n    {\x0d\n      fn: defaultResolve\x2C\x0d\n      url: 'node:internal/modules/esm/resolve'\x2C\x0d\n    }\x2C\x0d\n  ];\x0d\n\x0d\n  #importMetaInitializer = initializeImportMeta;\x0d\n\x0d\n  /**\x0d\n   * Map of already-loaded CJS modules to use\x0d\n   */\x0d\n  cjsCache = new SafeWeakMap();\x0d\n\x0d\n  /**\x0d\n   * The index for assigning unique URLs to anonymous module evaluation\x0d\n   */\x0d\n  evalIndex = 0;\x0d\n\x0d\n  /**\x0d\n   * Registry of loaded modules\x2C akin to `require.cache`\x0d\n   */\x0d\n  moduleMap = new ModuleMap();\x0d\n\x0d\n  /**\x0d\n   * Methods which translate input code or other information into ES modules\x0d\n   */\x0d\n  translators = translators;\x0d\n\x0d\n  constructor() {\x0d\n    if (getOptionValue('--experimental-loader').length > 0) {\x0d\n      emitExperimentalWarning('Custom ESM Loaders');\x0d\n    }\x0d\n    if (getOptionValue('--experimental-network-imports')) {\x0d\n      emitExperimentalWarning('Network Imports');\x0d\n    }\x0d\n    if (\x0d\n      !emittedSpecifierResolutionWarning &&\x0d\n      getOptionValue('--experimental-specifier-resolution') === 'node'\x0d\n    ) {\x0d\n      process.emitWarning(\x0d\n        'The Node.js specifier resolution flag is experimental. It could change or be removed at any time.'\x2C\x0d\n        'ExperimentalWarning'\x0d\n      );\x0d\n      emittedSpecifierResolutionWarning = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   *\x0d\n   * @param {ModuleExports} exports\x0d\n   * @returns {ExportedHooks}\x0d\n   */\x0d\n  static pluckHooks({\x0d\n    globalPreload\x2C\x0d\n    resolve\x2C\x0d\n    load\x2C\x0d\n    // obsolete hooks:\x0d\n    dynamicInstantiate\x2C\x0d\n    getFormat\x2C\x0d\n    getGlobalPreloadCode\x2C\x0d\n    getSource\x2C\x0d\n    transformSource\x2C\x0d\n  }) {\x0d\n    const obsoleteHooks = [];\x0d\n    const acceptedHooks = ObjectCreate(null);\x0d\n\x0d\n    if (getGlobalPreloadCode) {\x0d\n      globalPreload ??= getGlobalPreloadCode;\x0d\n\x0d\n      process.emitWarning(\x0d\n        'Loader hook "getGlobalPreloadCode" has been renamed to "globalPreload"'\x0d\n      );\x0d\n    }\x0d\n    if (dynamicInstantiate) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'dynamicInstantiate'\x0d\n    );\x0d\n    if (getFormat) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getFormat'\x2C\x0d\n    );\x0d\n    if (getSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getSource'\x2C\x0d\n    );\x0d\n    if (transformSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'transformSource'\x2C\x0d\n    );\x0d\n\x0d\n    if (obsoleteHooks.length) process.emitWarning(\x0d\n      `Obsolete loader hook(s) supplied and will be ignored: ${\x0d\n        ArrayPrototypeJoin(obsoleteHooks\x2C '\x2C ')\x0d\n      }`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n    );\x0d\n\x0d\n    // Use .bind() to avoid giving access to the Loader instance when called.\x0d\n    if (globalPreload) {\x0d\n      acceptedHooks.globalPreloader =\x0d\n        FunctionPrototypeBind(globalPreload\x2C null);\x0d\n    }\x0d\n    if (resolve) {\x0d\n      acceptedHooks.resolver = FunctionPrototypeBind(resolve\x2C null);\x0d\n    }\x0d\n    if (load) {\x0d\n      acceptedHooks.loader = FunctionPrototypeBind(load\x2C null);\x0d\n    }\x0d\n\x0d\n    return acceptedHooks;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Collect custom/user-defined hook(s). After all hooks have been collected\x2C\x0d\n   * calls global preload hook(s).\x0d\n   * @param {KeyedExports} customLoaders\x0d\n   *  A list of exports from user-defined loaders (as returned by\x0d\n   *  ESMLoader.import()).\x0d\n   */\x0d\n  addCustomLoaders(\x0d\n    customLoaders = []\x2C\x0d\n  ) {\x0d\n    for (let i = 0; i < customLoaders.length; i++) {\x0d\n      const {\x0d\n        exports\x2C\x0d\n        url\x2C\x0d\n      } = customLoaders[i];\x0d\n      const {\x0d\n        globalPreloader\x2C\x0d\n        resolver\x2C\x0d\n        loader\x2C\x0d\n      } = ESMLoader.pluckHooks(exports);\x0d\n\x0d\n      if (globalPreloader) {\x0d\n        ArrayPrototypePush(\x0d\n          this.#globalPreloaders\x2C\x0d\n          {\x0d\n            fn: FunctionPrototypeBind(globalPreloader)\x2C // [1]\x0d\n            url\x2C\x0d\n          }\x2C\x0d\n        );\x0d\n      }\x0d\n      if (resolver) {\x0d\n        ArrayPrototypePush(\x0d\n          this.#resolvers\x2C\x0d\n          {\x0d\n            fn: FunctionPrototypeBind(resolver)\x2C // [1]\x0d\n            url\x2C\x0d\n          }\x2C\x0d\n        );\x0d\n      }\x0d\n      if (loader) {\x0d\n        ArrayPrototypePush(\x0d\n          this.#loaders\x2C\x0d\n          {\x0d\n            fn: FunctionPrototypeBind(loader)\x2C // [1]\x0d\n            url\x2C\x0d\n          }\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // [1] ensure hook function is not bound to ESMLoader instance\x0d\n\x0d\n    this.preload();\x0d\n  }\x0d\n\x0d\n  async eval(\x0d\n    source\x2C\x0d\n    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href\x0d\n  ) {\x0d\n    const evalInstance = (url) => {\x0d\n      const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n      const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n      callbackMap.set(module\x2C {\x0d\n        importModuleDynamically: (specifier\x2C { url }\x2C importAssertions) => {\x0d\n          return this.import(specifier\x2C url\x2C importAssertions);\x0d\n        }\x0d\n      });\x0d\n\x0d\n      return module;\x0d\n    };\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C url\x2C undefined\x2C evalInstance\x2C false\x2C false);\x0d\n    this.moduleMap.set(url\x2C undefined\x2C job);\x0d\n    const { module } = await job.run();\x0d\n\x0d\n    return {\x0d\n      namespace: module.getNamespace()\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Get a (possibly still pending) module job from the cache\x2C\x0d\n   * or create one and return its Promise.\x0d\n   * @param {string} specifier The string after `from` in an `import` statement\x2C\x0d\n   *                           or the first parameter of an `import()`\x0d\n   *                           expression\x0d\n   * @param {string | undefined} parentURL The URL of the module importing this\x0d\n   *                                     one\x2C unless this is the Node.js entry\x0d\n   *                                     point.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  async getModuleJob(specifier\x2C parentURL\x2C importAssertions) {\x0d\n    let importAssertionsForResolve;\x0d\n\x0d\n    // By default\x2C `this.#loaders` contains just the Node default load hook\x0d\n    if (this.#loaders.length !== 1) {\x0d\n      // We can skip cloning if there are no user-provided loaders because\x0d\n      // the Node.js default resolve hook does not use import assertions.\x0d\n      importAssertionsForResolve = ObjectAssign(\x0d\n        ObjectCreate(null)\x2C\x0d\n        importAssertions\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const { format\x2C url } =\x0d\n      await this.resolve(specifier\x2C parentURL\x2C importAssertionsForResolve);\x0d\n\x0d\n    let job = this.moduleMap.get(url\x2C importAssertions.type);\x0d\n\x0d\n    // CommonJS will set functions for lazy job evaluation.\x0d\n    if (typeof job === 'function') {\x0d\n      this.moduleMap.set(url\x2C undefined\x2C job = job());\x0d\n    }\x0d\n\x0d\n    if (job === undefined) {\x0d\n      job = this.#createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format);\x0d\n    }\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Create and cache an object representing a loaded module.\x0d\n   * @param {string} url The absolute URL that was resolved for this module\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @param {string} [parentURL] The absolute URL of the module importing this\x0d\n   *                             one\x2C unless this is the Node.js entry point\x0d\n   * @param {string} [format] The format hint possibly returned by the\x0d\n   *                          `resolve` hook\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  #createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format) {\x0d\n    const moduleProvider = async (url\x2C isMain) => {\x0d\n      const {\x0d\n        format: finalFormat\x2C\x0d\n        responseURL\x2C\x0d\n        source\x2C\x0d\n      } = await this.load(url\x2C {\x0d\n        format\x2C\x0d\n        importAssertions\x2C\x0d\n      });\x0d\n\x0d\n      const translator = translators.get(finalFormat);\x0d\n\x0d\n      if (!translator) {\x0d\n        throw new ERR_UNKNOWN_MODULE_FORMAT(finalFormat\x2C responseURL);\x0d\n      }\x0d\n\x0d\n      return FunctionPrototypeCall(translator\x2C this\x2C responseURL\x2C source\x2C isMain);\x0d\n    };\x0d\n\x0d\n    const inspectBrk = (\x0d\n      parentURL === undefined &&\x0d\n      getOptionValue('--inspect-brk')\x0d\n    );\x0d\n\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C\x0d\n      url\x2C\x0d\n      importAssertions\x2C\x0d\n      moduleProvider\x2C\x0d\n      parentURL === undefined\x2C\x0d\n      inspectBrk\x0d\n    );\x0d\n\x0d\n    this.moduleMap.set(url\x2C importAssertions.type\x2C job);\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * This method is usually called indirectly as part of the loading processes.\x0d\n   * Internally\x2C it is used directly to add loaders. Use directly with caution.\x0d\n   *\x0d\n   * This method must NOT be renamed: it functions as a dynamic import on a\x0d\n   * loader module.\x0d\n   *\x0d\n   * @param {string | string[]} specifiers Path(s) to the module.\x0d\n   * @param {string} parentURL Path of the parent importing the module.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<ExportedHooks | KeyedExports[]>}\x0d\n   *  A collection of module export(s) or a list of collections of module\x0d\n   *  export(s).\x0d\n   */\x0d\n  async import(specifiers\x2C parentURL\x2C importAssertions) {\x0d\n    // For loaders\x2C `import` is passed multiple things to process\x2C it returns a\x0d\n    // list pairing the url and exports collected. This is especially useful for\x0d\n    // error messaging\x2C to identity from where an export came. But\x2C in most\x0d\n    // cases\x2C only a single url is being "imported" (ex `import()`)\x2C so there is\x0d\n    // only 1 possible url from which the exports were collected and it is\x0d\n    // already known to the caller. Nesting that in a list would only ever\x0d\n    // create redundant work for the caller\x2C so it is later popped off the\x0d\n    // internal list.\x0d\n    const wasArr = ArrayIsArray(specifiers);\x0d\n    if (!wasArr) { specifiers = [specifiers]; }\x0d\n\x0d\n    const count = specifiers.length;\x0d\n    const jobs = new Array(count);\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      jobs[i] = this.getModuleJob(specifiers[i]\x2C parentURL\x2C importAssertions)\x0d\n        .then((job) => job.run())\x0d\n        .then(({ module }) => module.getNamespace());\x0d\n    }\x0d\n\x0d\n    const namespaces = await PromiseAll(new SafeArrayIterator(jobs));\x0d\n\x0d\n    if (!wasArr) { return namespaces[0]; } // We can skip the pairing below\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      const namespace = ObjectCreate(null);\x0d\n      namespace.url = specifiers[i];\x0d\n      namespace.exports = namespaces[i];\x0d\n\x0d\n      namespaces[i] = namespace;\x0d\n    }\x0d\n\x0d\n    return namespaces;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Provide source that is understood by one of Node's translators.\x0d\n   *\x0d\n   * Internally\x2C this behaves like a backwards iterator\x2C wherein the stack of\x0d\n   * hooks starts at the top and each call to `nextLoad()` moves down 1 step\x0d\n   * until it reaches the bottom or short-circuits.\x0d\n   *\x0d\n   * @param {URL['href']} url The URL/path of the module to be loaded\x0d\n   * @param {object} context Metadata about the module\x0d\n   * @returns {{ format: ModuleFormat\x2C source: ModuleSource }}\x0d\n   */\x0d\n  async load(url\x2C context = {}) {\x0d\n    const chain = this.#loaders;\x0d\n    const meta = {\x0d\n      chainFinished: null\x2C\x0d\n      context\x2C\x0d\n      hookErrIdentifier: ''\x2C\x0d\n      hookIndex: chain.length - 1\x2C\x0d\n      hookName: 'load'\x2C\x0d\n      shortCircuited: false\x2C\x0d\n    };\x0d\n\x0d\n    const validateArgs = (hookErrIdentifier\x2C nextUrl\x2C ctx) => {\x0d\n      if (typeof nextUrl !== 'string') {\x0d\n        // non-strings can be coerced to a url string\x0d\n        // validateString() throws a less-specific error\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          `${hookErrIdentifier} url`\x2C\x0d\n          'a url string'\x2C\x0d\n          nextUrl\x2C\x0d\n        );\x0d\n      }\x0d\n\x0d\n      // Try to avoid expensive URL instantiation for known-good urls\x0d\n      if (!this.moduleMap.has(nextUrl)) {\x0d\n        try {\x0d\n          new URL(nextUrl);\x0d\n        } catch {\x0d\n          throw new ERR_INVALID_ARG_VALUE(\x0d\n            `${hookErrIdentifier} url`\x2C\x0d\n            nextUrl\x2C\x0d\n            'should be a url string'\x2C\x0d\n          );\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (ctx) validateObject(ctx\x2C `${hookErrIdentifier} context`);\x0d\n    };\x0d\n    const validateOutput = (hookErrIdentifier\x2C output) => {\x0d\n      if (typeof output !== 'object' || output === null) { // [2]\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'an object'\x2C\x0d\n          hookErrIdentifier\x2C\x0d\n          output\x2C\x0d\n        );\x0d\n      }\x0d\n    };\x0d\n\x0d\n    const nextLoad = nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput });\x0d\n\x0d\n    const loaded = await nextLoad(url\x2C context);\x0d\n    const { hookErrIdentifier } = meta; // Retrieve the value after all settled\x0d\n\x0d\n    validateOutput(hookErrIdentifier\x2C loaded);\x0d\n\x0d\n    if (loaded?.shortCircuit === true) { meta.shortCircuited = true; }\x0d\n\x0d\n    if (!meta.chainFinished && !meta.shortCircuited) {\x0d\n      throw new ERR_LOADER_CHAIN_INCOMPLETE(hookErrIdentifier);\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    } = loaded;\x0d\n    let responseURL = loaded.responseURL;\x0d\n\x0d\n    if (responseURL === undefined) {\x0d\n      responseURL = url;\x0d\n    }\x0d\n\x0d\n    let responseURLObj;\x0d\n    if (typeof responseURL === 'string') {\x0d\n      try {\x0d\n        responseURLObj = new URL(responseURL);\x0d\n      } catch {\x0d\n        // responseURLObj not defined will throw in next branch.\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (responseURLObj?.href !== responseURL) {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'undefined or a fully resolved URL string'\x2C\x0d\n        hookErrIdentifier\x2C\x0d\n        'responseURL'\x2C\x0d\n        responseURL\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (format == null) {\x0d\n      const dataUrl = RegExpPrototypeExec(\x0d\n        /^data:([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n\x0d\n      throw new ERR_UNKNOWN_MODULE_FORMAT(\x0d\n        dataUrl ? dataUrl[1] : format\x2C\x0d\n        url);\x0d\n    }\x0d\n\x0d\n    if (typeof format !== 'string') { // [2]\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'a string'\x2C\x0d\n        hookErrIdentifier\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (\x0d\n      source != null &&\x0d\n      typeof source !== 'string' &&\x0d\n      !isAnyArrayBuffer(source) &&\x0d\n      !isArrayBufferView(source)\x0d\n    ) {\x0d\n      throw ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'a string\x2C an ArrayBuffer\x2C or a TypedArray'\x2C\x0d\n        hookErrIdentifier\x2C\x0d\n        'source'\x2C\x0d\n        source\x0d\n      );\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      responseURL\x2C\x0d\n      source\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  preload() {\x0d\n    for (let i = this.#globalPreloaders.length - 1; i >= 0; i--) {\x0d\n      const channel = new MessageChannel();\x0d\n      const {\x0d\n        port1: insidePreload\x2C\x0d\n        port2: insideLoader\x2C\x0d\n      } = channel;\x0d\n\x0d\n      insidePreload.unref();\x0d\n      insideLoader.unref();\x0d\n\x0d\n      const {\x0d\n        fn: preloader\x2C\x0d\n        url: specifier\x2C\x0d\n      } = this.#globalPreloaders[i];\x0d\n\x0d\n      const preload = preloader({\x0d\n        port: insideLoader\x2C\x0d\n      });\x0d\n\x0d\n      if (preload == null) { return; }\x0d\n\x0d\n      const hookErrIdentifier = `${specifier} globalPreload`;\x0d\n\x0d\n      if (typeof preload !== 'string') { // [2]\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'a string'\x2C\x0d\n          hookErrIdentifier\x2C\x0d\n          preload\x2C\x0d\n        );\x0d\n      }\x0d\n      const { compileFunction } = require('vm');\x0d\n      const preloadInit = compileFunction(\x0d\n        preload\x2C\x0d\n        ['getBuiltin'\x2C 'port'\x2C 'setImportMetaCallback']\x2C\x0d\n        {\x0d\n          filename: '<preload>'\x2C\x0d\n        }\x0d\n      );\x0d\n      const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n      // We only allow replacing the importMetaInitializer during preload\x2C\x0d\n      // after preload is finished\x2C we disable the ability to replace it\x0d\n      //\x0d\n      // This exposes accidentally setting the initializer too late by\x0d\n      // throwing an error.\x0d\n      let finished = false;\x0d\n      let replacedImportMetaInitializer = false;\x0d\n      let next = this.#importMetaInitializer;\x0d\n      try {\x0d\n        // Calls the compiled preload source text gotten from the hook\x0d\n        // Since the parameters are named we use positional parameters\x0d\n        // see compileFunction above to cross reference the names\x0d\n        FunctionPrototypeCall(\x0d\n          preloadInit\x2C\x0d\n          globalThis\x2C\x0d\n          // Param getBuiltin\x0d\n          (builtinName) => {\x0d\n            if (NativeModule.canBeRequiredByUsers(builtinName) &&\x0d\n                NativeModule.canBeRequiredWithoutScheme(builtinName)) {\x0d\n              return require(builtinName);\x0d\n            }\x0d\n            throw new ERR_INVALID_ARG_VALUE('builtinName'\x2C builtinName);\x0d\n          }\x2C\x0d\n          // Param port\x0d\n          insidePreload\x2C\x0d\n          // Param setImportMetaCallback\x0d\n          (fn) => {\x0d\n            if (finished || typeof fn !== 'function') {\x0d\n              throw new ERR_INVALID_ARG_TYPE('fn'\x2C fn);\x0d\n            }\x0d\n            replacedImportMetaInitializer = true;\x0d\n            const parent = next;\x0d\n            next = (meta\x2C context) => {\x0d\n              return fn(meta\x2C context\x2C parent);\x0d\n            };\x0d\n          });\x0d\n      } finally {\x0d\n        finished = true;\x0d\n        if (replacedImportMetaInitializer) {\x0d\n          this.#importMetaInitializer = next;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  importMetaInitialize(meta\x2C context) {\x0d\n    this.#importMetaInitializer(meta\x2C context);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resolve the location of the module.\x0d\n   *\x0d\n   * Internally\x2C this behaves like a backwards iterator\x2C wherein the stack of\x0d\n   * hooks starts at the top and each call to `nextResolve()` moves down 1 step\x0d\n   * until it reaches the bottom or short-circuits.\x0d\n   *\x0d\n   * @param {string} originalSpecifier The specified URL path of the module to\x0d\n   *                                   be resolved.\x0d\n   * @param {string} [parentURL] The URL path of the module's parent.\x0d\n   * @param {ImportAssertions} [importAssertions] Assertions from the import\x0d\n   *                                              statement or expression.\x0d\n   * @returns {{ format: string\x2C url: URL['href'] }}\x0d\n   */\x0d\n  async resolve(\x0d\n    originalSpecifier\x2C\x0d\n    parentURL\x2C\x0d\n    importAssertions = ObjectCreate(null)\x0d\n  ) {\x0d\n    const isMain = parentURL === undefined;\x0d\n\x0d\n    if (\x0d\n      !isMain &&\x0d\n      typeof parentURL !== 'string' &&\x0d\n      !isURLInstance(parentURL)\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'parentURL'\x2C\x0d\n        ['string'\x2C 'URL']\x2C\x0d\n        parentURL\x2C\x0d\n      );\x0d\n    }\x0d\n    const chain = this.#resolvers;\x0d\n    const context = {\x0d\n      conditions: DEFAULT_CONDITIONS\x2C\x0d\n      importAssertions\x2C\x0d\n      parentURL\x2C\x0d\n    };\x0d\n    const meta = {\x0d\n      chainFinished: null\x2C\x0d\n      context\x2C\x0d\n      hookErrIdentifier: ''\x2C\x0d\n      hookIndex: chain.length - 1\x2C\x0d\n      hookName: 'resolve'\x2C\x0d\n      shortCircuited: false\x2C\x0d\n    };\x0d\n\x0d\n    const validateArgs = (hookErrIdentifier\x2C suppliedSpecifier\x2C ctx) => {\x0d\n      validateString(\x0d\n        suppliedSpecifier\x2C\x0d\n        `${hookErrIdentifier} specifier`\x2C\x0d\n      ); // non-strings can be coerced to a url string\x0d\n\x0d\n      if (ctx) validateObject(ctx\x2C `${hookErrIdentifier} context`);\x0d\n    };\x0d\n    const validateOutput = (hookErrIdentifier\x2C output) => {\x0d\n      if (typeof output !== 'object' || output === null) { // [2]\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'an object'\x2C\x0d\n          hookErrIdentifier\x2C\x0d\n          output\x2C\x0d\n        );\x0d\n      }\x0d\n    };\x0d\n\x0d\n    const nextResolve = nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput });\x0d\n\x0d\n    const resolution = await nextResolve(originalSpecifier\x2C context);\x0d\n    const { hookErrIdentifier } = meta; // Retrieve the value after all settled\x0d\n\x0d\n    validateOutput(hookErrIdentifier\x2C resolution);\x0d\n\x0d\n    if (resolution?.shortCircuit === true) { meta.shortCircuited = true; }\x0d\n\x0d\n    if (!meta.chainFinished && !meta.shortCircuited) {\x0d\n      throw new ERR_LOADER_CHAIN_INCOMPLETE(hookErrIdentifier);\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      format\x2C\x0d\n      url\x2C\x0d\n    } = resolution;\x0d\n\x0d\n    if (\x0d\n      format != null &&\x0d\n      typeof format !== 'string' // [2]\x0d\n    ) {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'a string'\x2C\x0d\n        hookErrIdentifier\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (typeof url !== 'string') {\x0d\n      // non-strings can be coerced to a url string\x0d\n      // validateString() throws a less-specific error\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'a url string'\x2C\x0d\n        hookErrIdentifier\x2C\x0d\n        'url'\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    // Try to avoid expensive URL instantiation for known-good urls\x0d\n    if (!this.moduleMap.has(url)) {\x0d\n      try {\x0d\n        new URL(url);\x0d\n      } catch {\x0d\n        throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n          'a url string'\x2C\x0d\n          hookErrIdentifier\x2C\x0d\n          'url'\x2C\x0d\n          url\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      url\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(ESMLoader.prototype\x2C null);\x0d\n\x0d\nexports.ESMLoader = ESMLoader;\x0d\n
code-source-info,0xc4d992f766,118,0,27123,C0O0C4O27123,,
code-creation,Function,10,192452,0xc4d993007e,721, node:internal/modules/esm/loader:1:1,0xc4d992f6e0,~
code-source-info,0xc4d993007e,118,0,27123,C0O0C146O82C152O82C156O136C162O146C168O163C174O186C180O209C186O235C192O261C198O278C204O295C210O320C215O345C221O360C227O384C233O406C239O422C245O447C251O478C257O536C263O536C268O517C274O790C280O790C285O816C290O581C296O613C302O640C308O665C314O691C320O729C326O758C332O871C338O871C343O833C349O848C355O863C361O933C367O933C372O905C378O1016C384O1016C389O971C395O992C401O1100C407O1100C412O1060C418O1079C424O1151C430O1151C434O1151C436O1214C442O1214C446O1214C448O1316C454O1316C459O1272C465O1291C471O1395C477O1395C482O1369C488O1476C494O1476C499O1460C505O1539C511O1539C516O1523C522O1616C528O1616C533O1597C539O2323C540O2323C701O27070C708O27039C713O27091C715O27109C720O27122,,
code-creation,Function,10,192515,0xc4d9930606,176,<instance_members_initializer> node:internal/modules/esm/loader:190:3,0xc4d992fb88,~
code-source-info,0xc4d9930606,118,6059,7106,C3O6079C17O6254C33O6274C56O6524C72O6544C95O6653C110O6752C117O6752C131O6875C141O6967C148O6967C162O7095C175O7106,,
code-creation,Eval,10,192685,0xc4d993288e,5, node:internal/modules/esm/module_map:1:1,0xc4d99326a0,~
script-source,119,node:internal/modules/esm/module_map,'use strict';\x0d\n\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\nconst { kImplicitAssertType } = require('internal/modules/esm/assert');\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\n// Tracks the state of the loader-level module cache\x0d\nclass ModuleMap extends SafeMap {\x0d\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  get(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type];\x0d\n  }\x0d\n  set(url\x2C type = kImplicitAssertType\x2C job) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    if (job instanceof ModuleJob !== true &&\x0d\n        typeof job !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('job'\x2C 'ModuleJob'\x2C job);\x0d\n    }\x0d\n    debug(`Storing ${url} (${\x0d\n      type === kImplicitAssertType ? 'implicit type' : type\x0d\n    }) in ModuleMap`);\x0d\n    const cachedJobsForUrl = super.get(url) ?? ObjectCreate(null);\x0d\n    cachedJobsForUrl[type] = job;\x0d\n    return super.set(url\x2C cachedJobsForUrl);\x0d\n  }\x0d\n  has(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type] !== undefined;\x0d\n  }\x0d\n}\x0d\nmodule.exports = ModuleMap;\x0d\n
code-source-info,0xc4d993288e,119,0,1487,C0O0C4O1487,,
code-creation,Function,10,192761,0xc4d9932cc6,175, node:internal/modules/esm/module_map:1:1,0xc4d9932808,~
code-source-info,0xc4d9932cc6,119,0,1487,C0O0C23O35C26O35C30O35C32O112C35O112C40O88C46O164C52O181C57O221C60O221C65O254C78O255C84O221C86O335C89O335C94O361C99O310C105O397C108O397C113O378C123O510C167O1458C169O1473C174O1486,,
code-creation,Eval,10,192972,0xc4d993373e,5, node:internal/modules/esm/module_job:1:1,0xc4d9933478,~
script-source,120,node:internal/modules/esm/module_job,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseResolve\x2C\x0d\n  PromisePrototypeCatch\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  SafePromiseAll\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ModuleWrap } = internalBinding('module_wrap');\x0d\n\x0d\nconst { decorateErrorStack } = require('internal/util');\x0d\nconst {\x0d\n  getSourceMapsEnabled\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst assert = require('internal/assert');\x0d\nconst resolvedPromise = PromiseResolve();\x0d\n\x0d\nconst noop = FunctionPrototype;\x0d\n\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nconst CJSGlobalLike = [\x0d\n  'require'\x2C\x0d\n  'module'\x2C\x0d\n  'exports'\x2C\x0d\n  '__filename'\x2C\x0d\n  '__dirname'\x2C\x0d\n];\x0d\nconst isCommonJSGlobalLikeNotDefinedError = (errorMessage) =>\x0d\n  ArrayPrototypeSome(\x0d\n    CJSGlobalLike\x2C\x0d\n    (globalLike) => errorMessage === `${globalLike} is not defined`\x0d\n  );\x0d\n\x0d\n/* A ModuleJob tracks the loading of a single Module\x2C and the ModuleJobs of\x0d\n * its dependencies\x2C over time. */\x0d\nclass ModuleJob {\x0d\n  // `loader` is the Loader instance used for loading dependencies.\x0d\n  // `moduleProvider` is a function\x0d\n  constructor(loader\x2C url\x2C importAssertions = ObjectCreate(null)\x2C\x0d\n              moduleProvider\x2C isMain\x2C inspectBrk) {\x0d\n    this.loader = loader;\x0d\n    this.importAssertions = importAssertions;\x0d\n    this.isMain = isMain;\x0d\n    this.inspectBrk = inspectBrk;\x0d\n\x0d\n    this.module = undefined;\x0d\n    // Expose the promise to the ModuleWrap directly for linking below.\x0d\n    // `this.module` is also filled in below.\x0d\n    this.modulePromise = ReflectApply(moduleProvider\x2C loader\x2C [url\x2C isMain]);\x0d\n\x0d\n    // Wait for the ModuleWrap instance being linked with all dependencies.\x0d\n    const link = async () => {\x0d\n      this.module = await this.modulePromise;\x0d\n      assert(this.module instanceof ModuleWrap);\x0d\n\x0d\n      // Explicitly keeping track of dependency jobs is needed in order\x0d\n      // to flatten out the dependency graph below in `_instantiate()`\x2C\x0d\n      // so that circular dependencies can't cause a deadlock by two of\x0d\n      // these `link` callbacks depending on each other.\x0d\n      const dependencyJobs = [];\x0d\n      const promises = this.module.link(async (specifier\x2C assertions) => {\x0d\n        const jobPromise = this.loader.getModuleJob(specifier\x2C url\x2C assertions);\x0d\n        ArrayPrototypePush(dependencyJobs\x2C jobPromise);\x0d\n        const job = await jobPromise;\x0d\n        return job.modulePromise;\x0d\n      });\x0d\n\x0d\n      if (promises !== undefined)\x0d\n        await SafePromiseAll(promises);\x0d\n\x0d\n      return SafePromiseAll(dependencyJobs);\x0d\n    };\x0d\n    // Promise for the list of all dependencyJobs.\x0d\n    this.linked = link();\x0d\n    // This promise is awaited later anyway\x2C so silence\x0d\n    // 'unhandled rejection' warnings.\x0d\n    PromisePrototypeCatch(this.linked\x2C noop);\x0d\n\x0d\n    // instantiated == deep dependency jobs wrappers are instantiated\x2C\x0d\n    // and module wrapper is instantiated.\x0d\n    this.instantiated = undefined;\x0d\n  }\x0d\n\x0d\n  instantiate() {\x0d\n    if (this.instantiated === undefined) {\x0d\n      this.instantiated = this._instantiate();\x0d\n    }\x0d\n    return this.instantiated;\x0d\n  }\x0d\n\x0d\n  async _instantiate() {\x0d\n    const jobsInGraph = new SafeSet();\x0d\n    const addJobsToDependencyGraph = async (moduleJob) => {\x0d\n      if (jobsInGraph.has(moduleJob)) {\x0d\n        return;\x0d\n      }\x0d\n      jobsInGraph.add(moduleJob);\x0d\n      const dependencyJobs = await moduleJob.linked;\x0d\n      return SafePromiseAll(dependencyJobs\x2C addJobsToDependencyGraph);\x0d\n    };\x0d\n    await addJobsToDependencyGraph(this);\x0d\n\x0d\n    try {\x0d\n      if (!hasPausedEntry && this.inspectBrk) {\x0d\n        hasPausedEntry = true;\x0d\n        const initWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n        initWrapper(this.module.instantiate\x2C this.module);\x0d\n      } else {\x0d\n        this.module.instantiate();\x0d\n      }\x0d\n    } catch (e) {\x0d\n      decorateErrorStack(e);\x0d\n      // TODO(@bcoe): Add source map support to exception that occurs as result\x0d\n      // of missing named export. This is currently not possible because\x0d\n      // stack trace originates in module_job\x2C not the file itself. A hidden\x0d\n      // symbol with filename could be set in node_errors.cc to facilitate this.\x0d\n      if (!getSourceMapsEnabled() &&\x0d\n          StringPrototypeIncludes(e.message\x2C\x0d\n                                  ' does not provide an export named')) {\x0d\n        const splitStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n        const parentFileUrl = RegExpPrototypeSymbolReplace(\x0d\n          /:\\d+$/\x2C\x0d\n          splitStack[0]\x2C\x0d\n          ''\x0d\n        );\x0d\n        const { 1: childSpecifier\x2C 2: name } = RegExpPrototypeExec(\x0d\n          /module '(.*)' does not provide an export named '(.+)'/\x2C\x0d\n          e.message);\x0d\n        const { url: childFileURL } = await this.loader.resolve(\x0d\n          childSpecifier\x2C parentFileUrl\x2C\x0d\n        );\x0d\n        let format;\x0d\n        try {\x0d\n          // This might throw for non-CommonJS modules because we aren't passing\x0d\n          // in the import assertions and some formats require them; but we only\x0d\n          // care about CommonJS for the purposes of this error message.\x0d\n          ({ format } =\x0d\n            await this.loader.load(childFileURL));\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n\x0d\n        if (format === 'commonjs') {\x0d\n          const importStatement = splitStack[1];\x0d\n          // TODO(@ctavan): The original error stack only provides the single\x0d\n          // line which causes the error. For multi-line import statements we\x0d\n          // cannot generate an equivalent object destructuring assignment by\x0d\n          // just parsing the error stack.\x0d\n          const oneLineNamedImports = RegExpPrototypeExec(/{.*}/\x2C importStatement);\x0d\n          const destructuringAssignment = oneLineNamedImports &&\x0d\n            RegExpPrototypeSymbolReplace(/\\s+as\\s+/g\x2C oneLineNamedImports\x2C ': ');\x0d\n          e.message = `Named export '${name}' not found. The requested module` +\x0d\n            ` '${childSpecifier}' is a CommonJS module\x2C which may not support` +\x0d\n            ' all module.exports as named exports.\\nCommonJS modules can ' +\x0d\n            'always be imported via the default export\x2C for example using:' +\x0d\n            `\\n\\nimport pkg from '${childSpecifier}';\\n${\x0d\n              destructuringAssignment ?\x0d\n                `const ${destructuringAssignment} = pkg;\\n` : ''}`;\x0d\n          const newStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n          newStack[3] = `SyntaxError: ${e.message}`;\x0d\n          e.stack = ArrayPrototypeJoin(newStack\x2C '\\n');\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n\x0d\n    for (const dependencyJob of jobsInGraph) {\x0d\n      // Calling `this.module.instantiate()` instantiates not only the\x0d\n      // ModuleWrap in this module\x2C but all modules in the graph.\x0d\n      dependencyJob.instantiated = resolvedPromise;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async run() {\x0d\n    await this.instantiate();\x0d\n    const timeout = -1;\x0d\n    const breakOnSigint = false;\x0d\n    try {\x0d\n      await this.module.evaluate(timeout\x2C breakOnSigint);\x0d\n    } catch (e) {\x0d\n      if (e?.name === 'ReferenceError' &&\x0d\n          isCommonJSGlobalLikeNotDefinedError(e.message)) {\x0d\n        e.message += ' in ES module scope';\x0d\n\x0d\n        if (StringPrototypeStartsWith(e.message\x2C 'require ')) {\x0d\n          e.message += '\x2C you can use import instead';\x0d\n        }\x0d\n\x0d\n        const packageConfig =\x0d\n          StringPrototypeStartsWith(this.module.url\x2C 'file://') &&\x0d\n            RegExpPrototypeExec(/\\.js(\\?[^#]*)?(#.*)?$/\x2C this.module.url) !== null &&\x0d\n            require('internal/modules/esm/resolve')\x0d\n              .getPackageScopeConfig(this.module.url);\x0d\n        if (packageConfig.type === 'module') {\x0d\n          e.message +=\x0d\n            '\\nThis file is being treated as an ES module because it has a ' +\x0d\n            `'.js' file extension and '${packageConfig.pjsonPath}' contains ` +\x0d\n            '"type": "module". To treat it as a CommonJS script\x2C rename it ' +\x0d\n            'to use the \\'.cjs\\' file extension.';\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n    return { module: this.module };\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(ModuleJob.prototype\x2C null);\x0d\nmodule.exports = ModuleJob;\x0d\n
code-source-info,0xc4d993373e,120,0,8281,C0O0C4O8281,,
code-creation,Function,10,193285,0xc4d9933c1e,316, node:internal/modules/esm/module_job:1:1,0xc4d99336b8,~
code-source-info,0xc4d9933c1e,120,0,8281,C0O0C79O28C85O51C91O74C97O97C102O119C108O136C113O161C118O180C124O206C130O223C136O247C142O280C148O299C154O311C160O339C166O364C172O435C178O435C183O420C189O501C195O501C200O478C206O566C212O566C217O539C223O631C229O631C233O631C235O684C238O684C240O718C242O718C244O761C245O761C247O793C251O793C253O918C257O918C296O8233C303O8202C308O8252C310O8267C315O8280,,
code-creation,Eval,10,193489,0xc4d993580e,5, node:internal/modules/esm/assert:1:1,0xc4d9935618,~
script-source,121,node:internal/modules/esm/assert,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectValues\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n} = primordials;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  ERR_IMPORT_ASSERTION_TYPE_FAILED\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_MISSING\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\n// The HTML spec has an implied default type of `'javascript'`.\x0d\nconst kImplicitAssertType = 'javascript';\x0d\n\x0d\n/**\x0d\n * Define a map of module formats to import assertion types (the value of\x0d\n * `type` in `assert { type: 'json' }`).\x0d\n * @type {Map<string\x2C string>}\x0d\n */\x0d\nconst formatTypeMap = {\x0d\n  '__proto__': null\x2C\x0d\n  'builtin': kImplicitAssertType\x2C\x0d\n  'commonjs': kImplicitAssertType\x2C\x0d\n  'json': 'json'\x2C\x0d\n  'module': kImplicitAssertType\x2C\x0d\n  'wasm': kImplicitAssertType\x2C // It's unclear whether the HTML spec will require an assertion type or not for Wasm; see https://github.com/WebAssembly/esm-integration/issues/42\x0d\n};\x0d\n\x0d\n/**\x0d\n * The HTML spec disallows the default type to be explicitly specified\x0d\n * (for now); so `import './file.js'` is okay but\x0d\n * `import './file.js' assert { type: 'javascript' }` throws.\x0d\n * @type {Array<string\x2C string>}\x0d\n */\x0d\nconst supportedAssertionTypes = ArrayPrototypeFilter(\x0d\n  ObjectValues(formatTypeMap)\x2C\x0d\n  (type) => type !== kImplicitAssertType);\x0d\n\x0d\n\x0d\n/**\x0d\n * Test a module's import assertions.\x0d\n * @param {string} url The URL of the imported module\x2C for error reporting.\x0d\n * @param {string} format One of Node's supported translators\x0d\n * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n *                                                  module import.\x0d\n * @returns {true}\x0d\n * @throws {TypeError} If the format and assertion type are incompatible.\x0d\n */\x0d\nfunction validateAssertions(url\x2C format\x2C\x0d\n                            importAssertions = ObjectCreate(null)) {\x0d\n  const validType = formatTypeMap[format];\x0d\n\x0d\n  switch (validType) {\x0d\n    case undefined:\x0d\n      // Ignore assertions for module formats we don't recognize\x2C to allow new\x0d\n      // formats in the future.\x0d\n      return true;\x0d\n\x0d\n    case kImplicitAssertType:\x0d\n      // This format doesn't allow an import assertion type\x2C so the property\x0d\n      // must not be set on the import assertions object.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        return true;\x0d\n      }\x0d\n      return handleInvalidType(url\x2C importAssertions.type);\x0d\n\x0d\n    case importAssertions.type:\x0d\n      // The asserted type is the valid type for this format.\x0d\n      return true;\x0d\n\x0d\n    default:\x0d\n      // There is an expected type for this format\x2C but the value of\x0d\n      // `importAssertions.type` might not have been it.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        // `type` wasn't specified at all.\x0d\n        throw new ERR_IMPORT_ASSERTION_TYPE_MISSING(url\x2C validType);\x0d\n      }\x0d\n      handleInvalidType(url\x2C importAssertions.type);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Throw the correct error depending on what's wrong with the type assertion.\x0d\n * @param {string} url The resolved URL for the module to be imported\x0d\n * @param {string} type The value of the import assertion `type` property\x0d\n */\x0d\nfunction handleInvalidType(url\x2C type) {\x0d\n  // `type` might have not been a string.\x0d\n  validateString(type\x2C 'type');\x0d\n\x0d\n  // `type` might not have been one of the types we understand.\x0d\n  if (!ArrayPrototypeIncludes(supportedAssertionTypes\x2C type)) {\x0d\n    throw new ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED(type);\x0d\n  }\x0d\n\x0d\n  // `type` was the wrong value for this format.\x0d\n  throw new ERR_IMPORT_ASSERTION_TYPE_FAILED(url\x2C type);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kImplicitAssertType\x2C\x0d\n  validateAssertions\x2C\x0d\n};\x0d\n
code-source-info,0xc4d993580e,121,0,3734,C0O0C4O3734,,
code-creation,Function,10,193644,0xc4d9935ae6,201, node:internal/modules/esm/assert:1:1,0xc4d9935788,~
code-source-info,0xc4d9935ae6,121,0,3734,C0O0C46O28C51O53C57O80C63O97C68O114C74O191C77O191C82O172C88O356C91O356C96O382C101O237C107O274C113O312C119O486C121O486C123O684C130O722C136O758C142O811C148O843C154O684C156O1280C159O1305C169O1280C174O1280C176O3663C183O3685C189O3709C195O3678C200O3733,,
code-creation,LazyCompile,10,193740,0xc4d99360f6,9, node:internal/modules/esm/assert:43:3,0xc4d99358e0,~
code-source-info,0xc4d99360f6,121,1337,1375,C0O1352C2O1356C4O1352C8O1375,,
code-creation,Eval,10,194426,0xc4d9937cce,5, node:internal/modules/esm/resolve:1:1,0xc4d9937520,~
script-source,122,node:internal/modules/esm/resolve,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  realpathSync\x2C\x0d\n  statSync\x2C\x0d\n  Stats\x2C\x0d\n} = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst { sep\x2C relative\x2C resolve } = require('path');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst typeFlag = getOptionValue('--input-type');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\nconst { URL\x2C pathToFileURL\x2C fileURLToPath } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INPUT_TYPE_NOT_ALLOWED\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n  ERR_INVALID_PACKAGE_CONFIG\x2C\x0d\n  ERR_INVALID_PACKAGE_TARGET\x2C\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_MODULE_NOT_FOUND\x2C\x0d\n  ERR_PACKAGE_IMPORT_NOT_DEFINED\x2C\x0d\n  ERR_PACKAGE_PATH_NOT_EXPORTED\x2C\x0d\n  ERR_UNSUPPORTED_DIR_IMPORT\x2C\x0d\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { Module: CJSModule } = require('internal/modules/cjs/loader');\x0d\n\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\nconst DEFAULT_CONDITIONS = ObjectFreeze([\x0d\n  'node'\x2C\x0d\n  'import'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nconst DEFAULT_CONDITIONS_SET = new SafeSet(DEFAULT_CONDITIONS);\x0d\n\x0d\n/**\x0d\n * @typedef {string | string[] | Record<string\x2C unknown>} Exports\x0d\n * @typedef {'module' | 'commonjs'} PackageType\x0d\n * @typedef {{\x0d\n *   pjsonPath: string\x2C\x0d\n *   exports?: ExportConfig\x2C\x0d\n *   name?: string\x2C\x0d\n *   main?: string\x2C\x0d\n *   type?: PackageType\x2C\x0d\n * }} PackageConfig\x0d\n */\x0d\n\x0d\nconst emittedPackageWarnings = new SafeSet();\x0d\n\x0d\n/**\x0d\n * @param {string} match\x0d\n * @param {URL} pjsonUrl\x0d\n * @param {boolean} isExports\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitFolderMapDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated folder mapping "${match}" in the ${isExports ?\x0d\n      '"exports"' : '"imports"'} field module resolution of the package at ${\x0d\n      pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` : ''}.\\n` +\x0d\n      `Update this package.json to use a subpath pattern like "${match}*".`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0148'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction emitTrailingSlashPatternDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  if (!pendingDeprecation) return;\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated trailing slash pattern mapping "${match}" in the ${\x0d\n      isExports ? '"exports"' : '"imports"'} field module resolution of the ` +\x0d\n      `package at ${pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` :\x0d\n        ''}. Mapping specifiers ending in "/" is no longer supported.`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0155'\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {string} main\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitLegacyIndexDeprecation(url\x2C packageJSONUrl\x2C base\x2C main) {\x0d\n  const format = defaultGetFormatWithoutErrors(url);\x0d\n  if (format !== 'module')\x0d\n    return;\x0d\n  const path = fileURLToPath(url);\x0d\n  const pkgPath = fileURLToPath(new URL('.'\x2C packageJSONUrl));\x0d\n  const basePath = fileURLToPath(base);\x0d\n  if (main)\x0d\n    process.emitWarning(\x0d\n      `Package ${pkgPath} has a "main" field set to ${JSONStringify(main)}\x2C ` +\x0d\n      `excluding the full filename and extension to the resolved file at "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${\x0d\n        basePath}.\\n Automatic extension resolution of the "main" field is ` +\x0d\n      'deprecated for ES modules.'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n  else\x0d\n    process.emitWarning(\x0d\n      `No "main" or "exports" field defined in the package.json for ${pkgPath\x0d\n      } resolving the main entry point "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${basePath\x0d\n      }.\\nDefault "index" lookups for the main are deprecated for ES modules.`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string[]} [conditions]\x0d\n * @returns {Set<string>}\x0d\n */\x0d\nfunction getConditionsSet(conditions) {\x0d\n  if (conditions !== undefined && conditions !== DEFAULT_CONDITIONS) {\x0d\n    if (!ArrayIsArray(conditions)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\x0d\n                                      'expected an array');\x0d\n    }\x0d\n    return new SafeSet(conditions);\x0d\n  }\x0d\n  return DEFAULT_CONDITIONS_SET;\x0d\n}\x0d\n\x0d\nconst realpathCache = new SafeMap();\x0d\nconst packageJSONCache = new SafeMap(); /* string -> PackageConfig */\x0d\n\x0d\n/**\x0d\n * @param {string | URL} path\x0d\n * @returns {import('fs').Stats}\x0d\n */\x0d\nconst tryStatSync =\x0d\n  (path) => statSync(path\x2C { throwIfNoEntry: false }) ?? new Stats();\x0d\n\x0d\n/**\x0d\n * @param {string} path\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageConfig(path\x2C specifier\x2C base) {\x0d\n  const existing = packageJSONCache.get(path);\x0d\n  if (existing !== undefined) {\x0d\n    return existing;\x0d\n  }\x0d\n  const source = packageJsonReader.read(path).string;\x0d\n  if (source === undefined) {\x0d\n    const packageConfig = {\x0d\n      pjsonPath: path\x2C\x0d\n      exists: false\x2C\x0d\n      main: undefined\x2C\x0d\n      name: undefined\x2C\x0d\n      type: 'none'\x2C\x0d\n      exports: undefined\x2C\x0d\n      imports: undefined\x2C\x0d\n    };\x0d\n    packageJSONCache.set(path\x2C packageConfig);\x0d\n    return packageConfig;\x0d\n  }\x0d\n\x0d\n  let packageJSON;\x0d\n  try {\x0d\n    packageJSON = JSONParse(source);\x0d\n  } catch (error) {\x0d\n    throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n      path\x2C\x0d\n      (base ? `"${specifier}" from ` : '') + fileURLToPath(base || specifier)\x2C\x0d\n      error.message\x0d\n    );\x0d\n  }\x0d\n\x0d\n  let { imports\x2C main\x2C name\x2C type } = packageJSON;\x0d\n  const { exports } = packageJSON;\x0d\n  if (typeof imports !== 'object' || imports === null) imports = undefined;\x0d\n  if (typeof main !== 'string') main = undefined;\x0d\n  if (typeof name !== 'string') name = undefined;\x0d\n  // Ignore unknown types for forwards compatibility\x0d\n  if (type !== 'module' && type !== 'commonjs') type = 'none';\x0d\n\x0d\n  const packageConfig = {\x0d\n    pjsonPath: path\x2C\x0d\n    exists: true\x2C\x0d\n    main\x2C\x0d\n    name\x2C\x0d\n    type\x2C\x0d\n    exports\x2C\x0d\n    imports\x2C\x0d\n  };\x0d\n  packageJSONCache.set(path\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | string} resolved\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageScopeConfig(resolved) {\x0d\n  let packageJSONUrl = new URL('./package.json'\x2C resolved);\x0d\n  while (true) {\x0d\n    const packageJSONPath = packageJSONUrl.pathname;\x0d\n    if (StringPrototypeEndsWith(packageJSONPath\x2C 'node_modules/package.json'))\x0d\n      break;\x0d\n    const packageConfig = getPackageConfig(fileURLToPath(packageJSONUrl)\x2C\x0d\n                                           resolved);\x0d\n    if (packageConfig.exists) return packageConfig;\x0d\n\x0d\n    const lastPackageJSONUrl = packageJSONUrl;\x0d\n    packageJSONUrl = new URL('../package.json'\x2C packageJSONUrl);\x0d\n\x0d\n    // Terminates at root where ../package.json equals ../../package.json\x0d\n    // (can't just check "/package.json" for Windows support).\x0d\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) break;\x0d\n  }\x0d\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  const packageConfig = {\x0d\n    pjsonPath: packageJSONPath\x2C\x0d\n    exists: false\x2C\x0d\n    main: undefined\x2C\x0d\n    name: undefined\x2C\x0d\n    type: 'none'\x2C\x0d\n    exports: undefined\x2C\x0d\n    imports: undefined\x2C\x0d\n  };\x0d\n  packageJSONCache.set(packageJSONPath\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string | URL} url\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction fileExists(url) {\x0d\n  return statSync(url\x2C { throwIfNoEntry: false })?.isFile() ?? false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Legacy CommonJS main resolution:\x0d\n * 1. let M = pkg_url + (json main field)\x0d\n * 2. TRY(M\x2C M.js\x2C M.json\x2C M.node)\x0d\n * 3. TRY(M/index.js\x2C M/index.json\x2C M/index.node)\x0d\n * 4. TRY(pkg_url/index.js\x2C pkg_url/index.json\x2C pkg_url/index.node)\x0d\n * 5. NOT_FOUND\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base) {\x0d\n  let guess;\x0d\n  if (packageConfig.main !== undefined) {\x0d\n    // Note: fs check redundances will be handled by Descriptor cache here.\x0d\n    if (fileExists(guess = new URL(`./${packageConfig.main}`\x2C\x0d\n                                   packageJSONUrl))) {\x0d\n      return guess;\x0d\n    } else if (fileExists(guess = new URL(`./${packageConfig.main}.js`\x2C\x0d\n                                          packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.js`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else guess = undefined;\x0d\n    if (guess) {\x0d\n      emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C\x0d\n                                 packageConfig.main);\x0d\n      return guess;\x0d\n    }\x0d\n    // Fallthrough.\x0d\n  }\x0d\n  if (fileExists(guess = new URL('./index.js'\x2C packageJSONUrl)));\x0d\n  // So fs.\x0d\n  else if (fileExists(guess = new URL('./index.json'\x2C packageJSONUrl)));\x0d\n  else if (fileExists(guess = new URL('./index.node'\x2C packageJSONUrl)));\x0d\n  else guess = undefined;\x0d\n  if (guess) {\x0d\n    emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C packageConfig.main);\x0d\n    return guess;\x0d\n  }\x0d\n  // Not found.\x0d\n  throw new ERR_MODULE_NOT_FOUND(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensionsWithTryExactName(search) {\x0d\n  if (fileExists(search)) return search;\x0d\n  return resolveExtensions(search);\x0d\n}\x0d\n\x0d\nconst extensions = ['.js'\x2C '.json'\x2C '.node'\x2C '.mjs'];\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensions(search) {\x0d\n  for (let i = 0; i < extensions.length; i++) {\x0d\n    const extension = extensions[i];\x0d\n    const guess = new URL(`${search.pathname}${extension}`\x2C search);\x0d\n    if (fileExists(guess)) return guess;\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveDirectoryEntry(search) {\x0d\n  const dirPath = fileURLToPath(search);\x0d\n  const pkgJsonPath = resolve(dirPath\x2C 'package.json');\x0d\n  if (fileExists(pkgJsonPath)) {\x0d\n    const pkgJson = packageJsonReader.read(pkgJsonPath);\x0d\n    if (pkgJson.containsKeys) {\x0d\n      const { main } = JSONParse(pkgJson.string);\x0d\n      if (main != null) {\x0d\n        const mainUrl = pathToFileURL(resolve(dirPath\x2C main));\x0d\n        return resolveExtensionsWithTryExactName(mainUrl);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return resolveExtensions(new URL('index'\x2C search));\x0d\n}\x0d\n\x0d\nconst encodedSepRegEx = /%2F|%5C/i;\x0d\n/**\x0d\n * @param {URL} resolved\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction finalizeResolution(resolved\x2C base\x2C preserveSymlinks) {\x0d\n  if (RegExpPrototypeExec(encodedSepRegEx\x2C resolved.pathname) !== null)\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved.pathname\x2C 'must not include encoded "/" or "\\\\" characters'\x2C\x0d\n      fileURLToPath(base));\x0d\n\x0d\n  let path = fileURLToPath(resolved);\x0d\n  if (getOptionValue('--experimental-specifier-resolution') === 'node') {\x0d\n    let file = resolveExtensionsWithTryExactName(resolved);\x0d\n\x0d\n    // Directory\x0d\n    if (file === undefined) {\x0d\n      file = StringPrototypeEndsWith(path\x2C '/') ?\x0d\n        (resolveDirectoryEntry(resolved) || resolved) : resolveDirectoryEntry(new URL(`${resolved}/`));\x0d\n\x0d\n      if (file === resolved) return file;\x0d\n\x0d\n      if (file === undefined) {\x0d\n        throw new ERR_MODULE_NOT_FOUND(\x0d\n          resolved.pathname\x2C fileURLToPath(base)\x2C 'module');\x0d\n      }\x0d\n    }\x0d\n\x0d\n    path = file;\x0d\n  }\x0d\n\x0d\n  const stats = tryStatSync(StringPrototypeEndsWith(path\x2C '/') ?\x0d\n    StringPrototypeSlice(path\x2C -1) : path);\x0d\n  if (stats.isDirectory()) {\x0d\n    const err = new ERR_UNSUPPORTED_DIR_IMPORT(path\x2C fileURLToPath(base));\x0d\n    err.url = String(resolved);\x0d\n    throw err;\x0d\n  } else if (!stats.isFile()) {\x0d\n    throw new ERR_MODULE_NOT_FOUND(\x0d\n      path || resolved.pathname\x2C base && fileURLToPath(base)\x2C 'module');\x0d\n  }\x0d\n\x0d\n  if (!preserveSymlinks) {\x0d\n    const real = realpathSync(path\x2C {\x0d\n      [internalFS.realpathCacheKey]: realpathCache\x0d\n    });\x0d\n    const { search\x2C hash } = resolved;\x0d\n    resolved =\x0d\n        pathToFileURL(real + (StringPrototypeEndsWith(path\x2C sep) ? '/' : ''));\x0d\n    resolved.search = search;\x0d\n    resolved.hash = hash;\x0d\n  }\x0d\n\x0d\n  return resolved;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwImportNotDefined(specifier\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_IMPORT_NOT_DEFINED(\x0d\n    specifier\x2C packageJSONUrl && fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C\x0d\n    fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwExportsNotFound(subpath\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_PATH_NOT_EXPORTED(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C\x0d\n    base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {boolean} internal\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwInvalidSubpath(subpath\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  const reason = `request is not a valid subpath for the "${internal ?\x0d\n    'imports' : 'exports'}" resolution of ${fileURLToPath(packageJSONUrl)}`;\x0d\n  throw new ERR_INVALID_MODULE_SPECIFIER(subpath\x2C reason\x2C\x0d\n                                         base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nfunction throwInvalidPackageTarget(\x0d\n  subpath\x2C target\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  if (typeof target === 'object' && target !== null) {\x0d\n    target = JSONStringify(target\x2C null\x2C '');\x0d\n  } else {\x0d\n    target = `${target}`;\x0d\n  }\x0d\n  throw new ERR_INVALID_PACKAGE_TARGET(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C target\x2C\x0d\n    internal\x2C base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nconst invalidSegmentRegEx = /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\\\|\\/|$)/i;\x0d\nconst invalidPackageNameRegEx = /^\\.|%|\\\\/;\x0d\nconst patternRegEx = /\\*/g;\x0d\n\x0d\nfunction resolvePackageTargetString(\x0d\n  target\x2C subpath\x2C match\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C conditions) {\x0d\n\x0d\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/')\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (!StringPrototypeStartsWith(target\x2C './')) {\x0d\n    if (internal && !StringPrototypeStartsWith(target\x2C '../') &&\x0d\n        !StringPrototypeStartsWith(target\x2C '/')) {\x0d\n      let isURL = false;\x0d\n      try {\x0d\n        new URL(target);\x0d\n        isURL = true;\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      if (!isURL) {\x0d\n        const exportTarget = pattern ?\x0d\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\x0d\n          target + subpath;\x0d\n        return packageResolve(\x0d\n          exportTarget\x2C packageJSONUrl\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n  }\x0d\n\x0d\n  if (RegExpPrototypeExec(invalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)) !== null)\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  const resolved = new URL(target\x2C packageJSONUrl);\x0d\n  const resolvedPath = resolved.pathname;\x0d\n  const packagePath = new URL('.'\x2C packageJSONUrl).pathname;\x0d\n\x0d\n  if (!StringPrototypeStartsWith(resolvedPath\x2C packagePath))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (subpath === '') return resolved;\x0d\n\x0d\n  if (RegExpPrototypeExec(invalidSegmentRegEx\x2C subpath) !== null) {\x0d\n    const request = pattern ?\x0d\n      StringPrototypeReplace(match\x2C '*'\x2C () => subpath) : match + subpath;\x0d\n    throwInvalidSubpath(request\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n  }\x0d\n\x0d\n  if (pattern) {\x0d\n    return new URL(\x0d\n      RegExpPrototypeSymbolReplace(\x0d\n        patternRegEx\x2C\x0d\n        resolved.href\x2C\x0d\n        () => subpath\x0d\n      )\x0d\n    );\x0d\n  }\x0d\n\x0d\n  return new URL(subpath\x2C resolved);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} key\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isArrayIndex(key) {\x0d\n  const keyNum = +key;\x0d\n  if (`${keyNum}` !== key) return false;\x0d\n  return keyNum >= 0 && keyNum < 0xFFFF_FFFF;\x0d\n}\x0d\n\x0d\nfunction resolvePackageTarget(packageJSONUrl\x2C target\x2C subpath\x2C packageSubpath\x2C\x0d\n                              base\x2C pattern\x2C internal\x2C conditions) {\x0d\n  if (typeof target === 'string') {\x0d\n    return resolvePackageTargetString(\x0d\n      target\x2C subpath\x2C packageSubpath\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C\x0d\n      conditions);\x0d\n  } else if (ArrayIsArray(target)) {\x0d\n    if (target.length === 0) {\x0d\n      return null;\x0d\n    }\x0d\n\x0d\n    let lastException;\x0d\n    for (let i = 0; i < target.length; i++) {\x0d\n      const targetItem = target[i];\x0d\n      let resolveResult;\x0d\n      try {\x0d\n        resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C targetItem\x2C subpath\x2C packageSubpath\x2C base\x2C pattern\x2C\x0d\n          internal\x2C conditions);\x0d\n      } catch (e) {\x0d\n        lastException = e;\x0d\n        if (e.code === 'ERR_INVALID_PACKAGE_TARGET') {\x0d\n          continue;\x0d\n        }\x0d\n        throw e;\x0d\n      }\x0d\n      if (resolveResult === undefined) {\x0d\n        continue;\x0d\n      }\x0d\n      if (resolveResult === null) {\x0d\n        lastException = null;\x0d\n        continue;\x0d\n      }\x0d\n      return resolveResult;\x0d\n    }\x0d\n    if (lastException === undefined || lastException === null)\x0d\n      return lastException;\x0d\n    throw lastException;\x0d\n  } else if (typeof target === 'object' && target !== null) {\x0d\n    const keys = ObjectGetOwnPropertyNames(target);\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (isArrayIndex(key)) {\x0d\n        throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n          fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n          '"exports" cannot contain numeric property keys.');\x0d\n      }\x0d\n    }\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (key === 'default' || conditions.has(key)) {\x0d\n        const conditionalTarget = target[key];\x0d\n        const resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C conditionalTarget\x2C subpath\x2C packageSubpath\x2C base\x2C\x0d\n          pattern\x2C internal\x2C conditions);\x0d\n        if (resolveResult === undefined)\x0d\n          continue;\x0d\n        return resolveResult;\x0d\n      }\x0d\n    }\x0d\n    return undefined;\x0d\n  } else if (target === null) {\x0d\n    return null;\x0d\n  }\x0d\n  throwInvalidPackageTarget(packageSubpath\x2C target\x2C packageJSONUrl\x2C internal\x2C\x0d\n                            base);\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {Exports} exports\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base) {\x0d\n  if (typeof exports === 'string' || ArrayIsArray(exports)) return true;\x0d\n  if (typeof exports !== 'object' || exports === null) return false;\x0d\n\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  let isConditionalSugar = false;\x0d\n  let i = 0;\x0d\n  for (let j = 0; j < keys.length; j++) {\x0d\n    const key = keys[j];\x0d\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\x0d\n    if (i++ === 0) {\x0d\n      isConditionalSugar = curIsConditionalSugar;\x0d\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\x0d\n      throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n        fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n        '"exports" cannot contain some keys starting with \\'.\\' and some not.' +\x0d\n        ' The exports object must either be an object of package subpath keys' +\x0d\n        ' or an object of main entry condition name keys only.');\x0d\n    }\x0d\n  }\x0d\n  return isConditionalSugar;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string} packageSubpath\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageExportsResolve(\x0d\n  packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions) {\x0d\n  let exports = packageConfig.exports;\x0d\n  if (isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base))\x0d\n    exports = { '.': exports };\x0d\n\x0d\n  if (ObjectPrototypeHasOwnProperty(exports\x2C packageSubpath) &&\x0d\n      !StringPrototypeIncludes(packageSubpath\x2C '*') &&\x0d\n      !StringPrototypeEndsWith(packageSubpath\x2C '/')) {\x0d\n    const target = exports[packageSubpath];\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C target\x2C ''\x2C packageSubpath\x2C base\x2C false\x2C false\x2C conditions\x0d\n    );\x0d\n\x0d\n    if (resolved == null) {\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    return { resolved\x2C exact: true };\x0d\n  }\x0d\n\x0d\n  let bestMatch = '';\x0d\n  let bestMatchSubpath;\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n    if (patternIndex !== -1 &&\x0d\n        StringPrototypeStartsWith(packageSubpath\x2C\x0d\n                                  StringPrototypeSlice(key\x2C 0\x2C patternIndex))) {\x0d\n      if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\x0d\n        emitTrailingSlashPatternDeprecation(packageSubpath\x2C packageJSONUrl\x2C\x0d\n                                            true\x2C base);\x0d\n      const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n      if (packageSubpath.length >= key.length &&\x0d\n          StringPrototypeEndsWith(packageSubpath\x2C patternTrailer) &&\x0d\n          patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n          StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n        bestMatch = key;\x0d\n        bestMatchSubpath = StringPrototypeSlice(\x0d\n          packageSubpath\x2C patternIndex\x2C\x0d\n          packageSubpath.length - patternTrailer.length);\x0d\n      }\x0d\n    } else if (key[key.length - 1] === '/' &&\x0d\n      StringPrototypeStartsWith(packageSubpath\x2C key) &&\x0d\n      patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n      bestMatch = key;\x0d\n      bestMatchSubpath = StringPrototypeSlice(packageSubpath\x2C key.length);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (bestMatch) {\x0d\n    const target = exports[bestMatch];\x0d\n    const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C\x0d\n      target\x2C\x0d\n      bestMatchSubpath\x2C\x0d\n      bestMatch\x2C\x0d\n      base\x2C\x0d\n      pattern\x2C\x0d\n      false\x2C\x0d\n      conditions);\x0d\n\x0d\n    if (resolved == null) {\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    if (!pattern) {\x0d\n      emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C true\x2C base);\x0d\n    }\x0d\n\x0d\n    return { resolved\x2C exact: pattern };\x0d\n  }\x0d\n\x0d\n  throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\nfunction patternKeyCompare(a\x2C b) {\x0d\n  const aPatternIndex = StringPrototypeIndexOf(a\x2C '*');\x0d\n  const bPatternIndex = StringPrototypeIndexOf(b\x2C '*');\x0d\n  const baseLenA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;\x0d\n  const baseLenB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;\x0d\n  if (baseLenA > baseLenB) return -1;\x0d\n  if (baseLenB > baseLenA) return 1;\x0d\n  if (aPatternIndex === -1) return 1;\x0d\n  if (bPatternIndex === -1) return -1;\x0d\n  if (a.length > b.length) return -1;\x0d\n  if (b.length > a.length) return 1;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} name\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageImportsResolve(name\x2C base\x2C conditions) {\x0d\n  if (name === '#' || StringPrototypeStartsWith(name\x2C '#/')) {\x0d\n    const reason = 'is not a valid internal imports specifier name';\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(name\x2C reason\x2C fileURLToPath(base));\x0d\n  }\x0d\n  let packageJSONUrl;\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    const imports = packageConfig.imports;\x0d\n    if (imports) {\x0d\n      if (ObjectPrototypeHasOwnProperty(imports\x2C name) &&\x0d\n          !StringPrototypeIncludes(name\x2C '*') &&\x0d\n          !StringPrototypeEndsWith(name\x2C '/')) {\x0d\n        const resolved = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C imports[name]\x2C ''\x2C name\x2C base\x2C false\x2C true\x2C conditions\x0d\n        );\x0d\n        if (resolved != null) {\x0d\n          return { resolved\x2C exact: true };\x0d\n        }\x0d\n      } else {\x0d\n        let bestMatch = '';\x0d\n        let bestMatchSubpath;\x0d\n        const keys = ObjectGetOwnPropertyNames(imports);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n          if (patternIndex !== -1 &&\x0d\n              StringPrototypeStartsWith(name\x2C\x0d\n                                        StringPrototypeSlice(key\x2C 0\x2C\x0d\n                                                             patternIndex))) {\x0d\n            const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n            if (name.length >= key.length &&\x0d\n                StringPrototypeEndsWith(name\x2C patternTrailer) &&\x0d\n                patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n                StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n              bestMatch = key;\x0d\n              bestMatchSubpath = StringPrototypeSlice(\x0d\n                name\x2C patternIndex\x2C name.length - patternTrailer.length);\x0d\n            }\x0d\n          } else if (key[key.length - 1] === '/' &&\x0d\n            StringPrototypeStartsWith(name\x2C key) &&\x0d\n            patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n            bestMatch = key;\x0d\n            bestMatchSubpath = StringPrototypeSlice(name\x2C key.length);\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (bestMatch) {\x0d\n          const target = imports[bestMatch];\x0d\n          const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n          const resolved = resolvePackageTarget(\x0d\n            packageJSONUrl\x2C target\x2C\x0d\n            bestMatchSubpath\x2C bestMatch\x2C\x0d\n            base\x2C pattern\x2C true\x2C\x0d\n            conditions);\x0d\n          if (resolved !== null) {\x0d\n            if (!pattern)\x0d\n              emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C false\x2C base);\x0d\n            return { resolved\x2C exact: pattern };\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  throwImportNotDefined(name\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @returns {PackageType}\x0d\n */\x0d\nfunction getPackageType(url) {\x0d\n  const packageConfig = getPackageScopeConfig(url);\x0d\n  return packageConfig.type;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {{ packageName: string\x2C packageSubpath: string\x2C isScoped: boolean }}\x0d\n */\x0d\nfunction parsePackageName(specifier\x2C base) {\x0d\n  let separatorIndex = StringPrototypeIndexOf(specifier\x2C '/');\x0d\n  let validPackageName = true;\x0d\n  let isScoped = false;\x0d\n  if (specifier[0] === '@') {\x0d\n    isScoped = true;\x0d\n    if (separatorIndex === -1 || specifier.length === 0) {\x0d\n      validPackageName = false;\x0d\n    } else {\x0d\n      separatorIndex = StringPrototypeIndexOf(\x0d\n        specifier\x2C '/'\x2C separatorIndex + 1);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const packageName = separatorIndex === -1 ?\x0d\n    specifier : StringPrototypeSlice(specifier\x2C 0\x2C separatorIndex);\x0d\n\x0d\n  // Package name cannot have leading . and cannot have percent-encoding or\x0d\n  // \\\\ separators.\x0d\n  if (RegExpPrototypeExec(invalidPackageNameRegEx\x2C packageName) !== null)\x0d\n    validPackageName = false;\x0d\n\x0d\n  if (!validPackageName) {\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      specifier\x2C 'is not a valid package name'\x2C fileURLToPath(base));\x0d\n  }\x0d\n\x0d\n  const packageSubpath = '.' + (separatorIndex === -1 ? '' :\x0d\n    StringPrototypeSlice(specifier\x2C separatorIndex));\x0d\n\x0d\n  return { packageName\x2C packageSubpath\x2C isScoped };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageResolve(specifier\x2C base\x2C conditions) {\x0d\n  if (NativeModule.canBeRequiredByUsers(specifier) &&\x0d\n      NativeModule.canBeRequiredWithoutScheme(specifier)) {\x0d\n    return new URL('node:' + specifier);\x0d\n  }\x0d\n\x0d\n  const { packageName\x2C packageSubpath\x2C isScoped } =\x0d\n    parsePackageName(specifier\x2C base);\x0d\n\x0d\n  // ResolveSelf\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    const packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    if (packageConfig.name === packageName &&\x0d\n        packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let packageJSONUrl =\x0d\n    new URL('./node_modules/' + packageName + '/package.json'\x2C base);\x0d\n  let packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  let lastPath;\x0d\n  do {\x0d\n    const stat = tryStatSync(StringPrototypeSlice(packageJSONPath\x2C 0\x2C\x0d\n                                                  packageJSONPath.length - 13));\x0d\n    if (!stat.isDirectory()) {\x0d\n      lastPath = packageJSONPath;\x0d\n      packageJSONUrl = new URL((isScoped ?\x0d\n        '../../../../node_modules/' : '../../../node_modules/') +\x0d\n        packageName + '/package.json'\x2C packageJSONUrl);\x0d\n      packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Package match.\x0d\n    const packageConfig = getPackageConfig(packageJSONPath\x2C specifier\x2C base);\x0d\n    if (packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n\x0d\n    if (packageSubpath === '.') {\x0d\n      return legacyMainResolve(\x0d\n        packageJSONUrl\x2C\x0d\n        packageConfig\x2C\x0d\n        base\x0d\n      );\x0d\n    }\x0d\n\x0d\n    return new URL(packageSubpath\x2C packageJSONUrl);\x0d\n    // Cross-platform root check.\x0d\n  } while (packageJSONPath.length !== lastPath.length);\x0d\n\x0d\n  // eslint can't handle the above code.\x0d\n  // eslint-disable-next-line no-unreachable\x0d\n  throw new ERR_MODULE_NOT_FOUND(packageName\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isBareSpecifier(specifier) {\x0d\n  return specifier[0] && specifier[0] !== '/' && specifier[0] !== '.';\x0d\n}\x0d\n\x0d\nfunction isRelativeSpecifier(specifier) {\x0d\n  if (specifier[0] === '.') {\x0d\n    if (specifier.length === 1 || specifier[1] === '/') return true;\x0d\n    if (specifier[1] === '.') {\x0d\n      if (specifier.length === 2 || specifier[2] === '/') return true;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\x0d\n  if (specifier === '') return false;\x0d\n  if (specifier[0] === '/') return true;\x0d\n  return isRelativeSpecifier(specifier);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction moduleResolve(specifier\x2C base\x2C conditions\x2C preserveSymlinks) {\x0d\n  const isRemote = base.protocol === 'http:' ||\x0d\n    base.protocol === 'https:';\x0d\n  // Order swapped from spec for minor perf gain.\x0d\n  // Ok since relative URLs cannot parse as URLs.\x0d\n  let resolved;\x0d\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n    resolved = new URL(specifier\x2C base);\x0d\n  } else if (!isRemote && specifier[0] === '#') {\x0d\n    ({ resolved } = packageImportsResolve(specifier\x2C base\x2C conditions));\x0d\n  } else {\x0d\n    try {\x0d\n      resolved = new URL(specifier);\x0d\n    } catch {\x0d\n      if (!isRemote) {\x0d\n        resolved = packageResolve(specifier\x2C base\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (resolved.protocol !== 'file:')\x0d\n    return resolved;\x0d\n  return finalizeResolution(resolved\x2C base\x2C preserveSymlinks);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Try to resolve an import as a CommonJS module\x0d\n * @param {string} specifier\x0d\n * @param {string} parentURL\x0d\n * @returns {boolean|string}\x0d\n */\x0d\nfunction resolveAsCommonJS(specifier\x2C parentURL) {\x0d\n  try {\x0d\n    const parent = fileURLToPath(parentURL);\x0d\n    const tmpModule = new CJSModule(parent\x2C null);\x0d\n    tmpModule.paths = CJSModule._nodeModulePaths(parent);\x0d\n\x0d\n    let found = CJSModule._resolveFilename(specifier\x2C tmpModule\x2C false);\x0d\n\x0d\n    // If it is a relative specifier return the relative path\x0d\n    // to the parent\x0d\n    if (isRelativeSpecifier(specifier)) {\x0d\n      found = relative(parent\x2C found);\x0d\n      // Add '.separator if the path does not start with '..separator'\x0d\n      // This should be a safe assumption because when loading\x0d\n      // esm modules there should be always a file specified so\x0d\n      // there should not be a specifier like '..' or '.'\x0d\n      if (!StringPrototypeStartsWith(found\x2C `..${sep}`)) {\x0d\n        found = `.${sep}${found}`;\x0d\n      }\x0d\n    } else if (isBareSpecifier(specifier)) {\x0d\n      // If it is a bare specifier return the relative path within the\x0d\n      // module\x0d\n      const pkg = StringPrototypeSplit(specifier\x2C '/')[0];\x0d\n      const index = StringPrototypeIndexOf(found\x2C pkg);\x0d\n      if (index !== -1) {\x0d\n        found = StringPrototypeSlice(found\x2C index);\x0d\n      }\x0d\n    }\x0d\n    // Normalize the path separator to give a valid suggestion\x0d\n    // on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      found = RegExpPrototypeSymbolReplace(new RegExp(`\\\\${sep}`\x2C 'g')\x2C\x0d\n                                           found\x2C '/');\x0d\n    }\x0d\n    return found;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// TODO(@JakobJingleheimer): de-dupe `specifier` & `parsed`\x0d\nfunction checkIfDisallowedImport(specifier\x2C parsed\x2C parsedParentURL) {\x0d\n  if (parsedParentURL) {\x0d\n    if (\x0d\n      parsedParentURL.protocol === 'http:' ||\x0d\n      parsedParentURL.protocol === 'https:'\x0d\n    ) {\x0d\n      if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n        // data: and blob: disallowed due to allowing file: access via\x0d\n        // indirection\x0d\n        if (parsed &&\x0d\n          parsed.protocol !== 'https:' &&\x0d\n          parsed.protocol !== 'http:'\x0d\n        ) {\x0d\n          throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n            specifier\x2C\x0d\n            parsedParentURL\x2C\x0d\n            'remote imports cannot import from a local location.'\x0d\n          );\x0d\n        }\x0d\n\x0d\n        return { url: parsed.href };\x0d\n      }\x0d\n      if (NativeModule.canBeRequiredByUsers(specifier) &&\x0d\n          NativeModule.canBeRequiredWithoutScheme(specifier)) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          specifier\x2C\x0d\n          parsedParentURL\x2C\x0d\n          'remote imports cannot import from a local location.'\x0d\n        );\x0d\n      }\x0d\n\x0d\n      throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n        specifier\x2C\x0d\n        parsedParentURL\x2C\x0d\n        'only relative and absolute specifiers are supported.'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfUnsupportedURLProtocol(url) {\x0d\n  if (url.protocol !== 'file:' && url.protocol !== 'data:' &&\x0d\n      url.protocol !== 'node:') {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(url);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports) {\x0d\n  if (\x0d\n    parsed &&\x0d\n    parsed.protocol !== 'file:' &&\x0d\n    parsed.protocol !== 'data:' &&\x0d\n    (\x0d\n      !experimentalNetworkImports ||\x0d\n      (\x0d\n        parsed.protocol !== 'https:' &&\x0d\n        parsed.protocol !== 'http:'\x0d\n      )\x0d\n    )\x0d\n  ) {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C ArrayPrototypeConcat(\x0d\n      'file'\x2C\x0d\n      'data'\x2C\x0d\n      experimentalNetworkImports ? ['https'\x2C 'http'] : []\x2C\x0d\n    ));\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function defaultResolve(specifier\x2C context = {}) {\x0d\n  let { parentURL\x2C conditions } = context;\x0d\n  if (parentURL && policy?.manifest) {\x0d\n    const redirects = policy.manifest.getDependencyMapper(parentURL);\x0d\n    if (redirects) {\x0d\n      const { resolve\x2C reaction } = redirects;\x0d\n      const destination = resolve(specifier\x2C new SafeSet(conditions));\x0d\n      let missing = true;\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        return { url: href };\x0d\n      }\x0d\n      if (missing) {\x0d\n        // Prevent network requests from firing if resolution would be banned.\x0d\n        // Network requests can extract data by doing things like putting\x0d\n        // secrets in query params\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          parentURL\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C '))\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let parsedParentURL;\x0d\n  if (parentURL) {\x0d\n    try {\x0d\n      parsedParentURL = new URL(parentURL);\x0d\n    } catch {\x0d\n      // Ignore exception\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let parsed;\x0d\n  try {\x0d\n    if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n      parsed = new URL(specifier\x2C parsedParentURL);\x0d\n    } else {\x0d\n      parsed = new URL(specifier);\x0d\n    }\x0d\n\x0d\n    if (parsed.protocol === 'data:' ||\x0d\n      (experimentalNetworkImports &&\x0d\n        (\x0d\n          parsed.protocol === 'https:' ||\x0d\n          parsed.protocol === 'http:'\x0d\n        )\x0d\n      )\x0d\n    ) {\x0d\n      return { url: parsed.href };\x0d\n    }\x0d\n  } catch {\x0d\n    // Ignore exception\x0d\n  }\x0d\n\x0d\n  // There are multiple deep branches that can either throw or return; instead\x0d\n  // of duplicating that deeply nested logic for the possible returns\x2C DRY and\x0d\n  // check for a return. This seems the least gnarly.\x0d\n  const maybeReturn = checkIfDisallowedImport(\x0d\n    specifier\x2C\x0d\n    parsed\x2C\x0d\n    parsedParentURL\x2C\x0d\n  );\x0d\n\x0d\n  if (maybeReturn) return maybeReturn;\x0d\n\x0d\n  // This must come after checkIfDisallowedImport\x0d\n  if (parsed && parsed.protocol === 'node:') return { url: specifier };\x0d\n\x0d\n  throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports);\x0d\n\x0d\n  const isMain = parentURL === undefined;\x0d\n  if (isMain) {\x0d\n    parentURL = pathToFileURL(`${process.cwd()}/`).href;\x0d\n\x0d\n    // This is the initial entry point to the program\x2C and --input-type has\x0d\n    // been passed as an option; but --input-type can only be used with\x0d\n    // --eval\x2C --print or STDIN string input. It is not allowed with file\x0d\n    // input\x2C to avoid user confusion over how expansive the effect of the\x0d\n    // flag should be (i.e. entry point only\x2C package scope surrounding the\x0d\n    // entry point\x2C etc.).\x0d\n    if (typeFlag) throw new ERR_INPUT_TYPE_NOT_ALLOWED();\x0d\n  }\x0d\n\x0d\n  conditions = getConditionsSet(conditions);\x0d\n  let url;\x0d\n  try {\x0d\n    url = moduleResolve(specifier\x2C parentURL\x2C conditions\x2C\x0d\n                        isMain ? preserveSymlinksMain : preserveSymlinks);\x0d\n  } catch (error) {\x0d\n    // Try to give the user a hint of what would have been the\x0d\n    // resolved CommonJS module\x0d\n    if (error.code === 'ERR_MODULE_NOT_FOUND' ||\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT') {\x0d\n      if (StringPrototypeStartsWith(specifier\x2C 'file://')) {\x0d\n        specifier = fileURLToPath(specifier);\x0d\n      }\x0d\n      const found = resolveAsCommonJS(specifier\x2C parentURL);\x0d\n      if (found) {\x0d\n        // Modify the stack and message string to include the hint\x0d\n        const lines = StringPrototypeSplit(error.stack\x2C '\\n');\x0d\n        const hint = `Did you mean to import ${found}?`;\x0d\n        error.stack =\x0d\n          ArrayPrototypeShift(lines) + '\\n' +\x0d\n          hint + '\\n' +\x0d\n          ArrayPrototypeJoin(lines\x2C '\\n');\x0d\n        error.message += `\\n${hint}`;\x0d\n      }\x0d\n    }\x0d\n    throw error;\x0d\n  }\x0d\n\x0d\n  throwIfUnsupportedURLProtocol(url);\x0d\n\x0d\n  return {\x0d\n    // Do NOT cast `url` to a string: that will work even when there are real\x0d\n    // problems\x2C silencing them\x0d\n    url: url.href\x2C\x0d\n    format: defaultGetFormatWithoutErrors(url\x2C context)\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n  defaultResolve\x2C\x0d\n  encodedSepRegEx\x2C\x0d\n  getPackageScopeConfig\x2C\x0d\n  getPackageType\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x2C\x0d\n};\x0d\n\x0d\n// cycle\x0d\nconst {\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n} = require('internal/modules/esm/get_format');\x0d\n\x0d\nif (policy) {\x0d\n  const $defaultResolve = defaultResolve;\x0d\n  module.exports.defaultResolve = async function defaultResolve(\x0d\n    specifier\x2C\x0d\n    context\x0d\n  ) {\x0d\n    const ret = await $defaultResolve(specifier\x2C context);\x0d\n    // This is a preflight check to avoid data exfiltration by query params etc.\x0d\n    policy.manifest.mightAllow(ret.url\x2C () =>\x0d\n      new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n        context.parentURL\x2C\x0d\n        specifier\x2C\x0d\n        context.conditions\x0d\n      )\x0d\n    );\x0d\n    return ret;\x0d\n  };\x0d\n}\x0d\n
code-source-info,0xc4d9937cce,122,0,42159,C0O0C4O42159,,
code-creation,Function,10,195987,0xc4d9938dfe,1185, node:internal/modules/esm/resolve:1:1,0xc4d9937c48,~
code-source-info,0xc4d9938dfe,122,0,42159,C0O0C412O28C418O45C424O70C430O93C436O117C442O131C448O149C453O166C459O196C465O230C471O241C477O265C483O298C488O310C494O322C500O333C506O361C512O389C518O416C524O447C530O474C536O499C542O524C548O589C551O589C555O589C557O645C560O645C565O628C571O738C574O738C579O696C585O713C591O726C597O781C600O781C605O762C611O878C617O878C626O923C633O878C635O1005C638O1005C643O978C649O983C655O993C661O1048C667O1048C671O1048C673O1117C679O1117C683O1117C685O1200C691O1200C695O1200C697O1268C703O1268C707O1268C709O1328C715O1328C719O1328C721O1416C724O1416C729O1378C735O1383C741O1398C747O1837C750O1837C755O1863C760O1453C766O1484C772O1510C778O1543C784O1574C790O1605C796O1641C802O1666C808O1701C814O1735C820O1766C826O1800C832O1902C835O1902C840O1888C846O1971C849O1971C853O1971C855O2044C861O2044C866O2094C872O2094C877O2150C888O2213C895O2258C896O2258C950O2281C1001O2213C1005O2213C1007O2336C1015O2336C1020O2336C1022O2691C1025O2691C1030O2691C1032O5914C1034O5914C1039O5914C1041O5955C1043O5955C1048O5955C1050O6101C1054O6101C1056O11577C1060O11577C1062O12586C1066O12586C1068O16011C1072O16011C1074O16215C1078O16215C1080O16249C1084O16249C1086O41358C1093O41380C1099O41403C1105O41422C1111O41442C1117O41468C1123O41487C1129O41513C1135O41373C1139O41600C1142O41600C1147O41564C1153O41647C1164O41688C1166O41688C1168O41714C1177O41737C1184O42158,,
code-creation,Eval,10,196405,0xc4d993c7e6,5, node:internal/modules/esm/get_format:1:1,0xc4d993c560,~
script-source,123,node:internal/modules/esm/get_format,'use strict';\x0d\nconst {\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\nconst { basename\x2C extname\x2C relative } = require('path');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { fetchModule } = require('internal/modules/esm/fetch_module');\x0d\nconst {\x0d\n  extensionFormatMap\x2C\x0d\n  getLegacyExtensionFormat\x2C\x0d\n  mimeToFormat\x2C\x0d\n} = require('internal/modules/esm/formats');\x0d\n\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst experimentalSpecifierResolution =\x0d\n  getOptionValue('--experimental-specifier-resolution');\x0d\nconst { getPackageType\x2C getPackageScopeConfig } = require('internal/modules/esm/resolve');\x0d\nconst { URL\x2C fileURLToPath } = require('internal/url');\x0d\nconst { ERR_UNKNOWN_FILE_EXTENSION } = require('internal/errors').codes;\x0d\n\x0d\nconst protocolHandlers = ObjectAssign(ObjectCreate(null)\x2C {\x0d\n  'data:': getDataProtocolModuleFormat\x2C\x0d\n  'file:': getFileProtocolModuleFormat\x2C\x0d\n  'http:': getHttpProtocolModuleFormat\x2C\x0d\n  'https:': getHttpProtocolModuleFormat\x2C\x0d\n  'node:'() { return 'builtin'; }\x2C\x0d\n});\x0d\n\x0d\nfunction getDataProtocolModuleFormat(parsed) {\x0d\n  const { 1: mime } = RegExpPrototypeExec(\x0d\n    /^([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n    parsed.pathname\x2C\x0d\n  ) || [ null\x2C null\x2C null ];\x0d\n\x0d\n  return mimeToFormat(mime);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @param {boolean} ignoreErrors\x0d\n * @returns {string}\x0d\n */\x0d\nfunction getFileProtocolModuleFormat(url\x2C context\x2C ignoreErrors) {\x0d\n  const filepath = fileURLToPath(url);\x0d\n  const ext = extname(filepath);\x0d\n  if (ext === '.js') {\x0d\n    return getPackageType(url) === 'module' ? 'module' : 'commonjs';\x0d\n  }\x0d\n\x0d\n  const format = extensionFormatMap[ext];\x0d\n  if (format) return format;\x0d\n\x0d\n  if (experimentalSpecifierResolution !== 'node') {\x0d\n    // Explicit undefined return indicates load hook should rerun format check\x0d\n    if (ignoreErrors) return undefined;\x0d\n    let suggestion = '';\x0d\n    if (getPackageType(url) === 'module' && ext === '') {\x0d\n      const config = getPackageScopeConfig(url);\x0d\n      const fileBasename = basename(filepath);\x0d\n      const relativePath = StringPrototypeSlice(relative(config.pjsonPath\x2C filepath)\x2C 1);\x0d\n      suggestion = 'Loading extensionless files is not supported inside of ' +\x0d\n        '"type":"module" package.json contexts. The package.json file ' +\x0d\n        `${config.pjsonPath} caused this "type":"module" context. Try ` +\x0d\n        `changing ${filepath} to have a file extension. Note the "bin" ` +\x0d\n        'field of package.json can point to a file with an extension\x2C for example ' +\x0d\n        `{"type":"module"\x2C"bin":{"${fileBasename}":"${relativePath}.js"}}`;\x0d\n    }\x0d\n    throw new ERR_UNKNOWN_FILE_EXTENSION(ext\x2C filepath\x2C suggestion);\x0d\n  }\x0d\n\x0d\n  return getLegacyExtensionFormat(ext) ?? null;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | undefined} only works when enabled\x0d\n */\x0d\nfunction getHttpProtocolModuleFormat(url\x2C context) {\x0d\n  if (experimentalNetworkImports) {\x0d\n    return PromisePrototypeThen(\x0d\n      PromiseResolve(fetchModule(url\x2C context))\x2C\x0d\n      (entry) => {\x0d\n        return mimeToFormat(entry.headers['content-type']);\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | URL['href']} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | string | undefined} only works when enabled\x0d\n */\x0d\nfunction defaultGetFormatWithoutErrors(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  if (!ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol))\x0d\n    return null;\x0d\n  return protocolHandlers[parsed.protocol](parsed\x2C context\x2C true);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | URL['href']} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | string | undefined} only works when enabled\x0d\n */\x0d\nfunction defaultGetFormat(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  return ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol) ?\x0d\n    protocolHandlers[parsed.protocol](parsed\x2C context\x2C false) :\x0d\n    null;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultGetFormat\x2C\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n  extensionFormatMap\x2C\x0d\n};\x0d\n
code-source-info,0xc4d993c7e6,123,0,4260,C0O0C4O4260,,
code-creation,Function,10,196583,0xc4d993cc66,368, node:internal/modules/esm/get_format:1:1,0xc4d993c760,~
code-source-info,0xc4d993cc66,123,0,4260,C0O0C90O26C95O43C100O60C106O94C112O119C118O138C124O162C130O243C133O243C138O211C144O221C150O230C156O288C159O288C164O269C169O342C172O342C177O326C183O471C186O471C191O400C197O423C203O452C209O553C212O553C216O553C218O647C221O647C225O647C227O753C230O753C235O711C241O727C247O826C250O826C255O803C261O808C267O891C270O891C275O917C280O860C286O953C288O966C300O1000C306O1041C312O1082C318O1124C322O1156C330O953C335O953C337O4158C344O4180C350O4201C356O4235C362O4173C367O4259,,
code-creation,Eval,10,197210,0xc4d993dabe,5, node:internal/modules/esm/fetch_module:1:1,0xc4d993d7d8,~
script-source,124,node:internal/modules/esm/fetch_module,'use strict';\x0d\nconst {\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  Buffer: { concat: BufferConcat }\x2C\x0d\n} = require('buffer');\x0d\nconst {\x0d\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\x0d\n  ERR_NETWORK_IMPORT_BAD_RESPONSE\x2C\x0d\n  ERR_MODULE_NOT_FOUND\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { URL } = require('internal/url');\x0d\nconst net = require('net');\x0d\nconst { once } = require('events');\x0d\nconst { compose } = require('stream');\x0d\n/**\x0d\n * @typedef CacheEntry\x0d\n * @property {Promise<string> | string} resolvedHREF\x0d\n * @property {Record<string\x2C string>} headers\x0d\n * @property {Promise<Buffer> | Buffer} body\x0d\n */\x0d\n\x0d\n/**\x0d\n * Only for GET requests\x2C other requests would need new Map\x0d\n * HTTP cache semantics keep diff caches\x0d\n *\x0d\n * It caches either the promise or the cache entry since import.meta.url needs\x0d\n * the value synchronously for the response location after all redirects.\x0d\n *\x0d\n * Maps HREF to pending cache entry\x0d\n * @type {Map<string\x2C Promise<CacheEntry> | CacheEntry>}\x0d\n */\x0d\nconst cacheForGET = new SafeMap();\x0d\n\x0d\n// [1] The V8 snapshot doesn't like some C++ APIs to be loaded eagerly. Do it\x0d\n// lazily/at runtime and not top level of an internal module.\x0d\n\x0d\n// [2] Creating a new agent instead of using the gloabl agent improves\x0d\n// performance and precludes the agent becoming tainted.\x0d\n\x0d\nlet HTTPSAgent;\x0d\nfunction HTTPSGet(url\x2C opts) {\x0d\n  const https = require('https'); // [1]\x0d\n  HTTPSAgent ??= new https.Agent({ // [2]\x0d\n    keepAlive: true\x2C\x0d\n  });\x0d\n  return https.get(url\x2C {\x0d\n    agent: HTTPSAgent\x2C\x0d\n    ...opts\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nlet HTTPAgent;\x0d\nfunction HTTPGet(url\x2C opts) {\x0d\n  const http = require('http'); // [1]\x0d\n  HTTPAgent ??= new http.Agent({ // [2]\x0d\n    keepAlive: true\x2C\x0d\n  });\x0d\n  return http.get(url\x2C {\x0d\n    agent: HTTPAgent\x2C\x0d\n    ...opts\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction dnsLookup(name\x2C opts) {\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  dnsLookup = require('dns/promises').lookup;\x0d\n  return dnsLookup(name\x2C opts);\x0d\n}\x0d\n\x0d\nlet zlib;\x0d\nfunction createBrotliDecompress() {\x0d\n  zlib ??= require('zlib'); // [1]\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  createBrotliDecompress = zlib.createBrotliDecompress;\x0d\n  return createBrotliDecompress();\x0d\n}\x0d\n\x0d\nfunction createUnzip() {\x0d\n  zlib ??= require('zlib'); // [1]\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  createUnzip = zlib.createUnzip;\x0d\n  return createUnzip();\x0d\n}\x0d\n\x0d\n/**\x0d\n * Redirection status code as per section 6.4 of RFC 7231:\x0d\n * https://datatracker.ietf.org/doc/html/rfc7231#section-6.4\x0d\n * and RFC 7238:\x0d\n * https://datatracker.ietf.org/doc/html/rfc7238\x0d\n * @param {number} statusCode\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isRedirect(statusCode) {\x0d\n  switch (statusCode) {\x0d\n    case 300: // Multiple Choices\x0d\n    case 301: // Moved Permanently\x0d\n    case 302: // Found\x0d\n    case 303: // See Other\x0d\n    case 307: // Temporary Redirect\x0d\n    case 308: // Permanent Redirect\x0d\n      return true;\x0d\n    default:\x0d\n      return false;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} parsed\x0d\n * @returns {Promise<CacheEntry> | CacheEntry}\x0d\n */\x0d\nfunction fetchWithRedirects(parsed) {\x0d\n  const existing = cacheForGET.get(parsed.href);\x0d\n  if (existing) {\x0d\n    return existing;\x0d\n  }\x0d\n  const handler = parsed.protocol === 'http:' ? HTTPGet : HTTPSGet;\x0d\n  const result = (async () => {\x0d\n    const req = handler(parsed\x2C {\x0d\n      headers: { Accept: '*/*' }\x2C\x0d\n    });\x0d\n    // Note that `once` is used here to handle `error` and that it hits the\x0d\n    // `finally` on network error/timeout.\x0d\n    const { 0: res } = await once(req\x2C 'response');\x0d\n    try {\x0d\n      const hasLocation = ObjectPrototypeHasOwnProperty(res.headers\x2C 'location');\x0d\n      if (isRedirect(res.statusCode) && hasLocation) {\x0d\n        const location = new URL(res.headers.location\x2C parsed);\x0d\n        if (location.protocol !== 'http:' && location.protocol !== 'https:') {\x0d\n          throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n            res.headers.location\x2C\x0d\n            parsed.href\x2C\x0d\n            'cannot redirect to non-network location'\x0d\n          );\x0d\n        }\x0d\n        const entry = await fetchWithRedirects(location);\x0d\n        cacheForGET.set(parsed.href\x2C entry);\x0d\n        return entry;\x0d\n      }\x0d\n      if (res.statusCode === 404) {\x0d\n        const err = new ERR_MODULE_NOT_FOUND(parsed.href\x2C null);\x0d\n        err.message = `Cannot find module '${parsed.href}'\x2C HTTP 404`;\x0d\n        throw err;\x0d\n      }\x0d\n      // This condition catches all unsupported status codes\x2C including\x0d\n      // 3xx redirection codes without `Location` HTTP header.\x0d\n      if (res.statusCode < 200 || res.statusCode >= 300) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          res.headers.location\x2C\x0d\n          parsed.href\x2C\x0d\n          'cannot redirect to non-network location');\x0d\n      }\x0d\n      const { headers } = res;\x0d\n      const contentType = headers['content-type'];\x0d\n      if (!contentType) {\x0d\n        throw new ERR_NETWORK_IMPORT_BAD_RESPONSE(\x0d\n          parsed.href\x2C\x0d\n          "the 'Content-Type' header is required"\x0d\n        );\x0d\n      }\x0d\n      /**\x0d\n       * @type {CacheEntry}\x0d\n       */\x0d\n      const entry = {\x0d\n        resolvedHREF: parsed.href\x2C\x0d\n        headers: {\x0d\n          'content-type': res.headers['content-type']\x2C\x0d\n        }\x2C\x0d\n        body: (async () => {\x0d\n          let bodyStream = res;\x0d\n          if (res.headers['content-encoding'] === 'br') {\x0d\n            bodyStream = compose(res\x2C createBrotliDecompress());\x0d\n          } else if (\x0d\n            res.headers['content-encoding'] === 'gzip' ||\x0d\n            res.headers['content-encoding'] === 'deflate'\x0d\n          ) {\x0d\n            bodyStream = compose(res\x2C createUnzip());\x0d\n          }\x0d\n          const buffers = await bodyStream.toArray();\x0d\n          const body = BufferConcat(buffers);\x0d\n          entry.body = body;\x0d\n          return body;\x0d\n        })()\x2C\x0d\n      };\x0d\n      cacheForGET.set(parsed.href\x2C entry);\x0d\n      await entry.body;\x0d\n      return entry;\x0d\n    } finally {\x0d\n      req.destroy();\x0d\n    }\x0d\n  })();\x0d\n  cacheForGET.set(parsed.href\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst allowList = new net.BlockList();\x0d\nallowList.addAddress('::1'\x2C 'ipv6');\x0d\nallowList.addRange('127.0.0.1'\x2C '127.255.255.255');\x0d\n\x0d\n/**\x0d\n * Returns if an address has local status by if it is going to a local\x0d\n * interface or is an address resolved by DNS to be a local interface\x0d\n * @param {string} hostname url.hostname to test\x0d\n * @returns {Promise<boolean>}\x0d\n */\x0d\nasync function isLocalAddress(hostname) {\x0d\n  try {\x0d\n    if (\x0d\n      StringPrototypeStartsWith(hostname\x2C '[') &&\x0d\n      StringPrototypeEndsWith(hostname\x2C ']')\x0d\n    ) {\x0d\n      hostname = StringPrototypeSlice(hostname\x2C 1\x2C -1);\x0d\n    }\x0d\n    const addr = await dnsLookup(hostname\x2C { verbatim: true });\x0d\n    const ipv = addr.family === 4 ? 'ipv4' : 'ipv6';\x0d\n    return allowList.check(addr.address\x2C ipv);\x0d\n  } catch {\x0d\n    // If it errored\x2C the answer is no.\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Fetches a location with a shared cache following redirects.\x0d\n * Does not respect HTTP cache headers.\x0d\n *\x0d\n * This splits the header and body Promises so that things only needing\x0d\n * headers don't need to wait on the body.\x0d\n *\x0d\n * In cases where the request & response have already settled\x2C this returns the\x0d\n * cache value synchronously.\x0d\n *\x0d\n * @param {URL} parsed\x0d\n * @param {ESModuleContext} context\x0d\n * @returns {ReturnType<typeof fetchWithRedirects>}\x0d\n */\x0d\nfunction fetchModule(parsed\x2C { parentURL }) {\x0d\n  const { href } = parsed;\x0d\n  const existing = cacheForGET.get(href);\x0d\n  if (existing) {\x0d\n    return existing;\x0d\n  }\x0d\n  if (parsed.protocol === 'http:') {\x0d\n    return PromisePrototypeThen(isLocalAddress(parsed.hostname)\x2C (is) => {\x0d\n      if (is !== true) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          href\x2C\x0d\n          parentURL\x2C\x0d\n          'http can only be used to load local resources (use https instead).'\x0d\n        );\x0d\n      }\x0d\n      return fetchWithRedirects(parsed);\x0d\n    });\x0d\n  }\x0d\n  return fetchWithRedirects(parsed);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  fetchModule\x2C\x0d\n};\x0d\n
code-source-info,0xc4d993dabe,124,0,8018,C0O0C4O8018,,
code-creation,Function,10,197566,0xc4d993df76,355, node:internal/modules/esm/fetch_module:1:1,0xc4d993da38,~
code-source-info,0xc4d993df76,124,0,8018,C0O0C113O26C119O60C125O85C130O97C136O125C142O150C148O246C154O246C159O246C164O225C170O374C176O374C181O400C186O277C192O311C198O347C204O425C210O425C215O417C221O463C227O463C232O497C238O497C243O488C249O537C255O537C260O525C266O1131C268O1131C273O1131C275O1429C276O1429C278O1669C279O1669C281O2066C282O2066C284O6093C289O6085C294O6085C296O6107C299O6117C310O6117C316O6145C319O6155C330O6155C336O7978C343O8000C349O7993C354O8017,,
code-creation,LazyCompile,10,197749,0xc4d993ec86,37,get BlockList node:net:1920:16,0x3d286278560,~
code-source-info,0xc4d993ec86,105,53493,53585,C0O53503C14O53517C19O53546C26O53513C32O53563C36O53580,,
new,MemoryChunk,0x35a8d480000,262144
code-creation,Eval,10,197968,0xc4d993f166,5, node:internal/blocklist:1:1,0xc4d993ef80,~
script-source,125,node:internal/blocklist,'use strict';\x0d\n\x0d\nconst {\x0d\n  Boolean\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  BlockList: BlockListHandle\x2C\x0d\n} = internalBinding('block_list');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  SocketAddress\x2C\x0d\n  kHandle: kSocketAddressHandle\x2C\x0d\n} = require('internal/socketaddress');\x0d\n\x0d\nconst {\x0d\n  JSTransferable\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst { owner_symbol } = internalBinding('symbols');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { validateInt32\x2C validateString } = require('internal/validators');\x0d\n\x0d\nclass BlockList extends JSTransferable {\x0d\n  constructor() {\x0d\n    super();\x0d\n    this[kHandle] = new BlockListHandle();\x0d\n    this[kHandle][owner_symbol] = this;\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `BlockList ${inspect({\x0d\n      rules: this.rules\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  addAddress(address\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(address)) {\x0d\n      validateString(address\x2C 'address');\x0d\n      validateString(family\x2C 'family');\x0d\n      address = new SocketAddress({\x0d\n        address\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    this[kHandle].addAddress(address[kSocketAddressHandle]);\x0d\n  }\x0d\n\x0d\n  addRange(start\x2C end\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(start)) {\x0d\n      validateString(start\x2C 'start');\x0d\n      validateString(family\x2C 'family');\x0d\n      start = new SocketAddress({\x0d\n        address: start\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    if (!SocketAddress.isSocketAddress(end)) {\x0d\n      validateString(end\x2C 'end');\x0d\n      validateString(family\x2C 'family');\x0d\n      end = new SocketAddress({\x0d\n        address: end\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    const ret = this[kHandle].addRange(\x0d\n      start[kSocketAddressHandle]\x2C\x0d\n      end[kSocketAddressHandle]);\x0d\n    if (ret === false)\x0d\n      throw new ERR_INVALID_ARG_VALUE('start'\x2C start\x2C 'must come before end');\x0d\n  }\x0d\n\x0d\n  addSubnet(network\x2C prefix\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(network)) {\x0d\n      validateString(network\x2C 'network');\x0d\n      validateString(family\x2C 'family');\x0d\n      network = new SocketAddress({\x0d\n        address: network\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    switch (network.family) {\x0d\n      case 'ipv4':\x0d\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 32);\x0d\n        break;\x0d\n      case 'ipv6':\x0d\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 128);\x0d\n        break;\x0d\n    }\x0d\n    this[kHandle].addSubnet(network[kSocketAddressHandle]\x2C prefix);\x0d\n  }\x0d\n\x0d\n  check(address\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(address)) {\x0d\n      validateString(address\x2C 'address');\x0d\n      validateString(family\x2C 'family');\x0d\n      try {\x0d\n        address = new SocketAddress({\x0d\n          address\x2C\x0d\n          family\x2C\x0d\n        });\x0d\n      } catch {\x0d\n        // Ignore the error. If it's not a valid address\x2C return false.\x0d\n        return false;\x0d\n      }\x0d\n    }\x0d\n    return Boolean(this[kHandle].check(address[kSocketAddressHandle]));\x0d\n  }\x0d\n\x0d\n  get rules() {\x0d\n    return this[kHandle].getRules();\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/blocklist:InternalBlockList'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kHandle][owner_symbol] = this;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass InternalBlockList extends JSTransferable {\x0d\n  constructor(handle) {\x0d\n    super();\x0d\n    this[kHandle] = handle;\x0d\n    if (handle !== undefined)\x0d\n      handle[owner_symbol] = this;\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalBlockList.prototype.constructor = BlockList.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalBlockList.prototype\x2C BlockList.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  BlockList\x2C\x0d\n  InternalBlockList\x2C\x0d\n};\x0d\n
code-source-info,0xc4d993f166,125,0,4043,C0O0C4O4043,,
code-creation,Function,10,198149,0xc4d993fb6e,359, node:internal/blocklist:1:1,0xc4d993f0e0,~
code-source-info,0xc4d993fb6e,125,0,4043,C0O0C35O28C41O40C46O65C51O137C54O137C59O115C65O218C68O218C73O203C78O312C81O312C86O258C92O285C98O410C101O410C106O361C111O380C116O391C121O477C124O477C129O465C135O530C138O530C142O530C144O575C147O575C152O558C158O645C161O645C166O671C171O617C177O724C180O724C185O690C191O705C197O783C204O929C241O3359C251O3528C278O3669C301O3850C306O3884C311O3894C315O3872C319O3947C324O3968C329O3908C334O3983C341O4005C347O4019C353O3998C358O4042,,
code-creation,Eval,10,198428,0x35a8d4827a6,5, node:internal/socketaddress:1:1,0x35a8d4825b0,~
script-source,126,node:internal/socketaddress,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  SocketAddress: _SocketAddress\x2C\x0d\n  AF_INET\x2C\x0d\n  AF_INET6\x2C\x0d\n} = internalBinding('block_list');\x0d\n\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  validatePort\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst {\x0d\n  JSTransferable\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kDetail = Symbol('kDetail');\x0d\n\x0d\nclass SocketAddress extends JSTransferable {\x0d\n  static isSocketAddress(value) {\x0d\n    return value?.[kHandle] !== undefined;\x0d\n  }\x0d\n\x0d\n  constructor(options = {}) {\x0d\n    super();\x0d\n    validateObject(options\x2C 'options');\x0d\n    let { family = 'ipv4' } = options;\x0d\n    const {\x0d\n      address = (family === 'ipv4' ? '127.0.0.1' : '::')\x2C\x0d\n      port = 0\x2C\x0d\n      flowlabel = 0\x2C\x0d\n    } = options;\x0d\n\x0d\n    let type;\x0d\n    if (typeof family?.toLowerCase === 'function')\x0d\n      family = family.toLowerCase();\x0d\n    switch (family) {\x0d\n      case 'ipv4':\x0d\n        type = AF_INET;\x0d\n        break;\x0d\n      case 'ipv6':\x0d\n        type = AF_INET6;\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_INVALID_ARG_VALUE('options.family'\x2C options.family);\x0d\n    }\x0d\n\x0d\n    validateString(address\x2C 'options.address');\x0d\n    validatePort(port\x2C 'options.port');\x0d\n    validateUint32(flowlabel\x2C 'options.flowlabel'\x2C false);\x0d\n\x0d\n    this[kHandle] = new _SocketAddress(address\x2C port\x2C type\x2C flowlabel);\x0d\n    this[kDetail] = this[kHandle].detail({\x0d\n      address: undefined\x2C\x0d\n      port: undefined\x2C\x0d\n      family: undefined\x2C\x0d\n      flowlabel: undefined\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  get address() {\x0d\n    return this[kDetail].address;\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    return this[kDetail].port;\x0d\n  }\x0d\n\x0d\n  get family() {\x0d\n    return this[kDetail].family === AF_INET ? 'ipv4' : 'ipv6';\x0d\n  }\x0d\n\x0d\n  get flowlabel() {\x0d\n    // The flow label can be changed internally.\x0d\n    return this[kHandle].flowlabel();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `SocketAddress ${inspect(this.toJSON()\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/socketaddress:InternalSocketAddress'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kDetail] = handle.detail({\x0d\n      address: undefined\x2C\x0d\n      port: undefined\x2C\x0d\n      family: undefined\x2C\x0d\n      flowlabel: undefined\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return {\x0d\n      address: this.address\x2C\x0d\n      port: this.port\x2C\x0d\n      family: this.family\x2C\x0d\n      flowlabel: this.flowlabel\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nclass InternalSocketAddress extends JSTransferable {\x0d\n  constructor(handle) {\x0d\n    super();\x0d\n    this[kHandle] = handle;\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalSocketAddress.prototype.constructor =\x0d\n  SocketAddress.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalSocketAddress.prototype\x2C SocketAddress.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  SocketAddress\x2C\x0d\n  InternalSocketAddress\x2C\x0d\n  kHandle\x2C\x0d\n};\x0d\n
code-source-info,0x35a8d4827a6,126,0,3363,C0O0C4O3363,,
code-creation,Function,10,198591,0x35a8d4832ce,366, node:internal/socketaddress:1:1,0x35a8d482720,~
code-source-info,0x35a8d4832ce,126,0,3363,C0O0C38O28C43O53C48O154C51O154C56O108C62O127C68O139C74O275C77O275C82O199C88O218C94O237C100O254C106O369C109O369C114O369C119O335C125O447C128O447C133O432C138O496C141O496C146O484C152O593C155O593C160O544C165O563C170O574C175O656C178O656C182O656C184O692C187O692C191O692C193O742C226O2171C236O2425C246O2602C279O3017C302O3135C307O3176C312O3186C316O3157C320O3243C325O3268C330O3200C335O3283C342O3305C348O3323C354O3349C360O3298C365O3362,,
code-creation,LazyCompile,10,198761,0x35a8d483d7e,72,BlockList node:internal/blocklist:40:14,0xc4d993f198,~
code-source-info,0x35a8d483d7e,125,814,922,C3O824C11O824C23O838C28O843C33O858C36O854C41O852C45O882C50O887C52O886C58O896C64O910C71O921,,
code-creation,LazyCompile,10,198832,0x35a8d484526,115,addAddress node:internal/blocklist:60:13,0xc4d993f238,~
code-source-info,0x35a8d484526,125,1208,1529,C14O1242C19O1261C24O1261C31O1296C39O1296C44O1339C52O1339C57O1380C69O1419C75O1437C81O1390C87O1468C89O1473C91O1472C95O1482C102O1501C104O1500C108O1482C114O1528,,
code-creation,LazyCompile,10,198880,0x35a8d4846a6,20,isSocketAddress node:internal/socketaddress:43:25,0x35a8d482828,~
code-source-info,0x35a8d4846a6,126,784,842,C0O799C9O814C11O813C18O823C19O837,,
code-creation,LazyCompile,10,198963,0x35a8d484e3e,323,SocketAddress node:internal/socketaddress:47:14,0x35a8d4827d8,~
code-source-info,0x35a8d484e3e,126,859,1842,C7O859C13O881C21O881C33O895C41O895C46O942C58O991C69O1009C81O1050C89O1067C97O1111C99O1122C106O1139C117O1192C122O1192C127O1212C146O1259C151O1284C153O1320C158O1346C160O1378C168O1436C175O1384C180O1378C181O1459C189O1459C194O1508C202O1508C207O1549C220O1549C225O1611C230O1616C235O1631C252O1627C257O1625C261O1684C266O1689C274O1705C276O1704C280O1714C291O1739C296O1763C301O1789C306O1818C310O1714C315O1698C322O1841,,
code-creation,LazyCompile,10,199047,0x35a8d48518e,99, node:internal/validators:163:3,0xf284009540,~
code-source-info,0x35a8d48518e,16,4893,5464,C0O4952C4O4993C9O5029C14O5068C21O5104C26O5141C33O5177C38O5192C46O5240C50O5254C53O5254C67O5331C75O5398C91O5404C96O5398C98O5463,,
code-creation,LazyCompile,10,199109,0x35a8d48533e,129,validatePort node:internal/validators:220:22,0xf284009718,~
code-source-info,0x35a8d48533e,16,6980,7347,C24O7025C44O7123C47O7123C52O7148C58O7156C65O7173C70O7184C72O7190C75O7179C86O7212C92O7237C99O7247C101O7266C117O7272C122O7266C123O7328C125O7340C128O7344,,
code-creation,LazyCompile,10,199168,0x35a8d48558e,149, node:internal/validators:102:40,0xf284009340,~
code-source-info,0x35a8d48558e,16,2998,3517,C0O3030C6O3068C22O3074C27O3068C28O3131C31O3136C37O3160C42O3165C48O3198C64O3204C69O3198C70O3277C80O3331C90O3370C109O3337C114O3331C115O3409C120O3431C125O3445C141O3451C146O3445C148O3516,,
code-creation,LazyCompile,10,199209,0x35a8d48571e,9,isUint32 node:internal/validators:41:18,0xf2840091e0,~
code-source-info,0x35a8d48571e,16,851,898,C0O864C2O888C5O877C8O895,,
code-creation,LazyCompile,10,199294,0x35a8d485c16,229,addRange node:internal/blocklist:72:11,0xc4d993f288,~
code-source-info,0x35a8d485c16,125,1543,2235,C17O1580C22O1599C27O1599C34O1632C42O1632C47O1671C55O1671C60O1712C72O1758C78O1774C84O1720C90O1805C95O1824C100O1824C107O1855C115O1855C120O1890C128O1890C133O1931C145O1975C151O1989C157O1937C163O2032C165O2037C167O2036C171O2046C178O2069C180O2068C186O2103C188O2102C192O2046C199O2132C200O2140C205O2158C221O2164C226O2158C228O2234,,
code-creation,Eval,10,199441,0x35a8d486176,5, node:internal/modules/esm/formats:1:1,0x35a8d486000,~
script-source,127,node:internal/modules/esm/formats,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExpPrototypeExec\x2C\x0d\n} = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\n\x0d\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\x0d\n\x0d\nconst extensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'module'\x2C\x0d\n  '.json': 'json'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n};\x0d\n\x0d\nconst legacyExtensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'commonjs'\x2C\x0d\n  '.json': 'commonjs'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n  '.node': 'commonjs'\x2C\x0d\n};\x0d\n\x0d\nif (experimentalWasmModules) {\x0d\n  extensionFormatMap['.wasm'] = legacyExtensionFormatMap['.wasm'] = 'wasm';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} mime\x0d\n * @returns {string | null}\x0d\n */\x0d\nfunction mimeToFormat(mime) {\x0d\n  if (\x0d\n    RegExpPrototypeExec(\x0d\n      /\\s*(text|application)\\/javascript\\s*(;\\s*charset=utf-?8\\s*)?/i\x2C\x0d\n      mime\x0d\n    ) !== null\x0d\n  ) return 'module';\x0d\n  if (mime === 'application/json') return 'json';\x0d\n  if (experimentalWasmModules && mime === 'application/wasm') return 'wasm';\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getLegacyExtensionFormat(ext) {\x0d\n  return legacyExtensionFormatMap[ext];\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  extensionFormatMap\x2C\x0d\n  getLegacyExtensionFormat\x2C\x0d\n  legacyExtensionFormatMap\x2C\x0d\n  mimeToFormat\x2C\x0d\n};\x0d\n
code-source-info,0x35a8d486176,127,0,1256,C0O0C4O1256,,
code-creation,Function,10,199518,0x35a8d48642e,120, node:internal/modules/esm/formats:1:1,0x35a8d4860f0,~
code-source-info,0x35a8d48642e,127,0,1256,C0O0C24O28C30O95C33O95C38O76C43O161C46O161C50O161C52O238C57O386C61O386C63O531C67O565C73O629C79O593C83O1134C90O1156C96O1179C102O1208C108O1237C114O1149C119O1255,,
code-creation,Eval,10,199659,0x35a8d486ab6,5, node:internal/modules/esm/initialize_import_meta:1:1,0x35a8d486920,~
script-source,128,node:internal/modules/esm/initialize_import_meta,'use strict';\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst experimentalImportMetaResolve =\x0d\n  getOptionValue('--experimental-import-meta-resolve');\x0d\nconst {\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseReject\x2C\x0d\n} = primordials;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\n\x0d\nfunction createImportMetaResolve(defaultParentUrl) {\x0d\n  return async function resolve(specifier\x2C parentUrl = defaultParentUrl) {\x0d\n    return PromisePrototypeThen(\x0d\n      asyncESM.esmLoader.resolve(specifier\x2C parentUrl)\x2C\x0d\n      ({ url }) => url\x2C\x0d\n      (error) => (\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT' ?\x0d\n          error.url : PromiseReject(error))\x0d\n    );\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {object} meta\x0d\n * @param {{url: string}} context\x0d\n */\x0d\nfunction initializeImportMeta(meta\x2C context) {\x0d\n  const { url } = context;\x0d\n\x0d\n  // Alphabetical\x0d\n  if (experimentalImportMetaResolve) {\x0d\n    meta.resolve = createImportMetaResolve(url);\x0d\n  }\x0d\n\x0d\n  meta.url = url;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  initializeImportMeta\x0d\n};\x0d\n
code-source-info,0x35a8d486ab6,128,0,1021,C0O0C4O1021,,
code-creation,Function,10,199756,0x35a8d486c7e,90, node:internal/modules/esm/initialize_import_meta:1:1,0x35a8d486a30,~
code-source-info,0x35a8d486c7e,128,0,1021,C0O0C28O44C31O44C36O25C41O115C44O115C48O115C50O181C56O206C62O257C65O257C69O257C71O973C78O995C84O988C89O1020,,
code-creation,Eval,10,199953,0x35a8d4872e6,5, node:internal/modules/esm/load:1:1,0x35a8d4870b0,~
script-source,129,node:internal/modules/esm/load,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\x0d\nconst { validateAssertions } = require('internal/modules/esm/assert');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { fetchModule } = require('internal/modules/esm/fetch_module');\x0d\n\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\n\x0d\nconst { Buffer: { from: BufferFrom } } = require('buffer');\x0d\n\x0d\nconst { readFile: readFileAsync } = require('internal/fs/promises').exports;\x0d\nconst { URL } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INVALID_URL\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst DATA_URL_PATTERN = /^[^/]+\\/[^\x2C;]+(?:[^\x2C]*?)(;base64)?\x2C([\\s\\S]*)$/;\x0d\n\x0d\nasync function getSource(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  let responseURL = url;\x0d\n  let source;\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    source = await readFileAsync(parsed);\x0d\n  } else if (parsed.protocol === 'data:') {\x0d\n    const match = RegExpPrototypeExec(DATA_URL_PATTERN\x2C parsed.pathname);\x0d\n    if (!match) {\x0d\n      throw new ERR_INVALID_URL(url);\x0d\n    }\x0d\n    const { 1: base64\x2C 2: body } = match;\x0d\n    source = BufferFrom(decodeURIComponent(body)\x2C base64 ? 'base64' : 'utf8');\x0d\n  } else if (experimentalNetworkImports && (\x0d\n    parsed.protocol === 'https:' ||\x0d\n    parsed.protocol === 'http:'\x0d\n  )) {\x0d\n    const res = await fetchModule(parsed\x2C context);\x0d\n    source = await res.body;\x0d\n    responseURL = res.resolvedHREF;\x0d\n  } else {\x0d\n    const supportedSchemes = ['file'\x2C 'data'];\x0d\n    if (experimentalNetworkImports) {\x0d\n      ArrayPrototypePush(supportedSchemes\x2C 'http'\x2C 'https');\x0d\n    }\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C supportedSchemes);\x0d\n  }\x0d\n  if (policy?.manifest) {\x0d\n    policy.manifest.assertIntegrity(parsed\x2C source);\x0d\n  }\x0d\n  return { responseURL\x2C source };\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Node.js default load hook.\x0d\n * @param {string} url\x0d\n * @param {object} context\x0d\n * @returns {object}\x0d\n */\x0d\nasync function defaultLoad(url\x2C context) {\x0d\n  let responseURL = url;\x0d\n  const { importAssertions } = context;\x0d\n  let {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  } = context;\x0d\n\x0d\n  if (format == null) {\x0d\n    format = await defaultGetFormat(url\x2C context);\x0d\n  }\x0d\n\x0d\n  validateAssertions(url\x2C format\x2C importAssertions);\x0d\n\x0d\n  if (\x0d\n    format === 'builtin' ||\x0d\n    format === 'commonjs'\x0d\n  ) {\x0d\n    source = null;\x0d\n  } else if (source == null) {\x0d\n    ({ responseURL\x2C source } = await getSource(url\x2C context));\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    format\x2C\x0d\n    responseURL\x2C\x0d\n    source\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultLoad\x2C\x0d\n};\x0d\n
code-source-info,0x35a8d4872e6,129,0,2849,C0O0C4O2849,,
code-creation,Function,10,200125,0x35a8d487526,263, node:internal/modules/esm/load:1:1,0x35a8d487260,~
code-source-info,0x35a8d487526,129,0,2849,C0O0C58O28C64O51C70O75C76O145C79O145C84O124C90O221C93O221C98O198C104O289C107O289C112O270C117O343C120O343C125O327C131O459C134O459C143O504C150O459C152O589C155O589C159O589C161O683C164O683C169O683C174O666C180O741C183O741C188O772C193O723C199O799C202O799C207O791C213O893C216O893C221O919C226O836C232O856C238O955C242O955C244O2809C251O2831C257O2824C262O2848,,
code-creation,Eval,10,200908,0x35a8d488aae,5, node:internal/fs/promises:1:1,0x35a8d488300,~
script-source,130,node:internal/fs/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Error\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  NumberIsSafeInteger\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafePromisePrototypeFinally\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  F_OK\x2C\x0d\n  O_SYMLINK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x0d\n} = constants;\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst { rimrafPromises } = require('internal/fs/rimraf');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validatePrimitiveStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst { opendir } = require('internal/fs/dir');\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n  lazyDOMException\x2C\x0d\n  promisify\x2C\x0d\n} = require('internal/util');\x0d\nconst { EventEmitterMixin } = require('internal/event_target');\x0d\nconst { watch } = require('internal/fs/watchers');\x0d\nconst { isIterable } = require('internal/streams/utils');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kFd = Symbol('kFd');\x0d\nconst kRefs = Symbol('kRefs');\x0d\nconst kClosePromise = Symbol('kClosePromise');\x0d\nconst kCloseResolve = Symbol('kCloseResolve');\x0d\nconst kCloseReject = Symbol('kCloseReject');\x0d\nconst kRef = Symbol('kRef');\x0d\nconst kUnref = Symbol('kUnref');\x0d\n\x0d\nconst { kUsePromises } = binding;\x0d\nconst {\x0d\n  JSTransferable\x2C kDeserialize\x2C kTransfer\x2C kTransferList\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst getDirectoryEntriesPromise = promisify(getDirents);\x0d\nconst validateRmOptionsPromise = promisify(validateRmOptions);\x0d\n\x0d\nlet cpPromises;\x0d\nfunction lazyLoadCpPromises() {\x0d\n  return cpPromises ??= require('internal/fs/cp/cp').cpFn;\x0d\n}\x0d\n\x0d\n// Lazy loaded to avoid circular dependency.\x0d\nlet fsStreams;\x0d\nfunction lazyFsStreams() {\x0d\n  return fsStreams ??= require('internal/fs/streams');\x0d\n}\x0d\n\x0d\nclass FileHandle extends EventEmitterMixin(JSTransferable) {\x0d\n  /**\x0d\n   * @param {InternalFSBinding.FileHandle | undefined} filehandle\x0d\n   */\x0d\n  constructor(filehandle) {\x0d\n    super();\x0d\n    this[kHandle] = filehandle;\x0d\n    this[kFd] = filehandle ? filehandle.fd : -1;\x0d\n\x0d\n    this[kRefs] = 1;\x0d\n    this[kClosePromise] = null;\x0d\n  }\x0d\n\x0d\n  getAsyncId() {\x0d\n    return this[kHandle].getAsyncId();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this[kFd];\x0d\n  }\x0d\n\x0d\n  appendFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  chmod(mode) {\x0d\n    return fsCall(fchmod\x2C this\x2C mode);\x0d\n  }\x0d\n\x0d\n  chown(uid\x2C gid) {\x0d\n    return fsCall(fchown\x2C this\x2C uid\x2C gid);\x0d\n  }\x0d\n\x0d\n  datasync() {\x0d\n    return fsCall(fdatasync\x2C this);\x0d\n  }\x0d\n\x0d\n  sync() {\x0d\n    return fsCall(fsync\x2C this);\x0d\n  }\x0d\n\x0d\n  read(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(read\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  readv(buffers\x2C position) {\x0d\n    return fsCall(readv\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  readFile(options) {\x0d\n    return fsCall(readFile\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  stat(options) {\x0d\n    return fsCall(fstat\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  truncate(len = 0) {\x0d\n    return fsCall(ftruncate\x2C this\x2C len);\x0d\n  }\x0d\n\x0d\n  utimes(atime\x2C mtime) {\x0d\n    return fsCall(futimes\x2C this\x2C atime\x2C mtime);\x0d\n  }\x0d\n\x0d\n  write(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(write\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  writev(buffers\x2C position) {\x0d\n    return fsCall(writev\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  writeFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  close = () => {\x0d\n    if (this[kFd] === -1) {\x0d\n      return PromiseResolve();\x0d\n    }\x0d\n\x0d\n    if (this[kClosePromise]) {\x0d\n      return this[kClosePromise];\x0d\n    }\x0d\n\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        this[kHandle].close()\x2C\x0d\n        () => { this[kClosePromise] = undefined; }\x0d\n      );\x0d\n    } else {\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        new Promise((resolve\x2C reject) => {\x0d\n          this[kCloseResolve] = resolve;\x0d\n          this[kCloseReject] = reject;\x0d\n        })\x2C () => {\x0d\n          this[kClosePromise] = undefined;\x0d\n          this[kCloseReject] = undefined;\x0d\n          this[kCloseResolve] = undefined;\x0d\n        }\x0d\n      );\x0d\n    }\x0d\n\x0d\n    this.emit('close');\x0d\n    return this[kClosePromise];\x0d\n  };\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').ReadStream\x0d\n   * } ReadStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   end?: number;\x0d\n   *   highWaterMark?: number;\x0d\n   *   }} [options]\x0d\n   * @returns {ReadStream}\x0d\n   */\x0d\n  createReadStream(options = undefined) {\x0d\n    const { ReadStream } = lazyFsStreams();\x0d\n    return new ReadStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').WriteStream\x0d\n   * } WriteStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   }} [options]\x0d\n   * @returns {WriteStream}\x0d\n   */\x0d\n  createWriteStream(options = undefined) {\x0d\n    const { WriteStream } = lazyFsStreams();\x0d\n    return new WriteStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  [kTransfer]() {\x0d\n    if (this[kClosePromise] || this[kRefs] > 1) {\x0d\n      throw lazyDOMException('Cannot transfer FileHandle while in use'\x2C\x0d\n                             'DataCloneError');\x0d\n    }\x0d\n\x0d\n    const handle = this[kHandle];\x0d\n    this[kFd] = -1;\x0d\n    this[kHandle] = null;\x0d\n    this[kRefs] = 0;\x0d\n\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/fs/promises:FileHandle'\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kTransferList]() {\x0d\n    return [ this[kHandle] ];\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kFd] = handle.fd;\x0d\n  }\x0d\n\x0d\n  [kRef]() {\x0d\n    this[kRefs]++;\x0d\n  }\x0d\n\x0d\n  [kUnref]() {\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      PromisePrototypeThen(\x0d\n        this[kHandle].close()\x2C\x0d\n        this[kCloseResolve]\x2C\x0d\n        this[kCloseReject]\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function fsCall(fn\x2C handle\x2C ...args) {\x0d\n  assert(handle[kRefs] !== undefined\x2C\x0d\n         'handle must be an instance of FileHandle');\x0d\n\x0d\n  if (handle.fd === -1) {\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new Error('file closed');\x0d\n    err.code = 'EBADF';\x0d\n    err.syscall = fn.name;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    handle[kRef]();\x0d\n    return await fn(handle\x2C ...new SafeArrayIterator(args));\x0d\n  } finally {\x0d\n    handle[kUnref]();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal) {\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n}\x0d\n\x0d\nasync function writeFileHandle(filehandle\x2C data\x2C signal\x2C encoding) {\x0d\n  checkAborted(signal);\x0d\n  if (isCustomIterable(data)) {\x0d\n    for await (const buf of data) {\x0d\n      checkAborted(signal);\x0d\n      const toWrite =\x0d\n        isArrayBufferView(buf) ? buf : Buffer.from(buf\x2C encoding || 'utf8');\x0d\n      let remaining = toWrite.byteLength;\x0d\n      while (remaining > 0) {\x0d\n        const writeSize = MathMin(kWriteFileMaxChunkSize\x2C remaining);\x0d\n        const { bytesWritten } = await write(\x0d\n          filehandle\x2C toWrite\x2C toWrite.byteLength - remaining\x2C writeSize);\x0d\n        remaining -= bytesWritten;\x0d\n        checkAborted(signal);\x0d\n      }\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  data = new Uint8Array(data.buffer\x2C data.byteOffset\x2C data.byteLength);\x0d\n  let remaining = data.byteLength;\x0d\n  if (remaining === 0) return;\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    const { bytesWritten } =\x0d\n      await write(filehandle\x2C data\x2C 0\x2C\x0d\n                  MathMin(kWriteFileMaxChunkSize\x2C data.byteLength));\x0d\n    remaining -= bytesWritten;\x0d\n    data = new Uint8Array(\x0d\n      data.buffer\x2C\x0d\n      data.byteOffset + bytesWritten\x2C\x0d\n      data.byteLength - bytesWritten\x0d\n    );\x0d\n  } while (remaining > 0);\x0d\n}\x0d\n\x0d\nasync function readFileHandle(filehandle\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  const statFields = await binding.fstat(filehandle.fd\x2C false\x2C kUsePromises);\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  let size;\x0d\n  if ((statFields[1/* mode */] & S_IFMT) === S_IFREG) {\x0d\n    size = statFields[8/* size */];\x0d\n  } else {\x0d\n    size = 0;\x0d\n  }\x0d\n\x0d\n  if (size > kIoMaxLength)\x0d\n    throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n\x0d\n  let endOfFile = false;\x0d\n  let totalRead = 0;\x0d\n  const noSize = size === 0;\x0d\n  const buffers = [];\x0d\n  const fullBuffer = noSize ? undefined : Buffer.allocUnsafeSlow(size);\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    let buffer;\x0d\n    let offset;\x0d\n    let length;\x0d\n    if (noSize) {\x0d\n      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);\x0d\n      offset = 0;\x0d\n      length = kReadFileUnknownBufferLength;\x0d\n    } else {\x0d\n      buffer = fullBuffer;\x0d\n      offset = totalRead;\x0d\n      length = MathMin(size - totalRead\x2C kReadFileBufferLength);\x0d\n    }\x0d\n\x0d\n    const bytesRead = (await binding.read(filehandle.fd\x2C buffer\x2C offset\x2C\x0d\n                                          length\x2C -1\x2C kUsePromises)) || 0;\x0d\n    totalRead += bytesRead;\x0d\n    endOfFile = bytesRead === 0 || totalRead === size;\x0d\n    if (noSize && bytesRead > 0) {\x0d\n      const isBufferFull = bytesRead === kReadFileUnknownBufferLength;\x0d\n      const chunkBuffer = isBufferFull ? buffer : buffer.slice(0\x2C bytesRead);\x0d\n      ArrayPrototypePush(buffers\x2C chunkBuffer);\x0d\n    }\x0d\n  } while (!endOfFile);\x0d\n\x0d\n  let result;\x0d\n  if (size > 0) {\x0d\n    result = totalRead === size ? fullBuffer : fullBuffer.slice(0\x2C totalRead);\x0d\n  } else {\x0d\n    result = buffers.length === 1 ? buffers[0] : Buffer.concat(buffers\x2C\x0d\n                                                               totalRead);\x0d\n  }\x0d\n\x0d\n  return options.encoding ? result.toString(options.encoding) : result;\x0d\n}\x0d\n\x0d\n// All of the functions are defined as async in order to ensure that errors\x0d\n// thrown cause promise rejections rather than being thrown synchronously.\x0d\nasync function access(path\x2C mode = F_OK) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  return binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function cp(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  return lazyLoadCpPromises()(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nasync function copyFile(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  return binding.copyFile(pathModule.toNamespacedPath(src)\x2C\x0d\n                          pathModule.toNamespacedPath(dest)\x2C\x0d\n                          mode\x2C\x0d\n                          kUsePromises);\x0d\n}\x0d\n\x0d\n// Note that unlike fs.open() which uses numeric file descriptors\x2C\x0d\n// fsPromises.open() uses the fs.FileHandle class.\x0d\nasync function open(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  return new FileHandle(\x0d\n    await binding.openFileHandle(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 flagsNumber\x2C mode\x2C kUsePromises));\x0d\n}\x0d\n\x0d\nasync function read(handle\x2C bufferOrParams\x2C offset\x2C length\x2C position) {\x0d\n  let buffer = bufferOrParams;\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    // This is fh.read(params)\x0d\n    ({\x0d\n      buffer = Buffer.alloc(16384)\x2C\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = bufferOrParams ?? kEmptyObject);\x0d\n\x0d\n    validateBuffer(buffer);\x0d\n  }\x0d\n\x0d\n  if (offset !== null && typeof offset === 'object') {\x0d\n    // This is fh.read(buffer\x2C options)\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = offset);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0)\x0d\n    return { bytesRead: length\x2C buffer };\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (!NumberIsSafeInteger(position))\x0d\n    position = -1;\x0d\n\x0d\n  const bytesRead = (await binding.read(handle.fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                        position\x2C kUsePromises)) || 0;\x0d\n\x0d\n  return { bytesRead\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function readv(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const bytesRead = (await binding.readBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                               kUsePromises)) || 0;\x0d\n  return { bytesRead\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function write(handle\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\x0d\n  if (buffer?.byteLength === 0)\x0d\n    return { bytesWritten: 0\x2C buffer };\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (typeof offset === 'object') {\x0d\n      ({\x0d\n        offset = 0\x2C\x0d\n        length = buffer.byteLength - offset\x2C\x0d\n        position = null\x2C\x0d\n      } = offsetOrOptions ?? kEmptyObject);\x0d\n    }\x0d\n\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    const bytesWritten =\x0d\n      (await binding.writeBuffer(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                 length\x2C position\x2C kUsePromises)) || 0;\x0d\n    return { bytesWritten\x2C buffer };\x0d\n  }\x0d\n\x0d\n  validatePrimitiveStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n  validateEncoding(buffer\x2C length);\x0d\n  const bytesWritten = (await binding.writeString(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                                  length\x2C kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function writev(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return { bytesWritten: 0\x2C buffers };\x0d\n  }\x0d\n\x0d\n  const bytesWritten = (await binding.writeBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                                   kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function rename(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                        pathModule.toNamespacedPath(newPath)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function truncate(path\x2C len = 0) {\x0d\n  const fd = await open(path\x2C 'r+');\x0d\n  return SafePromisePrototypeFinally(ftruncate(fd\x2C len)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function ftruncate(handle\x2C len = 0) {\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  return binding.ftruncate(handle.fd\x2C len\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function rm(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = await validateRmOptionsPromise(path\x2C options\x2C false);\x0d\n  return rimrafPromises(path\x2C options);\x0d\n}\x0d\n\x0d\nasync function rmdir(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = validateRmdirOptions(options);\x0d\n\x0d\n  if (options.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    const stats = await stat(path);\x0d\n    if (stats.isDirectory()) {\x0d\n      return rimrafPromises(path\x2C options);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return binding.rmdir(path\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fdatasync(handle) {\x0d\n  return binding.fdatasync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fsync(handle) {\x0d\n  return binding.fsync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdir(path\x2C options) {\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    options = { mode: options };\x0d\n  }\x0d\n  const {\x0d\n    recursive = false\x2C\x0d\n    mode = 0o777\x0d\n  } = options || kEmptyObject;\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  return binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                       parseFileMode(mode\x2C 'mode'\x2C 0o777)\x2C recursive\x2C\x0d\n                       kUsePromises);\x0d\n}\x0d\n\x0d\nasync function readdir(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                       options.encoding\x2C\x0d\n                                       !!options.withFileTypes\x2C\x0d\n                                       kUsePromises);\x0d\n  return options.withFileTypes ?\x0d\n    getDirectoryEntriesPromise(path\x2C result) :\x0d\n    result;\x0d\n}\x0d\n\x0d\nasync function readlink(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  return binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                          options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function symlink(target\x2C path\x2C type_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                         pathModule.toNamespacedPath(path)\x2C\x0d\n                         stringToSymlinkType(type)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fstat(handle\x2C options = { bigint: false }) {\x0d\n  const result = await binding.fstat(handle.fd\x2C options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function lstat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                     options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function stat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                    options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function link(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                      pathModule.toNamespacedPath(newPath)\x2C\x0d\n                      kUsePromises);\x0d\n}\x0d\n\x0d\nasync function unlink(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.unlink(pathModule.toNamespacedPath(path)\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchmod(handle\x2C mode) {\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.fchmod(handle.fd\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chmod(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lchmod(path\x2C mode) {\x0d\n  if (O_SYMLINK === undefined)\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('lchmod()');\x0d\n\x0d\n  const fd = await open(path\x2C O_WRONLY | O_SYMLINK);\x0d\n  return SafePromisePrototypeFinally(fchmod(fd\x2C mode)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function lchown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.lchown(pathModule.toNamespacedPath(path)\x2C\x0d\n                        uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchown(handle\x2C uid\x2C gid) {\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.fchown(handle.fd\x2C uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.chown(pathModule.toNamespacedPath(path)\x2C\x0d\n                       uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function utimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                        toUnixTimestamp(atime)\x2C\x0d\n                        toUnixTimestamp(mtime)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function futimes(handle\x2C atime\x2C mtime) {\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  return binding.futimes(handle.fd\x2C atime\x2C mtime\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lutimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                         toUnixTimestamp(atime)\x2C\x0d\n                         toUnixTimestamp(mtime)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function realpath(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.realpath(path\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdtemp(prefix\x2C options) {\x0d\n  options = getOptions(options);\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix);\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  return binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function writeFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data) && !isCustomIterable(data)) {\x0d\n    validatePrimitiveStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  validateAbortSignal(options.signal);\x0d\n  if (path instanceof FileHandle)\x0d\n    return writeFileHandle(path\x2C data\x2C options.signal\x2C options.encoding);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C options.mode);\x0d\n  return SafePromisePrototypeFinally(\x0d\n    writeFileHandle(fd\x2C data\x2C options.signal\x2C options.encoding)\x2C fd.close);\x0d\n}\x0d\n\x0d\nfunction isCustomIterable(obj) {\x0d\n  return isIterable(obj) && !isArrayBufferView(obj) && typeof obj !== 'string';\x0d\n}\x0d\n\x0d\nasync function appendFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n  options = copyObject(options);\x0d\n  options.flag = options.flag || 'a';\x0d\n  return writeFile(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\nasync function readFile(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const flag = options.flag || 'r';\x0d\n\x0d\n  if (path instanceof FileHandle)\x0d\n    return readFileHandle(path\x2C options);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C 0o666);\x0d\n  return SafePromisePrototypeFinally(readFileHandle(fd\x2C options)\x2C fd.close);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  exports: {\x0d\n    access\x2C\x0d\n    copyFile\x2C\x0d\n    cp\x2C\x0d\n    open\x2C\x0d\n    opendir: promisify(opendir)\x2C\x0d\n    rename\x2C\x0d\n    truncate\x2C\x0d\n    rm\x2C\x0d\n    rmdir\x2C\x0d\n    mkdir\x2C\x0d\n    readdir\x2C\x0d\n    readlink\x2C\x0d\n    symlink\x2C\x0d\n    lstat\x2C\x0d\n    stat\x2C\x0d\n    link\x2C\x0d\n    unlink\x2C\x0d\n    chmod\x2C\x0d\n    lchmod\x2C\x0d\n    lchown\x2C\x0d\n    chown\x2C\x0d\n    utimes\x2C\x0d\n    lutimes\x2C\x0d\n    realpath\x2C\x0d\n    mkdtemp\x2C\x0d\n    writeFile\x2C\x0d\n    appendFile\x2C\x0d\n    readFile\x2C\x0d\n    watch\x2C\x0d\n    constants\x2C\x0d\n  }\x2C\x0d\n\x0d\n  FileHandle\x2C\x0d\n  kRef\x2C\x0d\n  kUnref\x2C\x0d\n};\x0d\n
code-source-info,0x35a8d488aae,130,0,24252,C0O0C4O24252,,
code-creation,Function,10,202036,0x35a8d48b1fe,1682, node:internal/fs/promises:1:1,0x35a8d488a28,~
code-source-info,0x35a8d48b1fe
code-creation,Function,10,202182,0x35a8d48bbbe,27,<instance_members_initializer> node:internal/fs/promises:195:3,0x35a8d48a088,~
code-source-info,0x35a8d48bbbe,130,4461,5290,C0O4461C12O4469C26O5290,,
tick,0x7fffe053fab3,202205,1,0x7ff662e52230,3,0x7ff663796a40,0x21ab3644b9b,0x21ab36432e5,0x35a8d4875dd,0x21ab3644c63,0x21ab36432e5,0xc4d993026c,0x21ab3644c63,0x21ab36432e5,0xc4d992e18f,0x21ab3644c63,0x21ab36432e5,0xc4d99297cd,0x21ab3644c63,0x21ab36432e5,0xc4d9925444,0x3d28624f31e,0x3d28624a9d5
code-creation,Eval,10,202580,0x35a8d48e72e,5, node:internal/fs/rimraf:1:1,0x35a8d48e3c8,~
script-source,131,node:internal/fs/rimraf,// This file is a modified version of the rimraf module on npm. It has been\x0d\n// modified in the following ways:\x0d\n// - Use of the assert module has been replaced with core's error system.\x0d\n// - All code related to the glob dependency has been removed.\x0d\n// - Bring your own custom fs module is not currently supported.\x0d\n// - Some basic code cleanup.\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst fs = require('fs');\x0d\nconst {\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x0d\n} = fs;\x0d\nconst { sep } = require('path');\x0d\nconst { setTimeout } = require('timers');\x0d\nconst { sleep } = require('internal/util');\x0d\nconst notEmptyErrorCodes = new SafeSet(['ENOTEMPTY'\x2C 'EEXIST'\x2C 'EPERM']);\x0d\nconst retryErrorCodes = new SafeSet(\x0d\n  ['EBUSY'\x2C 'EMFILE'\x2C 'ENFILE'\x2C 'ENOTEMPTY'\x2C 'EPERM']);\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst epermHandler = isWindows ? fixWinEPERM : _rmdir;\x0d\nconst epermHandlerSync = isWindows ? fixWinEPERMSync : _rmdirSync;\x0d\nconst readdirEncoding = 'buffer';\x0d\nconst separator = Buffer.from(sep);\x0d\n\x0d\n\x0d\nfunction rimraf(path\x2C options\x2C callback) {\x0d\n  let retries = 0;\x0d\n\x0d\n  _rimraf(path\x2C options\x2C function CB(err) {\x0d\n    if (err) {\x0d\n      if (retryErrorCodes.has(err.code) && retries < options.maxRetries) {\x0d\n        retries++;\x0d\n        const delay = retries * options.retryDelay;\x0d\n        return setTimeout(_rimraf\x2C delay\x2C path\x2C options\x2C CB);\x0d\n      }\x0d\n\x0d\n      // The file is already gone.\x0d\n      if (err.code === 'ENOENT')\x0d\n        err = null;\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rimraf(path\x2C options\x2C callback) {\x0d\n  // SunOS lets the root user unlink directories. Use lstat here to make sure\x0d\n  // it's not a directory.\x0d\n  lstat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (err.code === 'ENOENT')\x0d\n        return callback(null);\x0d\n\x0d\n      // Windows can EPERM on stat.\x0d\n      if (isWindows && err.code === 'EPERM')\x0d\n        return fixWinEPERM(path\x2C options\x2C err\x2C callback);\x0d\n    } else if (stats.isDirectory()) {\x0d\n      return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n    }\x0d\n\x0d\n    unlink(path\x2C (err) => {\x0d\n      if (err) {\x0d\n        if (err.code === 'ENOENT')\x0d\n          return callback(null);\x0d\n        if (err.code === 'EISDIR')\x0d\n          return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n        if (err.code === 'EPERM') {\x0d\n          return epermHandler(path\x2C options\x2C err\x2C callback);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return callback(err);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERM(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  chmod(path\x2C 0o666\x2C (err) => {\x0d\n    if (err)\x0d\n      return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n    stat(path\x2C (err\x2C stats) => {\x0d\n      if (err)\x0d\n        return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n      if (stats.isDirectory())\x0d\n        _rmdir(path\x2C options\x2C originalErr\x2C callback);\x0d\n      else\x0d\n        unlink(path\x2C callback);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdir(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  rmdir(path\x2C (err) => {\x0d\n    if (err) {\x0d\n      if (notEmptyErrorCodes.has(err.code))\x0d\n        return _rmchildren(path\x2C options\x2C callback);\x0d\n      if (err.code === 'ENOTDIR')\x0d\n        return callback(originalErr);\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmchildren(path\x2C options\x2C callback) {\x0d\n  const pathBuf = Buffer.from(path);\x0d\n\x0d\n  readdir(pathBuf\x2C readdirEncoding\x2C (err\x2C files) => {\x0d\n    if (err)\x0d\n      return callback(err);\x0d\n\x0d\n    let numFiles = files.length;\x0d\n\x0d\n    if (numFiles === 0)\x0d\n      return rmdir(path\x2C callback);\x0d\n\x0d\n    let done = false;\x0d\n\x0d\n    ArrayPrototypeForEach(files\x2C (child) => {\x0d\n      const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n      rimraf(childPath\x2C options\x2C (err) => {\x0d\n        if (done)\x0d\n          return;\x0d\n\x0d\n        if (err) {\x0d\n          done = true;\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        numFiles--;\x0d\n        if (numFiles === 0)\x0d\n          rmdir(path\x2C callback);\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafPromises(path\x2C options) {\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    rimraf(path\x2C options\x2C (err) => {\x0d\n      if (err)\x0d\n        return reject(err);\x0d\n\x0d\n      resolve();\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafSync(path\x2C options) {\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = lstatSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    // Windows can EPERM on stat.\x0d\n    if (isWindows && err.code === 'EPERM')\x0d\n      fixWinEPERMSync(path\x2C options\x2C err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    // SunOS lets the root user unlink directories.\x0d\n    if (stats?.isDirectory())\x0d\n      _rmdirSync(path\x2C options\x2C null);\x0d\n    else\x0d\n      _unlinkSync(path\x2C options);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'EPERM')\x0d\n      return epermHandlerSync(path\x2C options\x2C err);\x0d\n    if (err.code !== 'EISDIR')\x0d\n      throw err;\x0d\n\x0d\n    _rmdirSync(path\x2C options\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _unlinkSync(path\x2C options) {\x0d\n  const tries = options.maxRetries + 1;\x0d\n\x0d\n  for (let i = 1; i <= tries; i++) {\x0d\n    try {\x0d\n      return unlinkSync(path);\x0d\n    } catch (err) {\x0d\n      // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n      // than zero\x2C and an error was encountered that warrants a retry.\x0d\n      if (retryErrorCodes.has(err.code) &&\x0d\n          i < tries &&\x0d\n          options.retryDelay > 0) {\x0d\n        sleep(i * options.retryDelay);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdirSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    rmdirSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'ENOTDIR')\x0d\n      throw originalErr;\x0d\n\x0d\n    if (notEmptyErrorCodes.has(err.code)) {\x0d\n      // Removing failed. Try removing all children and then retrying the\x0d\n      // original removal. Windows has a habit of not closing handles promptly\x0d\n      // when files are deleted\x2C resulting in spurious ENOTEMPTY failures. Work\x0d\n      // around that issue by retrying on Windows.\x0d\n      const pathBuf = Buffer.from(path);\x0d\n\x0d\n      ArrayPrototypeForEach(readdirSync(pathBuf\x2C readdirEncoding)\x2C (child) => {\x0d\n        const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n        rimrafSync(childPath\x2C options);\x0d\n      });\x0d\n\x0d\n      const tries = options.maxRetries + 1;\x0d\n\x0d\n      for (let i = 1; i <= tries; i++) {\x0d\n        try {\x0d\n          return fs.rmdirSync(path);\x0d\n        } catch (err) {\x0d\n          // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n          // than zero\x2C and an error was encountered that warrants a retry.\x0d\n          if (retryErrorCodes.has(err.code) &&\x0d\n              i < tries &&\x0d\n              options.retryDelay > 0) {\x0d\n            sleep(i * options.retryDelay);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERMSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    chmodSync(path\x2C 0o666);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = statSync(path\x2C { throwIfNoEntry: false });\x0d\n  } catch {\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  if (stats === undefined) return;\x0d\n\x0d\n  if (stats.isDirectory())\x0d\n    _rmdirSync(path\x2C options\x2C originalErr);\x0d\n  else\x0d\n    _unlinkSync(path\x2C options);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = { rimraf\x2C rimrafPromises\x2C rimrafSync };\x0d\n
code-source-info,0x35a8d48e72e,131,0,7392,C0O0C4O7392,,
code-creation,Function,10,202909,0x35a8d48ed2e,409, node:internal/fs/rimraf:1:1,0x35a8d48e6a8,~
code-source-info,0x35a8d48ed2e,131,0,7392,C0O0C139O377C145O403C151O415C156O464C159O464C164O453C170O495C173O495C177O495C179O671C182O522C188O532C194O546C200O556C206O570C212O582C218O598C224O608C230O622C236O631C242O644C248O655C254O692C257O692C262O684C267O733C270O733C275O718C281O771C284O771C289O761C295O825C302O825C307O825C309O897C316O897C321O897C323O994C330O1003C333O986C335O1038C345O1038C347O1098C357O1098C359O1165C361O1165C363O1194C366O1201C371O1201C376O1194C378O7334C385O7353C391O7361C397O7377C403O7349C408O7391,,
code-creation,LazyCompile,10,203135,0x35a8d48fbc6,188,from node:buffer:301:28,0xf28403af20,~
script-source,24,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMin\x2C\x0d\n  MathTrunc\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n  TypedArrayPrototypeGetByteLength\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  Uint8Array\x2C\x0d\n  Uint8ArrayPrototype\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  byteLengthUtf8\x2C\x0d\n  compare: _compare\x2C\x0d\n  compareOffset\x2C\x0d\n  createFromString\x2C\x0d\n  fill: bindingFill\x2C\x0d\n  indexOfBuffer\x2C\x0d\n  indexOfNumber\x2C\x0d\n  indexOfString\x2C\x0d\n  swap16: _swap16\x2C\x0d\n  swap32: _swap32\x2C\x0d\n  swap64: _swap64\x2C\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  getOwnNonIndexProperties\x2C\x0d\n  propertyFilter: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  kIsEncodingSymbol\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  inspect: utilInspect\x0d\n} = require('internal/util/inspect');\x0d\nconst { encodings } = internalBinding('string_decoder');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_BUFFER_SIZE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_UNKNOWN_ENCODING\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n  hideStackFrames\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateNumber\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n// Provide validateInteger() but with kMaxLength as the default maximum value.\x0d\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\x0d\n  validateInteger(value\x2C name\x2C min\x2C max);\x0d\n\x0d\nconst {\x0d\n  FastBuffer\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  createUnsafeBuffer\x0d\n} = require('internal/buffer');\x0d\n\x0d\nconst {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n} = require('internal/blob');\x0d\n\x0d\nFastBuffer.prototype.constructor = Buffer;\x0d\nBuffer.prototype = FastBuffer.prototype;\x0d\naddBufferPrototypeMethods(Buffer.prototype);\x0d\n\x0d\nconst constants = ObjectDefineProperties({}\x2C {\x0d\n  MAX_LENGTH: {\x0d\n    __proto__: null\x2C\x0d\n    value: kMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x2C\x0d\n  MAX_STRING_LENGTH: {\x0d\n    __proto__: null\x2C\x0d\n    value: kStringMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.poolSize = 8 * 1024;\x0d\nlet poolSize\x2C poolOffset\x2C allocPool;\x0d\n\x0d\nconst encodingsMap = ObjectCreate(null);\x0d\nfor (let i = 0; i < encodings.length; ++i)\x0d\n  encodingsMap[encodings[i]] = i;\x0d\n\x0d\nfunction createPool() {\x0d\n  poolSize = Buffer.poolSize;\x0d\n  allocPool = createUnsafeBuffer(poolSize).buffer;\x0d\n  markAsUntransferable(allocPool);\x0d\n  poolOffset = 0;\x0d\n}\x0d\ncreatePool();\x0d\n\x0d\nfunction alignPool() {\x0d\n  // Ensure aligned slices\x0d\n  if (poolOffset & 0x7) {\x0d\n    poolOffset |= 0x7;\x0d\n    poolOffset++;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet bufferWarningAlreadyEmitted = false;\x0d\nlet nodeModulesCheckCounter = 0;\x0d\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\x0d\n                      'issues. Please use the Buffer.alloc()\x2C ' +\x0d\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\x0d\n\x0d\nfunction showFlaggedDeprecation() {\x0d\n  if (bufferWarningAlreadyEmitted ||\x0d\n      ++nodeModulesCheckCounter > 10000 ||\x0d\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\x0d\n       isInsideNodeModules())) {\x0d\n    // We don't emit a warning\x2C because we either:\x0d\n    // - Already did so\x2C or\x0d\n    // - Already checked too many times whether a call is coming\x0d\n    //   from node_modules and want to stop slowing down things\x2C or\x0d\n    // - We aren't running with `--pending-deprecation` enabled\x2C\x0d\n    //   and the code is inside `node_modules`.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\x0d\n  bufferWarningAlreadyEmitted = true;\x0d\n}\x0d\n\x0d\nfunction toInteger(n\x2C defaultVal) {\x0d\n  n = +n;\x0d\n  if (!NumberIsNaN(n) &&\x0d\n      n >= NumberMIN_SAFE_INTEGER &&\x0d\n      n <= NumberMAX_SAFE_INTEGER) {\x0d\n    return ((n % 1) === 0 ? n : MathFloor(n));\x0d\n  }\x0d\n  return defaultVal;\x0d\n}\x0d\n\x0d\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (!isUint8Array(source))\x0d\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n  if (!isUint8Array(target))\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n\x0d\n  if (targetStart === undefined) {\x0d\n    targetStart = 0;\x0d\n  } else {\x0d\n    targetStart = toInteger(targetStart\x2C 0);\x0d\n    if (targetStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\x0d\n  }\x0d\n\x0d\n  if (sourceStart === undefined) {\x0d\n    sourceStart = 0;\x0d\n  } else {\x0d\n    sourceStart = toInteger(sourceStart\x2C 0);\x0d\n    if (sourceStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C '>= 0'\x2C sourceStart);\x0d\n  }\x0d\n\x0d\n  if (sourceEnd === undefined) {\x0d\n    sourceEnd = source.length;\x0d\n  } else {\x0d\n    sourceEnd = toInteger(sourceEnd\x2C 0);\x0d\n    if (sourceEnd < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\x0d\n  }\x0d\n\x0d\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\x0d\n    return 0;\x0d\n\x0d\n  if (sourceStart > source.length) {\x0d\n    throw new ERR_OUT_OF_RANGE('sourceStart'\x2C\x0d\n                               `<= ${source.length}`\x2C\x0d\n                               sourceStart);\x0d\n  }\x0d\n\x0d\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n}\x0d\n\x0d\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (sourceEnd - sourceStart > target.length - targetStart)\x0d\n    sourceEnd = sourceStart + target.length - targetStart;\x0d\n\x0d\n  let nb = sourceEnd - sourceStart;\x0d\n  const sourceLen = source.length - sourceStart;\x0d\n  if (nb > sourceLen)\x0d\n    nb = sourceLen;\x0d\n\x0d\n  if (sourceStart !== 0 || sourceEnd < source.length)\x0d\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\x0d\n\x0d\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\x0d\n\x0d\n  return nb;\x0d\n}\x0d\n\x0d\n/**\x0d\n * The Buffer() constructor is deprecated in documentation and should not be\x0d\n * used moving forward. Rather\x2C developers should use one of the three new\x0d\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\x0d\n * their specific needs. There is no runtime deprecation because of the extent\x0d\n * to which the Buffer constructor is used in the ecosystem currently -- a\x0d\n * runtime deprecation would introduce too much breakage at this time. It's not\x0d\n * likely that the Buffer constructors would ever actually be removed.\x0d\n * Deprecation Code: DEP0005\x0d\n */\x0d\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\x0d\n  showFlaggedDeprecation();\x0d\n  // Common case.\x0d\n  if (typeof arg === 'number') {\x0d\n    if (typeof encodingOrOffset === 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\x0d\n    }\x0d\n    return Buffer.alloc(arg);\x0d\n  }\x0d\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return FastBuffer; }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\x0d\n * if value is a number.\x0d\n * Buffer.from(str[\x2C encoding])\x0d\n * Buffer.from(array)\x0d\n * Buffer.from(buffer)\x0d\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\x0d\n */\x0d\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\x0d\n  if (typeof value === 'string')\x0d\n    return fromString(value\x2C encodingOrOffset);\x0d\n\x0d\n  if (typeof value === 'object' && value !== null) {\x0d\n    if (isAnyArrayBuffer(value))\x0d\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\x0d\n\x0d\n    const valueOf = value.valueOf && value.valueOf();\x0d\n    if (valueOf != null &&\x0d\n        valueOf !== value &&\x0d\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\x0d\n      return from(valueOf\x2C encodingOrOffset\x2C length);\x0d\n    }\x0d\n\x0d\n    const b = fromObject(value);\x0d\n    if (b)\x0d\n      return b;\x0d\n\x0d\n    if (typeof value[SymbolToPrimitive] === 'function') {\x0d\n      const primitive = value[SymbolToPrimitive]('string');\x0d\n      if (typeof primitive === 'string') {\x0d\n        return fromString(primitive\x2C encodingOrOffset);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'first argument'\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\x0d\n    value\x0d\n  );\x0d\n};\x0d\n\x0d\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\x0d\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\x0d\n// adding a `prototype` property and making the function a constructor.\x0d\n//\x0d\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\x0d\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\x0d\nconst of = (...items) => {\x0d\n  const newObj = createUnsafeBuffer(items.length);\x0d\n  for (let k = 0; k < items.length; k++)\x0d\n    newObj[k] = items[k];\x0d\n  return newObj;\x0d\n};\x0d\nBuffer.of = of;\x0d\n\x0d\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\x0d\n\x0d\n// The 'assertSize' method will remove itself from the callstack when an error\x0d\n// occurs. This is done simply to keep the internal details of the\x0d\n// implementation from bleeding out to users.\x0d\nconst assertSize = hideStackFrames((size) => {\x0d\n  validateNumber(size\x2C 'size');\x0d\n  if (!(size >= 0 && size <= kMaxLength)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE.RangeError('size'\x2C size);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Creates a new filled Buffer instance.\x0d\n * alloc(size[\x2C fill[\x2C encoding]])\x0d\n */\x0d\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\x0d\n  assertSize(size);\x0d\n  if (fill !== undefined && fill !== 0 && size > 0) {\x0d\n    const buf = createUnsafeBuffer(size);\x0d\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\x0d\n  }\x0d\n  return new FastBuffer(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\x0d\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafe = function allocUnsafe(size) {\x0d\n  assertSize(size);\x0d\n  return allocate(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\x0d\n * Buffer instance that is not allocated off the pre-initialized pool.\x0d\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\x0d\n  assertSize(size);\x0d\n  return createUnsafeBuffer(size);\x0d\n};\x0d\n\x0d\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\x0d\n// buffer is returned.\x0d\nfunction SlowBuffer(length) {\x0d\n  assertSize(length);\x0d\n  return createUnsafeBuffer(length);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\x0d\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\x0d\n\x0d\nfunction allocate(size) {\x0d\n  if (size <= 0) {\x0d\n    return new FastBuffer();\x0d\n  }\x0d\n  if (size < (Buffer.poolSize >>> 1)) {\x0d\n    if (size > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\x0d\n    poolOffset += size;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return createUnsafeBuffer(size);\x0d\n}\x0d\n\x0d\nfunction fromStringFast(string\x2C ops) {\x0d\n  const length = ops.byteLength(string);\x0d\n\x0d\n  if (length >= (Buffer.poolSize >>> 1))\x0d\n    return createFromString(string\x2C ops.encodingVal);\x0d\n\x0d\n  if (length > (poolSize - poolOffset))\x0d\n    createPool();\x0d\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\x0d\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\x0d\n  if (actual !== length) {\x0d\n    // byteLength() may overestimate. That's a rare case\x2C though.\x0d\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\x0d\n  }\x0d\n  poolOffset += actual;\x0d\n  alignPool();\x0d\n  return b;\x0d\n}\x0d\n\x0d\nfunction fromString(string\x2C encoding) {\x0d\n  let ops;\x0d\n  if (typeof encoding !== 'string' || encoding.length === 0) {\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n    ops = encodingOps.utf8;\x0d\n    encoding = undefined;\x0d\n  } else {\x0d\n    ops = getEncodingOps(encoding);\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n  }\x0d\n  return fromStringFast(string\x2C ops);\x0d\n}\x0d\n\x0d\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\x0d\n  // Convert byteOffset to integer\x0d\n  if (byteOffset === undefined) {\x0d\n    byteOffset = 0;\x0d\n  } else {\x0d\n    byteOffset = +byteOffset;\x0d\n    if (NumberIsNaN(byteOffset))\x0d\n      byteOffset = 0;\x0d\n  }\x0d\n\x0d\n  const maxLength = obj.byteLength - byteOffset;\x0d\n\x0d\n  if (maxLength < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = maxLength;\x0d\n  } else {\x0d\n    // Convert length to non-negative integer.\x0d\n    length = +length;\x0d\n    if (length > 0) {\x0d\n      if (length > maxLength)\x0d\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n    } else {\x0d\n      length = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\x0d\n}\x0d\n\x0d\nfunction fromArrayLike(obj) {\x0d\n  if (obj.length <= 0)\x0d\n    return new FastBuffer();\x0d\n  if (obj.length < (Buffer.poolSize >>> 1)) {\x0d\n    if (obj.length > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\x0d\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\x0d\n    poolOffset += obj.length;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return new FastBuffer(obj);\x0d\n}\x0d\n\x0d\nfunction fromObject(obj) {\x0d\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\x0d\n    if (typeof obj.length !== 'number') {\x0d\n      return new FastBuffer();\x0d\n    }\x0d\n    return fromArrayLike(obj);\x0d\n  }\x0d\n\x0d\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\x0d\n    return fromArrayLike(obj.data);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Static methods\x0d\n\x0d\nBuffer.isBuffer = function isBuffer(b) {\x0d\n  return b instanceof Buffer;\x0d\n};\x0d\n\x0d\nBuffer.compare = function compare(buf1\x2C buf2) {\x0d\n  if (!isUint8Array(buf1)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\x0d\n  }\x0d\n\x0d\n  if (!isUint8Array(buf2)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\x0d\n  }\x0d\n\x0d\n  if (buf1 === buf2) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  return _compare(buf1\x2C buf2);\x0d\n};\x0d\n\x0d\nBuffer.isEncoding = function isEncoding(encoding) {\x0d\n  return typeof encoding === 'string' && encoding.length !== 0 &&\x0d\n         normalizeEncoding(encoding) !== undefined;\x0d\n};\x0d\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\x0d\n\x0d\nBuffer.concat = function concat(list\x2C length) {\x0d\n  validateArray(list\x2C 'list');\x0d\n\x0d\n  if (list.length === 0)\x0d\n    return new FastBuffer();\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = 0;\x0d\n    for (let i = 0; i < list.length; i++) {\x0d\n      if (list[i].length) {\x0d\n        length += list[i].length;\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    validateOffset(length\x2C 'length');\x0d\n  }\x0d\n\x0d\n  const buffer = Buffer.allocUnsafe(length);\x0d\n  let pos = 0;\x0d\n  for (let i = 0; i < list.length; i++) {\x0d\n    const buf = list[i];\x0d\n    if (!isUint8Array(buf)) {\x0d\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\x0d\n      // Instead\x2C find the proper error code for this.\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\x0d\n    }\x0d\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\x0d\n  }\x0d\n\x0d\n  // Note: `length` is always equal to `buffer.length` at this point\x0d\n  if (pos < length) {\x0d\n    // Zero-fill the remaining bytes if the specified `length` was more than\x0d\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\x0d\n    // there were not initialized.\x0d\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\x0d\n  }\x0d\n\x0d\n  return buffer;\x0d\n};\x0d\n\x0d\nfunction base64ByteLength(str\x2C bytes) {\x0d\n  // Handle padding\x0d\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n\x0d\n  // Base64 ratio: 3/4\x0d\n  return (bytes * 3) >>> 2;\x0d\n}\x0d\n\x0d\nconst encodingOps = {\x0d\n  utf8: {\x0d\n    encoding: 'utf8'\x2C\x0d\n    encodingVal: encodingsMap.utf8\x2C\x0d\n    byteLength: byteLengthUtf8\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\x0d\n  }\x2C\x0d\n  ucs2: {\x0d\n    encoding: 'ucs2'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  utf16le: {\x0d\n    encoding: 'utf16le'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  latin1: {\x0d\n    encoding: 'latin1'\x2C\x0d\n    encodingVal: encodingsMap.latin1\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\x0d\n  }\x2C\x0d\n  ascii: {\x0d\n    encoding: 'ascii'\x2C\x0d\n    encodingVal: encodingsMap.ascii\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.ascii\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64: {\x0d\n    encoding: 'base64'\x2C\x0d\n    encodingVal: encodingsMap.base64\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64url: {\x0d\n    encoding: 'base64url'\x2C\x0d\n    encodingVal: encodingsMap.base64url\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) =>\x0d\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64url\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  hex: {\x0d\n    encoding: 'hex'\x2C\x0d\n    encodingVal: encodingsMap.hex\x2C\x0d\n    byteLength: (string) => string.length >>> 1\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.hex\x2C\x0d\n                    dir)\x0d\n  }\x0d\n};\x0d\nfunction getEncodingOps(encoding) {\x0d\n  encoding += '';\x0d\n  switch (encoding.length) {\x0d\n    case 4:\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 5:\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 7:\x0d\n      if (encoding === 'utf16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 8:\x0d\n      if (encoding === 'utf-16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 6:\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      break;\x0d\n    case 3:\x0d\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\x0d\n        return encodingOps.hex;\x0d\n      break;\x0d\n    case 9:\x0d\n      if (encoding === 'base64url' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'base64url')\x0d\n        return encodingOps.base64url;\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction byteLength(string\x2C encoding) {\x0d\n  if (typeof string !== 'string') {\x0d\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\x0d\n      return string.byteLength;\x0d\n    }\x0d\n\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\x0d\n    );\x0d\n  }\x0d\n\x0d\n  const len = string.length;\x0d\n  const mustMatch = (arguments.length > 2 && arguments[2] === true);\x0d\n  if (!mustMatch && len === 0)\x0d\n    return 0;\x0d\n\x0d\n  if (!encoding)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n  return ops.byteLength(string);\x0d\n}\x0d\n\x0d\nBuffer.byteLength = byteLength;\x0d\n\x0d\n// For backwards compatibility.\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.buffer;\x0d\n  }\x0d\n});\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.byteOffset;\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.prototype.copy =\x0d\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n  };\x0d\n\x0d\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\x0d\n// property of a typed array.\x0d\n// This behaves neither like String nor Uint8Array in that we set start/end\x0d\n// to their upper/lower bounds if the value passed is out of range.\x0d\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\x0d\n  if (arguments.length === 0) {\x0d\n    return this.utf8Slice(0\x2C this.length);\x0d\n  }\x0d\n\x0d\n  const len = this.length;\x0d\n\x0d\n  if (start <= 0)\x0d\n    start = 0;\x0d\n  else if (start >= len)\x0d\n    return '';\x0d\n  else\x0d\n    start |= 0;\x0d\n\x0d\n  if (end === undefined || end > len)\x0d\n    end = len;\x0d\n  else\x0d\n    end |= 0;\x0d\n\x0d\n  if (end <= start)\x0d\n    return '';\x0d\n\x0d\n  if (encoding === undefined)\x0d\n    return this.utf8Slice(start\x2C end);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n\x0d\n  return ops.slice(this\x2C start\x2C end);\x0d\n};\x0d\n\x0d\nBuffer.prototype.equals = function equals(otherBuffer) {\x0d\n  if (!isUint8Array(otherBuffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\x0d\n  }\x0d\n\x0d\n  if (this === otherBuffer)\x0d\n    return true;\x0d\n\x0d\n  if (this.byteLength !== otherBuffer.byteLength)\x0d\n    return false;\x0d\n\x0d\n  return this.byteLength === 0 || _compare(this\x2C otherBuffer) === 0;\x0d\n};\x0d\n\x0d\nlet INSPECT_MAX_BYTES = 50;\x0d\n// Override how buffers are presented by util.inspect().\x0d\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\x0d\n  const max = INSPECT_MAX_BYTES;\x0d\n  const actualMax = MathMin(max\x2C this.length);\x0d\n  const remaining = this.length - max;\x0d\n  let str = StringPrototypeTrim(RegExpPrototypeSymbolReplace(\x0d\n    /(.{2})/g\x2C this.hexSlice(0\x2C actualMax)\x2C '$1 '));\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  // Inspect special properties as well\x2C if possible.\x0d\n  if (ctx) {\x0d\n    let extras = false;\x0d\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n    const obj = ObjectCreate(null);\x0d\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\x0d\n                          (key) => {\x0d\n                            extras = true;\x0d\n                            obj[key] = this[key];\x0d\n                          });\x0d\n    if (extras) {\x0d\n      if (this.length !== 0)\x0d\n        str += '\x2C ';\x0d\n      // '[Object: null prototype] {'.length === 26\x0d\n      // This is guarded with a test.\x0d\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\x0d\n        ...ctx\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        compact: true\x0d\n      })\x2C 27\x2C -2);\x0d\n    }\x0d\n  }\x0d\n  return `<${this.constructor.name} ${str}>`;\x0d\n};\x0d\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\x0d\n\x0d\nBuffer.prototype.compare = function compare(target\x2C\x0d\n                                            targetStart\x2C\x0d\n                                            targetEnd\x2C\x0d\n                                            sourceStart\x2C\x0d\n                                            sourceEnd) {\x0d\n  if (!isUint8Array(target)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n  }\x0d\n  if (arguments.length === 1)\x0d\n    return _compare(this\x2C target);\x0d\n\x0d\n  if (targetStart === undefined)\x0d\n    targetStart = 0;\x0d\n  else\x0d\n    validateOffset(targetStart\x2C 'targetStart');\x0d\n\x0d\n  if (targetEnd === undefined)\x0d\n    targetEnd = target.length;\x0d\n  else\x0d\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\x0d\n\x0d\n  if (sourceStart === undefined)\x0d\n    sourceStart = 0;\x0d\n  else\x0d\n    validateOffset(sourceStart\x2C 'sourceStart');\x0d\n\x0d\n  if (sourceEnd === undefined)\x0d\n    sourceEnd = this.length;\x0d\n  else\x0d\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\x0d\n\x0d\n  if (sourceStart >= sourceEnd)\x0d\n    return (targetStart >= targetEnd ? 0 : -1);\x0d\n  if (targetStart >= targetEnd)\x0d\n    return 1;\x0d\n\x0d\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\x0d\n                       sourceEnd);\x0d\n};\x0d\n\x0d\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\x0d\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\x0d\n//\x0d\n// Arguments:\x0d\n// - buffer - a Buffer to search\x0d\n// - val - a string\x2C Buffer\x2C or number\x0d\n// - byteOffset - an index into `buffer`; will be clamped to an int32\x0d\n// - encoding - an optional encoding\x2C relevant if val is a string\x0d\n// - dir - true for indexOf\x2C false for lastIndexOf\x0d\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (typeof byteOffset === 'string') {\x0d\n    encoding = byteOffset;\x0d\n    byteOffset = undefined;\x0d\n  } else if (byteOffset > 0x7fffffff) {\x0d\n    byteOffset = 0x7fffffff;\x0d\n  } else if (byteOffset < -0x80000000) {\x0d\n    byteOffset = -0x80000000;\x0d\n  }\x0d\n  // Coerce to Number. Values like null and [] become 0.\x0d\n  byteOffset = +byteOffset;\x0d\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\x0d\n  if (NumberIsNaN(byteOffset)) {\x0d\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\x0d\n  }\x0d\n  dir = !!dir;  // Cast to bool.\x0d\n\x0d\n  if (typeof val === 'number')\x0d\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\x0d\n\x0d\n  let ops;\x0d\n  if (encoding === undefined)\x0d\n    ops = encodingOps.utf8;\x0d\n  else\x0d\n    ops = getEncodingOps(encoding);\x0d\n\x0d\n  if (typeof val === 'string') {\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(val)) {\x0d\n    const encodingVal =\x0d\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\x0d\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\x0d\n  );\x0d\n}\x0d\n\x0d\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\x0d\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\x0d\n};\x0d\n\x0d\n// Usage:\x0d\n//    buffer.fill(number[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\x0d\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\x0d\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n};\x0d\n\x0d\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\x0d\n  if (typeof value === 'string') {\x0d\n    if (offset === undefined || typeof offset === 'string') {\x0d\n      encoding = offset;\x0d\n      offset = 0;\x0d\n      end = buf.length;\x0d\n    } else if (typeof end === 'string') {\x0d\n      encoding = end;\x0d\n      end = buf.length;\x0d\n    }\x0d\n\x0d\n    const normalizedEncoding = normalizeEncoding(encoding);\x0d\n    if (normalizedEncoding === undefined) {\x0d\n      validateString(encoding\x2C 'encoding');\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    }\x0d\n\x0d\n    if (value.length === 0) {\x0d\n      // If value === '' default to zero.\x0d\n      value = 0;\x0d\n    } else if (value.length === 1) {\x0d\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\x0d\n      if (normalizedEncoding === 'utf8') {\x0d\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n        if (code < 128) {\x0d\n          value = code;\x0d\n        }\x0d\n      } else if (normalizedEncoding === 'latin1') {\x0d\n        value = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    encoding = undefined;\x0d\n  }\x0d\n\x0d\n  if (offset === undefined) {\x0d\n    offset = 0;\x0d\n    end = buf.length;\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset');\x0d\n    // Invalid ranges are not set to a default\x2C so can range check early.\x0d\n    if (end === undefined) {\x0d\n      end = buf.length;\x0d\n    } else {\x0d\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\x0d\n    }\x0d\n    if (offset >= end)\x0d\n      return buf;\x0d\n  }\x0d\n\x0d\n\x0d\n  if (typeof value === 'number') {\x0d\n    // OOB check\x0d\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\x0d\n    const fillLength = end - offset;\x0d\n    if (offset > end || fillLength + offset > byteLen)\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\x0d\n  } else {\x0d\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n    if (res < 0) {\x0d\n      if (res === -1)\x0d\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return buf;\x0d\n}\x0d\n\x0d\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\x0d\n  // Buffer#write(string);\x0d\n  if (offset === undefined) {\x0d\n    return this.utf8Write(string\x2C 0\x2C this.length);\x0d\n  }\x0d\n  // Buffer#write(string\x2C encoding)\x0d\n  if (length === undefined && typeof offset === 'string') {\x0d\n    encoding = offset;\x0d\n    length = this.length;\x0d\n    offset = 0;\x0d\n\x0d\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\x0d\n\x0d\n    const remaining = this.length - offset;\x0d\n\x0d\n    if (length === undefined) {\x0d\n      length = remaining;\x0d\n    } else if (typeof length === 'string') {\x0d\n      encoding = length;\x0d\n      length = remaining;\x0d\n    } else {\x0d\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\x0d\n      if (length > remaining)\x0d\n        length = remaining;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!encoding)\x0d\n    return this.utf8Write(string\x2C offset\x2C length);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  return ops.write(this\x2C string\x2C offset\x2C length);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toJSON = function toJSON() {\x0d\n  if (this.length > 0) {\x0d\n    const data = new Array(this.length);\x0d\n    for (let i = 0; i < this.length; ++i)\x0d\n      data[i] = this[i];\x0d\n    return { type: 'Buffer'\x2C data };\x0d\n  }\x0d\n  return { type: 'Buffer'\x2C data: [] };\x0d\n};\x0d\n\x0d\nfunction adjustOffset(offset\x2C length) {\x0d\n  // Use Math.trunc() to convert offset to an integer value that can be larger\x0d\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\x0d\n  offset = MathTrunc(offset);\x0d\n  if (offset === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n  if (offset < 0) {\x0d\n    offset += length;\x0d\n    return offset > 0 ? offset : 0;\x0d\n  }\x0d\n  if (offset < length) {\x0d\n    return offset;\x0d\n  }\x0d\n  return NumberIsNaN(offset) ? 0 : length;\x0d\n}\x0d\n\x0d\nBuffer.prototype.subarray = function subarray(start\x2C end) {\x0d\n  const srcLength = this.length;\x0d\n  start = adjustOffset(start\x2C srcLength);\x0d\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\x0d\n  const newLength = end > start ? end - start : 0;\x0d\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\x0d\n};\x0d\n\x0d\nBuffer.prototype.slice = function slice(start\x2C end) {\x0d\n  return this.subarray(start\x2C end);\x0d\n};\x0d\n\x0d\nfunction swap(b\x2C n\x2C m) {\x0d\n  const i = b[n];\x0d\n  b[n] = b[m];\x0d\n  b[m] = i;\x0d\n}\x0d\n\x0d\nBuffer.prototype.swap16 = function swap16() {\x0d\n  // For Buffer.length < 128\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 2 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\x0d\n  if (len < 128) {\x0d\n    for (let i = 0; i < len; i += 2)\x0d\n      swap(this\x2C i\x2C i + 1);\x0d\n    return this;\x0d\n  }\x0d\n  return _swap16(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap32 = function swap32() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 4 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 4) {\x0d\n      swap(this\x2C i\x2C i + 3);\x0d\n      swap(this\x2C i + 1\x2C i + 2);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap32(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap64 = function swap64() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 8 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 8) {\x0d\n      swap(this\x2C i\x2C i + 7);\x0d\n      swap(this\x2C i + 1\x2C i + 6);\x0d\n      swap(this\x2C i + 2\x2C i + 5);\x0d\n      swap(this\x2C i + 3\x2C i + 4);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap64(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\x0d\n\x0d\nlet transcode;\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const {\x0d\n    icuErrName\x2C\x0d\n    transcode: _transcode\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\x0d\n  // Buffer instance.\x0d\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\x0d\n    if (!isUint8Array(source)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\x0d\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n    }\x0d\n    if (source.length === 0) return Buffer.alloc(0);\x0d\n\x0d\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\x0d\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\x0d\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\x0d\n    if (typeof result !== 'number')\x0d\n      return result;\x0d\n\x0d\n    const code = icuErrName(result);\x0d\n    const err = genericNodeError(\x0d\n      `Unable to transcode Buffer [${code}]`\x2C\x0d\n      { code: code\x2C errno: result }\x0d\n    );\x0d\n    throw err;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction btoa(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (input[n].charCodeAt(0) > 0xff)\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  const buf = Buffer.from(input\x2C 'latin1');\x0d\n  return buf.toString('base64');\x0d\n}\x0d\n\x0d\n// Refs: https://infra.spec.whatwg.org/#forgiving-base64-decode\x0d\nconst kForgivingBase64AllowedChars = [\x0d\n  // ASCII whitespace\x0d\n  // Refs: https://infra.spec.whatwg.org/#ascii-whitespace\x0d\n  0x09\x2C 0x0A\x2C 0x0C\x2C 0x0D\x2C 0x20\x2C\x0d\n\x0d\n  // Uppercase letters\x0d\n  ...ArrayFrom({ length: 26 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('A') + i)\x2C\x0d\n\x0d\n  // Lowercase letters\x0d\n  ...ArrayFrom({ length: 26 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('a') + i)\x2C\x0d\n\x0d\n  // Decimal digits\x0d\n  ...ArrayFrom({ length: 10 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('0') + i)\x2C\x0d\n\x0d\n  0x2B\x2C // +\x0d\n  0x2F\x2C // /\x0d\n  0x3D\x2C // =\x0d\n];\x0d\n\x0d\nfunction atob(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (!ArrayPrototypeIncludes(kForgivingBase64AllowedChars\x2C\x0d\n                                StringPrototypeCharCodeAt(input\x2C n)))\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  return Buffer.from(input\x2C 'base64').toString('latin1');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n  Buffer\x2C\x0d\n  SlowBuffer\x2C\x0d\n  transcode\x2C\x0d\n  // Legacy\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x2C\x0d\n  btoa\x2C\x0d\n  atob\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  constants: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  INSPECT_MAX_BYTES: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() { return INSPECT_MAX_BYTES; }\x2C\x0d\n    set(val) { INSPECT_MAX_BYTES = val; }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x35a8d48fbc6,24,8846,9829,C3O8885C9O8921C12O8928C17O8964C18O8970C28O9026C33O9030C39O9062C51O9069C56O9118C57O9148C63O9165C68O9165C73O9181C78O9221C95O9314C104O9321C109O9361C110O9386C113O9386C118O9410C120O9424C122O9433C123O9441C125O9458C127O9457C134O9520C136O9526C138O9525C145O9544C151O9563C155O9609C158O9616C163O9656C164O9683C182O9689C187O9683,,
code-creation,LazyCompile,10,204710,0x35a8d4926ce,110,fromString node:buffer:437:20,0xf28403b308,~
code-source-info,0x35a8d4926ce,24,13033,13482,C0O13061C2O13069C8O13114C14O13121C19O13146C25O13153C30O13167C35O13174C40O13191C41O13197C46O13215C51O13226C56O13265C59O13271C64O13302C66O13332C73O13338C78O13332C79O13390C85O13397C90O13411C95O13418C100O13435C101O13444C104O13451C109O13479,,
code-creation,LazyCompile,10,204791,0x35a8d492886,177,fromStringFast node:buffer:418:24,0xf28403b268,~
code-source-info,0x35a8d492886,24,12470,13010,C0O12508C5O12508C11O12533C14O12555C18O12564C21O12544C26O12577C31O12613C36O12584C41O12626C42O12632C44O12646C49O12657C51O12655C54O12643C59O12675C62O12675C65O12700C72O12715C77O12726C85O12700C91O12769C110O12769C116O12801C118O12812C123O12898C130O12917C135O12928C143O12902C149O12957C156O12971C162O12968C168O12982C171O12982C174O12998C176O13007,,
code-creation,LazyCompile,10,204850,0x35a8d492a76,36,FastBuffer node:internal/buffer:958:14,0x233c000bb00,~
code-source-info,0x35a8d492a76,25,27321,27412,C3O27365C7O27399C20O27365C35O27411,,
code-creation,LazyCompile,10,204882,0x35a8d492b76,23,write node:buffer:598:12,0xf28403b678,~
code-source-info,0x35a8d492b76,24,17262,17326,C0O17296C17O17296C22O17326,,
code-creation,LazyCompile,10,204919,0x35a8d492c66,42,alignPool node:buffer:163:19,0xf28403aca0,~
code-source-info,0x35a8d492c66,24,4281,4391,C0O4317C4O4332C9O4346C19O4357C25O4370C34O4380C41O4390,,
code-creation,LazyCompile,10,205034,0x35a8d493026,251,promisify node:internal/util:324:19,0xf284006368,~
code-source-info,0x35a8d493026,15,9196,10795,C0O9196C17O9260C25O9301C33O9325C38O9304C55O9363C68O9363C73O9408C80O9421C82O9420C87O9466C94O9475C96O9474C100O9509C110O9509C115O9563C126O9595C136O9661C143O9570C148O9728C149O9896C156O9905C158O9904C161O9896C163O10481C174O10506C180O10506C185O10481C190O10544C201O10569C211O10631C218O10544C223O10700C234O10745C240O10745C245O10707C250O10792,,
code-creation,LazyCompile,10,205192,0x35a8d4935d6,65,EventEmitterMixin node:internal/event_target:1020:27,0x3a93d9deb70,~
script-source,44,node:internal/event_target,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SafeWeakSet\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_EVENT_RECURSION\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { validateObject\x2C validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst kIsEventTarget = SymbolFor('nodejs.event_target');\x0d\nconst kIsNodeEventTarget = Symbol('kIsNodeEventTarget');\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  kMaxEventTargetListeners\x2C\x0d\n  kMaxEventTargetListenersWarned\x2C\x0d\n} = EventEmitter;\x0d\n\x0d\nconst kEvents = Symbol('kEvents');\x0d\nconst kIsBeingDispatched = Symbol('kIsBeingDispatched');\x0d\nconst kStop = Symbol('kStop');\x0d\nconst kTarget = Symbol('kTarget');\x0d\nconst kHandlers = Symbol('khandlers');\x0d\nconst kWeakHandler = Symbol('kWeak');\x0d\n\x0d\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\x0d\nconst kCreateEvent = Symbol('kCreateEvent');\x0d\nconst kNewListener = Symbol('kNewListener');\x0d\nconst kRemoveListener = Symbol('kRemoveListener');\x0d\nconst kIsNodeStyleListener = Symbol('kIsNodeStyleListener');\x0d\nconst kTrustEvent = Symbol('kTrustEvent');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\n// TODO(joyeecheung): V8 snapshot does not support instance member\x0d\n// initializers for now:\x0d\n// https://bugs.chromium.org/p/v8/issues/detail?id=10704\x0d\nconst kType = Symbol('type');\x0d\nconst kDefaultPrevented = Symbol('defaultPrevented');\x0d\nconst kCancelable = Symbol('cancelable');\x0d\nconst kTimestamp = Symbol('timestamp');\x0d\nconst kBubbles = Symbol('bubbles');\x0d\nconst kComposed = Symbol('composed');\x0d\nconst kPropagationStopped = Symbol('propagationStopped');\x0d\nconst kDetail = Symbol('detail');\x0d\n\x0d\nconst isTrustedSet = new SafeWeakSet();\x0d\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\x0d\n  get isTrusted() {\x0d\n    return isTrustedSet.has(this);\x0d\n  }\x0d\n}\x2C 'isTrusted').get;\x0d\n\x0d\nfunction isEvent(value) {\x0d\n  return typeof value?.[kType] === 'string';\x0d\n}\x0d\n\x0d\nclass Event {\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {{\x0d\n   *   bubbles?: boolean\x2C\x0d\n   *   cancelable?: boolean\x2C\x0d\n   *   composed?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  constructor(type\x2C options = kEmptyObject) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    validateObject(options\x2C 'options');\x0d\n    const { bubbles\x2C cancelable\x2C composed } = options;\x0d\n    this[kCancelable] = !!cancelable;\x0d\n    this[kBubbles] = !!bubbles;\x0d\n    this[kComposed] = !!composed;\x0d\n\x0d\n    this[kType] = `${type}`;\x0d\n    this[kDefaultPrevented] = false;\x0d\n    this[kTimestamp] = now();\x0d\n    this[kPropagationStopped] = false;\x0d\n    if (options?.[kTrustEvent]) {\x0d\n      isTrustedSet.add(this);\x0d\n    }\x0d\n\x0d\n    // isTrusted is special (LegacyUnforgeable)\x0d\n    ObjectDefineProperty(this\x2C 'isTrusted'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      get: isTrusted\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: false\x0d\n    });\x0d\n    this[kTarget] = null;\x0d\n    this[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({\x0d\n      type: this[kType]\x2C\x0d\n      defaultPrevented: this[kDefaultPrevented]\x2C\x0d\n      cancelable: this[kCancelable]\x2C\x0d\n      timeStamp: this[kTimestamp]\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  stopImmediatePropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kStop] = true;\x0d\n  }\x0d\n\x0d\n  preventDefault() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kDefaultPrevented] = true;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get target() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get currentTarget() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get srcElement() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {string}\x0d\n   */\x0d\n  get type() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kType];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelable() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get defaultPrevented() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable] && this[kDefaultPrevented];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get timeStamp() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTimestamp];\x0d\n  }\x0d\n\x0d\n\x0d\n  // The following are non-op and unused properties/methods from Web API Event.\x0d\n  // These are not supported in Node.js and are provided purely for\x0d\n  // API completeness.\x0d\n  /**\x0d\n   * @returns {EventTarget[]}\x0d\n   */\x0d\n  composedPath() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? [this[kTarget]] : [];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get returnValue() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return !this.defaultPrevented;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get bubbles() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kBubbles];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get composed() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kComposed];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get eventPhase() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? Event.AT_TARGET : Event.NONE;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelBubble() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kPropagationStopped];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  set cancelBubble(value) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    if (value) {\x0d\n      this.stopPropagation();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  stopPropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kPropagationStopped] = true;\x0d\n  }\x0d\n\x0d\n  static NONE = 0;\x0d\n  static CAPTURING_PHASE = 1;\x0d\n  static AT_TARGET = 2;\x0d\n  static BUBBLING_PHASE = 3;\x0d\n}\x0d\n\x0d\nObjectDefineProperties(\x0d\n  Event.prototype\x2C {\x0d\n    [SymbolToStringTag]: {\x0d\n      __proto__: null\x2C\x0d\n      writable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: 'Event'\x2C\x0d\n    }\x2C\x0d\n    stopImmediatePropagation: kEnumerableProperty\x2C\x0d\n    preventDefault: kEnumerableProperty\x2C\x0d\n    target: kEnumerableProperty\x2C\x0d\n    currentTarget: kEnumerableProperty\x2C\x0d\n    srcElement: kEnumerableProperty\x2C\x0d\n    type: kEnumerableProperty\x2C\x0d\n    cancelable: kEnumerableProperty\x2C\x0d\n    defaultPrevented: kEnumerableProperty\x2C\x0d\n    timeStamp: kEnumerableProperty\x2C\x0d\n    composedPath: kEnumerableProperty\x2C\x0d\n    returnValue: kEnumerableProperty\x2C\x0d\n    bubbles: kEnumerableProperty\x2C\x0d\n    composed: kEnumerableProperty\x2C\x0d\n    eventPhase: kEnumerableProperty\x2C\x0d\n    cancelBubble: kEnumerableProperty\x2C\x0d\n    stopPropagation: kEnumerableProperty\x2C\x0d\n  });\x0d\n\x0d\nfunction isCustomEvent(value) {\x0d\n  return isEvent(value) && (value?.[kDetail] !== undefined);\x0d\n}\x0d\n\x0d\nclass CustomEvent extends Event {\x0d\n  /**\x0d\n   * @constructor\x0d\n   * @param {string} type\x0d\n   * @param {{\x0d\n   *   bubbles?: boolean\x2C\x0d\n   *   cancelable?: boolean\x2C\x0d\n   *   composed?: boolean\x2C\x0d\n   *   detail?: any\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  constructor(type\x2C options = kEmptyObject) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    super(type\x2C options);\x0d\n    this[kDetail] = options?.detail ?? null;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {any}\x0d\n   */\x0d\n  get detail() {\x0d\n    if (!isCustomEvent(this))\x0d\n      throw new ERR_INVALID_THIS('CustomEvent');\x0d\n    return this[kDetail];\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(CustomEvent.prototype\x2C {\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'CustomEvent'\x2C\x0d\n  }\x2C\x0d\n  detail: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nclass NodeCustomEvent extends Event {\x0d\n  constructor(type\x2C options) {\x0d\n    super(type\x2C options);\x0d\n    if (options?.detail) {\x0d\n      this.detail = options.detail;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Weak listener cleanup\x0d\n// This has to be lazy for snapshots to work\x0d\nlet weakListenersState = null;\x0d\n// The resource needs to retain the callback so that it doesn't\x0d\n// get garbage collected now that it's weak.\x0d\nlet objectToWeakListenerMap = null;\x0d\nfunction weakListeners() {\x0d\n  weakListenersState ??= new SafeFinalizationRegistry(\x0d\n    (listener) => listener.remove()\x0d\n  );\x0d\n  objectToWeakListenerMap ??= new SafeWeakMap();\x0d\n  return { registry: weakListenersState\x2C map: objectToWeakListenerMap };\x0d\n}\x0d\n\x0d\n// The listeners for an EventTarget are maintained as a linked list.\x0d\n// Unfortunately\x2C the way EventTarget is defined\x2C listeners are accounted\x0d\n// using the tuple [handler\x2Ccapture]\x2C and even if we don't actually make\x0d\n// use of capture or bubbling\x2C in order to be spec compliant we have to\x0d\n// take on the additional complexity of supporting it. Fortunately\x2C using\x0d\n// the linked list makes dispatching faster\x2C even if adding/removing is\x0d\n// slower.\x0d\nclass Listener {\x0d\n  constructor(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n              isNodeStyleListener\x2C weak) {\x0d\n    this.next = undefined;\x0d\n    if (previous !== undefined)\x0d\n      previous.next = this;\x0d\n    this.previous = previous;\x0d\n    this.listener = listener;\x0d\n    // TODO(benjamingr) these 4 can be 'flags' to save 3 slots\x0d\n    this.once = once;\x0d\n    this.capture = capture;\x0d\n    this.passive = passive;\x0d\n    this.isNodeStyleListener = isNodeStyleListener;\x0d\n    this.removed = false;\x0d\n    this.weak = Boolean(weak); // Don't retain the object\x0d\n\x0d\n    if (this.weak) {\x0d\n      this.callback = new SafeWeakRef(listener);\x0d\n      weakListeners().registry.register(listener\x2C this\x2C this);\x0d\n      // Make the retainer retain the listener in a WeakMap\x0d\n      weakListeners().map.set(weak\x2C listener);\x0d\n      this.listener = this.callback;\x0d\n    } else if (typeof listener === 'function') {\x0d\n      this.callback = listener;\x0d\n      this.listener = listener;\x0d\n    } else {\x0d\n      this.callback = async (...args) => {\x0d\n        if (listener.handleEvent)\x0d\n          await ReflectApply(listener.handleEvent\x2C listener\x2C args);\x0d\n      };\x0d\n      this.listener = listener;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  same(listener\x2C capture) {\x0d\n    const myListener = this.weak ? this.listener.deref() : this.listener;\x0d\n    return myListener === listener && this.capture === capture;\x0d\n  }\x0d\n\x0d\n  remove() {\x0d\n    if (this.previous !== undefined)\x0d\n      this.previous.next = this.next;\x0d\n    if (this.next !== undefined)\x0d\n      this.next.previous = this.previous;\x0d\n    this.removed = true;\x0d\n    if (this.weak)\x0d\n      weakListeners().registry.unregister(this);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initEventTarget(self) {\x0d\n  self[kEvents] = new SafeMap();\x0d\n  self[kMaxEventTargetListeners] = EventEmitter.defaultMaxListeners;\x0d\n  self[kMaxEventTargetListenersWarned] = false;\x0d\n}\x0d\n\x0d\nclass EventTarget {\x0d\n  // Used in checking whether an object is an EventTarget. This is a well-known\x0d\n  // symbol as EventTarget may be used cross-realm.\x0d\n  // Ref: https://github.com/nodejs/node/pull/33661\x0d\n  static [kIsEventTarget] = true;\x0d\n\x0d\n  constructor() {\x0d\n    initEventTarget(this);\x0d\n  }\x0d\n\x0d\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak) {\x0d\n    if (this[kMaxEventTargetListeners] > 0 &&\x0d\n        size > this[kMaxEventTargetListeners] &&\x0d\n        !this[kMaxEventTargetListenersWarned]) {\x0d\n      this[kMaxEventTargetListenersWarned] = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventTarget memory leak detected. ' +\x0d\n                          `${size} ${type} listeners ` +\x0d\n                          `added to ${inspect(this\x2C { depth: -1 })}. Use ` +\x0d\n                          'events.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      w.count = size;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {}\x0d\n\x0d\n  /**\x0d\n   * @callback EventTargetCallback\x0d\n   * @param {Event} event\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @typedef {{ handleEvent: EventTargetCallback }} EventListener\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   *   once?: boolean\x2C\x0d\n   *   passive?: boolean\x2C\x0d\n   *   signal?: AbortSignal\x0d\n   * }} [options]\x0d\n   */\x0d\n  addEventListener(type\x2C listener\x2C options = kEmptyObject) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 2)\x0d\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\x0d\n\x0d\n    // We validateOptions before the validateListener check because the spec\x0d\n    // requires us to hit getters.\x0d\n    const {\x0d\n      once\x2C\x0d\n      capture\x2C\x0d\n      passive\x2C\x0d\n      signal\x2C\x0d\n      isNodeStyleListener\x2C\x0d\n      weak\x2C\x0d\n    } = validateEventListenerOptions(options);\x0d\n\x0d\n    if (!validateEventListener(listener)) {\x0d\n      // The DOM silently allows passing undefined as a second argument\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error(`addEventListener called with ${listener}` +\x0d\n                          ' which has no effect.');\x0d\n      w.name = 'AddEventListenerArgumentTypeWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      process.emitWarning(w);\x0d\n      return;\x0d\n    }\x0d\n    type = String(type);\x0d\n\x0d\n    if (signal) {\x0d\n      if (signal.aborted) {\x0d\n        return;\x0d\n      }\x0d\n      // TODO(benjamingr) make this weak somehow? ideally the signal would\x0d\n      // not prevent the event target from GC.\x0d\n      signal.addEventListener('abort'\x2C () => {\x0d\n        this.removeEventListener(type\x2C listener\x2C options);\x0d\n      }\x2C { once: true\x2C [kWeakHandler]: this });\x0d\n    }\x0d\n\x0d\n    let root = this[kEvents].get(type);\x0d\n\x0d\n    if (root === undefined) {\x0d\n      root = { size: 1\x2C next: undefined };\x0d\n      // This is the first handler in our linked list.\x0d\n      new Listener(root\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                   isNodeStyleListener\x2C weak);\x0d\n      this[kNewListener](\x0d\n        root.size\x2C\x0d\n        type\x2C\x0d\n        listener\x2C\x0d\n        once\x2C\x0d\n        capture\x2C\x0d\n        passive\x2C\x0d\n        weak);\x0d\n      this[kEvents].set(type\x2C root);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let previous = root;\x0d\n\x0d\n    // We have to walk the linked list to see if we have a match\x0d\n    while (handler !== undefined && !handler.same(listener\x2C capture)) {\x0d\n      previous = handler;\x0d\n      handler = handler.next;\x0d\n    }\x0d\n\x0d\n    if (handler !== undefined) { // Duplicate! Ignore\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    new Listener(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                 isNodeStyleListener\x2C weak);\x0d\n    root.size++;\x0d\n    this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  removeEventListener(type\x2C listener\x2C options = kEmptyObject) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (!validateEventListener(listener))\x0d\n      return;\x0d\n\x0d\n    type = String(type);\x0d\n    const capture = options?.capture === true;\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined)\x0d\n      return;\x0d\n\x0d\n    let handler = root.next;\x0d\n    while (handler !== undefined) {\x0d\n      if (handler.same(listener\x2C capture)) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        if (root.size === 0)\x0d\n          this[kEvents].delete(type);\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n        break;\x0d\n      }\x0d\n      handler = handler.next;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {Event} event\x0d\n   */\x0d\n  dispatchEvent(event) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n\x0d\n    if (!(event instanceof Event))\x0d\n      throw new ERR_INVALID_ARG_TYPE('event'\x2C 'Event'\x2C event);\x0d\n\x0d\n    if (event[kIsBeingDispatched])\x0d\n      throw new ERR_EVENT_RECURSION(event.type);\x0d\n\x0d\n    this[kHybridDispatch](event\x2C event.type\x2C event);\x0d\n\x0d\n    return event.defaultPrevented !== true;\x0d\n  }\x0d\n\x0d\n  [kHybridDispatch](nodeValue\x2C type\x2C event) {\x0d\n    const createEvent = () => {\x0d\n      if (event === undefined) {\x0d\n        event = this[kCreateEvent](nodeValue\x2C type);\x0d\n        event[kTarget] = this;\x0d\n        event[kIsBeingDispatched] = true;\x0d\n      }\x0d\n      return event;\x0d\n    };\x0d\n    if (event !== undefined) {\x0d\n      event[kTarget] = this;\x0d\n      event[kIsBeingDispatched] = true;\x0d\n    }\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined) {\x0d\n      if (event !== undefined)\x0d\n        event[kIsBeingDispatched] = false;\x0d\n      return true;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let next;\x0d\n\x0d\n    while (handler !== undefined &&\x0d\n           (handler.passive || event?.[kStop] !== true)) {\x0d\n      // Cache the next item in case this iteration removes the current one\x0d\n      next = handler.next;\x0d\n\x0d\n      if (handler.removed) {\x0d\n        // Deal with the case an event is removed while event handlers are\x0d\n        // Being processed (removeEventListener called from a listener)\x0d\n        handler = next;\x0d\n        continue;\x0d\n      }\x0d\n      if (handler.once) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        const { listener\x2C capture } = handler;\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        let arg;\x0d\n        if (handler.isNodeStyleListener) {\x0d\n          arg = nodeValue;\x0d\n        } else {\x0d\n          arg = createEvent();\x0d\n        }\x0d\n        const callback = handler.weak ?\x0d\n          handler.callback.deref() : handler.callback;\x0d\n        let result;\x0d\n        if (callback) {\x0d\n          result = FunctionPrototypeCall(callback\x2C this\x2C arg);\x0d\n          if (!handler.isNodeStyleListener) {\x0d\n            arg[kIsBeingDispatched] = false;\x0d\n          }\x0d\n        }\x0d\n        if (result !== undefined && result !== null)\x0d\n          addCatch(result);\x0d\n      } catch (err) {\x0d\n        emitUncaughtException(err);\x0d\n      }\x0d\n\x0d\n      handler = next;\x0d\n    }\x0d\n\x0d\n    if (event !== undefined)\x0d\n      event[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [kCreateEvent](nodeValue\x2C type) {\x0d\n    return new NodeCustomEvent(type\x2C { detail: nodeValue });\x0d\n  }\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({}\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(EventTarget.prototype\x2C {\x0d\n  addEventListener: kEnumerableProperty\x2C\x0d\n  removeEventListener: kEnumerableProperty\x2C\x0d\n  dispatchEvent: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'EventTarget'\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction initNodeEventTarget(self) {\x0d\n  initEventTarget(self);\x0d\n}\x0d\n\x0d\nclass NodeEventTarget extends EventTarget {\x0d\n  static [kIsNodeEventTarget] = true;\x0d\n  static defaultMaxListeners = 10;\x0d\n\x0d\n  constructor() {\x0d\n    super();\x0d\n    initNodeEventTarget(this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {number} n\x0d\n   */\x0d\n  setMaxListeners(n) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    EventEmitter.setMaxListeners(n\x2C this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {number}\x0d\n   */\x0d\n  getMaxListeners() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return this[kMaxEventTargetListeners];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {string[]}\x0d\n   */\x0d\n  eventNames() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return ArrayFrom(this[kEvents].keys());\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} [type]\x0d\n   * @returns {number}\x0d\n   */\x0d\n  listenerCount(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    const root = this[kEvents].get(String(type));\x0d\n    return root !== undefined ? root.size : 0;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  off(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeListener(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  on(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  addListener(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {any} arg\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  emit(type\x2C arg) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    validateString(type\x2C 'type');\x0d\n    const hadListeners = this.listenerCount(type) > 0;\x0d\n    this[kHybridDispatch](arg\x2C type);\x0d\n    return hadListeners;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  once(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C\x0d\n                          { once: true\x2C [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeAllListeners(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    if (type !== undefined) {\x0d\n      this[kEvents].delete(String(type));\x0d\n    } else {\x0d\n      this[kEvents].clear();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(NodeEventTarget.prototype\x2C {\x0d\n  setMaxListeners: kEnumerableProperty\x2C\x0d\n  getMaxListeners: kEnumerableProperty\x2C\x0d\n  eventNames: kEnumerableProperty\x2C\x0d\n  listenerCount: kEnumerableProperty\x2C\x0d\n  off: kEnumerableProperty\x2C\x0d\n  removeListener: kEnumerableProperty\x2C\x0d\n  on: kEnumerableProperty\x2C\x0d\n  addListener: kEnumerableProperty\x2C\x0d\n  once: kEnumerableProperty\x2C\x0d\n  emit: kEnumerableProperty\x2C\x0d\n  removeAllListeners: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\n// EventTarget API\x0d\n\x0d\nfunction validateEventListener(listener) {\x0d\n  if (typeof listener === 'function' ||\x0d\n      typeof listener?.handleEvent === 'function') {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (listener == null)\x0d\n    return false;\x0d\n\x0d\n  if (typeof listener === 'object') {\x0d\n    // Require `handleEvent` lazily.\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('listener'\x2C 'EventListener'\x2C listener);\x0d\n}\x0d\n\x0d\nfunction validateEventListenerOptions(options) {\x0d\n  if (typeof options === 'boolean')\x0d\n    return { capture: options };\x0d\n\x0d\n  if (options === null)\x0d\n    return kEmptyObject;\x0d\n  validateObject(options\x2C 'options'\x2C {\x0d\n    allowArray: true\x2C allowFunction: true\x2C\x0d\n  });\x0d\n  return {\x0d\n    once: Boolean(options.once)\x2C\x0d\n    capture: Boolean(options.capture)\x2C\x0d\n    passive: Boolean(options.passive)\x2C\x0d\n    signal: options.signal\x2C\x0d\n    weak: options[kWeakHandler]\x2C\x0d\n    isNodeStyleListener: Boolean(options[kIsNodeStyleListener])\x0d\n  };\x0d\n}\x0d\n\x0d\n// Test whether the argument is an event object. This is far from a fool-proof\x0d\n// test\x2C for example this input will result in a false positive:\x0d\n// > isEventTarget({ constructor: EventTarget })\x0d\n// It stands in its current implementation as a compromise.\x0d\n// Ref: https://github.com/nodejs/node/pull/33661\x0d\nfunction isEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsEventTarget];\x0d\n}\x0d\n\x0d\nfunction isNodeEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsNodeEventTarget];\x0d\n}\x0d\n\x0d\nfunction addCatch(promise) {\x0d\n  const then = promise.then;\x0d\n  if (typeof then === 'function') {\x0d\n    FunctionPrototypeCall(then\x2C promise\x2C undefined\x2C function(err) {\x0d\n      // The callback is called with nextTick to avoid a follow-up\x0d\n      // rejection from this promise.\x0d\n      emitUncaughtException(err);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUncaughtException(err) {\x0d\n  process.nextTick(() => { throw err; });\x0d\n}\x0d\n\x0d\nfunction makeEventHandler(handler) {\x0d\n  // Event handlers are dispatched in the order they were first set\x0d\n  // See https://github.com/nodejs/node/pull/35949#issuecomment-722496598\x0d\n  function eventHandler(...args) {\x0d\n    if (typeof eventHandler.handler !== 'function') {\x0d\n      return;\x0d\n    }\x0d\n    return ReflectApply(eventHandler.handler\x2C this\x2C args);\x0d\n  }\x0d\n  eventHandler.handler = handler;\x0d\n  return eventHandler;\x0d\n}\x0d\n\x0d\nfunction defineEventHandler(emitter\x2C name) {\x0d\n  // 8.1.5.1 Event handlers - basically `on[eventName]` attributes\x0d\n  ObjectDefineProperty(emitter\x2C `on${name}`\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this[kHandlers]?.get(name)?.handler ?? null;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (!this[kHandlers]) {\x0d\n        this[kHandlers] = new SafeMap();\x0d\n      }\x0d\n      let wrappedHandler = this[kHandlers]?.get(name);\x0d\n      if (wrappedHandler) {\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size--;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kRemoveListener](size\x2C name\x2C wrappedHandler.handler\x2C false);\x0d\n        }\x0d\n        wrappedHandler.handler = value;\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size++;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kNewListener](size\x2C name\x2C value\x2C false\x2C false\x2C false\x2C false);\x0d\n        }\x0d\n      } else {\x0d\n        wrappedHandler = makeEventHandler(value);\x0d\n        this.addEventListener(name\x2C wrappedHandler);\x0d\n      }\x0d\n      this[kHandlers].set(name\x2C wrappedHandler);\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nconst EventEmitterMixin = (Superclass) => {\x0d\n  class MixedEventEmitter extends Superclass {\x0d\n    constructor(...args) {\x0d\n      args = new SafeArrayIterator(args);\x0d\n      super(...args);\x0d\n      FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n    }\x0d\n  }\x0d\n  const protoProps = ObjectGetOwnPropertyDescriptors(EventEmitter.prototype);\x0d\n  delete protoProps.constructor;\x0d\n  ObjectDefineProperties(MixedEventEmitter.prototype\x2C protoProps);\x0d\n  return MixedEventEmitter;\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  Event\x2C\x0d\n  CustomEvent\x2C\x0d\n  EventEmitterMixin\x2C\x0d\n  EventTarget\x2C\x0d\n  NodeEventTarget\x2C\x0d\n  defineEventHandler\x2C\x0d\n  initEventTarget\x2C\x0d\n  initNodeEventTarget\x2C\x0d\n  kCreateEvent\x2C\x0d\n  kNewListener\x2C\x0d\n  kTrustEvent\x2C\x0d\n  kRemoveListener\x2C\x0d\n  kEvents\x2C\x0d\n  kWeakHandler\x2C\x0d\n  isEventTarget\x2C\x0d\n};\x0d\n
code-source-info,0x35a8d4935d6,44,27905,28339,C0O27958C23O28149C30O28181C33O28194C38O28149C43O28209C47O28243C52O28284C57O28243C62O28311C64O28336,,
code-creation,Eval,10,206920,0x35a8d496176,5, node:internal/modules/esm/translators:1:1,0x35a8d495d10,~
script-source,132,node:internal/modules/esm/translators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  Boolean\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  SyntaxErrorPrototype\x2C\x0d\n  globalThis: { WebAssembly }\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet _TYPES = null;\x0d\nfunction lazyTypes() {\x0d\n  if (_TYPES !== null) return _TYPES;\x0d\n  return _TYPES = require('internal/util/types');\x0d\n}\x0d\n\x0d\nconst { readFileSync } = require('fs');\x0d\nconst { extname\x2C isAbsolute } = require('path');\x0d\nconst {\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst {\x0d\n  Module: CJSModule\x2C\x0d\n  cjsParseCache\x0d\n} = require('internal/modules/cjs/loader');\x0d\nconst internalURLModule = require('internal/url');\x0d\nconst createDynamicModule = require(\x0d\n  'internal/modules/esm/create_dynamic_module');\x0d\nconst { fileURLToPath\x2C URL } = require('url');\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { emitExperimentalWarning } = require('internal/util');\x0d\nconst {\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x0d\n} = require('internal/errors').codes;\x0d\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\x0d\nconst moduleWrap = internalBinding('module_wrap');\x0d\nconst { ModuleWrap } = moduleWrap;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { emitWarningSync } = require('internal/process/warning');\x0d\nconst { TextDecoder } = require('internal/encoding');\x0d\n\x0d\nlet cjsParse;\x0d\nasync function initCJSParse() {\x0d\n  if (typeof WebAssembly === 'undefined') {\x0d\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n  } else {\x0d\n    const { parse\x2C init } =\x0d\n        require('internal/deps/cjs-module-lexer/dist/lexer');\x0d\n    try {\x0d\n      await init();\x0d\n      cjsParse = parse;\x0d\n    } catch {\x0d\n      cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst translators = new SafeMap();\x0d\nexports.translators = translators;\x0d\nexports.enrichCJSError = enrichCJSError;\x0d\n\x0d\nlet DECODER = null;\x0d\nfunction assertBufferSource(body\x2C allowString\x2C hookName) {\x0d\n  if (allowString && typeof body === 'string') {\x0d\n    return;\x0d\n  }\x0d\n  const { isArrayBufferView\x2C isAnyArrayBuffer } = lazyTypes();\x0d\n  if (isArrayBufferView(body) || isAnyArrayBuffer(body)) {\x0d\n    return;\x0d\n  }\x0d\n  throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n    `${allowString ? 'string\x2C ' : ''}array buffer\x2C or typed array`\x2C\x0d\n    hookName\x2C\x0d\n    'source'\x2C\x0d\n    body\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringify(body) {\x0d\n  if (typeof body === 'string') return body;\x0d\n  assertBufferSource(body\x2C false\x2C 'transformSource');\x0d\n  DECODER = DECODER === null ? new TextDecoder() : DECODER;\x0d\n  return DECODER.decode(body);\x0d\n}\x0d\n\x0d\nfunction errPath(url) {\x0d\n  const parsed = new URL(url);\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    return fileURLToPath(parsed);\x0d\n  }\x0d\n  return url;\x0d\n}\x0d\n\x0d\nasync function importModuleDynamically(specifier\x2C { url }\x2C assertions) {\x0d\n  return asyncESM.esmLoader.import(specifier\x2C url\x2C assertions);\x0d\n}\x0d\n\x0d\n// Strategy for loading a standard JavaScript module.\x0d\ntranslators.set('module'\x2C async function moduleStrategy(url\x2C source\x2C isMain) {\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  source = stringify(source);\x0d\n  maybeCacheSourceMap(url\x2C source);\x0d\n  debug(`Translating StandardModule ${url}`);\x0d\n  const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n  moduleWrap.callbackMap.set(module\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => this.importMetaInitialize(meta\x2C { url })\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  });\x0d\n  return module;\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {Error | any} err\x0d\n * @param {string} [content] Content of the file\x2C if known.\x0d\n * @param {string} [filename] Useful only if `content` is unknown.\x0d\n */\x0d\nfunction enrichCJSError(err\x2C content\x2C filename) {\x0d\n  if (err != null && ObjectGetPrototypeOf(err) === SyntaxErrorPrototype &&\x0d\n      hasEsmSyntax(content || readFileSync(filename\x2C 'utf-8'))) {\x0d\n    // Emit the warning synchronously because we are in the middle of handling\x0d\n    // a SyntaxError that will throw and likely terminate the process before an\x0d\n    // asynchronous warning would be emitted.\x0d\n    emitWarningSync(\x0d\n      'To load an ES module\x2C set "type": "module" in the package.json or use ' +\x0d\n      'the .mjs extension.'\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n// Strategy for loading a node-style CommonJS module\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst winSepRegEx = /\\//g;\x0d\ntranslators.set('commonjs'\x2C async function commonjsStrategy(url\x2C source\x2C\x0d\n                                                            isMain) {\x0d\n  debug(`Translating CJSModule ${url}`);\x0d\n\x0d\n  let filename = internalURLModule.fileURLToPath(new URL(url));\x0d\n  if (isWindows)\x0d\n    filename = StringPrototypeReplace(filename\x2C winSepRegEx\x2C '\\\\');\x0d\n\x0d\n  if (!cjsParse) await initCJSParse();\x0d\n  const { module\x2C exportNames } = cjsPreparseModuleExports(filename);\x0d\n  const namesWithDefault = exportNames.has('default') ?\x0d\n    [...exportNames] : ['default'\x2C ...exportNames];\x0d\n\x0d\n  return new ModuleWrap(url\x2C undefined\x2C namesWithDefault\x2C function() {\x0d\n    debug(`Loading CJSModule ${url}`);\x0d\n\x0d\n    let exports;\x0d\n    if (asyncESM.esmLoader.cjsCache.has(module)) {\x0d\n      exports = asyncESM.esmLoader.cjsCache.get(module);\x0d\n      asyncESM.esmLoader.cjsCache.delete(module);\x0d\n    } else {\x0d\n      try {\x0d\n        exports = CJSModule._load(filename\x2C undefined\x2C isMain);\x0d\n      } catch (err) {\x0d\n        enrichCJSError(err\x2C undefined\x2C filename);\x0d\n        throw err;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    for (const exportName of exportNames) {\x0d\n      if (!ObjectPrototypeHasOwnProperty(exports\x2C exportName) ||\x0d\n          exportName === 'default')\x0d\n        continue;\x0d\n      // We might trigger a getter -> dont fail.\x0d\n      let value;\x0d\n      try {\x0d\n        value = exports[exportName];\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      this.setExport(exportName\x2C value);\x0d\n    }\x0d\n    this.setExport('default'\x2C exports);\x0d\n  });\x0d\n});\x0d\n\x0d\nfunction cjsPreparseModuleExports(filename) {\x0d\n  let module = CJSModule._cache[filename];\x0d\n  if (module) {\x0d\n    const cached = cjsParseCache.get(module);\x0d\n    if (cached)\x0d\n      return { module\x2C exportNames: cached.exportNames };\x0d\n  }\x0d\n  const loaded = Boolean(module);\x0d\n  if (!loaded) {\x0d\n    module = new CJSModule(filename);\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n    CJSModule._cache[filename] = module;\x0d\n  }\x0d\n\x0d\n  let source;\x0d\n  try {\x0d\n    source = readFileSync(filename\x2C 'utf8');\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n\x0d\n  let exports\x2C reexports;\x0d\n  try {\x0d\n    ({ exports\x2C reexports } = cjsParse(source || ''));\x0d\n  } catch {\x0d\n    exports = [];\x0d\n    reexports = [];\x0d\n  }\x0d\n\x0d\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\x0d\n\x0d\n  // Set first for cycles.\x0d\n  cjsParseCache.set(module\x2C { source\x2C exportNames\x2C loaded });\x0d\n\x0d\n  if (reexports.length) {\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n  }\x0d\n  ArrayPrototypeForEach(reexports\x2C (reexport) => {\x0d\n    let resolved;\x0d\n    try {\x0d\n      resolved = CJSModule._resolveFilename(reexport\x2C module);\x0d\n    } catch {\x0d\n      return;\x0d\n    }\x0d\n    const ext = extname(resolved);\x0d\n    if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\x0d\n        isAbsolute(resolved)) {\x0d\n      const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved);\x0d\n      for (const name of reexportNames)\x0d\n        exportNames.add(name);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return { module\x2C exportNames };\x0d\n}\x0d\n\x0d\n// Strategy for loading a node builtin CommonJS module that isn't\x0d\n// through normal resolution\x0d\ntranslators.set('builtin'\x2C async function builtinStrategy(url) {\x0d\n  debug(`Translating BuiltinModule ${url}`);\x0d\n  // Slice 'node:' scheme\x0d\n  const id = StringPrototypeSlice(url\x2C 5);\x0d\n  const module = loadNativeModule(id\x2C url);\x0d\n  if (!StringPrototypeStartsWith(url\x2C 'node:') || !module) {\x0d\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\x0d\n  }\x0d\n  debug(`Loading BuiltinModule ${url}`);\x0d\n  return module.getESMFacade();\x0d\n});\x0d\n\x0d\n// Strategy for loading a JSON file\x0d\ntranslators.set('json'\x2C async function jsonStrategy(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing JSON modules');\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  debug(`Loading JSONModule ${url}`);\x0d\n  const pathname = StringPrototypeStartsWith(url\x2C 'file:') ?\x0d\n    fileURLToPath(url) : null;\x0d\n  let modulePath;\x0d\n  let module;\x0d\n  if (pathname) {\x0d\n    modulePath = isWindows ?\x0d\n      StringPrototypeReplace(pathname\x2C winSepRegEx\x2C '\\\\') : pathname;\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  source = stringify(source);\x0d\n  if (pathname) {\x0d\n    // A require call could have been called on the same file during loading and\x0d\n    // that resolves synchronously. To make sure we always return the identical\x0d\n    // export\x2C we have to check again if the module already exists or not.\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const exports = JSONParse(stripBOM(source));\x0d\n    module = {\x0d\n      exports\x2C\x0d\n      loaded: true\x0d\n    };\x0d\n  } catch (err) {\x0d\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\x0d\n    // parse error instead of just manipulating the original error message.\x0d\n    // That would allow to add further properties and maybe additional\x0d\n    // debugging information.\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n  if (pathname) {\x0d\n    CJSModule._cache[modulePath] = module;\x0d\n  }\x0d\n  return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n    debug(`Parsing JSONModule ${url}`);\x0d\n    this.setExport('default'\x2C module.exports);\x0d\n  });\x0d\n});\x0d\n\x0d\n// Strategy for loading a wasm module\x0d\ntranslators.set('wasm'\x2C async function(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing WebAssembly modules');\x0d\n\x0d\n  assertBufferSource(source\x2C false\x2C 'load');\x0d\n\x0d\n  debug(`Translating WASMModule ${url}`);\x0d\n\x0d\n  let compiled;\x0d\n  try {\x0d\n    compiled = await WebAssembly.compile(source);\x0d\n  } catch (err) {\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  const imports =\x0d\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled)\x2C\x0d\n                        ({ module }) => module);\x0d\n  const exports =\x0d\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled)\x2C\x0d\n                      ({ name }) => name);\x0d\n\x0d\n  return createDynamicModule(imports\x2C exports\x2C url\x2C (reflect) => {\x0d\n    const { exports } = new WebAssembly.Instance(compiled\x2C reflect.imports);\x0d\n    for (const expt of ObjectKeys(exports))\x0d\n      reflect.exports[expt].set(exports[expt]);\x0d\n  }).module;\x0d\n});\x0d\n
code-source-info,0x35a8d496176,132,0,11113,C0O0C4O11113,,
code-creation,Function,10,207717,0x35a8d496916,715, node:internal/modules/esm/translators:1:1,0x35a8d4960f0,~
code-source-info,0x35a8d
code-creation,Eval,10,207968,0x35a8d497e1e,5, node:internal/modules/esm/create_dynamic_module:1:1,0x35a8d497c48,~
script-source,133,node:internal/modules/esm/create_dynamic_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectCreate\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nfunction createImport(impt\x2C index) {\x0d\n  const imptPath = JSONStringify(impt);\x0d\n  return `import * as $import_${index} from ${imptPath};\x0d\nimport.meta.imports[${imptPath}] = $import_${index};`;\x0d\n}\x0d\n\x0d\nfunction createExport(expt) {\x0d\n  const name = `${expt}`;\x0d\n  return `let $${name};\x0d\nexport { $${name} as ${name} };\x0d\nimport.meta.exports.${name} = {\x0d\n  get: () => $${name}\x2C\x0d\n  set: (v) => $${name} = v\x2C\x0d\n};`;\x0d\n}\x0d\n\x0d\nconst createDynamicModule = (imports\x2C exports\x2C url = ''\x2C evaluate) => {\x0d\n  debug('creating ESM facade for %s with exports: %j'\x2C url\x2C exports);\x0d\n  const source = `\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(imports\x2C createImport)\x2C '\\n')}\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(exports\x2C createExport)\x2C '\\n')}\x0d\nimport.meta.done();\x0d\n`;\x0d\n  const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n  const m = new ModuleWrap(`${url}`\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n\x0d\n  const readyfns = new SafeSet();\x0d\n  const reflect = {\x0d\n    exports: ObjectCreate(null)\x2C\x0d\n    onReady: (cb) => { readyfns.add(cb); }\x2C\x0d\n  };\x0d\n\x0d\n  if (imports.length)\x0d\n    reflect.imports = ObjectCreate(null);\x0d\n\x0d\n  callbackMap.set(m\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => {\x0d\n      meta.exports = reflect.exports;\x0d\n      if (reflect.imports)\x0d\n        meta.imports = reflect.imports;\x0d\n      meta.done = () => {\x0d\n        evaluate(reflect);\x0d\n        reflect.onReady = (cb) => cb(reflect);\x0d\n        for (const fn of readyfns) {\x0d\n          readyfns.delete(fn);\x0d\n          fn(reflect);\x0d\n        }\x0d\n      };\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  return {\x0d\n    module: m\x2C\x0d\n    reflect\x2C\x0d\n  };\x0d\n};\x0d\n\x0d\nmodule.exports = createDynamicModule;\x0d\n
code-source-info,0x35a8d497e1e,133,0,1828,C0O0C4O1828,,
code-creation,Function,10,208066,0x35a8d498046,111, node:internal/modules/esm/create_dynamic_module:1:1,0x35a8d497d98,~
code-source-info,0x35a8d498046,133,0,1828,C0O0C39O28C45O51C51O73C57O91C63O108C69O150C72O150C77O183C90O184C96O150C98O672C103O1789C105O1804C110O1827,,
code-creation,Eval,10,208458,0x35a8d498f6e,5, node:internal/vm/module:1:1,0x35a8d498a18,~
script-source,134,node:internal/vm/module,'use strict';\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafePromiseAll\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { isContext } = internalBinding('contextify');\x0d\nconst {\x0d\n  isModuleNamespaceObject\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  getConstructorOf\x2C\x0d\n  kEmptyObject\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_VM_MODULE_ALREADY_LINKED\x2C\x0d\n  ERR_VM_MODULE_DIFFERENT_CONTEXT\x2C\x0d\n  ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA\x2C\x0d\n  ERR_VM_MODULE_LINK_FAILURE\x2C\x0d\n  ERR_VM_MODULE_NOT_MODULE\x2C\x0d\n  ERR_VM_MODULE_STATUS\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst binding = internalBinding('module_wrap');\x0d\nconst {\x0d\n  ModuleWrap\x2C\x0d\n  kUninstantiated\x2C\x0d\n  kInstantiating\x2C\x0d\n  kInstantiated\x2C\x0d\n  kEvaluating\x2C\x0d\n  kEvaluated\x2C\x0d\n  kErrored\x2C\x0d\n} = binding;\x0d\n\x0d\nconst STATUS_MAP = {\x0d\n  [kUninstantiated]: 'unlinked'\x2C\x0d\n  [kInstantiating]: 'linking'\x2C\x0d\n  [kInstantiated]: 'linked'\x2C\x0d\n  [kEvaluating]: 'evaluating'\x2C\x0d\n  [kEvaluated]: 'evaluated'\x2C\x0d\n  [kErrored]: 'errored'\x2C\x0d\n};\x0d\n\x0d\nlet globalModuleId = 0;\x0d\nconst defaultModuleName = 'vm:module';\x0d\nconst wrapToModuleMap = new SafeWeakMap();\x0d\n\x0d\nconst kWrap = Symbol('kWrap');\x0d\nconst kContext = Symbol('kContext');\x0d\nconst kPerContextModuleId = Symbol('kPerContextModuleId');\x0d\nconst kLink = Symbol('kLink');\x0d\n\x0d\nclass Module {\x0d\n  constructor(options) {\x0d\n    emitExperimentalWarning('VM Modules');\x0d\n\x0d\n    if (new.target === Module) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new TypeError('Module is not a constructor');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      context\x2C\x0d\n      sourceText\x2C\x0d\n      syntheticExportNames\x2C\x0d\n      syntheticEvaluationSteps\x2C\x0d\n    } = options;\x0d\n\x0d\n    if (context !== undefined) {\x0d\n      validateObject(context\x2C 'context');\x0d\n      if (!isContext(context)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('options.context'\x2C 'vm.Context'\x2C\x0d\n                                       context);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let { identifier } = options;\x0d\n    if (identifier !== undefined) {\x0d\n      validateString(identifier\x2C 'options.identifier');\x0d\n    } else if (context === undefined) {\x0d\n      identifier = `${defaultModuleName}(${globalModuleId++})`;\x0d\n    } else if (context[kPerContextModuleId] !== undefined) {\x0d\n      const curId = context[kPerContextModuleId];\x0d\n      identifier = `${defaultModuleName}(${curId})`;\x0d\n      context[kPerContextModuleId] += 1;\x0d\n    } else {\x0d\n      identifier = `${defaultModuleName}(0)`;\x0d\n      ObjectDefineProperty(context\x2C kPerContextModuleId\x2C {\x0d\n        __proto__: null\x2C\x0d\n        value: 1\x2C\x0d\n        writable: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    if (sourceText !== undefined) {\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C sourceText\x2C\x0d\n                                   options.lineOffset\x2C options.columnOffset\x2C\x0d\n                                   options.cachedData);\x0d\n\x0d\n      binding.callbackMap.set(this[kWrap]\x2C {\x0d\n        initializeImportMeta: options.initializeImportMeta\x2C\x0d\n        importModuleDynamically: options.importModuleDynamically ?\x0d\n          importModuleDynamicallyWrap(options.importModuleDynamically) :\x0d\n          undefined\x2C\x0d\n      });\x0d\n    } else {\x0d\n      assert(syntheticEvaluationSteps);\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C\x0d\n                                   syntheticExportNames\x2C\x0d\n                                   syntheticEvaluationSteps);\x0d\n    }\x0d\n\x0d\n    wrapToModuleMap.set(this[kWrap]\x2C this);\x0d\n\x0d\n    this[kContext] = context;\x0d\n  }\x0d\n\x0d\n  get identifier() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kWrap].url;\x0d\n  }\x0d\n\x0d\n  get context() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kContext];\x0d\n  }\x0d\n\x0d\n  get namespace() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must not be unlinked or linking');\x0d\n    }\x0d\n    return this[kWrap].getNamespace();\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return STATUS_MAP[this[kWrap].getStatus()];\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be errored');\x0d\n    }\x0d\n    return this[kWrap].getError();\x0d\n  }\x0d\n\x0d\n  async link(linker) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateFunction(linker\x2C 'linker');\x0d\n    if (this.status === 'linked') {\x0d\n      throw new ERR_VM_MODULE_ALREADY_LINKED();\x0d\n    }\x0d\n    if (this.status !== 'unlinked') {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be unlinked');\x0d\n    }\x0d\n    await this[kLink](linker);\x0d\n    this[kWrap].instantiate();\x0d\n  }\x0d\n\x0d\n  async evaluate(options = kEmptyObject) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    let timeout = options.timeout;\x0d\n    if (timeout === undefined) {\x0d\n      timeout = -1;\x0d\n    } else {\x0d\n      validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n    }\x0d\n    const { breakOnSigint = false } = options;\x0d\n    validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n    const status = this[kWrap].getStatus();\x0d\n    if (status !== kInstantiated &&\x0d\n        status !== kEvaluated &&\x0d\n        status !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS(\x0d\n        'must be one of linked\x2C evaluated\x2C or errored'\x0d\n      );\x0d\n    }\x0d\n    await this[kWrap].evaluate(timeout\x2C breakOnSigint);\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || Module;\x0d\n    const o = ObjectCreate({ constructor });\x0d\n    o.status = this.status;\x0d\n    o.identifier = this.identifier;\x0d\n    o.context = this.context;\x0d\n\x0d\n    ObjectSetPrototypeOf(o\x2C ObjectGetPrototypeOf(this));\x0d\n    ObjectDefineProperty(o\x2C SymbolToStringTag\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: constructor.name\x2C\x0d\n      configurable: true\x0d\n    });\x0d\n\x0d\n    // Lazy to avoid circular dependency\x0d\n    const { inspect } = require('internal/util/inspect');\x0d\n    return inspect(o\x2C { ...options\x2C customInspect: false });\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kDependencySpecifiers = Symbol('kDependencySpecifiers');\x0d\nconst kNoError = Symbol('kNoError');\x0d\n\x0d\nclass SourceTextModule extends Module {\x0d\n  #error = kNoError;\x0d\n  #statusOverride;\x0d\n\x0d\n  constructor(sourceText\x2C options = kEmptyObject) {\x0d\n    validateString(sourceText\x2C 'sourceText');\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const {\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      cachedData\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n\x0d\n    if (initializeImportMeta !== undefined &&\x0d\n        typeof initializeImportMeta !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.initializeImportMeta'\x2C 'function'\x2C initializeImportMeta);\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined &&\x0d\n        typeof importModuleDynamically !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.importModuleDynamically'\x2C 'function'\x2C\x0d\n        importModuleDynamically);\x0d\n    }\x0d\n\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n\x0d\n    super({\x0d\n      sourceText\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      lineOffset\x2C\x0d\n      columnOffset\x2C\x0d\n      cachedData\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = async (linker) => {\x0d\n      this.#statusOverride = 'linking';\x0d\n\x0d\n      const promises = this[kWrap].link(async (identifier\x2C assert) => {\x0d\n        const module = await linker(identifier\x2C this\x2C { assert });\x0d\n        if (module[kWrap] === undefined) {\x0d\n          throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n        }\x0d\n        if (module.context !== this.context) {\x0d\n          throw new ERR_VM_MODULE_DIFFERENT_CONTEXT();\x0d\n        }\x0d\n        if (module.status === 'errored') {\x0d\n          throw new ERR_VM_MODULE_LINK_FAILURE(`request for '${identifier}' resolved to an errored module`\x2C module.error);\x0d\n        }\x0d\n        if (module.status === 'unlinked') {\x0d\n          await module[kLink](linker);\x0d\n        }\x0d\n        return module[kWrap];\x0d\n      });\x0d\n\x0d\n      try {\x0d\n        if (promises !== undefined) {\x0d\n          await SafePromiseAll(promises);\x0d\n        }\x0d\n      } catch (e) {\x0d\n        this.#error = e;\x0d\n        throw e;\x0d\n      } finally {\x0d\n        this.#statusOverride = undefined;\x0d\n      }\x0d\n    };\x0d\n\x0d\n    this[kDependencySpecifiers] = undefined;\x0d\n  }\x0d\n\x0d\n  get dependencySpecifiers() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kDependencySpecifiers] === undefined) {\x0d\n      this[kDependencySpecifiers] = this[kWrap].getStaticDependencySpecifiers();\x0d\n    }\x0d\n    return this[kDependencySpecifiers];\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return 'errored';\x0d\n    }\x0d\n    if (this.#statusOverride) {\x0d\n      return this.#statusOverride;\x0d\n    }\x0d\n    return super.status;\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return this.#error;\x0d\n    }\x0d\n    return super.error;\x0d\n  }\x0d\n\x0d\n  createCachedData() {\x0d\n    const { status } = this;\x0d\n    if (status === 'evaluating' ||\x0d\n        status === 'evaluated' ||\x0d\n        status === 'errored') {\x0d\n      throw new ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA();\x0d\n    }\x0d\n    return this[kWrap].createCachedData();\x0d\n  }\x0d\n}\x0d\n\x0d\nclass SyntheticModule extends Module {\x0d\n  constructor(exportNames\x2C evaluateCallback\x2C options = kEmptyObject) {\x0d\n    if (!ArrayIsArray(exportNames) ||\x0d\n      ArrayPrototypeSome(exportNames\x2C (e) => typeof e !== 'string')) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('exportNames'\x2C\x0d\n                                     'Array of unique strings'\x2C\x0d\n                                     exportNames);\x0d\n    } else {\x0d\n      ArrayPrototypeForEach(exportNames\x2C (name\x2C i) => {\x0d\n        if (ArrayPrototypeIndexOf(exportNames\x2C name\x2C i + 1) !== -1) {\x0d\n          throw new ERR_INVALID_ARG_VALUE(`exportNames.${name}`\x2C\x0d\n                                          name\x2C\x0d\n                                          'is duplicated');\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n    validateFunction(evaluateCallback\x2C 'evaluateCallback');\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const { context\x2C identifier } = options;\x0d\n\x0d\n    super({\x0d\n      syntheticExportNames: exportNames\x2C\x0d\n      syntheticEvaluationSteps: evaluateCallback\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = () => this[kWrap].link(() => {\x0d\n      assert.fail('link callback should not be called');\x0d\n    });\x0d\n  }\x0d\n\x0d\n  setExport(name\x2C value) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateString(name\x2C 'name');\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be linked');\x0d\n    }\x0d\n    this[kWrap].setExport(name\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction importModuleDynamicallyWrap(importModuleDynamically) {\x0d\n  const importModuleDynamicallyWrapper = async (...args) => {\x0d\n    const m = await ReflectApply(importModuleDynamically\x2C this\x2C args);\x0d\n    if (isModuleNamespaceObject(m)) {\x0d\n      return m;\x0d\n    }\x0d\n    if (!m || m[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (m.status === 'errored') {\x0d\n      throw m.error;\x0d\n    }\x0d\n    return m.namespace;\x0d\n  };\x0d\n  return importModuleDynamicallyWrapper;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Module\x2C\x0d\n  SourceTextModule\x2C\x0d\n  SyntheticModule\x2C\x0d\n  importModuleDynamicallyWrap\x2C\x0d\n  getModuleFromWrap: (wrap) => wrapToModuleMap.get(wrap)\x2C\x0d\n};\x0d\n
code-source-info,0x35a8d498f6e,134,0,12831,C0O0C4O12831,,
code-creation,Function,10,208970,0x35a8d49a1d6,881, node:internal/vm/module:1:1,0x35a8d498ee8,~
code-source-info,0x35a8d49a1d6,134,0,12831,C0O0C159O32C165O32C169O32C171O72C177O89C183O115C189O141C195O164C201O181C207O206C213O231C219O256C225O273C231O292C236O308C241O319C247O341C253O395C256O395C261O381C267O490C273O490C278O438C284O466C290O626C296O626C301O534C306O558C312O586C318O607C324O915C330O915C335O941C340O664C346O689C352O715C358O748C364O784C370O828C376O859C382O888C388O1079C394O1079C399O961C405O981C411O1002C417O1020C423O1039C429O1058C435O1130C438O1130C442O1130C444O1292C447O1174C453O1189C458O1209C463O1228C469O1246C474O1262C480O1277C486O1323C493O1329C497O1347C504O1363C508O1380C515O1395C519O1411C526O1425C530O1439C537O1457C541O1470C548O1487C552O1498C559O1323C561O1537C562O1537C564O1567C566O1567C568O1605C570O1605C575O1605C577O1641C580O1641C584O1641C586O1676C589O1676C593O1676C595O1725C598O1725C602O1725C604O1771C607O1771C611O1771C669O6203C697O7012C700O7012C704O7012C706O7063C709O7063C713O7063C745O7117C808O10706C836O12664C843O12686C849O12697C855O12718C861O12738C865O12789C875O12679C880O12830,,
code-creation,Function,10,209054,0x35a8d49a71e,30,<instance_members_initializer> node:internal/vm/module:259:3,0x35a8d499558,~
code-source-info,0x35a8d49a71e,134,7129,7166,C3O7138C29O7166,,
code-creation,LazyCompile,10,209259,0x35a8d49bc6e,166,ESMLoader node:internal/modules/esm/loader:240:14,0xc4d992f868,~
code-source-info,0x35a8d49bc6e,118,7124,7747,C9O7124C28O7134C38O7138C43O7177C49O7185C54O7199C64O7199C68O7258C78O7262C84O7321C94O7321C98O7377C110O7434C116O7434C123O7488C128O7515C133O7523C144O7523C150O7694C156O7728C165O7746,,
code-creation,LazyCompile,10,209334,0x35a8d49da76,27,ModuleMap node:internal/modules/esm/module_map:17:14,0xc4d9932910,~
code-source-info,0x35a8d49da76,119,534,551,C3O540C7O546C11O540C26O550,,
code-creation,LazyCompile,10,209387,0x35a8d49dd1e,13,desc.value node:internal/per_context/primordials:340:32,0x56f5c8a9b0,~
code-source-info,0x35a8d49dd1e,6,10212,10273,C0O10230C7O10237C12O10260,,
code-creation,LazyCompile,10,209420,0x35a8d49de26,13,SafeIterator node:internal/per_context/primordials:285:16,0x56f5c8a400,~
code-source-info,0x35a8d49de26,6,8422,8484,C0O8442C3O8459C7O8457C12O8483,,
code-creation,LazyCompile,10,209453,0x35a8d49df5e,13,next node:internal/per_context/primordials:288:9,0x56f5c8a4c8,~
code-source-info,0x35a8d49df5e,6,8494,8541,C0O8506C3O8523C8O8513C12O8534,,
code-creation,LazyCompile,10,209486,0x35a8d49e04e,19,canBeRequiredWithoutScheme node:internal/bootstrap/loaders:254:36,0x56f5c90eb8,~
code-source-info,0x35a8d49e04e,9,8028,8081,C0O8040C7O8068C12O8068C18O8076,,
code-creation,LazyCompile,10,209639,0x35a8d49e286,32, node:internal/modules/cjs/loader:192:41,0xc4d9927c10,~
code-source-info,0x35a8d49e286,115,6005,6031,C0O6013C9O6014C21O6026C31O6031,,
code-creation,LazyCompile,10,209762,0x35a8d4a0d86,19,getSchemeOnlyModuleNames node:internal/bootstrap/loaders:258:34,0x56f5c90f38,~
code-source-info,0x35a8d4a0d86,9,8118,8171,C0O8128C11O8145C14O8135C18O8166,,
code-creation,LazyCompile,10,209813,0x35a8d4a0ece,26, node:internal/modules/cjs/loader:194:49,0xc4d9927c60,~
code-source-info,0x35a8d4a0ece,115,6086,6133,C0O6111C5O6111C15O6123C20O6111C25O6133,,
code-creation,LazyCompile,10,209930,0x35a8d4a15be,28,getEmbedderOptions node:internal/options:32:28,0x39c7b63ff68,~
code-source-info,0x35a8d4a15be,95,791,913,C0O799C6O828C11O846C17O844C23O887C27O910,,
code-creation,LazyCompile,10,210020,0x35a8d4a1866,315,Module._initPaths node:internal/modules/cjs/loader:1254:29,0xc4d9928770,~
code-source-info,0x35a8d4a
code-creation,Eval,10,210233,0x35a8d4a1f2e,5, node:internal/modules/run_main:1:1,0x35a8d4a1d08,~
script-source,135,node:internal/modules/run_main,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n} = primordials;\x0d\nconst CJSLoader = require('internal/modules/cjs/loader');\x0d\nconst { Module\x2C toRealPath\x2C readPackageScope } = CJSLoader;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst path = require('path');\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nfunction resolveMainPath(main) {\x0d\n  // Note extension resolution for the main entry point can be deprecated in a\x0d\n  // future major.\x0d\n  // Module._findPath is monkey-patchable here.\x0d\n  let mainPath = Module._findPath(path.resolve(main)\x2C null\x2C true);\x0d\n  if (!mainPath)\x0d\n    return;\x0d\n\x0d\n  const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n  if (!preserveSymlinksMain)\x0d\n    mainPath = toRealPath(mainPath);\x0d\n\x0d\n  return mainPath;\x0d\n}\x0d\n\x0d\nfunction shouldUseESMLoader(mainPath) {\x0d\n  /**\x0d\n   * @type {string[]} userLoaders A list of custom loaders registered by the user\x0d\n   * (or an empty list when none have been registered).\x0d\n   */\x0d\n  const userLoaders = getOptionValue('--experimental-loader');\x0d\n  if (userLoaders.length > 0)\x0d\n    return true;\x0d\n  const esModuleSpecifierResolution =\x0d\n    getOptionValue('--experimental-specifier-resolution');\x0d\n  if (esModuleSpecifierResolution === 'node')\x0d\n    return true;\x0d\n  // Determine the module format of the main\x0d\n  if (mainPath && StringPrototypeEndsWith(mainPath\x2C '.mjs'))\x0d\n    return true;\x0d\n  if (!mainPath || StringPrototypeEndsWith(mainPath\x2C '.cjs'))\x0d\n    return false;\x0d\n  const pkg = readPackageScope(mainPath);\x0d\n  return pkg && pkg.data.type === 'module';\x0d\n}\x0d\n\x0d\nfunction runMainESM(mainPath) {\x0d\n  const { loadESM } = require('internal/process/esm_loader');\x0d\n  const { pathToFileURL } = require('internal/url');\x0d\n\x0d\n  handleMainPromise(loadESM((esmLoader) => {\x0d\n    const main = path.isAbsolute(mainPath) ?\x0d\n      pathToFileURL(mainPath).href : mainPath;\x0d\n    return esmLoader.import(main\x2C undefined\x2C ObjectCreate(null));\x0d\n  }));\x0d\n}\x0d\n\x0d\nasync function handleMainPromise(promise) {\x0d\n  process.on('exit'\x2C handleProcessExit);\x0d\n  try {\x0d\n    return await promise;\x0d\n  } finally {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n  }\x0d\n}\x0d\n\x0d\n// For backwards compatibility\x2C we have to run a bunch of\x0d\n// monkey-patchable code that belongs to the CJS loader (exposed by\x0d\n// `require('module')`) even when the entry point is ESM.\x0d\nfunction executeUserEntryPoint(main = process.argv[1]) {\x0d\n  const resolvedMain = resolveMainPath(main);\x0d\n  const useESMLoader = shouldUseESMLoader(resolvedMain);\x0d\n  if (useESMLoader) {\x0d\n    runMainESM(resolvedMain || main);\x0d\n  } else {\x0d\n    // Module._load is the monkey-patchable CJS module loader.\x0d\n    Module._load(main\x2C null\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  executeUserEntryPoint\x2C\x0d\n  handleMainPromise\x2C\x0d\n};\x0d\n
code-source-info,0x35a8d4a1f2e,135,0,2788,C0O0C4O2788,,
code-creation,Function,10,210356,0x35a8d4a2216,178, node:internal/modules/run_main:1:1,0x35a8d4a1ea8,~
code-source-info,0x35a8d4a2216,135,0,2788,C0O0C66O28C72O45C78O107C84O107C89O156C95O164C101O176C107O236C113O236C118O217C124O279C130O279C134O279C136O332C142O332C147O308C153O2716C160O2738C166O2764C172O2731C177O2787,,
code-creation,LazyCompile,10,210474,0x35a8d4a2826,163,initializeESMLoader node:internal/bootstrap/pre_execution:531:29,0x3d28624d230,~
code-source-info,0x35a8d4a2826,100,17281,18396,C0O17365C6O17365C13O17414C16O17410C21O17408C25O17434C30O17438C34O17458C40O17487C41O17494C42O17599C48O17599C53O17513C58O17554C63O17646C69O17646C74O17850C79O17808C83O17921C88O17882C92O18091C100O18095C106O18214C112O18214C117O18162C122O18170C127O18188C132O18261C138O18261C143O18281C145O18291C149O18306C151O18326C155O18351C157O18370C162O18395,,
code-creation,LazyCompile,10,210540,0x35a8d4a2a3e,5,get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:74:32,0xc4d9927bc0,~
code-source-info,0x35a8d4a2a3e,115,2368,2408,C0O2373C4O2406,,
code-creation,LazyCompile,10,210576,0x35a8d4a2b26,53,loadPreloadModules node:internal/bootstrap/pre_execution:574:28,0x3d28624d320,~
code-source-info,0x35a8d4a2b26,100,18888,19219,C0O18977C8O18977C13O19009C15O19046C21O19053C26O19134C32O19134C37O19134C42O19099C47O19179C52O19218,,
code-creation,LazyCompile,10,210638,0x35a8d4a2d1e,166,Module._preloadModules node:internal/modules/cjs/loader:1284:34,0xc4d9928800,~
code-source-info,0x35a8d4a2d1e,115,41548,42143,C0O41564C5O41569C11O41598C12O41605C13O41611C17O41624C23O41824C33O41824C42O41876C45O41898C53O41923C58O41923C63O41898C68O41889C85O41953C88O41959C95O41964C100O41987C106O42000C114O42016C116O42016C119O42053C121O42069C125O42058C130O42094C137O42110C141O42094C146O42078C151O42040C154O42119C158O42132C165O42142,,
code-creation,LazyCompile,10,210721,0x35a8d4a2f3e,94,Module node:internal/modules/cjs/loader:172:16,0xc4d9927520,~
code-source-info,0x35a8d4a2f3e,115,5458,5704,C14O5481C16O5489C20O5498C22O5510C25O5515C30O5515C35O5508C39O5531C40O5544C44O5553C49O5571C54O5571C60O5593C71O5593C76O5633C77O5647C81O5658C82O5670C86O5682C88O5696C93O5703,,
code-creation,LazyCompile,10,210838,0x35a8d4a3136,449,dirname node:path:653:10,0x3a93d9cd768,~
code-source-info,0x35a8d4a
code-creation,LazyCompile,10,210958,0x35a8d4a353e,45,updateChildren node:internal/modules/cjs/loader:165:24,0xc4d99274d0,~
code-source-info,0x35a8d4a353e,115,5216,5393,C0O5260C7O5266C15O5281C19O5299C23O5307C26O5307C33O5354C38O5354C44O5392,,
code-creation,LazyCompile,10,211035,0x35a8d4a372e,251,Module._nodeModulePaths node:internal/modules/cjs/loader:594:37,0xc4d9928010,~
code-source-info,0x35a8d4a372e
code-creation,Function,11,211188,0x21ab3645160,2060,Module._nodeModulePaths node:internal/modules/cjs/loader:594:37,0xc4d9928010,^
code-source-info,0x21ab3645160,115,18128,19679,,,
code-creation,Function,11,211224,0x21ab36459e0,432,getCLIOptionsFromBinding node:internal/options:18:34,0x39c7b63fce8,^
code-source-info,0x21ab36459e0,95,514,620,,,
code-creation,Function,11,211245,0x21ab3645c00,252,SafeMap node:internal/per_context/primordials:366:16,0x56f5c8aa58,^
code-source-info,0x21ab3645c00,6,10966,10983,,,
code-creation,Function,11,211262,0x21ab3645d60,104,next node:internal/per_context/primordials:288:9,0x56f5c8a4c8,^
code-source-info,0x21ab3645d60,6,8494,8541,,,
code-creation,Function,11,211280,0x21ab3645e40,188,canBeRequiredWithoutScheme node:internal/bootstrap/loaders:254:36,0x56f5c90eb8,^
code-source-info,0x21ab3645e40,9,8028,8081,,,
code-creation,Function,11,211300,0x21ab3645f60,200, node:internal/modules/cjs/loader:192:41,0xc4d9927c10,^
code-source-info,0x21ab3645f60,115,6005,6031,,,
code-creation,Function,11,211319,0x21ab36460a0,272,validateString node:internal/validators:119:24,0xf284009390,^
code-source-info,0x21ab36460a0,16,3546,3658,,,
code-creation,Function,11,211338,0x21ab3646220,412,isWindowsDeviceRoot node:path:60:29,0x3a93d9cd408,^
code-source-info,0x21ab3646220,41,1991,2136,,,
code-creation,LazyCompile,10,211432,0x35a8d4a3f86,127,Module.require node:internal/modules/cjs/loader:1020:36,0xc4d9928400,~
code-source-info,0x35a8d4a3f86,115,32936,33239,C0O32946C8O32946C13O32975C15O32982C20O32997C36O33003C41O32997C42O33115C51O33127C60O33145C63O33159C76O33159C93O33216C102O33228C126O33238,,
code-creation,LazyCompile,10,211573,0x35a8d4a427e,636,Module._load node:internal/modules/cjs/loader:771:24,0xc4d9928260,~
code-source-info,0x35a8d4a427e
code-creation,LazyCompile,10,211708,0x35a8d4a4736,89,logger node:internal/util/debuglog:95:18,0xf284025db8,~
code-source-info,0x35a8d4a4736,22,2963,3164,C0O2963C3O2996C24O3021C30O3038C34O3028C38O3043C39O3059C45O3076C51O3085C55O3066C60O3090C61O3107C65O3114C72O3127C77O3123C83O3114C88O3152,,
code-creation,LazyCompile,10,211750,0x35a8d4a4876,3, node:internal/per_context/primordials:291:21,0x56f5c8a570,~
code-source-info,0x35a8d4a4876,6,8563,8594,C0O8575C2O8587,,
code-creation,LazyCompile,10,211796,0x35a8d4a494e,140,debug node:internal/util/debuglog:76:15,0xf284025d18,~
code-source-info,0x35a8d4a494e,22,2432,2838,C0O2432C3O2452C6O2452C9O2563C16O2584C22O2571C30O2569C36O2604C42O2641C47O2644C50O2641C54O2670C75O2695C81O2712C85O2702C89O2717C90O2733C96O2750C102O2759C106O2740C111O2764C112O2781C116O2788C123O2801C128O2797C134O2788C139O2826,,
code-creation,LazyCompile,10,211841,0x35a8d4a4afe,41,init node:internal/util/debuglog:72:16,0xf284025cc8,~
code-source-info,0x35a8d4a4afe,22,2330,2416,C0O2340C10O2346C14O2344C16O2384C26O2394C33O2392C40O2415,,
code-creation,LazyCompile,10,211872,0x35a8d4a4bee,2,testEnabled node:internal/util/debuglog:32:19,0x3d286264ce8,~
code-source-info,0x35a8d4a4bee,22,1004,1015,C0O1010C1O1015,,
code-creation,LazyCompile,10,211923,0x35a8d4a4d86,116,debuglogImpl node:internal/util/debuglog:49:22,0xf284025b18,~
code-source-info,0x35a8d4a4d86,22,1499,2059,C0O1499C9O1519C18O1533C23O1561C34O1595C39O1603C43O1595C45O1615C55O1615C59O1648C71O1659C75O1664C83O1994C97O2012C99O2010C103O2033C112O2050C115O2056,,
code-creation,LazyCompile,10,211964,0x35a8d4a4f3e,10, node:internal/modules/cjs/loader:283:66,0xc4d9927f30,~
code-source-info,0x35a8d4a4f3e,115,8325,8352,C0O8338C2O8344C9O8351,,
code-creation,LazyCompile,10,211993,0x35a8d4a4fee,2,noop node:internal/util/debuglog:47:14,0xf284025ac8,~
code-source-info,0x35a8d4a4fee,22,1465,1473,C1O1472,,
code-creation,LazyCompile,10,212144,0x35a8d4a542e,925,Module._resolveFilename node:internal/modules/cjs/loader:865:35,0xc4d99282e8,~
code-source-info,0x35a8d4a542e,115,27523,30823,C0O27563C10O27582C19O27636C23O27649C31O27670C39O27670C46O27649C55O27723C59O27736C65O27736C74O27776C78O27789C84O27789C91O27844C93O27859C94O27874C96O27886C106O27946C112O27971C118O27950C124O28007C134O28007C143O28062C151O28062C160O28120C166O28133C174O28133C183O28190C191O28190C197O28244C199O28287C206O28338C219O28338C225O28371C228O28407C230O28422C236O28428C240O28412C245O28475C253O28480C257O28496C261O28522C267O28522C272O28513C276O28577C280O28584C286O28584C293O28652C296O28671C300O28657C305O28699C313O28745C318O28704C325O28766C333O28803C338O28766C343O28680C349O28639C352O28437C357O28394C362O28866C368O28896C372O28911C378O28911C387O28970C397O29027C405O28976C410O28970C413O29059C417O29074C423O29074C430O29122C431O29133C438O29137C450O29155C466O29175C477O29180C482O29221C489O29227C504O29249C510O29249C518O29257C522O29262C526O29255C530O29284C534O29284C542O29333C550O29337C563O29380C569O29421C575O29452C579O29452C587O29512C594O29421C601O29564C613O29387C618O29570C632O29601C636O29607C644O29612C649O29651C655O29657C659O29651C660O29697C662O29697C663O29790C667O29790C672O29841C676O29841C682O29874C684O29916C686O29924C691O29952C699O29959C705O29972C712O29978C720O29978C725O29933C729O30019C733O30026C741O30047C745O30068C747O30088C748O30178C752O30185C770O30185C776O30230C778O30244C780O30260C781O30285C784O30310C789O30323C793O30383C799O30423C808O30442C814O30383C819O30343C825O30363C831O30363C837O30292C840O30469C846O30492C858O30524C865O30531C870O30543C872O30561C879O30603C887O30603C892O30586C896O30717C904O30717C910O30740C912O30749C916O30774C918O30791C922O30810C924O30810,,
code-creation,LazyCompile,10,212295,0x35a8d4a5a86,28,canBeRequiredByUsers node:internal/bootstrap/loaders:247:30,0x56f5c90e40,~
code-source-info,0x35a8d4a5a86,9,7748,7847,C0O7772C5O7785C10O7789C15O7789C21O7803C23O7821C27O7842,,
code-creation,LazyCompile,10,212370,0x35a8d4a5d46,344,Module._resolveLookupPaths node:internal/modules/cjs/loader:678:38,0xc4d9928130,~
code-source-info,0x35a8d4a5d
code-creation,LazyCompile,10,212456,0x35a8d4a6066,76,trySelfParentPath node:internal/modules/cjs/loader:438:27,0xc4d9927840,~
code-source-info,0x35a8d4a6066,115,13041,13316,C0O13055C4O13068C5O13081C6O13098C12O13129C16O13138C17O13160C24O13163C29O13186C36O13189C44O13233C47O13248C52O13248C59O13256C62O13261C66O13254C69O13265C72O13288C73O13301C75O13315,,
code-creation,LazyCompile,10,212531,0x35a8d4a62a6,235,trySelf node:internal/modules/cjs/loader:452:17,0xc4d9927890,~
code-source-info,0x35a8d4a62a6,115,13336,14194,C0O13363C4O13380C5O13393C6O13436C9O13436C17O13413C22O13424C27O13475C31O13491C37O13514C38O13527C39O13546C47O13565C48O13578C49O13588C51O13622C55O13614C60O13635C65O13662C70O13708C82O13666C89O13725C94O13743C97O13777C102O13782C107O13743C112O13741C118O13808C119O13821C123O13843C128O13872C133O13902C138O13924C142O13902C149O13967C152O13967C159O13994C168O13872C183O13850C188O14040C200O14063C203O14069C210O14074C215O14109C222O14153C226O14115C231O14109C232O14178C234O14178,,
code-creation,LazyCompile,10,212613,0x35a8d4a655e,129,readPackageScope node:internal/modules/cjs/loader:332:26,0xc4d9927660,~
code-source-info,0x35a8d4a655e,115,9584,10117,C0O9628C7O9662C10O9628C16O9675C18O9704C25O9759C28O9721C34O9770C47O9782C54O9839C61O9878C66O9882C70O9843C77O9908C78O9921C79O9941C84O9965C86O9963C90O9941C95O9976C97O9987C104O10009C110O10029C116O10047C117O10075C119O10075C124O9694C127O10101C128O10114,,
code-creation,LazyCompile,10,212716,0x35a8d4a68be,234,readPackage node:internal/modules/cjs/loader:301:21,0xc4d9927610,~
code-source-info,0x35a8d4a68be,115,8736,9555,C0O8772C5O8777C13O8777C20O8837C25O8854C30O8854C36O8872C38O8900C40O8916C41O8937C46O8955C51O8955C57O8994C63O9007C72O9033C77O9044C79O9075C84O9092C91O9092C97O9119C98O9132C102O9169C107O9169C112O9208C117O9230C125O9256C133O9285C141O9317C149O9346C160O9364C165O9381C170O9381C176O9411C178O9427C190O9450C195O9457C199O9474C207O9503C213O9514C220O9525C224O9521C227O9484C231O9539C233O9539,,
code-creation,LazyCompile,10,212823,0x35a8d4a6bc6,199,read node:internal/modules/package_json_reader:16:14,0xc4d992d5c8,~
code-source-info,0x35a8d4a6bc6,116,307,992,C0O323C5O333C10O333C17O355C22O368C27O368C32O382C33O432C40O461C43O461C48O432C53O404C59O415C66O512C73O514C79O522C86O568C92O568C97O549C102O600C106O633C112O670C115O681C127O732C132O766C142O679C148O805C154O853C159O853C164O885C169O894C174O894C180O943C185O949C190O949C196O975C198O989,,
code-creation,LazyCompile,10,212907,0x35a8d4a6fe6,232,toNamespacedPath node:path:618:19,0x3a93d9cd6f8,~
code-source-info,0x35a8d4a6fe6,41,20086,21201,C0O20152C6O20189C12O20196C17O20210C19O20222C20O20251C25O20257C30O20257C36O20296C43O20303C48O20316C50O20328C51O20336C58O20340C66O20387C68O20383C73O20445C81O20449C89O20496C91O20492C96O20541C104O20541C110O20594C112O20607C114O20603C121O20638C123O20634C128O20738C133O20760C139O20760C148O20800C151O20833C156O20865C161O20865C167O20845C175O20919C181O20919C189O20966C191O20962C198O20987C204O20987C212O21034C214O21030C219O21137C224O21154C228O21169C229O21184C231O21196,,
code-creation,LazyCompile,10,213226,0x35a8d4a7b96,438,Module._findPath node:internal/modules/cjs/loader:505:28,0xc4d9927f80,~
code-source-info,0x35a8d4a7b
code-creation,LazyCompile,10,213342,0x35a8d4a7f46,109,isAbsolute node:path:402:13,0x3a93d9cd5d0,~
code-source-info,0x35a8d4a7f46,41,13104,13523,C0O13118C8O13118C13O13170C18O13183C19O13191C24O13205C25O13218C26O13239C33O13239C39O13280C42O13287C50O13355C58O13369C66O13405C72O13405C80O13444C82O13440C92O13481C98O13481C104O13465C108O13518,,
code-creation,LazyCompile,10,213468,0x35a8d4a81d6,85,stat node:internal/modules/cjs/loader:151:14,0xc4d9927480,~
code-source-info,0x35a8d4a81d6,115,4780,5189,C0O4796C5O4812C10O4812C17O4843C23O4889C28O4899C33O4899C39O4919C41O4945C43O4959C44O4983C49O4983C54O5016C61O5049C66O5131C71O5141C76O5141C82O5172C84O5186,,
code-creation,LazyCompile,10,213586,0x35a8d4a832e,44,tryExtensions node:internal/modules/cjs/loader:411:23,0xc4d99277a0,~
code-source-info,0x35a8d4a832e,115,12245,12438,C0O12281C2O12293C6O12286C11O12330C16O12346C19O12340C23O12330C29O12367C31O12390C33O12406C34O12302C39O12268C42O12422C43O12435,,
code-creation,LazyCompile,10,213636,0x35a8d4a845e,50,tryFile node:internal/modules/cjs/loader:395:17,0xc4d9927700,~
code-source-info,0x35a8d4a845e,115,11805,12006,C0O11843C3O11843C8O11865C9O11872C14O11879C15O11886C16O11890C24O11915C26O11930C31O11942C36O11942C41O11963C42O11972C45O11979C49O12003,,
code-creation,LazyCompile,10,213761,0x35a8d4a85a6,42,toRealPath node:internal/modules/cjs/loader:404:20,0xc4d9927750,~
code-source-info,0x35a8d4a85a6,115,12029,12145,C0O12048C5O12058C10O12071C17O12092C20O12103C28O12122C35O12058C41O12142,,
code-creation,LazyCompile,10,214054,0x35a8d4a8d26,1079,realpathSync node:fs:2460:22,0x39c7b619940,~
script-source,83,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\x0d\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// When using FSReqCallback\x2C make sure to create the object only *after* all\x0d\n// parameter validation has happened\x2C so that the objects are not kept in memory\x0d\n// in case they are created but never used due to an exception.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  BigIntPrototypeToString\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  S_IFIFO\x2C\x0d\n  S_IFLNK\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x2C\x0d\n  S_IFSOCK\x2C\x0d\n  F_OK\x2C\x0d\n  R_OK\x2C\x0d\n  W_OK\x2C\x0d\n  X_OK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  O_SYMLINK\x0d\n} = constants;\x0d\n\x0d\nconst pathModule = require('path');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\n\x0d\n// We need to get the statValues from the binding at the callsite since\x0d\n// it's re-initialized after deserialization.\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_FEATURE_UNAVAILABLE_ON_PLATFORM\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { FSReqCallback } = binding;\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n  kEmptyObject\x2C\x0d\n  promisify: {\x0d\n    custom: kCustomPromisifiedSymbol\x2C\x0d\n  }\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  Stats\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  realpathCacheKey\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  validatePrimitiveStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n} = require('internal/fs/utils');\x0d\nconst {\x0d\n  Dir\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x0d\n} = require('internal/fs/dir');\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateCallback\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst watchers = require('internal/fs/watchers');\x0d\nconst ReadFileContext = require('internal/fs/read_file_context');\x0d\n\x0d\nlet truncateWarn = true;\x0d\nlet fs;\x0d\n\x0d\n// Lazy loaded\x0d\nlet cpFn;\x0d\nlet cpSyncFn;\x0d\nlet promises = null;\x0d\nlet ReadStream;\x0d\nlet WriteStream;\x0d\nlet rimraf;\x0d\nlet rimrafSync;\x0d\n\x0d\n// These have to be separate because of how graceful-fs happens to do it's\x0d\n// monkeypatching.\x0d\nlet FileReadStream;\x0d\nlet FileWriteStream;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst isOSX = process.platform === 'darwin';\x0d\n\x0d\n\x0d\nfunction showTruncateDeprecation() {\x0d\n  if (truncateWarn) {\x0d\n    process.emitWarning(\x0d\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\x0d\n      'fs.ftruncate with a file descriptor instead.'\x2C\x0d\n      'DeprecationWarning'\x2C 'DEP0081');\x0d\n    truncateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return cb;\x0d\n}\x0d\n\x0d\n// Ensure that callbacks run in the global context. Only use this function\x0d\n// for callbacks that are passed to the binding layer\x2C callbacks that are\x0d\n// invoked from JS already run in the proper scope.\x0d\nfunction makeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\x0d\n}\x0d\n\x0d\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\x0d\n// an optimization\x2C since the data passed back to the callback needs to be\x0d\n// transformed anyway.\x0d\nfunction makeStatsCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (err\x2C stats) => {\x0d\n    if (err) return cb(err);\x0d\n    cb(err\x2C getStatsFromBinding(stats));\x0d\n  };\x0d\n}\x0d\n\x0d\nconst isFd = isUint32;\x0d\n\x0d\nfunction isFileType(stats\x2C fileType) {\x0d\n  // Use stats array directly to avoid creating an fs.Stats instance just for\x0d\n  // our internal use.\x0d\n  let mode = stats[1];\x0d\n  if (typeof mode === 'bigint')\x0d\n    mode = Number(mode);\x0d\n  return (mode & S_IFMT) === fileType;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests a user's permissions for the file or directory\x0d\n * specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction access(path\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = F_OK;\x0d\n  }\x0d\n\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously tests a user's permissions for the file or\x0d\n * directory specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction accessSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(exists?: boolean) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction exists(path\x2C callback) {\x0d\n  maybeCallback(callback);\x0d\n\x0d\n  function suppressedCallback(err) {\x0d\n    callback(err ? false : true);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\x0d\n  } catch {\x0d\n    return callback(false);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperty(exists\x2C kCustomPromisifiedSymbol\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: function exists(path) { // eslint-disable-line func-name-matching\x0d\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// fs.existsSync never throws\x2C it only returns true or false.\x0d\n// Since fs.existsSync never throws\x2C users have established\x0d\n// the expectation that passing invalid arguments to it\x2C even like\x0d\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\x0d\n// validation errors to users properly out of compatibility concerns.\x0d\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\x0d\n/**\x0d\n * Synchronously tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction existsSync(path) {\x0d\n  try {\x0d\n    path = getValidatedPath(path);\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n  const ctx = { path };\x0d\n  const nPath = pathModule.toNamespacedPath(path);\x0d\n  binding.access(nPath\x2C F_OK\x2C undefined\x2C ctx);\x0d\n\x0d\n  // In case of an invalid symlink\x2C `binding.access()` on win32\x0d\n  // will **not** return an error and is therefore not enough.\x0d\n  // Double check with `binding.stat()`.\x0d\n  if (isWindows && ctx.errno === undefined) {\x0d\n    binding.stat(nPath\x2C false\x2C undefined\x2C ctx);\x0d\n  }\x0d\n\x0d\n  return ctx.errno === undefined;\x0d\n}\x0d\n\x0d\nfunction readFileAfterOpen(err\x2C fd) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err) {\x0d\n    context.callback(err);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  context.fd = fd;\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = readFileAfterStat;\x0d\n  req.context = context;\x0d\n  binding.fstat(fd\x2C false\x2C req);\x0d\n}\x0d\n\x0d\nfunction readFileAfterStat(err\x2C stats) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err)\x0d\n    return context.close(err);\x0d\n\x0d\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n\x0d\n  if (size > kIoMaxLength) {\x0d\n    err = new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    return context.close(err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    if (size === 0) {\x0d\n      context.buffers = [];\x0d\n    } else {\x0d\n      context.buffer = Buffer.allocUnsafeSlow(size);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    return context.close(err);\x0d\n  }\x0d\n  context.read();\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    callback(new AbortError(undefined\x2C { cause: signal?.reason }));\x0d\n    return true;\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   data?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readFile(path\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const context = new ReadFileContext(callback\x2C options.encoding);\x0d\n  context.isUserFd = isFd(path); // File descriptor ownership\x0d\n\x0d\n  if (options.signal) {\x0d\n    context.signal = options.signal;\x0d\n  }\x0d\n  if (context.isUserFd) {\x0d\n    process.nextTick(function tick(context) {\x0d\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\x0d\n    }\x2C context);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.context = context;\x0d\n  req.oncomplete = readFileAfterOpen;\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               0o666\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\nfunction tryStatSync(fd\x2C isUserFd) {\x0d\n  const ctx = {};\x0d\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C ctx);\x0d\n  if (ctx.errno !== undefined && !isUserFd) {\x0d\n    fs.closeSync(fd);\x0d\n    throw uvException(ctx);\x0d\n  }\x0d\n  return stats;\x0d\n}\x0d\n\x0d\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\x0d\n  let threw = true;\x0d\n  let buffer;\x0d\n  try {\x0d\n    if (size > kIoMaxLength) {\x0d\n      throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    }\x0d\n    buffer = Buffer.allocUnsafe(size);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\x0d\n  let threw = true;\x0d\n  let bytesRead;\x0d\n  try {\x0d\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return bytesRead;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readFileSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\x0d\n\x0d\n  const stats = tryStatSync(fd\x2C isUserFd);\x0d\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n  let pos = 0;\x0d\n  let buffer; // Single buffer with file data\x0d\n  let buffers; // List for when size is unknown\x0d\n\x0d\n  if (size === 0) {\x0d\n    buffers = [];\x0d\n  } else {\x0d\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\x0d\n  }\x0d\n\x0d\n  let bytesRead;\x0d\n\x0d\n  if (size !== 0) {\x0d\n    do {\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0 && pos < size);\x0d\n  } else {\x0d\n    do {\x0d\n      // The kernel lies about many files.\x0d\n      // Go ahead and try to read some bytes.\x0d\n      buffer = Buffer.allocUnsafe(8192);\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\x0d\n      if (bytesRead !== 0) {\x0d\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\x0d\n      }\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0);\x0d\n  }\x0d\n\x0d\n  if (!isUserFd)\x0d\n    fs.closeSync(fd);\x0d\n\x0d\n  if (size === 0) {\x0d\n    // Data was collected into the buffers list.\x0d\n    buffer = Buffer.concat(buffers\x2C pos);\x0d\n  } else if (pos < size) {\x0d\n    buffer = buffer.slice(0\x2C pos);\x0d\n  }\x0d\n\x0d\n  if (options.encoding) buffer = buffer.toString(options.encoding);\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction defaultCloseCallback(err) {\x0d\n  if (err != null) throw err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} [callback]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction close(fd\x2C callback = defaultCloseCallback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  if (callback !== defaultCloseCallback)\x0d\n    callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.close(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction closeSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.close(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   fd?: number\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction open(path\x2C flags\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  if (arguments.length < 3) {\x0d\n    callback = flags;\x0d\n    flags = 'r';\x0d\n    mode = 0o666;\x0d\n  } else if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0o666;\x0d\n  } else {\x0d\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  }\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               mode\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction openSync(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n                              flagsNumber\x2C mode\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {number} offsetOrOptions\x0d\n * @param {number} length\x0d\n * @param {number | bigint | null} position\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffer?: Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction read(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  let params = null;\x0d\n  if (arguments.length <= 4) {\x0d\n    if (arguments.length === 4) {\x0d\n      // This is fs.read(fd\x2C buffer\x2C options\x2C callback)\x0d\n      validateObject(offsetOrOptions\x2C 'options'\x2C { nullable: true });\x0d\n      callback = length;\x0d\n      params = offsetOrOptions;\x0d\n    } else if (arguments.length === 3) {\x0d\n      // This is fs.read(fd\x2C bufferOrParams\x2C callback)\x0d\n      if (!isArrayBufferView(buffer)) {\x0d\n        // This is fs.read(fd\x2C params\x2C callback)\x0d\n        params = buffer;\x0d\n        ({ buffer = Buffer.alloc(16384) } = params ?? kEmptyObject);\x0d\n      }\x0d\n      callback = offsetOrOptions;\x0d\n    } else {\x0d\n      // This is fs.read(fd\x2C callback)\x0d\n      callback = buffer;\x0d\n      buffer = Buffer.alloc(16384);\x0d\n    }\x0d\n\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = params ?? kEmptyObject);\x0d\n  }\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n  callback = maybeCallback(callback);\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return process.nextTick(function tick() {\x0d\n      callback(null\x2C 0\x2C buffer);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  function wrapper(err\x2C bytesRead) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C bytesRead || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(read\x2C kCustomPromisifyArgsSymbol\x2C\x0d\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads the file from the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | bigint | null;\x0d\n *   }} [offset]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.readSync(fd\x2C buffer\x2C options)\x0d\n    const options = offset || kEmptyObject;\x0d\n\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = options);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  const ctx = {};\x0d\n  const result = binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor)\x0d\n * and writes to an array of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffers?: ArrayBufferView[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C read) {\x0d\n    callback(err\x2C read || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(readv\x2C kCustomPromisifyArgsSymbol\x2C\x0d\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads file from the\x0d\n * specified `fd` (file descriptor) and writes to an array\x0d\n * of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readvSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.readBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes `buffer` to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | object} buffer\x0d\n * @param {number | object} [offsetOrOptions]\x0d\n * @param {number} [length]\x0d\n * @param {number | null} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number;\x0d\n *   buffer?: Buffer | TypedArray | DataView\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction write(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C written || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    callback = maybeCallback(callback || position || length || offset);\x0d\n\x0d\n    if (typeof offset === 'object') {\x0d\n      ({\x0d\n        offset = 0\x2C\x0d\n        length = buffer.byteLength - offset\x2C\x0d\n        position = null\x2C\x0d\n      } = offsetOrOptions ?? kEmptyObject);\x0d\n    }\x0d\n\x0d\n    if (offset == null || typeof offset === 'function') {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = wrapper;\x0d\n    return binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n\x0d\n  if (typeof position !== 'function') {\x0d\n    if (typeof offset === 'function') {\x0d\n      position = offset;\x0d\n      offset = null;\x0d\n    } else {\x0d\n      position = length;\x0d\n    }\x0d\n    length = 'utf8';\x0d\n  }\x0d\n\x0d\n  const str = String(buffer);\x0d\n  validateEncoding(str\x2C length);\x0d\n  callback = maybeCallback(position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n  return binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(write\x2C kCustomPromisifyArgsSymbol\x2C\x0d\n                     { __proto__: null\x2C value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously writes `buffer` to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | null;\x0d\n *   }} [offsetOrOptions]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writeSync(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  let result;\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (typeof offset === 'object') {\x0d\n      ({\x0d\n        offset = 0\x2C\x0d\n        length = buffer.byteLength - offset\x2C\x0d\n        position = null\x2C\x0d\n      } = offsetOrOptions ?? kEmptyObject);\x0d\n    }\x0d\n    if (position === undefined)\x0d\n      position = null;\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  } else {\x0d\n    validatePrimitiveStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n    validateEncoding(buffer\x2C length);\x0d\n\x0d\n    if (offset === undefined)\x0d\n      offset = null;\x0d\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes an array of `ArrayBufferView`s to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number\x2C\x0d\n *   buffers?: ArrayBufferView[]\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    callback(err\x2C written || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    process.nextTick(callback\x2C null\x2C 0\x2C buffers);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(writev\x2C kCustomPromisifyArgsSymbol\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: ['bytesWritten'\x2C 'buffer']\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\n/**\x0d\n * Synchronously writes an array of `ArrayBufferView`s\x0d\n * to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writevSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.writeBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rename(oldPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Synchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction renameSync(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const ctx = { path: oldPath\x2C dest: newPath };\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncate(path\x2C len\x2C callback) {\x0d\n  if (typeof path === 'number') {\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncate(path\x2C len\x2C callback);\x0d\n  }\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  } else if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = maybeCallback(callback);\x0d\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\x0d\n    if (er) return callback(er);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = function oncomplete(er) {\x0d\n      fs.close(fd\x2C (er2) => {\x0d\n        callback(aggregateTwoErrors(er2\x2C er));\x0d\n      });\x0d\n    };\x0d\n    binding.ftruncate(fd\x2C len\x2C req);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncateSync(path\x2C len) {\x0d\n  if (typeof path === 'number') {\x0d\n    // legacy\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncateSync(path\x2C len);\x0d\n  }\x0d\n  if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n  // Allow error to be thrown\x2C but still close fd.\x0d\n  const fd = fs.openSync(path\x2C 'r+');\x0d\n  let ret;\x0d\n\x0d\n  try {\x0d\n    ret = fs.ftruncateSync(fd\x2C len);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.ftruncate(fd\x2C len\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncateSync(fd\x2C len = 0) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  const ctx = {};\x0d\n  binding.ftruncate(fd\x2C len\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction lazyLoadCp() {\x0d\n  if (cpFn === undefined) {\x0d\n    ({ cpFn } = require('internal/fs/cp/cp'));\x0d\n    cpFn = require('util').callbackify(cpFn);\x0d\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction lazyLoadRimraf() {\x0d\n  if (rimraf === undefined)\x0d\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdir(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  callback = makeCallback(callback);\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    validateRmOptions(\x0d\n      path\x2C\x0d\n      { ...options\x2C force: false }\x2C\x0d\n      true\x2C\x0d\n      (err\x2C options) => {\x0d\n        if (err === false) {\x0d\n          const req = new FSReqCallback();\x0d\n          req.oncomplete = callback;\x0d\n          return binding.rmdir(path\x2C req);\x0d\n        }\x0d\n        if (err) {\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        lazyLoadRimraf();\x0d\n        rimraf(path\x2C options\x2C callback);\x0d\n      });\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = callback;\x0d\n    return binding.rmdir(path\x2C req);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdirSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\x0d\n    if (options !== false) {\x0d\n      lazyLoadRimraf();\x0d\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n    }\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n  }\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.rmdir(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  return handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rm(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\x0d\n    if (err) {\x0d\n      return callback(err);\x0d\n    }\x0d\n    lazyLoadRimraf();\x0d\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n  options = validateRmOptionsSync(path\x2C options\x2C false);\x0d\n\x0d\n  lazyLoadRimraf();\x0d\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Forces all currently queued I/O operations associated\x0d\n * with the file to the operating system's synchronized\x0d\n * I/O completion state.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fdatasync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously forces all currently queued I/O operations\x0d\n * associated with the file to the operating\x0d\n * system's synchronized I/O completion state.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fdatasync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Requests for all data for the open file descriptor\x0d\n * to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fsync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously requests for all data for the open\x0d\n * file descriptor to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fsync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdir(path\x2C options\x2C callback) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n  } else if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @returns {string | void}\x0d\n */\x0d\nfunction mkdirSync(path\x2C options) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                               parseFileMode(mode\x2C 'mode')\x2C recursive\x2C\x0d\n                               undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  if (recursive) {\x0d\n    return result;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   files?: string[] | Buffer[] | Direct[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readdir(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  if (!options.withFileTypes) {\x0d\n    req.oncomplete = callback;\x0d\n  } else {\x0d\n    req.oncomplete = (err\x2C result) => {\x0d\n      if (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      getDirents(path\x2C result\x2C callback);\x0d\n    };\x0d\n  }\x0d\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\x0d\n                  !!options.withFileTypes\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer[] | Dirent[]}\x0d\n */\x0d\nfunction readdirSync(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 options.encoding\x2C !!options.withFileTypes\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return options.withFileTypes ? getDirents(path\x2C result) : result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Invokes the callback with the `fs.Stats`\x0d\n * for the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  callback = makeStatsCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.fstat(fd\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Retrieves the `fs.Stats` for the symbolic link\x0d\n * referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously gets the stats of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\nfunction hasNoEntryError(ctx) {\x0d\n  if (ctx.errno) {\x0d\n    const uvErr = uvErrmapGet(ctx.errno);\x0d\n    return uvErr?.[0] === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  if (ctx.error) {\x0d\n    return ctx.error.code === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction fstatSync(fd\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = { fd };\x0d\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the symbolic link referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                              options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats`\x0d\n * for the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                             options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   linkString?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readlink(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readlinkSync(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const ctx = { path };\x0d\n  const result = binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                                  options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates the link called `path` pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | null} [type_]\x0d\n * @param {(err?: Error) => any} callback_\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  const callback = makeCallback(arguments[arguments.length - 1]);\x0d\n\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (isWindows && type === null) {\x0d\n    let absoluteTarget;\x0d\n    try {\x0d\n      // Symlinks targets can be relative to the newly created path.\x0d\n      // Calculate absolute file name of the symlink target\x2C and check\x0d\n      // if it is a directory. Ignore resolve error to keep symlink\x0d\n      // errors consistent between platforms if invalid path is\x0d\n      // provided.\x0d\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n    if (absoluteTarget !== undefined) {\x0d\n      stat(absoluteTarget\x2C (err\x2C stat) => {\x0d\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\x0d\n        const resolvedFlags = stringToSymlinkType(resolvedType);\x0d\n        const destination = preprocessSymlinkDestination(target\x2C\x0d\n                                                         resolvedType\x2C\x0d\n                                                         path);\x0d\n\x0d\n        const req = new FSReqCallback();\x0d\n        req.oncomplete = callback;\x0d\n        binding.symlink(destination\x2C\x0d\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\x0d\n      });\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\x0d\n\x0d\n  const flags = stringToSymlinkType(type);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates the link called `path`\x0d\n * pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | null} [type]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlinkSync(target\x2C path\x2C type) {\x0d\n  type = (typeof type === 'string' ? type : null);\x0d\n  if (isWindows && type === null) {\x0d\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\x0d\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\x0d\n      type = 'dir';\x0d\n    }\x0d\n  }\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  const flags = stringToSymlinkType(type);\x0d\n\x0d\n  const ctx = { path: target\x2C dest: path };\x0d\n  binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                  pathModule.toNamespacedPath(path)\x2C flags\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction link(existingPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n               pathModule.toNamespacedPath(newPath)\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction linkSync(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const ctx = { path: existingPath\x2C dest: newPath };\x0d\n  const result = binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                              pathModule.toNamespacedPath(newPath)\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlink(path\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlinkSync(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmod(fd\x2C mode\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchmod(fd\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmodSync(fd\x2C mode) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  const ctx = {};\x0d\n  binding.fchmod(fd\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmod(path\x2C mode\x2C callback) {\x0d\n  callback = maybeCallback(callback);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n    // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n    // but still try to close\x2C and report closing errors if they occur.\x0d\n    fs.fchmod(fd\x2C mode\x2C (err) => {\x0d\n      fs.close(fd\x2C (err2) => {\x0d\n        callback(aggregateTwoErrors(err2\x2C err));\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmodSync(path\x2C mode) {\x0d\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\x0d\n\x0d\n  // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n  // but still try to close\x2C and report closing errors if they occur.\x0d\n  let ret;\x0d\n  try {\x0d\n    ret = fs.fchmodSync(fd\x2C mode);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmod(path\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmodSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchownSync(fd\x2C uid\x2C gid) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C\x0d\n                 toUnixTimestamp(mtime)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C toUnixTimestamp(mtime)\x2C\x0d\n                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by the supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by the\x0d\n * supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimesSync(fd\x2C atime\x2C mtime) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  const ctx = {};\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the access and modification times of\x0d\n * a file in the same way as `fs.utimes()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the access and modification\x0d\n * times of a file in the same way as `fs.utimesSync()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    const abortError = new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n    if (isUserFd) {\x0d\n      callback(abortError);\x0d\n    } else {\x0d\n      fs.close(fd\x2C (err) => {\x0d\n        callback(aggregateTwoErrors(err\x2C abortError));\x0d\n      });\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\x0d\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\x0d\n    if (writeErr) {\x0d\n      if (isUserFd) {\x0d\n        callback(writeErr);\x0d\n      } else {\x0d\n        fs.close(fd\x2C (err) => {\x0d\n          callback(aggregateTwoErrors(err\x2C writeErr));\x0d\n        });\x0d\n      }\x0d\n    } else if (written === length) {\x0d\n      if (isUserFd) {\x0d\n        callback(null);\x0d\n      } else {\x0d\n        fs.close(fd\x2C callback);\x0d\n      }\x0d\n    } else {\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  if (isFd(path)) {\x0d\n    const isUserFd = true;\x0d\n    const signal = options.signal;\x0d\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\x0d\n    if (openErr) {\x0d\n      callback(openErr);\x0d\n    } else {\x0d\n      const isUserFd = false;\x0d\n      const signal = options.signal;\x0d\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\x0d\n\x0d\n  let offset = 0;\x0d\n  let length = data.byteLength;\x0d\n  try {\x0d\n    while (length > 0) {\x0d\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n    }\x0d\n  } finally {\x0d\n    if (!isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFileSync(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Watches for the changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {string | {\x0d\n *   persistent?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   encoding?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   eventType?: string\x2C\x0d\n *   filename?: string | Buffer\x0d\n *   ) => any} [listener]\x0d\n * @returns {watchers.FSWatcher}\x0d\n */\x0d\nfunction watch(filename\x2C options\x2C listener) {\x0d\n  if (typeof options === 'function') {\x0d\n    listener = options;\x0d\n  }\x0d\n  options = getOptions(options);\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  if (options.persistent === undefined) options.persistent = true;\x0d\n  if (options.recursive === undefined) options.recursive = false;\x0d\n  if (options.recursive && !(isOSX || isWindows))\x0d\n    throw new ERR_FEATURE_UNAVAILABLE_ON_PLATFORM('watch recursively');\x0d\n  const watcher = new watchers.FSWatcher();\x0d\n  watcher[watchers.kFSWatchStart](filename\x2C\x0d\n                                  options.persistent\x2C\x0d\n                                  options.recursive\x2C\x0d\n                                  options.encoding);\x0d\n\x0d\n  if (listener) {\x0d\n    watcher.addListener('change'\x2C listener);\x0d\n  }\x0d\n  if (options.signal) {\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(() => watcher.close());\x0d\n    } else {\x0d\n      const listener = () => watcher.close();\x0d\n      options.signal.addEventListener('abort'\x2C listener);\x0d\n      watcher.once('close'\x2C () => {\x0d\n        options.signal.removeEventListener('abort'\x2C listener);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return watcher;\x0d\n}\x0d\n\x0d\n\x0d\nconst statWatchers = new SafeMap();\x0d\n\x0d\n/**\x0d\n * Watches for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   persistent?: boolean;\x0d\n *   interval?: number;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   current?: Stats\x2C\x0d\n *   previous?: Stats\x0d\n *   ) => any} listener\x0d\n * @returns {watchers.StatWatcher}\x0d\n */\x0d\nfunction watchFile(filename\x2C options\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  let stat;\x0d\n\x0d\n  if (options === null || typeof options !== 'object') {\x0d\n    listener = options;\x0d\n    options = null;\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\x0d\n    // a little on the slow side but let's stick with it for now to keep\x0d\n    // behavioral changes to a minimum.\x0d\n    interval: 5007\x2C\x0d\n    persistent: true\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n\x0d\n  stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) {\x0d\n    stat = new watchers.StatWatcher(options.bigint);\x0d\n    stat[watchers.kFSStatWatcherStart](filename\x2C\x0d\n                                       options.persistent\x2C options.interval);\x0d\n    statWatchers.set(filename\x2C stat);\x0d\n  } else {\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\x0d\n  }\x0d\n\x0d\n  stat.addListener('change'\x2C listener);\x0d\n  return stat;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Stops watching for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {() => any} [listener]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unwatchFile(filename\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  const stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) return;\x0d\n\x0d\n  if (typeof listener === 'function') {\x0d\n    const beforeListenerCount = stat.listenerCount('change');\x0d\n    stat.removeListener('change'\x2C listener);\x0d\n    if (stat.listenerCount('change') < beforeListenerCount)\x0d\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\x0d\n  } else {\x0d\n    stat.removeAllListeners('change');\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\x0d\n  }\x0d\n\x0d\n  if (stat.listenerCount('change') === 0) {\x0d\n    stat.stop();\x0d\n    statWatchers.delete(filename);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nlet splitRoot;\x0d\nif (isWindows) {\x0d\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\x0d\n  // slash.\x0d\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    return RegExpPrototypeExec(splitRootRe\x2C str)[0];\x0d\n  };\x0d\n} else {\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    for (let i = 0; i < str.length; ++i) {\x0d\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\x0d\n        return StringPrototypeSlice(str\x2C 0\x2C i);\x0d\n    }\x0d\n    return str;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction encodeRealpathResult(result\x2C options) {\x0d\n  if (!options || !options.encoding || options.encoding === 'utf8')\x0d\n    return result;\x0d\n  const asBuffer = Buffer.from(result);\x0d\n  if (options.encoding === 'buffer') {\x0d\n    return asBuffer;\x0d\n  }\x0d\n  return asBuffer.toString(options.encoding);\x0d\n}\x0d\n\x0d\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\x0d\nlet nextPart;\x0d\nif (isWindows) {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    for (; i < p.length; ++i) {\x0d\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\x0d\n\x0d\n      // Check for a separator character\x0d\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\x0d\n        return i;\x0d\n    }\x0d\n    return -1;\x0d\n  };\x0d\n} else {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string | null; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction realpathSync(p\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  p = toPathIfFileURL(p);\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const cache = options[realpathCacheKey];\x0d\n  const maybeCachedResult = cache?.get(p);\x0d\n  if (maybeCachedResult) {\x0d\n    return maybeCachedResult;\x0d\n  }\x0d\n\x0d\n  const seenLinks = new SafeMap();\x0d\n  const knownHard = new SafeSet();\x0d\n  const original = p;\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  // Skip over roots\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows) {\x0d\n    const ctx = { path: base };\x0d\n    binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n    handleErrorFromBinding(ctx);\x0d\n    knownHard.add(base);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  // NB: p.length changes.\x0d\n  while (pos < p.length) {\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard.has(base) || cache?.get(base) === base) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        break;\x0d\n      }\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    let resolvedLink;\x0d\n    const maybeCachedResolved = cache?.get(base);\x0d\n    if (maybeCachedResolved) {\x0d\n      resolvedLink = maybeCachedResolved;\x0d\n    } else {\x0d\n      // Use stats array directly to avoid creating an fs.Stats instance just\x0d\n      // for our internal use.\x0d\n\x0d\n      const baseLong = pathModule.toNamespacedPath(base);\x0d\n      const ctx = { path: base };\x0d\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n\x0d\n      if (!isFileType(stats\x2C S_IFLNK)) {\x0d\n        knownHard.add(base);\x0d\n        cache?.set(base\x2C base);\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      // Read the link if it wasn't read before\x0d\n      // dev/ino always return 0 on windows\x2C so skip the check.\x0d\n      let linkTarget = null;\x0d\n      let id;\x0d\n      if (!isWindows) {\x0d\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\x0d\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\x0d\n        id = `${dev}:${ino}`;\x0d\n        if (seenLinks.has(id)) {\x0d\n          linkTarget = seenLinks.get(id);\x0d\n        }\x0d\n      }\x0d\n      if (linkTarget === null) {\x0d\n        const ctx = { path: base };\x0d\n        binding.stat(baseLong\x2C false\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n        linkTarget = binding.readlink(baseLong\x2C undefined\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n      }\x0d\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\x0d\n\x0d\n      cache?.set(base\x2C resolvedLink);\x0d\n      if (!isWindows) seenLinks.set(id\x2C linkTarget);\x0d\n    }\x0d\n\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n\x0d\n    // Skip over roots\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard.has(base)) {\x0d\n      const ctx = { path: base };\x0d\n      binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n      knownHard.add(base);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  cache?.set(original\x2C p);\x0d\n  return encodeRealpathResult(p\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nrealpathSync.native = (path\x2C options) => {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.realpath(path\x2C options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction realpath(p\x2C options\x2C callback) {\x0d\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\x0d\n  options = getOptions(options);\x0d\n  p = toPathIfFileURL(p);\x0d\n\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const seenLinks = new SafeMap();\x0d\n  const knownHard = new SafeSet();\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows && !knownHard.has(base)) {\x0d\n    fs.lstat(base\x2C (err\x2C stats) => {\x0d\n      if (err) return callback(err);\x0d\n      knownHard.add(base);\x0d\n      LOOP();\x0d\n    });\x0d\n  } else {\x0d\n    process.nextTick(LOOP);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  function LOOP() {\x0d\n    // Stop if scanned past end of path\x0d\n    if (pos >= p.length) {\x0d\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n    }\x0d\n\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard.has(base)) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n      }\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\x0d\n  }\x0d\n\x0d\n  function gotStat(err\x2C stats) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    // If not a symlink\x2C skip to the next path part\x0d\n    if (!stats.isSymbolicLink()) {\x0d\n      knownHard.add(base);\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    // Stat & read the link if not read before.\x0d\n    // Call `gotTarget()` as soon as the link target is known.\x0d\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\x0d\n    let id;\x0d\n    if (!isWindows) {\x0d\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\x0d\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\x0d\n      id = `${dev}:${ino}`;\x0d\n      if (seenLinks.has(id)) {\x0d\n        return gotTarget(null\x2C seenLinks.get(id));\x0d\n      }\x0d\n    }\x0d\n    fs.stat(base\x2C (err) => {\x0d\n      if (err) return callback(err);\x0d\n\x0d\n      fs.readlink(base\x2C (err\x2C target) => {\x0d\n        if (!isWindows) seenLinks.set(id\x2C target);\x0d\n        gotTarget(err\x2C target);\x0d\n      });\x0d\n    });\x0d\n  }\x0d\n\x0d\n  function gotTarget(err\x2C target) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\x0d\n  }\x0d\n\x0d\n  function gotResolvedLink(resolvedLink) {\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard.has(base)) {\x0d\n      fs.lstat(base\x2C (err) => {\x0d\n        if (err) return callback(err);\x0d\n        knownHard.add(base);\x0d\n        LOOP();\x0d\n      });\x0d\n    } else {\x0d\n      process.nextTick(LOOP);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nrealpath.native = (path\x2C options\x2C callback) => {\x0d\n  callback = makeCallback(callback || options);\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  return binding.realpath(path\x2C options.encoding\x2C req);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   directory?: string\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdtemp(prefix\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options);\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string}\x0d\n */\x0d\nfunction mkdtempSync(prefix\x2C options) {\x0d\n  options = getOptions(options);\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const path = `${prefix}XXXXXX`;\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdtemp(path\x2C options.encoding\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0;\x0d\n  }\x0d\n\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFileSync(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  const ctx = { path: src\x2C dest };  // non-prefixed\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cp(src\x2C dest\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpFn(src\x2C dest\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cpSync(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpSyncFn(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nfunction lazyLoadStreams() {\x0d\n  if (!ReadStream) {\x0d\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\x0d\n    FileReadStream = ReadStream;\x0d\n    FileWriteStream = WriteStream;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a readable stream with a default `highWaterMark`\x0d\n * of 64 KiB.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   end?: number;\x0d\n *   highWaterMark?: number;\x0d\n *   fs?: object | null;\x0d\n *   }} [options]\x0d\n * @returns {ReadStream}\x0d\n */\x0d\nfunction createReadStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new ReadStream(path\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a write stream.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   fs?: object | null;\x0d\n *   }} [options]\x0d\n * @returns {WriteStream}\x0d\n */\x0d\nfunction createWriteStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new WriteStream(path\x2C options);\x0d\n}\x0d\n\x0d\nmodule.exports = fs = {\x0d\n  appendFile\x2C\x0d\n  appendFileSync\x2C\x0d\n  access\x2C\x0d\n  accessSync\x2C\x0d\n  chown\x2C\x0d\n  chownSync\x2C\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  close\x2C\x0d\n  closeSync\x2C\x0d\n  copyFile\x2C\x0d\n  copyFileSync\x2C\x0d\n  cp\x2C\x0d\n  cpSync\x2C\x0d\n  createReadStream\x2C\x0d\n  createWriteStream\x2C\x0d\n  exists\x2C\x0d\n  existsSync\x2C\x0d\n  fchown\x2C\x0d\n  fchownSync\x2C\x0d\n  fchmod\x2C\x0d\n  fchmodSync\x2C\x0d\n  fdatasync\x2C\x0d\n  fdatasyncSync\x2C\x0d\n  fstat\x2C\x0d\n  fstatSync\x2C\x0d\n  fsync\x2C\x0d\n  fsyncSync\x2C\x0d\n  ftruncate\x2C\x0d\n  ftruncateSync\x2C\x0d\n  futimes\x2C\x0d\n  futimesSync\x2C\x0d\n  lchown\x2C\x0d\n  lchownSync\x2C\x0d\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\x0d\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\x0d\n  link\x2C\x0d\n  linkSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  lutimes\x2C\x0d\n  lutimesSync\x2C\x0d\n  mkdir\x2C\x0d\n  mkdirSync\x2C\x0d\n  mkdtemp\x2C\x0d\n  mkdtempSync\x2C\x0d\n  open\x2C\x0d\n  openSync\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  read\x2C\x0d\n  readSync\x2C\x0d\n  readv\x2C\x0d\n  readvSync\x2C\x0d\n  readFile\x2C\x0d\n  readFileSync\x2C\x0d\n  readlink\x2C\x0d\n  readlinkSync\x2C\x0d\n  realpath\x2C\x0d\n  realpathSync\x2C\x0d\n  rename\x2C\x0d\n  renameSync\x2C\x0d\n  rm\x2C\x0d\n  rmSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  symlink\x2C\x0d\n  symlinkSync\x2C\x0d\n  truncate\x2C\x0d\n  truncateSync\x2C\x0d\n  unwatchFile\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x2C\x0d\n  utimes\x2C\x0d\n  utimesSync\x2C\x0d\n  watch\x2C\x0d\n  watchFile\x2C\x0d\n  writeFile\x2C\x0d\n  writeFileSync\x2C\x0d\n  write\x2C\x0d\n  writeSync\x2C\x0d\n  writev\x2C\x0d\n  writevSync\x2C\x0d\n  Dir\x2C\x0d\n  Dirent\x2C\x0d\n  Stats\x2C\x0d\n\x0d\n  get ReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return ReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set ReadStream(val) {\x0d\n    ReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get WriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return WriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set WriteStream(val) {\x0d\n    WriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy names... these have to be separate because of how graceful-fs\x0d\n  // (and possibly other) modules monkey patch the values.\x0d\n  get FileReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileReadStream(val) {\x0d\n    FileReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get FileWriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileWriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileWriteStream(val) {\x0d\n    FileWriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // For tests\x0d\n  _toUnixTimestamp: toUnixTimestamp\x0d\n};\x0d\n\x0d\nObjectDefineProperties(fs\x2C {\x0d\n  F_OK: { __proto__: null\x2C enumerable: true\x2C value: F_OK || 0 }\x2C\x0d\n  R_OK: { __proto__: null\x2C enumerable: true\x2C value: R_OK || 0 }\x2C\x0d\n  W_OK: { __proto__: null\x2C enumerable: true\x2C value: W_OK || 0 }\x2C\x0d\n  X_OK: { __proto__: null\x2C enumerable: true\x2C value: X_OK || 0 }\x2C\x0d\n  constants: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  promises: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      promises ??= require('internal/fs/promises').exports;\x0d\n      return promises;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x35a8d4a8d
code-creation,LazyCompile,10,217477,0x35a8d4af5a6,135,getOptions node:internal/fs/utils:318:20,0x39c7b622348,~
script-source,84,node:internal/fs/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  BigInt\x2C\x0d\n  Date\x2C\x0d\n  DateNow\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Number\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeIncludes\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_EISDIR\x2C\x0d\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\x0d\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x2C\x0d\n  isDate\x2C\x0d\n  isBigUint64Array\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n  once\x2C\x0d\n} = require('internal/util');\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst kType = Symbol('type');\x0d\nconst kStats = Symbol('stats');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst {\x0d\n  fs: {\x0d\n    F_OK = 0\x2C\x0d\n    W_OK = 0\x2C\x0d\n    R_OK = 0\x2C\x0d\n    X_OK = 0\x2C\x0d\n    COPYFILE_EXCL\x2C\x0d\n    COPYFILE_FICLONE\x2C\x0d\n    COPYFILE_FICLONE_FORCE\x2C\x0d\n    O_APPEND\x2C\x0d\n    O_CREAT\x2C\x0d\n    O_EXCL\x2C\x0d\n    O_RDONLY\x2C\x0d\n    O_RDWR\x2C\x0d\n    O_SYNC\x2C\x0d\n    O_TRUNC\x2C\x0d\n    O_WRONLY\x2C\x0d\n    S_IFBLK\x2C\x0d\n    S_IFCHR\x2C\x0d\n    S_IFDIR\x2C\x0d\n    S_IFIFO\x2C\x0d\n    S_IFLNK\x2C\x0d\n    S_IFMT\x2C\x0d\n    S_IFREG\x2C\x0d\n    S_IFSOCK\x2C\x0d\n    UV_FS_SYMLINK_DIR\x2C\x0d\n    UV_FS_SYMLINK_JUNCTION\x2C\x0d\n    UV_DIRENT_UNKNOWN\x2C\x0d\n    UV_DIRENT_FILE\x2C\x0d\n    UV_DIRENT_DIR\x2C\x0d\n    UV_DIRENT_LINK\x2C\x0d\n    UV_DIRENT_FIFO\x2C\x0d\n    UV_DIRENT_SOCKET\x2C\x0d\n    UV_DIRENT_CHAR\x2C\x0d\n    UV_DIRENT_BLOCK\x0d\n  }\x2C\x0d\n  os: {\x0d\n    errno: {\x0d\n      EISDIR\x0d\n    }\x0d\n  }\x0d\n} = internalBinding('constants');\x0d\n\x0d\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\x0d\n// available on specific systems. They can be used in combination as well\x0d\n// (F_OK | R_OK | W_OK | X_OK).\x0d\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\x0d\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\x0d\n\x0d\nconst kDefaultCopyMode = 0;\x0d\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\x0d\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\x0d\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\x0d\nconst kMinimumCopyMode = MathMin(\x0d\n  kDefaultCopyMode\x2C\x0d\n  COPYFILE_EXCL\x2C\x0d\n  COPYFILE_FICLONE\x2C\x0d\n  COPYFILE_FICLONE_FORCE\x0d\n);\x0d\nconst kMaximumCopyMode = COPYFILE_EXCL |\x0d\n                         COPYFILE_FICLONE |\x0d\n                         COPYFILE_FICLONE_FORCE;\x0d\n\x0d\n// Most platforms don't allow reads or writes >= 2 GiB.\x0d\n// See https://github.com/libuv/libuv/pull/1501.\x0d\nconst kIoMaxLength = 2 ** 31 - 1;\x0d\n\x0d\n// Use 64kb in case the file type is not a regular file and thus do not know the\x0d\n// actual file size. Increasing the value further results in more frequent over\x0d\n// allocation for small files and consumes CPU time and memory that should be\x0d\n// used else wise.\x0d\n// Use up to 512kb per read otherwise to partition reading big files to prevent\x0d\n// blocking other threads in case the available threads are all in use.\x0d\nconst kReadFileUnknownBufferLength = 64 * 1024;\x0d\nconst kReadFileBufferLength = 512 * 1024;\x0d\n\x0d\nconst kWriteFileMaxChunkSize = 512 * 1024;\x0d\n\x0d\nconst kMaxUserId = 2 ** 32 - 1;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nlet fs;\x0d\nfunction lazyLoadFs() {\x0d\n  if (!fs) {\x0d\n    fs = require('fs');\x0d\n  }\x0d\n  return fs;\x0d\n}\x0d\n\x0d\nfunction assertEncoding(encoding) {\x0d\n  if (encoding && !Buffer.isEncoding(encoding)) {\x0d\n    const reason = 'is invalid encoding';\x0d\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\x0d\n  }\x0d\n}\x0d\n\x0d\nclass Dirent {\x0d\n  constructor(name\x2C type) {\x0d\n    this.name = name;\x0d\n    this[kType] = type;\x0d\n  }\x0d\n\x0d\n  isDirectory() {\x0d\n    return this[kType] === UV_DIRENT_DIR;\x0d\n  }\x0d\n\x0d\n  isFile() {\x0d\n    return this[kType] === UV_DIRENT_FILE;\x0d\n  }\x0d\n\x0d\n  isBlockDevice() {\x0d\n    return this[kType] === UV_DIRENT_BLOCK;\x0d\n  }\x0d\n\x0d\n  isCharacterDevice() {\x0d\n    return this[kType] === UV_DIRENT_CHAR;\x0d\n  }\x0d\n\x0d\n  isSymbolicLink() {\x0d\n    return this[kType] === UV_DIRENT_LINK;\x0d\n  }\x0d\n\x0d\n  isFIFO() {\x0d\n    return this[kType] === UV_DIRENT_FIFO;\x0d\n  }\x0d\n\x0d\n  isSocket() {\x0d\n    return this[kType] === UV_DIRENT_SOCKET;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass DirentFromStats extends Dirent {\x0d\n  constructor(name\x2C stats) {\x0d\n    super(name\x2C null);\x0d\n    this[kStats] = stats;\x0d\n  }\x0d\n}\x0d\n\x0d\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\x0d\n  if (name === 'constructor') {\x0d\n    continue;\x0d\n  }\x0d\n  DirentFromStats.prototype[name] = function() {\x0d\n    return this[kStats][name]();\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction copyObject(source) {\x0d\n  const target = {};\x0d\n  for (const key in source)\x0d\n    target[key] = source[key];\x0d\n  return target;\x0d\n}\x0d\n\x0d\nconst bufferSep = Buffer.from(pathModule.sep);\x0d\n\x0d\nfunction join(path\x2C name) {\x0d\n  if ((typeof path === 'string' || isUint8Array(path)) &&\x0d\n      name === undefined) {\x0d\n    return path;\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && isUint8Array(name)) {\x0d\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\x0d\n    return Buffer.concat([pathBuffer\x2C name]);\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && typeof name === 'string') {\x0d\n    return pathModule.join(path\x2C name);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(path) && isUint8Array(name)) {\x0d\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\x0d\n}\x0d\n\x0d\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\x0d\n  let i;\x0d\n  if (typeof callback === 'function') {\x0d\n    const len = names.length;\x0d\n    let toFinish = 0;\x0d\n    callback = once(callback);\x0d\n    for (i = 0; i < len; i++) {\x0d\n      const type = types[i];\x0d\n      if (type === UV_DIRENT_UNKNOWN) {\x0d\n        const name = names[i];\x0d\n        const idx = i;\x0d\n        toFinish++;\x0d\n        let filepath;\x0d\n        try {\x0d\n          filepath = join(path\x2C name);\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n          if (err) {\x0d\n            callback(err);\x0d\n            return;\x0d\n          }\x0d\n          names[idx] = new DirentFromStats(name\x2C stats);\x0d\n          if (--toFinish === 0) {\x0d\n            callback(null\x2C names);\x0d\n          }\x0d\n        });\x0d\n      } else {\x0d\n        names[i] = new Dirent(names[i]\x2C types[i]);\x0d\n      }\x0d\n    }\x0d\n    if (toFinish === 0) {\x0d\n      callback(null\x2C names);\x0d\n    }\x0d\n  } else {\x0d\n    const len = names.length;\x0d\n    for (i = 0; i < len; i++) {\x0d\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\x0d\n    }\x0d\n    return names;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\x0d\n  if (typeof callback === 'function') {\x0d\n    if (type === UV_DIRENT_UNKNOWN) {\x0d\n      let filepath;\x0d\n      try {\x0d\n        filepath = join(path\x2C name);\x0d\n      } catch (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n        if (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        callback(null\x2C new DirentFromStats(name\x2C stats));\x0d\n      });\x0d\n    } else {\x0d\n      callback(null\x2C new Dirent(name\x2C type));\x0d\n    }\x0d\n  } else if (type === UV_DIRENT_UNKNOWN) {\x0d\n    const stats = lazyLoadFs().lstatSync(join(path\x2C name));\x0d\n    return new DirentFromStats(name\x2C stats);\x0d\n  } else {\x0d\n    return new Dirent(name\x2C type);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getOptions(options\x2C defaultOptions = kEmptyObject) {\x0d\n  if (options == null || typeof options === 'function') {\x0d\n    return defaultOptions;\x0d\n  }\x0d\n\x0d\n  if (typeof options === 'string') {\x0d\n    defaultOptions = { ...defaultOptions };\x0d\n    defaultOptions.encoding = options;\x0d\n    options = defaultOptions;\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\x0d\n  }\x0d\n\x0d\n  if (options.encoding !== 'buffer')\x0d\n    assertEncoding(options.encoding);\x0d\n\x0d\n  if (options.signal !== undefined) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {InternalFSBinding.FSSyncContext} ctx\x0d\n */\x0d\nfunction handleErrorFromBinding(ctx) {\x0d\n  if (ctx.errno !== undefined) {  // libuv error numbers\x0d\n    const err = uvException(ctx);\x0d\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\x0d\n    throw err;\x0d\n  }\x0d\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\x0d\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\x0d\n    // usually caused by memory problems. We need to figure out proper error\x0d\n    // code(s) for this.\x0d\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\x0d\n    throw ctx.error;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check if the path contains null types if it is a string nor Uint8Array\x2C\x0d\n// otherwise return silently.\x0d\nconst nullCheck = hideStackFrames((path\x2C propName\x2C throwError = true) => {\x0d\n  const pathIsString = typeof path === 'string';\x0d\n  const pathIsUint8Array = isUint8Array(path);\x0d\n\x0d\n  // We can only perform meaningful checks on strings and Uint8Arrays.\x0d\n  if ((!pathIsString && !pathIsUint8Array) ||\x0d\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\x0d\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const err = new ERR_INVALID_ARG_VALUE(\x0d\n    propName\x2C\x0d\n    path\x2C\x0d\n    'must be a string or Uint8Array without null bytes'\x0d\n  );\x0d\n  if (throwError) {\x0d\n    throw err;\x0d\n  }\x0d\n  return err;\x0d\n});\x0d\n\x0d\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\x0d\n  if (!isWindows) {\x0d\n    // No preprocessing is needed on Unix.\x0d\n    return path;\x0d\n  }\x0d\n  path = '' + path;\x0d\n  if (type === 'junction') {\x0d\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\x0d\n    // A relative target is relative to the link's parent directory.\x0d\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  if (pathModule.isAbsolute(path)) {\x0d\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  // Windows symlinks don't tolerate forward slashes.\x0d\n  return RegExpPrototypeSymbolReplace(/\\//g\x2C path\x2C '\\\\');\x0d\n}\x0d\n\x0d\n// Constructor for file stats.\x0d\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                   ino\x2C size\x2C blocks) {\x0d\n  this.dev = dev;\x0d\n  this.mode = mode;\x0d\n  this.nlink = nlink;\x0d\n  this.uid = uid;\x0d\n  this.gid = gid;\x0d\n  this.rdev = rdev;\x0d\n  this.blksize = blksize;\x0d\n  this.ino = ino;\x0d\n  this.size = size;\x0d\n  this.blocks = blocks;\x0d\n}\x0d\n\x0d\nStatsBase.prototype.isDirectory = function() {\x0d\n  return this._checkModeProperty(S_IFDIR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFile = function() {\x0d\n  return this._checkModeProperty(S_IFREG);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isBlockDevice = function() {\x0d\n  return this._checkModeProperty(S_IFBLK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isCharacterDevice = function() {\x0d\n  return this._checkModeProperty(S_IFCHR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSymbolicLink = function() {\x0d\n  return this._checkModeProperty(S_IFLNK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFIFO = function() {\x0d\n  return this._checkModeProperty(S_IFIFO);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSocket = function() {\x0d\n  return this._checkModeProperty(S_IFSOCK);\x0d\n};\x0d\n\x0d\nconst kNsPerMsBigInt = 10n ** 6n;\x0d\nconst kNsPerSecBigInt = 10n ** 9n;\x0d\nconst kMsPerSec = 10 ** 3;\x0d\nconst kNsPerMs = 10 ** 6;\x0d\nfunction msFromTimeSpec(sec\x2C nsec) {\x0d\n  return sec * kMsPerSec + nsec / kNsPerMs;\x0d\n}\x0d\n\x0d\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\x0d\n  return sec * kNsPerSecBigInt + nsec;\x0d\n}\x0d\n\x0d\n// The Date constructor performs Math.floor() to the timestamp.\x0d\n// https://www.ecma-international.org/ecma-262/#sec-timeclip\x0d\n// Since there may be a precision loss when the timestamp is\x0d\n// converted to a floating point number\x2C we manually round\x0d\n// the timestamp here before passing it to Date().\x0d\n// Refs: https://github.com/nodejs/node/pull/12607\x0d\nfunction dateFromMs(ms) {\x0d\n  return new Date(Number(ms) + 0.5);\x0d\n}\x0d\n\x0d\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                     ino\x2C size\x2C blocks\x2C\x0d\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\x0d\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                                 ino\x2C size\x2C blocks]);\x0d\n\x0d\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\x0d\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\x0d\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\x0d\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\x0d\n  this.atimeNs = atimeNs;\x0d\n  this.mtimeNs = mtimeNs;\x0d\n  this.ctimeNs = ctimeNs;\x0d\n  this.birthtimeNs = birthtimeNs;\x0d\n  this.atime = dateFromMs(this.atimeMs);\x0d\n  this.mtime = dateFromMs(this.mtimeMs);\x0d\n  this.ctime = dateFromMs(this.ctimeMs);\x0d\n  this.birthtime = dateFromMs(this.birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\x0d\n\x0d\nBigIntStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\x0d\n};\x0d\n\x0d\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n               ino\x2C size\x2C blocks\x2C\x0d\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\x0d\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\x0d\n                        blksize\x2C ino\x2C size\x2C blocks);\x0d\n  this.atimeMs = atimeMs;\x0d\n  this.mtimeMs = mtimeMs;\x0d\n  this.ctimeMs = ctimeMs;\x0d\n  this.birthtimeMs = birthtimeMs;\x0d\n  this.atime = dateFromMs(atimeMs);\x0d\n  this.mtime = dateFromMs(mtimeMs);\x0d\n  this.ctime = dateFromMs(ctimeMs);\x0d\n  this.birthtime = dateFromMs(birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(Stats\x2C StatsBase);\x0d\n\x0d\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\x0d\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\x0d\nStats.prototype.isFile = StatsBase.prototype.isFile;\x0d\n\x0d\nStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & S_IFMT) === property;\x0d\n};\x0d\n\x0d\n/**\x0d\n * @param {Float64Array | BigUint64Array} stats\x0d\n * @param {number} offset\x0d\n * @returns {BigIntStats | Stats}\x0d\n */\x0d\nfunction getStatsFromBinding(stats\x2C offset = 0) {\x0d\n  if (isBigUint64Array(stats)) {\x0d\n    return new BigIntStats(\x0d\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n      stats[9 + offset]\x2C\x0d\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\x0d\n    );\x0d\n  }\x0d\n  return new Stats(\x0d\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n    stats[9 + offset]\x2C\x0d\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringToFlags(flags\x2C name = 'flags') {\x0d\n  if (typeof flags === 'number') {\x0d\n    validateInt32(flags\x2C name);\x0d\n    return flags;\x0d\n  }\x0d\n\x0d\n  if (flags == null) {\x0d\n    return O_RDONLY;\x0d\n  }\x0d\n\x0d\n  switch (flags) {\x0d\n    case 'r' : return O_RDONLY;\x0d\n    case 'rs' : // Fall through.\x0d\n    case 'sr' : return O_RDONLY | O_SYNC;\x0d\n    case 'r+' : return O_RDWR;\x0d\n    case 'rs+' : // Fall through.\x0d\n    case 'sr+' : return O_RDWR | O_SYNC;\x0d\n\x0d\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\x0d\n    case 'wx' : // Fall through.\x0d\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\x0d\n\x0d\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\x0d\n    case 'wx+': // Fall through.\x0d\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\x0d\n\x0d\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\x0d\n    case 'ax' : // Fall through.\x0d\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\x0d\n    case 'as' : // Fall through.\x0d\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\x0d\n\x0d\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\x0d\n    case 'ax+': // Fall through.\x0d\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\x0d\n    case 'as+': // Fall through.\x0d\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\x0d\n}\x0d\n\x0d\nconst stringToSymlinkType = hideStackFrames((type) => {\x0d\n  let flags = 0;\x0d\n  if (typeof type === 'string') {\x0d\n    switch (type) {\x0d\n      case 'dir':\x0d\n        flags |= UV_FS_SYMLINK_DIR;\x0d\n        break;\x0d\n      case 'junction':\x0d\n        flags |= UV_FS_SYMLINK_JUNCTION;\x0d\n        break;\x0d\n      case 'file':\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\x0d\n    }\x0d\n  }\x0d\n  return flags;\x0d\n});\x0d\n\x0d\n// converts Date or number to a fractional UNIX timestamp\x0d\nfunction toUnixTimestamp(time\x2C name = 'time') {\x0d\n  // eslint-disable-next-line eqeqeq\x0d\n  if (typeof time === 'string' && +time == time) {\x0d\n    return +time;\x0d\n  }\x0d\n  if (NumberIsFinite(time)) {\x0d\n    if (time < 0) {\x0d\n      return DateNow() / 1000;\x0d\n    }\x0d\n    return time;\x0d\n  }\x0d\n  if (isDate(time)) {\x0d\n    // Convert to 123.456 UNIX timestamp\x0d\n    return DatePrototypeGetTime(time) / 1000;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\x0d\n}\x0d\n\x0d\nconst validateOffsetLengthRead = hideStackFrames(\x0d\n  (offset\x2C length\x2C bufferLength) => {\x0d\n    if (offset < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C '>= 0'\x2C offset);\x0d\n    }\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n    if (offset + length > bufferLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C\x0d\n                                 `<= ${bufferLength - offset}`\x2C length);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateOffsetLengthWrite = hideStackFrames(\x0d\n  (offset\x2C length\x2C byteLength) => {\x0d\n    if (offset > byteLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C `<= ${byteLength}`\x2C offset);\x0d\n    }\x0d\n\x0d\n    if (length > byteLength - offset) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C `<= ${byteLength - offset}`\x2C length);\x0d\n    }\x0d\n\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n\x0d\n    validateInt32(length\x2C 'length'\x2C 0);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\x0d\n  if (typeof path !== 'string' && !isUint8Array(path)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\x0d\n  }\x0d\n\x0d\n  const err = nullCheck(path\x2C propName\x2C false);\x0d\n\x0d\n  if (err !== undefined) {\x0d\n    throw err;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\x0d\n  const path = toPathIfFileURL(fileURLOrPath);\x0d\n  validatePath(path\x2C propName);\x0d\n  return path;\x0d\n});\x0d\n\x0d\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\x0d\n  if (ObjectIs(fd\x2C -0)) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  validateInt32(fd\x2C propName\x2C 0);\x0d\n\x0d\n  return fd;\x0d\n});\x0d\n\x0d\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\x0d\n  if (!ArrayIsArray(buffers))\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n\x0d\n  for (let i = 0; i < buffers.length; i++) {\x0d\n    if (!isArrayBufferView(buffers[i]))\x0d\n      throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n  }\x0d\n\x0d\n  return buffers;\x0d\n});\x0d\n\x0d\nlet nonPortableTemplateWarn = true;\x0d\n\x0d\nfunction warnOnNonPortableTemplate(template) {\x0d\n  // Template strings passed to the mkdtemp() family of functions should not\x0d\n  // end with 'X' because they are handled inconsistently across platforms.\x0d\n  if (nonPortableTemplateWarn && StringPrototypeEndsWith(template\x2C 'X')) {\x0d\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\x0d\n                        'For details see: https://nodejs.org/api/fs.html');\x0d\n    nonPortableTemplateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst defaultCpOptions = {\x0d\n  dereference: false\x2C\x0d\n  errorOnExist: false\x2C\x0d\n  filter: undefined\x2C\x0d\n  force: true\x2C\x0d\n  preserveTimestamps: false\x2C\x0d\n  recursive: false\x2C\x0d\n  verbatimSymlinks: false\x2C\x0d\n};\x0d\n\x0d\nconst defaultRmOptions = {\x0d\n  recursive: false\x2C\x0d\n  force: false\x2C\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x0d\n};\x0d\n\x0d\nconst defaultRmdirOptions = {\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst validateCpOptions = hideStackFrames((options) => {\x0d\n  if (options === undefined)\x0d\n    return { ...defaultCpOptions };\x0d\n  validateObject(options\x2C 'options');\x0d\n  options = { ...defaultCpOptions\x2C ...options };\x0d\n  validateBoolean(options.dereference\x2C 'options.dereference');\x0d\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\x0d\n  validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  validateBoolean(options.verbatimSymlinks\x2C 'options.verbatimSymlinks');\x0d\n  if (options.dereference === true && options.verbatimSymlinks === true) {\x0d\n    throw new ERR_INCOMPATIBLE_OPTION_PAIR('dereference'\x2C 'verbatimSymlinks');\x0d\n  }\x0d\n  if (options.filter !== undefined) {\x0d\n    validateFunction(options.filter\x2C 'options.filter');\x0d\n  }\x0d\n  return options;\x0d\n});\x0d\n\x0d\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  lazyLoadFs().stat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (options.force && err.code === 'ENOENT') {\x0d\n        return cb(null\x2C options);\x0d\n      }\x0d\n      return cb(err\x2C options);\x0d\n    }\x0d\n\x0d\n    if (expectDir && !stats.isDirectory()) {\x0d\n      return cb(false);\x0d\n    }\x0d\n\x0d\n    if (stats.isDirectory() && !options.recursive) {\x0d\n      return cb(new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      }));\x0d\n    }\x0d\n    return cb(null\x2C options);\x0d\n  });\x0d\n});\x0d\n\x0d\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  if (!options.force || expectDir || !options.recursive) {\x0d\n    const isDirectory = lazyLoadFs()\x0d\n      .statSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\x0d\n\x0d\n    if (expectDir && !isDirectory) {\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    if (isDirectory && !options.recursive) {\x0d\n      throw new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return options;\x0d\n});\x0d\n\x0d\nlet recursiveRmdirWarned = process.noDeprecation;\x0d\nfunction emitRecursiveRmdirWarning() {\x0d\n  if (!recursiveRmdirWarned) {\x0d\n    process.emitWarning(\x0d\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\x0d\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0147'\x0d\n    );\x0d\n    recursiveRmdirWarned = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateRmdirOptions = hideStackFrames(\x0d\n  (options\x2C defaults = defaultRmdirOptions) => {\x0d\n    if (options === undefined)\x0d\n      return defaults;\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    options = { ...defaults\x2C ...options };\x0d\n\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n    validateInt32(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\x0d\n    validateUint32(options.maxRetries\x2C 'options.maxRetries');\x0d\n\x0d\n    return options;\x0d\n  });\x0d\n\x0d\nconst getValidMode = hideStackFrames((mode\x2C type) => {\x0d\n  let min = kMinimumAccessMode;\x0d\n  let max = kMaximumAccessMode;\x0d\n  let def = F_OK;\x0d\n  if (type === 'copyFile') {\x0d\n    min = kMinimumCopyMode;\x0d\n    max = kMaximumCopyMode;\x0d\n    def = mode || kDefaultCopyMode;\x0d\n  } else {\x0d\n    assert(type === 'access');\x0d\n  }\x0d\n  if (mode == null) {\x0d\n    return def;\x0d\n  }\x0d\n  if (NumberIsInteger(mode) && mode >= min && mode <= max) {\x0d\n    return mode;\x0d\n  }\x0d\n  if (typeof mode !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('mode'\x2C 'integer'\x2C mode);\x0d\n  }\x0d\n  throw new ERR_OUT_OF_RANGE(\x0d\n    'mode'\x2C `an integer >= ${min} && <= ${max}`\x2C mode);\x0d\n});\x0d\n\x0d\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\x0d\n  if (typeof buffer === 'string') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (\x0d\n    typeof buffer === 'object' &&\x0d\n    buffer !== null &&\x0d\n    typeof buffer.toString === 'function' &&\x0d\n    ObjectPrototypeHasOwnProperty(buffer\x2C 'toString')\x0d\n  ) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    name\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n    buffer\x0d\n  );\x0d\n});\x0d\n\x0d\nconst validatePrimitiveStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\x0d\n  if (typeof buffer !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      name\x2C\x0d\n      ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n      buffer\x0d\n    );\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validatePosition = hideStackFrames((position\x2C name) => {\x0d\n  if (typeof position === 'number') {\x0d\n    validateInteger(position\x2C 'position');\x0d\n  } else if (typeof position === 'bigint') {\x0d\n    if (!(position >= -(2n ** 63n) && position <= 2n ** 63n - 1n)) {\x0d\n      throw new ERR_OUT_OF_RANGE('position'\x2C\x0d\n                                 `>= ${-(2n ** 63n)} && <= ${2n ** 63n - 1n}`\x2C\x0d\n                                 position);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('position'\x2C\x0d\n                                   ['integer'\x2C 'bigint']\x2C\x0d\n                                   position);\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  assertEncoding\x2C\x0d\n  BigIntStats\x2C  // for testing\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirent\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  Stats\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  validatePrimitiveStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n};\x0d\n
code-source-info,0x35a8d4af5a6,84,7595,8221,C9O7622C16O7641C27O7702C29O7724C30O7735C36O7775C41O7820C43O7844C47O7860C54O7896C60O7936C78O7942C83O7936C84O8032C91O8041C96O8060C99O8083C104O8060C108O8111C114O8140C119O8168C127O8140C132O8203C134O8218,,
tick,0x7fffe053fab3,218665,0,0x0,3,0x7ff6633c5640,0x35a8d4a8d2c,0x35a8d4a85c9,0x35a8d4a848b,0x35a8d4a8345,0x35a8d4a7cee,0x35a8d4a5730,0x35a8d4a4350,0x35a8d4a3fd2,0x35a8d4a2dab,0x35a8d4a2b55,0x3d28624f344,0x3d28624a9d5
code-creation,LazyCompile,10,218703,0x35a8d4b159e,48,assertEncoding node:internal/fs/utils:155:24,0x39c7b621d50,~
code-source-info,0x35a8d4b159e,84,3741,3923,C0O3757C6O3774C9O3781C14O3781C21O3825C24O3853C40O3859C45O3853C47O3922,,
code-creation,LazyCompile,10,218806,0x35a8d4b16b6,20,toPathIfFileURL node:internal/url:1513:25,0x233c0039918,~
script-source,39,node:internal/url,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Int8Array\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertySymbols\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  encodeStr\x2C\x0d\n  hexTable\x2C\x0d\n  isHexTable\x0d\n} = require('internal/querystring');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  removeColors\x2C\x0d\n  toUSVString\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ARG_NOT_ITERABLE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FILE_URL_HOST\x2C\x0d\n    ERR_INVALID_FILE_URL_PATH\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_INVALID_TUPLE\x2C\x0d\n    ERR_INVALID_URL\x2C\x0d\n    ERR_INVALID_URL_SCHEME\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  CHAR_AMPERSAND\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_EQUAL\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_PERCENT\x2C\x0d\n  CHAR_PLUS\x0d\n} = require('internal/constants');\x0d\nconst path = require('path');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst querystring = require('querystring');\x0d\n\x0d\nconst { platform } = process;\x0d\nconst isWindows = platform === 'win32';\x0d\n\x0d\nconst {\x0d\n  domainToASCII: _domainToASCII\x2C\x0d\n  domainToUnicode: _domainToUnicode\x2C\x0d\n  encodeAuth\x2C\x0d\n  parse\x2C\x0d\n  setURLConstructor\x2C\x0d\n  URL_FLAGS_CANNOT_BE_BASE\x2C\x0d\n  URL_FLAGS_HAS_FRAGMENT\x2C\x0d\n  URL_FLAGS_HAS_HOST\x2C\x0d\n  URL_FLAGS_HAS_PASSWORD\x2C\x0d\n  URL_FLAGS_HAS_PATH\x2C\x0d\n  URL_FLAGS_HAS_QUERY\x2C\x0d\n  URL_FLAGS_HAS_USERNAME\x2C\x0d\n  URL_FLAGS_IS_DEFAULT_SCHEME_PORT\x2C\x0d\n  URL_FLAGS_SPECIAL\x2C\x0d\n  kFragment\x2C\x0d\n  kHost\x2C\x0d\n  kHostname\x2C\x0d\n  kPathStart\x2C\x0d\n  kPort\x2C\x0d\n  kQuery\x2C\x0d\n  kSchemeStart\x0d\n} = internalBinding('url');\x0d\n\x0d\nconst {\x0d\n  storeDataObject\x2C\x0d\n  revokeDataObject\x2C\x0d\n} = internalBinding('blob');\x0d\n\x0d\nconst context = Symbol('context');\x0d\nconst cannotBeBase = Symbol('cannot-be-base');\x0d\nconst cannotHaveUsernamePasswordPort =\x0d\n    Symbol('cannot-have-username-password-port');\x0d\nconst special = Symbol('special');\x0d\nconst searchParams = Symbol('query');\x0d\nconst kFormat = Symbol('format');\x0d\n\x0d\nlet blob;\x0d\nlet cryptoRandom;\x0d\n\x0d\nfunction lazyBlob() {\x0d\n  blob ??= require('internal/blob');\x0d\n  return blob;\x0d\n}\x0d\n\x0d\nfunction lazyCryptoRandom() {\x0d\n  try {\x0d\n    cryptoRandom ??= require('internal/crypto/random');\x0d\n  } catch {\x0d\n    // If Node.js built without crypto support\x2C we'll fall\x0d\n    // through here and handle it later.\x0d\n  }\x0d\n  return cryptoRandom;\x0d\n}\x0d\n\x0d\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\x0d\nconst IteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf([][SymbolIterator]())\x0d\n);\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#concept-origin-opaque\x0d\nconst kOpaqueOrigin = 'null';\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#ascii-serialisation-of-an-origin\x0d\nfunction serializeTupleOrigin(scheme\x2C host\x2C port) {\x0d\n  return `${scheme}//${host}${port === null ? '' : `:${port}`}`;\x0d\n}\x0d\n\x0d\n// This class provides the internal state of a URL object. An instance of this\x0d\n// class is stored in every URL object and is accessed internally by setters\x0d\n// and getters. It roughly corresponds to the concept of a URL record in the\x0d\n// URL Standard\x2C with a few differences. It is also the object transported to\x0d\n// the C++ binding.\x0d\n// Refs: https://url.spec.whatwg.org/#concept-url\x0d\nclass URLContext {\x0d\n  constructor() {\x0d\n    this.flags = 0;\x0d\n    this.scheme = ':';\x0d\n    this.username = '';\x0d\n    this.password = '';\x0d\n    this.host = null;\x0d\n    this.port = null;\x0d\n    this.path = [];\x0d\n    this.query = null;\x0d\n    this.fragment = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction isURLSearchParams(self) {\x0d\n  return self && self[searchParams] && !self[searchParams][searchParams];\x0d\n}\x0d\n\x0d\nclass URLSearchParams {\x0d\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\x0d\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\x0d\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\x0d\n  // accordance with Web IDL spec.\x0d\n  constructor(init = undefined) {\x0d\n    if (init === null || init === undefined) {\x0d\n      this[searchParams] = [];\x0d\n    } else if (typeof init === 'object' || typeof init === 'function') {\x0d\n      const method = init[SymbolIterator];\x0d\n      if (method === this[SymbolIterator]) {\x0d\n        // While the spec does not have this branch\x2C we can use it as a\x0d\n        // shortcut to avoid having to go through the costly generic iterator.\x0d\n        const childParams = init[searchParams];\x0d\n        this[searchParams] = childParams.slice();\x0d\n      } else if (method !== null && method !== undefined) {\x0d\n        if (typeof method !== 'function') {\x0d\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\x0d\n        }\x0d\n\x0d\n        // Sequence<sequence<USVString>>\x0d\n        // Note: per spec we have to first exhaust the lists then process them\x0d\n        const pairs = [];\x0d\n        for (const pair of init) {\x0d\n          if ((typeof pair !== 'object' && typeof pair !== 'function') ||\x0d\n              pair === null ||\x0d\n              typeof pair[SymbolIterator] !== 'function') {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          const convertedPair = [];\x0d\n          for (const element of pair)\x0d\n            ArrayPrototypePush(convertedPair\x2C toUSVString(element));\x0d\n          ArrayPrototypePush(pairs\x2C convertedPair);\x0d\n        }\x0d\n\x0d\n        this[searchParams] = [];\x0d\n        for (const pair of pairs) {\x0d\n          if (pair.length !== 2) {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          ArrayPrototypePush(this[searchParams]\x2C pair[0]\x2C pair[1]);\x0d\n        }\x0d\n      } else {\x0d\n        // Record<USVString\x2C USVString>\x0d\n        // Need to use reflection APIs for full spec compliance.\x0d\n        const visited = {};\x0d\n        this[searchParams] = [];\x0d\n        const keys = ReflectOwnKeys(init);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\x0d\n          if (desc !== undefined && desc.enumerable) {\x0d\n            const typedKey = toUSVString(key);\x0d\n            const typedValue = toUSVString(init[key]);\x0d\n\x0d\n            // Two different key may result same after `toUSVString()`\x2C we only\x0d\n            // leave the later one. Refers to WPT.\x0d\n            if (visited[typedKey] !== undefined) {\x0d\n              this[searchParams][visited[typedKey]] = typedValue;\x0d\n            } else {\x0d\n              visited[typedKey] = ArrayPrototypePush(this[searchParams]\x2C\x0d\n                                                     typedKey\x2C\x0d\n                                                     typedValue) - 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      // USVString\x0d\n      init = toUSVString(init);\x0d\n      if (init[0] === '?') init = init.slice(1);\x0d\n      initSearchParams(this\x2C init);\x0d\n    }\x0d\n\x0d\n    // "associated url object"\x0d\n    this[context] = null;\x0d\n  }\x0d\n\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const separator = '\x2C ';\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const output = [];\x0d\n    for (let i = 0; i < list.length; i += 2)\x0d\n      ArrayPrototypePush(\x0d\n        output\x2C\x0d\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\x0d\n\x0d\n    const length = ArrayPrototypeReduce(\x0d\n      output\x2C\x0d\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\x0d\n      -separator.length\x0d\n    );\x0d\n    if (length > ctx.breakLength) {\x0d\n      return `${this.constructor.name} {\\n` +\x0d\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\x0d\n    } else if (output.length) {\x0d\n      return `${this.constructor.name} { ` +\x0d\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\x0d\n    }\x0d\n    return `${this.constructor.name} {}`;\x0d\n  }\x0d\n\x0d\n  append(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n    ArrayPrototypePush(this[searchParams]\x2C name\x2C value);\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  delete(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        list.splice(i\x2C 2);\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  get(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return list[i + 1];\x0d\n      }\x0d\n    }\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  getAll(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const values = [];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        values.push(list[i + 1]);\x0d\n      }\x0d\n    }\x0d\n    return values;\x0d\n  }\x0d\n\x0d\n  has(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return true;\x0d\n      }\x0d\n    }\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  set(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n\x0d\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\x0d\n    // the value of the first such name-value pair to `value` and remove the\x0d\n    // others.\x0d\n    let found = false;\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        if (!found) {\x0d\n          list[i + 1] = value;\x0d\n          found = true;\x0d\n          i += 2;\x0d\n        } else {\x0d\n          list.splice(i\x2C 2);\x0d\n        }\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\x0d\n    // is `value`\x2C to `list`.\x0d\n    if (!found) {\x0d\n      ArrayPrototypePush(list\x2C name\x2C value);\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  sort() {\x0d\n    const a = this[searchParams];\x0d\n    const len = a.length;\x0d\n\x0d\n    if (len <= 2) {\x0d\n      // Nothing needs to be done.\x0d\n    } else if (len < 100) {\x0d\n      // 100 is found through testing.\x0d\n      // Simple stable in-place insertion sort\x0d\n      // Derived from v8/src/js/array.js\x0d\n      for (let i = 2; i < len; i += 2) {\x0d\n        const curKey = a[i];\x0d\n        const curVal = a[i + 1];\x0d\n        let j;\x0d\n        for (j = i - 2; j >= 0; j -= 2) {\x0d\n          if (a[j] > curKey) {\x0d\n            a[j + 2] = a[j];\x0d\n            a[j + 3] = a[j + 1];\x0d\n          } else {\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n        a[j + 2] = curKey;\x0d\n        a[j + 3] = curVal;\x0d\n      }\x0d\n    } else {\x0d\n      // Bottom-up iterative stable merge sort\x0d\n      const lBuffer = new Array(len);\x0d\n      const rBuffer = new Array(len);\x0d\n      for (let step = 2; step < len; step *= 2) {\x0d\n        for (let start = 0; start < len - 2; start += 2 * step) {\x0d\n          const mid = start + step;\x0d\n          let end = mid + step;\x0d\n          end = end < len ? end : len;\x0d\n          if (mid > end)\x0d\n            continue;\x0d\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterators\x0d\n  // Define entries here rather than [Symbol.iterator] as the function name\x0d\n  // must be set to `entries`.\x0d\n  entries() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key+value');\x0d\n  }\x0d\n\x0d\n  forEach(callback\x2C thisArg = undefined) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    validateCallback(callback);\x0d\n\x0d\n    let list = this[searchParams];\x0d\n\x0d\n    let i = 0;\x0d\n    while (i < list.length) {\x0d\n      const key = list[i];\x0d\n      const value = list[i + 1];\x0d\n      callback.call(thisArg\x2C value\x2C key\x2C this);\x0d\n      // In case the URL object's `search` is updated\x0d\n      list = this[searchParams];\x0d\n      i += 2;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable\x0d\n  keys() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key');\x0d\n  }\x0d\n\x0d\n  values() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'value');\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\x0d\n  toString() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return serializeParams(this[searchParams]);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URLSearchParams.prototype\x2C {\x0d\n  append: kEnumerableProperty\x2C\x0d\n  delete: kEnumerableProperty\x2C\x0d\n  get: kEnumerableProperty\x2C\x0d\n  getAll: kEnumerableProperty\x2C\x0d\n  has: kEnumerableProperty\x2C\x0d\n  set: kEnumerableProperty\x2C\x0d\n  sort: kEnumerableProperty\x2C\x0d\n  entries: kEnumerableProperty\x2C\x0d\n  forEach: kEnumerableProperty\x2C\x0d\n  keys: kEnumerableProperty\x2C\x0d\n  values: kEnumerableProperty\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URLSearchParams' }\x2C\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable-entries\x0d\n  [SymbolIterator]: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: URLSearchParams.prototype.entries\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction onParseComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                         host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n  if (!this[searchParams]) { // Invoked from URL constructor\x0d\n    this[searchParams] = new URLSearchParams();\x0d\n    this[searchParams][context] = this;\x0d\n  }\x0d\n  initSearchParams(this[searchParams]\x2C query);\x0d\n}\x0d\n\x0d\nfunction onParseError(input\x2C flags) {\x0d\n  throw new ERR_INVALID_URL(input);\x0d\n}\x0d\n\x0d\nfunction onParseProtocolComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_SPECIAL) !== 0) {\x0d\n    ctx.flags |= URL_FLAGS_SPECIAL;\x0d\n  } else {\x0d\n    ctx.flags &= ~URL_FLAGS_SPECIAL;\x0d\n  }\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostnameComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  } else {\x0d\n    ctx.host = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParsePortComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  ReflectApply(onParseHostnameComplete\x2C this\x2C arguments);\x0d\n  if (port !== null || ((flags & URL_FLAGS_IS_DEFAULT_SCHEME_PORT) !== 0))\x0d\n    ReflectApply(onParsePortComplete\x2C this\x2C arguments);\x0d\n}\x0d\n\x0d\nfunction onParsePathComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_PATH) !== 0) {\x0d\n    ctx.path = path;\x0d\n    ctx.flags |= URL_FLAGS_HAS_PATH;\x0d\n  } else {\x0d\n    ctx.path = [];\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_PATH;\x0d\n  }\x0d\n\x0d\n  // The C++ binding may set host to empty string.\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParseSearchComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                               host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].query = query;\x0d\n}\x0d\n\x0d\nfunction onParseHashComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].fragment = fragment;\x0d\n}\x0d\n\x0d\nclass URL {\x0d\n  constructor(input\x2C base = undefined) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    let base_context;\x0d\n    if (base !== undefined) {\x0d\n      base_context = new URL(base)[context];\x0d\n    }\x0d\n    this[context] = new URLContext();\x0d\n    parse(input\x2C -1\x2C base_context\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C\x0d\n          FunctionPrototypeBind(onParseError\x2C this\x2C input));\x0d\n  }\x0d\n\x0d\n  get [special]() {\x0d\n    return (this[context].flags & URL_FLAGS_SPECIAL) !== 0;\x0d\n  }\x0d\n\x0d\n  get [cannotBeBase]() {\x0d\n    return (this[context].flags & URL_FLAGS_CANNOT_BE_BASE) !== 0;\x0d\n  }\x0d\n\x0d\n  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port\x0d\n  get [cannotHaveUsernamePasswordPort]() {\x0d\n    const { host\x2C scheme } = this[context];\x0d\n    return ((host == null || host === '') ||\x0d\n            this[cannotBeBase] ||\x0d\n            scheme === 'file:');\x0d\n  }\x0d\n\x0d\n  [inspect.custom](depth\x2C opts) {\x0d\n    if (this == null ||\x0d\n        ObjectGetPrototypeOf(this[context]) !== URLContext.prototype) {\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    }\x0d\n\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || URL;\x0d\n    const obj = ObjectCreate({ constructor });\x0d\n\x0d\n    obj.href = this.href;\x0d\n    obj.origin = this.origin;\x0d\n    obj.protocol = this.protocol;\x0d\n    obj.username = this.username;\x0d\n    obj.password = this.password;\x0d\n    obj.host = this.host;\x0d\n    obj.hostname = this.hostname;\x0d\n    obj.port = this.port;\x0d\n    obj.pathname = this.pathname;\x0d\n    obj.search = this.search;\x0d\n    obj.searchParams = this.searchParams;\x0d\n    obj.hash = this.hash;\x0d\n\x0d\n    if (opts.showHidden) {\x0d\n      obj.cannotBeBase = this[cannotBeBase];\x0d\n      obj.special = this[special];\x0d\n      obj[context] = this[context];\x0d\n    }\x0d\n\x0d\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kFormat](options) {\x0d\n    if (options)\x0d\n      validateObject(options\x2C 'options');\x0d\n\x0d\n    options = {\x0d\n      fragment: true\x2C\x0d\n      unicode: false\x2C\x0d\n      search: true\x2C\x0d\n      auth: true\x2C\x0d\n      ...options\x0d\n    };\x0d\n    const ctx = this[context];\x0d\n    // https://url.spec.whatwg.org/#url-serializing\x0d\n    let ret = ctx.scheme;\x0d\n    if (ctx.host !== null) {\x0d\n      ret += '//';\x0d\n      const has_username = ctx.username !== '';\x0d\n      const has_password = ctx.password !== '';\x0d\n      if (options.auth && (has_username || has_password)) {\x0d\n        if (has_username)\x0d\n          ret += ctx.username;\x0d\n        if (has_password)\x0d\n          ret += `:${ctx.password}`;\x0d\n        ret += '@';\x0d\n      }\x0d\n      ret += options.unicode ?\x0d\n        domainToUnicode(ctx.host) : ctx.host;\x0d\n      if (ctx.port !== null)\x0d\n        ret += `:${ctx.port}`;\x0d\n    }\x0d\n    if (this[cannotBeBase]) {\x0d\n      ret += ctx.path[0];\x0d\n    } else {\x0d\n      if (ctx.host === null && ctx.path.length > 1 && ctx.path[0] === '') {\x0d\n        ret += '/.';\x0d\n      }\x0d\n      if (ctx.path.length) {\x0d\n        ret += '/' + ArrayPrototypeJoin(ctx.path\x2C '/');\x0d\n      }\x0d\n    }\x0d\n    if (options.search && ctx.query !== null)\x0d\n      ret += `?${ctx.query}`;\x0d\n    if (options.fragment && ctx.fragment !== null)\x0d\n      ret += `#${ctx.fragment}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  toString() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  get href() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  set href(input) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    parse(input\x2C -1\x2C undefined\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C\x0d\n          FunctionPrototypeBind(onParseError\x2C this\x2C input));\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get origin() {\x0d\n    // Refs: https://url.spec.whatwg.org/#concept-url-origin\x0d\n    const ctx = this[context];\x0d\n    switch (ctx.scheme) {\x0d\n      case 'blob:':\x0d\n        if (ctx.path.length > 0) {\x0d\n          try {\x0d\n            return (new URL(ctx.path[0])).origin;\x0d\n          } catch {\x0d\n            // Fall through... do nothing\x0d\n          }\x0d\n        }\x0d\n        return kOpaqueOrigin;\x0d\n      case 'ftp:':\x0d\n      case 'http:':\x0d\n      case 'https:':\x0d\n      case 'ws:':\x0d\n      case 'wss:':\x0d\n        return serializeTupleOrigin(ctx.scheme\x2C ctx.host\x2C ctx.port);\x0d\n    }\x0d\n    return kOpaqueOrigin;\x0d\n  }\x0d\n\x0d\n  get protocol() {\x0d\n    return this[context].scheme;\x0d\n  }\x0d\n\x0d\n  set protocol(scheme) {\x0d\n    // toUSVString is not needed.\x0d\n    scheme = `${scheme}`;\x0d\n    if (scheme.length === 0)\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    parse(scheme\x2C kSchemeStart\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseProtocolComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get username() {\x0d\n    return this[context].username;\x0d\n  }\x0d\n\x0d\n  set username(username) {\x0d\n    // toUSVString is not needed.\x0d\n    username = `${username}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (username === '') {\x0d\n      ctx.username = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_USERNAME;\x0d\n      return;\x0d\n    }\x0d\n    ctx.username = encodeAuth(username);\x0d\n    ctx.flags |= URL_FLAGS_HAS_USERNAME;\x0d\n  }\x0d\n\x0d\n  get password() {\x0d\n    return this[context].password;\x0d\n  }\x0d\n\x0d\n  set password(password) {\x0d\n    // toUSVString is not needed.\x0d\n    password = `${password}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (password === '') {\x0d\n      ctx.password = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_PASSWORD;\x0d\n      return;\x0d\n    }\x0d\n    ctx.password = encodeAuth(password);\x0d\n    ctx.flags |= URL_FLAGS_HAS_PASSWORD;\x0d\n  }\x0d\n\x0d\n  get host() {\x0d\n    const ctx = this[context];\x0d\n    let ret = ctx.host || '';\x0d\n    if (ctx.port !== null)\x0d\n      ret += `:${ctx.port}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  set host(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHost\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHostComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get hostname() {\x0d\n    return this[context].host || '';\x0d\n  }\x0d\n\x0d\n  set hostname(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHostname\x2C null\x2C ctx\x2C onParseHostnameComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    const port = this[context].port;\x0d\n    return port === null ? '' : String(port);\x0d\n  }\x0d\n\x0d\n  set port(port) {\x0d\n    // toUSVString is not needed.\x0d\n    port = `${port}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (port === '') {\x0d\n      ctx.port = null;\x0d\n      return;\x0d\n    }\x0d\n    parse(port\x2C kPort\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParsePortComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get pathname() {\x0d\n    const ctx = this[context];\x0d\n    if (this[cannotBeBase])\x0d\n      return ctx.path[0];\x0d\n    if (ctx.path.length === 0)\x0d\n      return '';\x0d\n    return `/${ArrayPrototypeJoin(ctx.path\x2C '/')}`;\x0d\n  }\x0d\n\x0d\n  set pathname(path) {\x0d\n    // toUSVString is not needed.\x0d\n    path = `${path}`;\x0d\n    if (this[cannotBeBase])\x0d\n      return;\x0d\n    parse(path\x2C kPathStart\x2C null\x2C this[context]\x2C\x0d\n          onParsePathComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get search() {\x0d\n    const { query } = this[context];\x0d\n    if (query === null || query === '')\x0d\n      return '';\x0d\n    return `?${query}`;\x0d\n  }\x0d\n\x0d\n  set search(search) {\x0d\n    const ctx = this[context];\x0d\n    search = toUSVString(search);\x0d\n    if (search === '') {\x0d\n      ctx.query = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n    } else {\x0d\n      if (search[0] === '?') search = StringPrototypeSlice(search\x2C 1);\x0d\n      ctx.query = '';\x0d\n      ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n      if (search) {\x0d\n        parse(search\x2C kQuery\x2C null\x2C ctx\x2C\x0d\n              FunctionPrototypeBind(onParseSearchComplete\x2C this));\x0d\n      }\x0d\n    }\x0d\n    initSearchParams(this[searchParams]\x2C search);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get searchParams() {\x0d\n    return this[searchParams];\x0d\n  }\x0d\n\x0d\n  get hash() {\x0d\n    const { fragment } = this[context];\x0d\n    if (fragment === null || fragment === '')\x0d\n      return '';\x0d\n    return `#${fragment}`;\x0d\n  }\x0d\n\x0d\n  set hash(hash) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    hash = `${hash}`;\x0d\n    if (!hash) {\x0d\n      ctx.fragment = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_FRAGMENT;\x0d\n      return;\x0d\n    }\x0d\n    if (hash[0] === '#') hash = StringPrototypeSlice(hash\x2C 1);\x0d\n    ctx.fragment = '';\x0d\n    ctx.flags |= URL_FLAGS_HAS_FRAGMENT;\x0d\n    parse(hash\x2C kFragment\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHashComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  static createObjectURL(obj) {\x0d\n    const cryptoRandom = lazyCryptoRandom();\x0d\n    if (cryptoRandom === undefined)\x0d\n      throw new ERR_NO_CRYPTO();\x0d\n\x0d\n    // Yes\x2C lazy loading is annoying but because of circular\x0d\n    // references between the url\x2C internal/blob\x2C and buffer\x0d\n    // modules\x2C lazy loading here makes sure that things work.\x0d\n    const blob = lazyBlob();\x0d\n    if (!blob.isBlob(obj))\x0d\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\x0d\n\x0d\n    const id = cryptoRandom.randomUUID();\x0d\n\x0d\n    storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\x0d\n\x0d\n    return `blob:nodedata:${id}`;\x0d\n  }\x0d\n\x0d\n  static revokeObjectURL(url) {\x0d\n    url = `${url}`;\x0d\n    try {\x0d\n      const parsed = new URL(url);\x0d\n      const split = StringPrototypeSplit(parsed.pathname\x2C ':');\x0d\n      if (split.length === 2)\x0d\n        revokeDataObject(split[1]);\x0d\n    } catch {\x0d\n      // If there's an error\x2C it's ignored.\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URL.prototype\x2C {\x0d\n  [kFormat]: { __proto__: null\x2C configurable: false\x2C writable: false }\x2C\x0d\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URL' }\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  href: kEnumerableProperty\x2C\x0d\n  origin: kEnumerableProperty\x2C\x0d\n  protocol: kEnumerableProperty\x2C\x0d\n  username: kEnumerableProperty\x2C\x0d\n  password: kEnumerableProperty\x2C\x0d\n  host: kEnumerableProperty\x2C\x0d\n  hostname: kEnumerableProperty\x2C\x0d\n  port: kEnumerableProperty\x2C\x0d\n  pathname: kEnumerableProperty\x2C\x0d\n  search: kEnumerableProperty\x2C\x0d\n  searchParams: kEnumerableProperty\x2C\x0d\n  hash: kEnumerableProperty\x2C\x0d\n  toJSON: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nfunction update(url\x2C params) {\x0d\n  if (!url)\x0d\n    return;\x0d\n\x0d\n  const ctx = url[context];\x0d\n  const serializedParams = params.toString();\x0d\n  if (serializedParams) {\x0d\n    ctx.query = serializedParams;\x0d\n    ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n  } else {\x0d\n    ctx.query = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initSearchParams(url\x2C init) {\x0d\n  if (!init) {\x0d\n    url[searchParams] = [];\x0d\n    return;\x0d\n  }\x0d\n  url[searchParams] = parseParams(init);\x0d\n}\x0d\n\x0d\n// application/x-www-form-urlencoded parser\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\x0d\nfunction parseParams(qs) {\x0d\n  const out = [];\x0d\n  let pairStart = 0;\x0d\n  let lastPos = 0;\x0d\n  let seenSep = false;\x0d\n  let buf = '';\x0d\n  let encoded = false;\x0d\n  let encodeCheck = 0;\x0d\n  let i;\x0d\n  for (i = 0; i < qs.length; ++i) {\x0d\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\x0d\n\x0d\n    // Try matching key/value pair separator\x0d\n    if (code === CHAR_AMPERSAND) {\x0d\n      if (pairStart === i) {\x0d\n        // We saw an empty substring between pair separators\x0d\n        lastPos = pairStart = i + 1;\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      // If `buf` is the key\x2C add an empty value.\x0d\n      if (!seenSep)\x0d\n        out.push('');\x0d\n\x0d\n      seenSep = false;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = pairStart = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Try matching key/value separator (e.g. '=') if we haven't already\x0d\n    if (!seenSep && code === CHAR_EQUAL) {\x0d\n      // Key/value separator match!\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      seenSep = true;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Handle + and percent decoding.\x0d\n    if (code === CHAR_PLUS) {\x0d\n      if (lastPos < i)\x0d\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n      buf += ' ';\x0d\n      lastPos = i + 1;\x0d\n    } else if (!encoded) {\x0d\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\x0d\n      // calls to string decoding functions\x0d\n      if (code === CHAR_PERCENT) {\x0d\n        encodeCheck = 1;\x0d\n      } else if (encodeCheck > 0) {\x0d\n        if (isHexTable[code] === 1) {\x0d\n          if (++encodeCheck === 3) {\x0d\n            encoded = true;\x0d\n          }\x0d\n        } else {\x0d\n          encodeCheck = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Deal with any leftover key or value data\x0d\n\x0d\n  // There is a trailing &. No more processing is needed.\x0d\n  if (pairStart === i)\x0d\n    return out;\x0d\n\x0d\n  if (lastPos < i)\x0d\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n  if (encoded)\x0d\n    buf = querystring.unescape(buf);\x0d\n  ArrayPrototypePush(out\x2C buf);\x0d\n\x0d\n  // If `buf` is the key\x2C add an empty value.\x0d\n  if (!seenSep)\x0d\n    ArrayPrototypePush(out\x2C '');\x0d\n\x0d\n  return out;\x0d\n}\x0d\n\x0d\n// Adapted from querystring's implementation.\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\x0d\nconst noEscape = new Int8Array([\x0d\n/*\x0d\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\x0d\n*/\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\x0d\n]);\x0d\n\x0d\n// Special version of hexTable that uses `+` for U+0020 SPACE.\x0d\nconst paramHexTable = hexTable.slice();\x0d\nparamHexTable[0x20] = '+';\x0d\n\x0d\n// application/x-www-form-urlencoded serializer\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\x0d\nfunction serializeParams(array) {\x0d\n  const len = array.length;\x0d\n  if (len === 0)\x0d\n    return '';\x0d\n\x0d\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\x0d\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\x0d\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\x0d\n\x0d\n  for (let i = 2; i < len; i += 2) {\x0d\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\x0d\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\x0d\n    output += `&${encodedParam}=${encodedValue}`;\x0d\n  }\x0d\n\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// Mainly to mitigate func-name-matching ESLint rule\x0d\nfunction defineIDLClass(proto\x2C classStr\x2C obj) {\x0d\n  // https://heycam.github.io/webidl/#dfn-class-string\x0d\n  ObjectDefineProperty(proto\x2C SymbolToStringTag\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: classStr\x0d\n  });\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-operations\x0d\n  for (const key of ObjectKeys(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n  for (const key of ObjectGetOwnPropertySymbols(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// for merge sort\x0d\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\x0d\n  const sizeLeft = mid - start;\x0d\n  const sizeRight = end - mid;\x0d\n  let l\x2C r\x2C o;\x0d\n\x0d\n  for (l = 0; l < sizeLeft; l++)\x0d\n    lBuffer[l] = out[start + l];\x0d\n  for (r = 0; r < sizeRight; r++)\x0d\n    rBuffer[r] = out[mid + r];\x0d\n\x0d\n  l = 0;\x0d\n  r = 0;\x0d\n  o = start;\x0d\n  while (l < sizeLeft && r < sizeRight) {\x0d\n    if (lBuffer[l] <= rBuffer[r]) {\x0d\n      out[o++] = lBuffer[l++];\x0d\n      out[o++] = lBuffer[l++];\x0d\n    } else {\x0d\n      out[o++] = rBuffer[r++];\x0d\n      out[o++] = rBuffer[r++];\x0d\n    }\x0d\n  }\x0d\n  while (l < sizeLeft)\x0d\n    out[o++] = lBuffer[l++];\x0d\n  while (r < sizeRight)\x0d\n    out[o++] = rBuffer[r++];\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-default-iterator-object\x0d\nfunction createSearchParamsIterator(target\x2C kind) {\x0d\n  const iterator = ObjectCreate(URLSearchParamsIteratorPrototype);\x0d\n  iterator[context] = {\x0d\n    target\x2C\x0d\n    kind\x2C\x0d\n    index: 0\x0d\n  };\x0d\n  return iterator;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\x0d\nconst URLSearchParamsIteratorPrototype = ObjectCreate(IteratorPrototype);\x0d\n\x0d\ndefineIDLClass(URLSearchParamsIteratorPrototype\x2C 'URLSearchParams Iterator'\x2C {\x0d\n  next() {\x0d\n    if (!this ||\x0d\n        ObjectGetPrototypeOf(this) !== URLSearchParamsIteratorPrototype) {\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const values = target[searchParams];\x0d\n    const len = values.length;\x0d\n    if (index >= len) {\x0d\n      return {\x0d\n        value: undefined\x2C\x0d\n        done: true\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const name = values[index];\x0d\n    const value = values[index + 1];\x0d\n    this[context].index = index + 2;\x0d\n\x0d\n    let result;\x0d\n    if (kind === 'key') {\x0d\n      result = name;\x0d\n    } else if (kind === 'value') {\x0d\n      result = value;\x0d\n    } else {\x0d\n      result = [name\x2C value];\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      value: result\x2C\x0d\n      done: false\x0d\n    };\x0d\n  }\x2C\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (this == null || this[context] == null || this[context].target == null)\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const output = ArrayPrototypeReduce(\x0d\n      ArrayPrototypeSlice(target[searchParams]\x2C index)\x2C\x0d\n      (prev\x2C cur\x2C i) => {\x0d\n        const key = i % 2 === 0;\x0d\n        if (kind === 'key' && key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'key+value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C [target[searchParams][index + i - 1]\x2C cur]);\x0d\n        }\x0d\n        return prev;\x0d\n      }\x2C\x0d\n      []\x0d\n    );\x0d\n    const breakLn = inspect(output\x2C innerOpts).includes('\\n');\x0d\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\x0d\n    let outputStr;\x0d\n    if (breakLn) {\x0d\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\x0d\n    } else {\x0d\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\x0d\n    }\x0d\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction domainToASCII(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToASCII(`${domain}`);\x0d\n}\x0d\n\x0d\nfunction domainToUnicode(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToUnicode(`${domain}`);\x0d\n}\x0d\n\x0d\n// Utility function that converts a URL object into an ordinary\x0d\n// options object as expected by the http.request and https.request\x0d\n// APIs.\x0d\nfunction urlToHttpOptions(url) {\x0d\n  const options = {\x0d\n    protocol: url.protocol\x2C\x0d\n    hostname: typeof url.hostname === 'string' &&\x0d\n              StringPrototypeStartsWith(url.hostname\x2C '[') ?\x0d\n      StringPrototypeSlice(url.hostname\x2C 1\x2C -1) :\x0d\n      url.hostname\x2C\x0d\n    hash: url.hash\x2C\x0d\n    search: url.search\x2C\x0d\n    pathname: url.pathname\x2C\x0d\n    path: `${url.pathname || ''}${url.search || ''}`\x2C\x0d\n    href: url.href\x0d\n  };\x0d\n  if (url.port !== '') {\x0d\n    options.port = Number(url.port);\x0d\n  }\x0d\n  if (url.username || url.password) {\x0d\n    options.auth = `${decodeURIComponent(url.username)}:${decodeURIComponent(url.password)}`;\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\nconst forwardSlashRegEx = /\\//g;\x0d\n\x0d\nfunction getPathFromURLWin32(url) {\x0d\n  const hostname = url.hostname;\x0d\n  let pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\x0d\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded \\\\ or / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  pathname = pathname.replace(forwardSlashRegEx\x2C '\\\\');\x0d\n  pathname = decodeURIComponent(pathname);\x0d\n  if (hostname !== '') {\x0d\n    // If hostname is set\x2C then we have a UNC path\x0d\n    // Pass the hostname through domainToUnicode just in case\x0d\n    // it is an IDN using punycode encoding. We do not need to worry\x0d\n    // about percent encoding because the URL parser will have\x0d\n    // already taken care of that for us. Note that this only\x0d\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\x0d\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\x0d\n  }\x0d\n  // Otherwise\x2C it's a local path that requires a drive letter\x0d\n  const letter = pathname.codePointAt(1) | 0x20;\x0d\n  const sep = pathname[2];\x0d\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\x0d\n      (sep !== ':')) {\x0d\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\x0d\n  }\x0d\n  return pathname.slice(1);\x0d\n}\x0d\n\x0d\nfunction getPathFromURLPosix(url) {\x0d\n  if (url.hostname !== '') {\x0d\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\x0d\n  }\x0d\n  const pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if (pathname[n + 1] === '2' && third === 102) {\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return decodeURIComponent(pathname);\x0d\n}\x0d\n\x0d\nfunction fileURLToPath(path) {\x0d\n  if (typeof path === 'string')\x0d\n    path = new URL(path);\x0d\n  else if (!isURLInstance(path))\x0d\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\x0d\n  if (path.protocol !== 'file:')\x0d\n    throw new ERR_INVALID_URL_SCHEME('file');\x0d\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\x0d\n}\x0d\n\x0d\n// The following characters are percent-encoded when converting from file path\x0d\n// to URL:\x0d\n// - %: The percent character is the only character not encoded by the\x0d\n//        `pathname` setter.\x0d\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\x0d\n//      character but the `pathname` setters replaces it by a forward slash.\x0d\n// - LF: The newline character is stripped out by the `pathname` setter.\x0d\n//       (See whatwg/url#419)\x0d\n// - CR: The carriage return character is also stripped out by the `pathname`\x0d\n//       setter.\x0d\n// - TAB: The tab character is also stripped out by the `pathname` setter.\x0d\nconst percentRegEx = /%/g;\x0d\nconst backslashRegEx = /\\\\/g;\x0d\nconst newlineRegEx = /\\n/g;\x0d\nconst carriageReturnRegEx = /\\r/g;\x0d\nconst tabRegEx = /\\t/g;\x0d\n\x0d\nfunction encodePathChars(filepath) {\x0d\n  if (StringPrototypeIncludes(filepath\x2C '%'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C percentRegEx\x2C '%25');\x0d\n  // In posix\x2C backslash is a valid character in paths:\x0d\n  if (!isWindows && StringPrototypeIncludes(filepath\x2C '\\\\'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C backslashRegEx\x2C '%5C');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\n'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C newlineRegEx\x2C '%0A');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\r'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C carriageReturnRegEx\x2C '%0D');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\t'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C tabRegEx\x2C '%09');\x0d\n  return filepath;\x0d\n}\x0d\n\x0d\nfunction pathToFileURL(filepath) {\x0d\n  const outURL = new URL('file://');\x0d\n  if (isWindows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\x0d\n    // UNC path format: \\\\server\\share\\resource\x0d\n    const paths = StringPrototypeSplit(filepath\x2C '\\\\');\x0d\n    if (paths.length <= 3) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Missing UNC resource path'\x0d\n      );\x0d\n    }\x0d\n    const hostname = paths[2];\x0d\n    if (hostname.length === 0) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Empty UNC servername'\x0d\n      );\x0d\n    }\x0d\n    outURL.hostname = domainToASCII(hostname);\x0d\n    outURL.pathname = encodePathChars(\x0d\n      ArrayPrototypeJoin(ArrayPrototypeSlice(paths\x2C 3)\x2C '/'));\x0d\n  } else {\x0d\n    let resolved = path.resolve(filepath);\x0d\n    // path.resolve strips trailing slashes so we must add them back\x0d\n    const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\x0d\n                                                   filepath.length - 1);\x0d\n    if ((filePathLast === CHAR_FORWARD_SLASH ||\x0d\n         (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\x0d\n        resolved[resolved.length - 1] !== path.sep)\x0d\n      resolved += '/';\x0d\n    outURL.pathname = encodePathChars(resolved);\x0d\n  }\x0d\n  return outURL;\x0d\n}\x0d\n\x0d\nfunction isURLInstance(fileURLOrPath) {\x0d\n  return fileURLOrPath != null && fileURLOrPath.href && fileURLOrPath.origin;\x0d\n}\x0d\n\x0d\nfunction toPathIfFileURL(fileURLOrPath) {\x0d\n  if (!isURLInstance(fileURLOrPath))\x0d\n    return fileURLOrPath;\x0d\n  return fileURLToPath(fileURLOrPath);\x0d\n}\x0d\n\x0d\nfunction constructUrl(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                      host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = new URLContext();\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n\x0d\n  const url = ObjectCreate(URL.prototype);\x0d\n  url[context] = ctx;\x0d\n  const params = new URLSearchParams();\x0d\n  url[searchParams] = params;\x0d\n  params[context] = url;\x0d\n  initSearchParams(params\x2C query);\x0d\n  return url;\x0d\n}\x0d\nsetURLConstructor(constructUrl);\x0d\n\x0d\nmodule.exports = {\x0d\n  toUSVString\x2C\x0d\n  fileURLToPath\x2C\x0d\n  pathToFileURL\x2C\x0d\n  toPathIfFileURL\x2C\x0d\n  isURLInstance\x2C\x0d\n  URL\x2C\x0d\n  URLSearchParams\x2C\x0d\n  domainToASCII\x2C\x0d\n  domainToUnicode\x2C\x0d\n  urlToHttpOptions\x2C\x0d\n  formatSymbol: kFormat\x2C\x0d\n  searchParamsSymbol: searchParams\x2C\x0d\n  encodeStr\x0d\n};\x0d\n
code-source-info,0x35a8d4b16b6,39,43660,43785,C0O43681C3O43686C9O43721C11O43742C12O43746C15O43753C19O43782,,
code-creation,LazyCompile,10,220627,0x35a8d4b486e,17,isURLInstance node:internal/url:1509:23,0x233c00398c8,~
code-source-info,0x35a8d4b486e,39,43533,43632,C0O43554C3O43575C6O43600C12O43622C16O43629,,
code-creation,LazyCompile,10,220698,0x35a8d4b49ce,81, node:internal/fs/utils:671:38,0x39c7b622d70,~
code-source-info,0x35a8d4b49ce,84,18882,19162,C14O18916C22O18949C25O18949C31O18976C36O19007C49O18982C54O18976C55O19075C68O19075C74O19114C76O19144C78O19144C80O19161,,
code-creation,LazyCompile,10,220758,0x35a8d4b4bde,110, node:internal/fs/utils:360:35,0x39c7b6223e8,~
code-source-info,0x35a8d4b4bde,84,8971,9580,C16O9036C21O9090C26O9090C31O9187C37O9210C41O9239C45O9256C51O9256C60O9308C64O9329C69O9329C76O9375C77O9382C78O9405C94O9405C100O9524C104O9547C106O9547C107O9566C109O9577,,
code-creation,LazyCompile,10,220806,0x35a8d4b4d56,16,isUint8Array node:internal/util/types:13:22,0xf28400a790,~
script-source,17,node:internal/util/types,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction isTypedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\x0d\n}\x0d\n\x0d\nfunction isUint8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\x0d\n}\x0d\n\x0d\nfunction isUint8ClampedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\x0d\n}\x0d\n\x0d\nfunction isUint16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\x0d\n}\x0d\n\x0d\nfunction isUint32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\x0d\n}\x0d\n\x0d\nfunction isInt8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\x0d\n}\x0d\n\x0d\nfunction isInt16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\x0d\n}\x0d\n\x0d\nfunction isInt32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\x0d\n}\x0d\n\x0d\nfunction isBigInt64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\x0d\n}\x0d\n\x0d\nfunction isBigUint64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ...internalBinding('types')\x2C\x0d\n  isArrayBufferView: ArrayBufferIsView\x2C\x0d\n  isTypedArray\x2C\x0d\n  isUint8Array\x2C\x0d\n  isUint8ClampedArray\x2C\x0d\n  isUint16Array\x2C\x0d\n  isUint32Array\x2C\x0d\n  isInt8Array\x2C\x0d\n  isInt16Array\x2C\x0d\n  isInt32Array\x2C\x0d\n  isFloat32Array\x2C\x0d\n  isFloat64Array\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isBigUint64Array\x2C\x0d\n};\x0d\n\x0d\nlet isCryptoKey;\x0d\nlet isKeyObject;\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  isKeyObject: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isKeyObject) {\x0d\n        ({ isKeyObject } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isKeyObject(obj);\x0d\n    }\x0d\n  }\x2C\x0d\n  isCryptoKey: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isCryptoKey) {\x0d\n        ({ isCryptoKey } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isCryptoKey(obj);\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x35a8d4b4d56,17,269,356,C0O282C5O289C12O336C15O353,,
code-creation,LazyCompile,10,220979,0x35a8d4b51ce,23,splitRoot node:fs:2412:33,0x39c7b6197f8,~
code-source-info,0x35a8d4b51ce,83,66679,66745,C0O66692C9O66719C12O66699C19O66736C22O66740,,
code-creation,LazyCompile,10,221155,0x35a8d4b52d6,63,handleErrorFromBinding node:internal/fs/utils:343:32,0x39c7b622398,~
code-source-info,0x35a8d4b52d6,84,8315,8826,C0O8334C6O8398C11O8398C16O8421C24O8421C29O8479C31O8479C32O8506C38O8738C43O8765C51O8738C56O8812C60O8802C62O8825,,
code-creation,LazyCompile,10,221214,0x35a8d4b5436,53,nextPart node:fs:2438:31,0x39c7b6198f0,~
code-source-info,0x35a8d4b5436,83,67436,67687,C0O67463C4O67459C9O67496C14O67496C20O67580C22O67591C24O67587C31O67621C33O67617C38O67650C40O67659C41O67473C47O67450C50O67672C52O67682,,
code-creation,LazyCompile,10,221336,0x35a8d4b557e,34,isFileType node:fs:213:20,0x39c7b617598,~
code-source-info,0x35a8d4b557e,83,5673,5921,C0O5810C2O5815C6O5823C10O5858C15O5865C20O5882C22O5897C24O5895C30O5905C33O5918,,
code-creation,Function,11,221564,0x21ab3646420,6232,resolve node:path:158:10,0x3a93d9cd510,^
code-source-info,0x21ab3646420,41,4875,9786,,,
code-creation,Function,11,221593,0x21ab3647ce0,544,nextPart node:fs:2438:31,0x39c7b6198f0,^
code-source-info,0x21ab3647ce0,83,67436,67687,,,
code-creation,LazyCompile,10,222001,0x35a8d4b5f26,72,encodeRealpathResult node:fs:2425:30,0x39c7b6198a0,~
code-source-info,0x35a8d4b5f26,83,67025,67291,C0O67048C4O67073C10O67093C17O67102C22O67119C24O67133C25O67154C30O67161C35O67161C41O67190C48O67199C53O67220C55O67236C56O67261C61O67278C66O67261C71O67288,,
code-creation,LazyCompile,10,222076,0x35a8d4b6116,62,loadNativeModule node:internal/modules/cjs/helpers:44:26,0xc4d9922770,~
code-source-info,0x35a8d4b6116,114,1194,1482,C0O1231C5O1244C10O1248C15O1248C21O1266C26O1273C35O1304C43O1304C48O1432C53O1432C57O1463C59O1474C61O1481,,
code-creation,LazyCompile,10,222160,0x35a8d4b6a9e,246,Module.load node:internal/modules/cjs/loader:992:33,0xc4d9928378,~
code-source-info,0x35a8d4b6a9e,115,31969,32805,C0O31985C8O32031C16O31985C21O32041C26O32054C32O32041C36O32066C38O32080C42O32095C45O32115C52O32132C55O32137C60O32137C66O32115C71O32106C75O32180C78O32180C83O32259C91O32263C101O32316C106O32327C112O32342C124O32348C129O32342C130O32390C133O32397C140O32408C144O32419C150O32440C151O32452C155O32483C160O32492C165O32596C170O32633C175O32644C187O32685C192O32692C197O32692C204O32706C206O32704C211O32739C216O32748C221O32748C228O32774C233O32783C238O32783C245O32804,,
code-creation,LazyCompile,10,222280,0x35a8d4b6d4e,98,findLongestRegisteredExtension node:internal/modules/cjs/loader:424:40,0xc4d99277f0,~
code-source-info,0x35a8d4b6d4e,115,12570,13011,C0O12599C5O12604C10O12604C16O12631C18O12656C20O12683C22O12752C36O12705C44O12752C49O12767C51O12786C55O12796C56O12806C61O12813C63O12861C68O12880C74O12920C77O12931C84O12942C89O12962C91O12986C92O12689C95O12995C97O13008,,
code-creation,LazyCompile,10,222441,0x35a8d4b6f2e,415,basename node:path:749:11,0x3a93d9cd7d0,~
code-source-info,0x35a8d4b6f2e
code-creation,LazyCompile,10,222634,0x35a8d4b744e,485,Module._extensions..js node:internal/modules/cjs/loader:1135:37,0xc4d9928518,~
code-source-info,0x35a8d4b744e
code-creation,LazyCompile,10,222782,0x35a8d4b78ae,376,readFileSync node:fs:459:22,0x39c7b617a18,~
code-source-info,0x35a8d4b78ae
code-creation,LazyCompile,10,222879,0x35a8d4b7bce,30,isEncoding node:buffer:535:40,0xf28403b550,~
code-source-info,0x35a8d4b7bce,24,15448,15583,C0O15464C6O15512C12O15519C20O15538C23O15538C28O15566C29O15580,,
code-creation,LazyCompile,10,222917,0x35a8d4b7cd6,30,normalizeEncoding node:internal/util:160:27,0xf284005ea0,~
code-source-info,0x35a8d4b7cd6,15,4358,4466,C0O4369C7O4392C14O4410C19O4423C21O4437C22O4441C25O4448C29O4463,,
code-creation,LazyCompile,10,222965,0x35a8d4b7e4e,113,openSync node:fs:585:18,0x39c7b617c00,~
code-source-info,0x35a8d4b7e4e,83,15283,15673,C0O15308C5O15315C11O15362C16O15362C21O15387C37O15394C44O15447C51O15449C58O15475C63O15483C70O15488C73O15499C78O15499C95O15483C101O15624C106O15624C110O15656C112O15670,,
code-creation,LazyCompile,10,223011,0x35a8d4b7fce,37, node:internal/fs/utils:683:42,0x39c7b622dc0,~
code-source-info,0x35a8d4b7fce,84,19209,19348,C14O19265C19O19265C24O19300C29O19300C34O19333C36O19345,,
code-creation,LazyCompile,10,223083,0x35a8d4b83a6,515,stringToFlags node:internal/fs/utils:558:23,0x39c7b622be0,~
code-source-info,0x35a8d4b83a
code-creation,LazyCompile,10,223189,0x35a8d4b8796,97,parseFileMode node:internal/validators:60:23,0xf284009230,~
code-source-info,0x35a8d4b8796,16,1561,1876,C0O1585C11O1603C17O1641C24O1665C27O1645C34O1701C41O1746C52O1707C57O1701C58O1769C66O1777C73O1813C89O1813C94O1860C96O1873,,
code-creation,LazyCompile,10,223264,0x35a8d4b892e,206, node:internal/validators:85:3,0xf2840092f0,~
code-source-info,0x35a8d4b892e,16,2362,2951,C36O2505C42O2545C58O2551C63O2545C64O2612C67O2617C73O2642C78O2647C84O2682C100O2688C105O2682C106O2753C116O2792C129O2805C142O2759C147O2753C148O2832C150O2842C157O2857C162O2873C172O2912C185O2925C198O2879C203O2873C205O2950,,
code-creation,LazyCompile,10,223310,0x35a8d4b8af6,9,isInt32 node:internal/validators:37:17,0xf284008d58,~
code-source-info,0x35a8d4b8af6,16,785,830,C0O798C2O822C5O811C8O827,,
code-creation,LazyCompile,10,223424,0x35a8d4b8bfe,66,tryStatSync node:fs:413:21,0x39c7b617928,~
code-source-info,0x35a8d4b8bfe,83,11015,11233,C0O11047C2O11068C7O11076C22O11076C28O11121C36O11145C38O11162C43O11165C48O11165C53O11185C58O11191C62O11185C63O11217C65O11230,,
code-creation,LazyCompile,10,223499,0x35a8d4b8d76,96,tryCreateBuffer node:fs:423:25,0x39c7b617978,~
code-source-info,0x35a8d4b8d76,83,11261,11561,C0O11299C2O11312C7O11334C9O11345C11O11343C16O11368C23O11374C28O11368C29O11419C34O11435C39O11435C45O11459C57O11465C58O11494C65O11508C67O11518C72O11521C77O11521C93O11544C95O11558,,
code-creation,LazyCompile,10,223542,0x35a8d4b8ece,17,allocUnsafe node:buffer:378:42,0xf28403b0c8,~
code-source-info,0x35a8d4b8ece,24,11388,11446,C0O11400C5O11400C9O11421C12O11428C16O11443,,
code-creation,LazyCompile,10,223577,0x35a8d4b8fd6,54, node:buffer:354:36,0xf28403b010,~
code-source-info,0x35a8d4b8fd6,24,10662,10822,C0O10677C8O10677C13O10710C14O10721C21O10737C23O10734C28O10757C33O10789C46O10763C51O10757C53O10821,,
code-creation,LazyCompile,10,223630,0x35a8d4b915e,177,validateNumber node:internal/validators:124:24,0xf284009430,~
code-source-info,0x35a8d4b915e,16,3685,4141,C19O3726C25O3762C41O3768C46O3762C47O3822C54O3848C66O3880C83O3930C86O3930C92O3958C110O4029C136O4061C151O4105C169O3964C174O3958C176O4140,,
code-creation,LazyCompile,10,223687,0x35a8d4b9326,119,allocate node:buffer:403:18,0xf28403b218,~
code-source-info,0x35a8d4b9326,24,12115,12443,C0O12127C1O12136C6O12149C11O12156C16O12173C17O12182C20O12201C24O12210C27O12191C32O12225C34O12237C39O12248C41O12246C44O12234C49O12268C52O12268C55O12297C62O12312C67O12323C75O12297C81O12347C88O12361C94O12358C100O12372C103O12372C106O12390C108O12399C109O12408C114O12415C118O12440,,
code-creation,LazyCompile,10,223749,0x35a8d4b94e6,86,tryReadSync node:fs:438:21,0x39c7b6179c8,~
code-source-info,0x35a8d4b94e6,83,11585,11830,C0O11635C2O11648C7O11673C12O11688C29O11688C35O11725C47O11731C48O11760C55O11774C57O11784C62O11787C67O11787C83O11810C85O11827,,
code-creation,LazyCompile,10,223820,0x35a8d4b96d6,251,readSync node:fs:699:18,0x39c7b617cd0,~
code-source-info,0x35a8d4b96d6,83,18462,19491,C0O18462C2O18506C7O18511C13O18536C18O18536C22O18579C29O18586C34O18663C40O18673C43O18704C55O18723C61O18739C68O18750C73O18767C82O18813C87O18840C92O18869C105O18869C110O18917C117O18935C118O18946C123O18960C124O18969C125O18991C131O19002C136O19016C152O19022C157O19016C158O19148C163O19196C174O19148C179O19214C184O19241C188O19261C196O19261C201O19318C203O19340C208O19348C233O19348C239O19442C244O19442C248O19474C250O19488,,
code-creation,LazyCompile,10,223888,0x35a8d4b993e,52, node:internal/fs/utils:689:40,0x39c7b622e10,~
code-source-info,0x35a8d4b993e,84,19393,19522,C14O19423C22O19427C29O19452C30O19461C31O19472C44O19472C49O19509C51O19519,,
code-creation,LazyCompile,10,223932,0x35a8d4b9aae,51, node:internal/validators:200:40,0xf284009658,~
code-source-info,0x35a8d4b9aae,16,6227,6463,C14O6261C19O6266C25O6300C30O6331C43O6306C48O6300C50O6462,,
code-creation,LazyCompile,10,223976,0x35a8d4b9c06,151, node:internal/validators:74:3,0xf2840092a0,~
code-source-info,0x35a8d4b9c06,16,1924,2312,C12O1944C25O1974C32O2008C38O2046C54O2052C59O2046C60O2106C65O2111C71O2142C87O2148C92O2142C93O2202C95O2212C102O2227C107O2241C117O2280C130O2293C143O2247C148O2241C150O2311,,
code-creation,LazyCompile,10,224031,0x35a8d4b9df6,103, node:internal/fs/utils:639:3,0x39c7b622cd0,~
code-source-info,0x35a8d4b9df6,84,17967,18357,C0O18008C1O18019C6O18033C22O18039C27O18033C28O18099C29O18110C34O18124C50O18130C55O18124C56O18190C58O18201C64O18210C69O18235C82O18325C95O18241C100O18235C102O18356,,
code-creation,LazyCompile,10,224088,0x35a8d4ba0fe,151, node:internal/fs/utils:904:42,0x39c7b623180,~
code-source-info,0x35a8d4ba0fe,84,25452,26024,C0O25477C6O25518C14O25518C21O25567C27O25608C32O25631C35O25626C37O25623C47O25657C53O25664C56O25651C61O25680C77O25764C80O25759C98O25784C104O25791C117O25686C122O25680C125O25868C143O25874C148O25868C150O26023,,
code-creation,LazyCompile,10,224155,0x35a8d4ba2b6,47,closeSync node:fs:535:19,0x39c7b617b28,~
code-source-info,0x35a8d4ba2b6,83,14102,14230,C0O14112C5O14117C11O14154C13O14161C18O14169C31O14169C36O14199C41O14199C46O14229,,
code-creation,LazyCompile,10,224247,0x35a8d4ba3ee,162,toString node:buffer:790:46,0xf28403cf50,~
code-source-info,0x35a8d4ba3ee,24,24231,24823,C0O24231C2O24273C8O24280C13O24306C20O24324C25O24306C31O24332C32O24360C37O24373C38O24383C43O24394C48O24413C50O24423C55O24436C57O24446C58O24460C65O24477C71O24506C76O24518C83O24542C90O24557C92O24565C97O24580C99O24590C100O24596C104O24641C109O24641C115O24663C116O24681C119O24681C124O24710C126O24738C133O24744C138O24738C139O24796C156O24796C161O24820,,
code-creation,LazyCompile,10,224357,0x35a8d4ba6ae,499,getEncodingOps node:buffer:684:24,0xf28403cda8,~
code-source-info,0x35a8d4ba6ae
code-creation,LazyCompile,10,224474,0x35a8d4baa96,12,slice node:buffer:599:12,0xf28403b770,~
code-source-info,0x35a8d4baa96,24,17340,17386,C0O17365C5O17365C11O17386,,
code-creation,LazyCompile,10,224862,0x35a8d4bb58e,499,Module._compile node:internal/modules/cjs/loader:1080:37,0xc4d9928488,~
code-source-info,0x35a8d4bb58e
code-creation,LazyCompile,10,225073,0x35a8d4bbb4e,274,maybeCacheSourceMap node:internal/source_map/source_map_cache:80:29,0xc4d991f9d0,~
code-source-info,0x35a8d4bbb4e,112,2568,3836,C0O2657C3O2657C7O2684C10O2698C15O2702C23O2722C25O2742C26O2749C30O2764C35O2775C44O2773C54O2911C64O2911C68O2928C69O2935C70O2958C80O2958C86O3065C88O3096C91O3124C96O3131C101O3096C107O3167C112O3187C117O3194C122O3217C126O3249C131O3267C136O3271C143O3301C150O3333C160O3364C166O3379C170O3267C178O3406C182O3438C187O3462C192O3466C200O3500C210O3531C216O3546C220O3462C228O3705C233O3723C238O3727C246O3761C256O3792C262O3807C266O3723C273O3835,,
code-creation,LazyCompile,10,225141,0x35a8d4bc736,31,getSourceMapsEnabled node:internal/source_map/source_map_cache:49:30,0xc4d991f930,~
code-source-info,0x35a8d4bc736,112,1716,1866,C0O1724C6O1768C11O1789C17O1789C22O1768C26O1838C30O1863,,
code-creation,LazyCompile,10,225189,0x35a8d4bc8ae,100,setSourceMapsEnabled node:internal/source_map/source_map_cache:56:30,0xc4d991f980,~
code-source-info,0x35a8d4bc8ae,112,1899,2536,C0O1910C8O1910C13O2020C19O2020C24O1957C29O1984C34O2050C38O2080C42O2138C48O2138C53O2111C58O2195C64O2254C70O2417C76O2417C81O2389C86O2450C90O2509C92O2527C99O2535,,
code-creation,LazyCompile,10,225245,0x35a8d4bca26,30,validateBoolean node:internal/validators:148:25,0xf2840094d0,~
code-source-info,0x35a8d4bca26,16,4555,4669,C0O4574C6O4611C22O4617C27O4611C29O4668,,
code-creation,LazyCompile,10,225333,0x35a8d4bce1e,165,wrapSafe node:internal/modules/cjs/loader:1040:18,0xc4d9927a70,~
code-source-info,0x35a8d4bce1e,115,33444,34474,C0O33444C9O33488C17O33524C22O33531C27O33531C33O33551C40O33561C45O33578C52O33596C56O33688C64O33561C70O33916C74O33936C81O33946C86O33962C98O34084C102O34101C113O33946C118O34343C130O34368C135O34380C142O34391C147O34421C157O34421C162O34456C164O34456,,
code-creation,LazyCompile,10,225490,0x35a8d4bd5fe,475,compileFunction node:vm:316:25,0x39c7b6369a0,~
script-source,92,node:vm,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Symbol\x2C\x0d\n  PromiseReject\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ContextifyScript\x2C\x0d\n  MicrotaskQueue\x2C\x0d\n  makeContext\x2C\x0d\n  isContext: _isContext\x2C\x0d\n  constants\x2C\x0d\n  compileFunction: _compileFunction\x2C\x0d\n  measureMemory: _measureMemory\x2C\x0d\n} = internalBinding('contextify');\x0d\nconst {\x0d\n  ERR_CONTEXT_NOT_INITIALIZED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  emitExperimentalWarning\x2C\x0d\n  kEmptyObject\x2C\x0d\n  kVmBreakFirstLineSymbol\x2C\x0d\n} = require('internal/util');\x0d\nconst kParsingContext = Symbol('script parsing context');\x0d\n\x0d\nclass Script extends ContextifyScript {\x0d\n  constructor(code\x2C options = kEmptyObject) {\x0d\n    code = `${code}`;\x0d\n    if (typeof options === 'string') {\x0d\n      options = { filename: options };\x0d\n    } else {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      filename = 'evalmachine.<anonymous>'\x2C\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      cachedData\x2C\x0d\n      produceCachedData = false\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      [kParsingContext]: parsingContext\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateString(filename\x2C 'options.filename');\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n    validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n\x0d\n    // Calling `ReThrow()` on a native TryCatch does not generate a new\x0d\n    // abort-on-uncaught-exception check. A dummy try/catch in JS land\x0d\n    // protects against that.\x0d\n    try { // eslint-disable-line no-useless-catch\x0d\n      super(code\x2C\x0d\n            filename\x2C\x0d\n            lineOffset\x2C\x0d\n            columnOffset\x2C\x0d\n            cachedData\x2C\x0d\n            produceCachedData\x2C\x0d\n            parsingContext);\x0d\n    } catch (e) {\x0d\n      throw e; /* node-do-not-add-exception-line */\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      validateFunction(importModuleDynamically\x2C\x0d\n                       'options.importModuleDynamically');\x0d\n      const { importModuleDynamicallyWrap } =\x0d\n        require('internal/vm/module');\x0d\n      const { callbackMap } = internalBinding('module_wrap');\x0d\n      callbackMap.set(this\x2C {\x0d\n        importModuleDynamically:\x0d\n          importModuleDynamicallyWrap(importModuleDynamically)\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  runInThisContext(options) {\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(null\x2C options);\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInContext(contextifiedObject\x2C options) {\x0d\n    validateContext(contextifiedObject);\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(\x0d\n      contextifiedObject\x2C\x0d\n      options\x2C\x0d\n    );\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInNewContext(contextObject\x2C options) {\x0d\n    const context = createContext(contextObject\x2C getContextOptions(options));\x0d\n    return this.runInContext(context\x2C options);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction validateContext(contextifiedObject) {\x0d\n  if (!isContext(contextifiedObject)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('contextifiedObject'\x2C 'vm.Context'\x2C\x0d\n                                   contextifiedObject);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getRunInContextArgs(contextifiedObject\x2C options = kEmptyObject) {\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  let timeout = options.timeout;\x0d\n  if (timeout === undefined) {\x0d\n    timeout = -1;\x0d\n  } else {\x0d\n    validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    displayErrors = true\x2C\x0d\n    breakOnSigint = false\x2C\x0d\n    [kVmBreakFirstLineSymbol]: breakFirstLine = false\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateBoolean(displayErrors\x2C 'options.displayErrors');\x0d\n  validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n\x0d\n  return {\x0d\n    breakOnSigint\x2C\x0d\n    args: [\x0d\n      contextifiedObject\x2C\x0d\n      timeout\x2C\x0d\n      displayErrors\x2C\x0d\n      breakOnSigint\x2C\x0d\n      breakFirstLine\x2C\x0d\n    ]\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction getContextOptions(options) {\x0d\n  if (!options)\x0d\n    return {};\x0d\n  const contextOptions = {\x0d\n    name: options.contextName\x2C\x0d\n    origin: options.contextOrigin\x2C\x0d\n    codeGeneration: undefined\x2C\x0d\n    microtaskMode: options.microtaskMode\x2C\x0d\n  };\x0d\n  if (contextOptions.name !== undefined)\x0d\n    validateString(contextOptions.name\x2C 'options.contextName');\x0d\n  if (contextOptions.origin !== undefined)\x0d\n    validateString(contextOptions.origin\x2C 'options.contextOrigin');\x0d\n  if (options.contextCodeGeneration !== undefined) {\x0d\n    validateObject(options.contextCodeGeneration\x2C\x0d\n                   'options.contextCodeGeneration');\x0d\n    const { strings\x2C wasm } = options.contextCodeGeneration;\x0d\n    if (strings !== undefined)\x0d\n      validateBoolean(strings\x2C 'options.contextCodeGeneration.strings');\x0d\n    if (wasm !== undefined)\x0d\n      validateBoolean(wasm\x2C 'options.contextCodeGeneration.wasm');\x0d\n    contextOptions.codeGeneration = { strings\x2C wasm };\x0d\n  }\x0d\n  if (options.microtaskMode !== undefined)\x0d\n    validateString(options.microtaskMode\x2C 'options.microtaskMode');\x0d\n  return contextOptions;\x0d\n}\x0d\n\x0d\nfunction isContext(object) {\x0d\n  validateObject(object\x2C 'object'\x2C { allowArray: true });\x0d\n\x0d\n  return _isContext(object);\x0d\n}\x0d\n\x0d\nlet defaultContextNameIndex = 1;\x0d\nfunction createContext(contextObject = {}\x2C options = kEmptyObject) {\x0d\n  if (isContext(contextObject)) {\x0d\n    return contextObject;\x0d\n  }\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  const {\x0d\n    name = `VM Context ${defaultContextNameIndex++}`\x2C\x0d\n    origin\x2C\x0d\n    codeGeneration\x2C\x0d\n    microtaskMode\x0d\n  } = options;\x0d\n\x0d\n  validateString(name\x2C 'options.name');\x0d\n  if (origin !== undefined)\x0d\n    validateString(origin\x2C 'options.origin');\x0d\n  if (codeGeneration !== undefined)\x0d\n    validateObject(codeGeneration\x2C 'options.codeGeneration');\x0d\n\x0d\n  let strings = true;\x0d\n  let wasm = true;\x0d\n  if (codeGeneration !== undefined) {\x0d\n    ({ strings = true\x2C wasm = true } = codeGeneration);\x0d\n    validateBoolean(strings\x2C 'options.codeGeneration.strings');\x0d\n    validateBoolean(wasm\x2C 'options.codeGeneration.wasm');\x0d\n  }\x0d\n\x0d\n  let microtaskQueue = null;\x0d\n  if (microtaskMode !== undefined) {\x0d\n    validateOneOf(microtaskMode\x2C 'options.microtaskMode'\x2C\x0d\n                  ['afterEvaluate'\x2C undefined]);\x0d\n\x0d\n    if (microtaskMode === 'afterEvaluate')\x0d\n      microtaskQueue = new MicrotaskQueue();\x0d\n  }\x0d\n\x0d\n  makeContext(contextObject\x2C name\x2C origin\x2C strings\x2C wasm\x2C microtaskQueue);\x0d\n  return contextObject;\x0d\n}\x0d\n\x0d\nfunction createScript(code\x2C options) {\x0d\n  return new Script(code\x2C options);\x0d\n}\x0d\n\x0d\n// Remove all SIGINT listeners and re-attach them after the wrapped function\x0d\n// has executed\x2C so that caught SIGINT are handled by the listeners again.\x0d\nfunction sigintHandlersWrap(fn\x2C thisArg\x2C argsArray) {\x0d\n  const sigintListeners = process.rawListeners('SIGINT');\x0d\n\x0d\n  process.removeAllListeners('SIGINT');\x0d\n\x0d\n  try {\x0d\n    return ReflectApply(fn\x2C thisArg\x2C argsArray);\x0d\n  } finally {\x0d\n    // Add using the public methods so that the `newListener` handler of\x0d\n    // process can re-attach the listeners.\x0d\n    ArrayPrototypeForEach(sigintListeners\x2C (listener) => {\x0d\n      process.addListener('SIGINT'\x2C listener);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction runInContext(code\x2C contextifiedObject\x2C options) {\x0d\n  validateContext(contextifiedObject);\x0d\n  if (typeof options === 'string') {\x0d\n    options = {\x0d\n      filename: options\x2C\x0d\n      [kParsingContext]: contextifiedObject\x0d\n    };\x0d\n  } else {\x0d\n    options = { ...options\x2C [kParsingContext]: contextifiedObject };\x0d\n  }\x0d\n  return createScript(code\x2C options)\x0d\n    .runInContext(contextifiedObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInNewContext(code\x2C contextObject\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  contextObject = createContext(contextObject\x2C getContextOptions(options));\x0d\n  options = { ...options\x2C [kParsingContext]: contextObject };\x0d\n  return createScript(code\x2C options).runInNewContext(contextObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInThisContext(code\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  return createScript(code\x2C options).runInThisContext(options);\x0d\n}\x0d\n\x0d\nfunction compileFunction(code\x2C params\x2C options = kEmptyObject) {\x0d\n  validateString(code\x2C 'code');\x0d\n  if (params !== undefined) {\x0d\n    validateArray(params\x2C 'params');\x0d\n    ArrayPrototypeForEach(params\x2C\x0d\n                          (param\x2C i) => validateString(param\x2C `params[${i}]`));\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    filename = ''\x2C\x0d\n    columnOffset = 0\x2C\x0d\n    lineOffset = 0\x2C\x0d\n    cachedData = undefined\x2C\x0d\n    produceCachedData = false\x2C\x0d\n    parsingContext = undefined\x2C\x0d\n    contextExtensions = []\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateString(filename\x2C 'options.filename');\x0d\n  validateUint32(columnOffset\x2C 'options.columnOffset');\x0d\n  validateUint32(lineOffset\x2C 'options.lineOffset');\x0d\n  if (cachedData !== undefined)\x0d\n    validateBuffer(cachedData\x2C 'options.cachedData');\x0d\n  validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n  if (parsingContext !== undefined) {\x0d\n    if (\x0d\n      typeof parsingContext !== 'object' ||\x0d\n      parsingContext === null ||\x0d\n      !isContext(parsingContext)\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.parsingContext'\x2C\x0d\n        'Context'\x2C\x0d\n        parsingContext\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  validateArray(contextExtensions\x2C 'options.contextExtensions');\x0d\n  ArrayPrototypeForEach(contextExtensions\x2C (extension\x2C i) => {\x0d\n    const name = `options.contextExtensions[${i}]`;\x0d\n    validateObject(extension\x2C name\x2C { nullable: true });\x0d\n  });\x0d\n\x0d\n  const result = _compileFunction(\x0d\n    code\x2C\x0d\n    filename\x2C\x0d\n    lineOffset\x2C\x0d\n    columnOffset\x2C\x0d\n    cachedData\x2C\x0d\n    produceCachedData\x2C\x0d\n    parsingContext\x2C\x0d\n    contextExtensions\x2C\x0d\n    params\x0d\n  );\x0d\n\x0d\n  if (produceCachedData) {\x0d\n    result.function.cachedDataProduced = result.cachedDataProduced;\x0d\n  }\x0d\n\x0d\n  if (result.cachedData) {\x0d\n    result.function.cachedData = result.cachedData;\x0d\n  }\x0d\n\x0d\n  if (importModuleDynamically !== undefined) {\x0d\n    validateFunction(importModuleDynamically\x2C\x0d\n                     'options.importModuleDynamically');\x0d\n    const { importModuleDynamicallyWrap } =\x0d\n      require('internal/vm/module');\x0d\n    const { callbackMap } = internalBinding('module_wrap');\x0d\n    const wrapped = importModuleDynamicallyWrap(importModuleDynamically);\x0d\n    const func = result.function;\x0d\n    callbackMap.set(result.cacheKey\x2C {\x0d\n      importModuleDynamically: (s\x2C _k\x2C i) => wrapped(s\x2C func\x2C i)\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  return result.function;\x0d\n}\x0d\n\x0d\nconst measureMemoryModes = {\x0d\n  summary: constants.measureMemory.mode.SUMMARY\x2C\x0d\n  detailed: constants.measureMemory.mode.DETAILED\x2C\x0d\n};\x0d\n\x0d\nconst measureMemoryExecutions = {\x0d\n  default: constants.measureMemory.execution.DEFAULT\x2C\x0d\n  eager: constants.measureMemory.execution.EAGER\x2C\x0d\n};\x0d\n\x0d\nfunction measureMemory(options = kEmptyObject) {\x0d\n  emitExperimentalWarning('vm.measureMemory');\x0d\n  validateObject(options\x2C 'options');\x0d\n  const { mode = 'summary'\x2C execution = 'default' } = options;\x0d\n  validateOneOf(mode\x2C 'options.mode'\x2C ['summary'\x2C 'detailed']);\x0d\n  validateOneOf(execution\x2C 'options.execution'\x2C ['default'\x2C 'eager']);\x0d\n  const result = _measureMemory(measureMemoryModes[mode]\x2C\x0d\n                                measureMemoryExecutions[execution]);\x0d\n  if (result === undefined) {\x0d\n    return PromiseReject(new ERR_CONTEXT_NOT_INITIALIZED());\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Script\x2C\x0d\n  createContext\x2C\x0d\n  createScript\x2C\x0d\n  runInContext\x2C\x0d\n  runInNewContext\x2C\x0d\n  runInThisContext\x2C\x0d\n  isContext\x2C\x0d\n  compileFunction\x2C\x0d\n  measureMemory\x2C\x0d\n};\x0d\n\x0d\n// The vm module is patched to include vm.Module\x2C vm.SourceTextModule\x0d\n// and vm.SyntheticModule in the pre-execution phase when\x0d\n// --experimental-vm-modules is on.\x0d\n
code-source-info,0x35a8d4bd5fe
code-creation,LazyCompile,10,226073,0x35a8d4be80e,95, node:internal/validators:177:39,0xf284009590,~
code-source-info,0x35a8d4be80e,16,5508,5794,C16O5545C21O5550C27O5578C43O5584C48O5578C49O5650C56O5657C61O5692C66O5715C71O5733C87O5739C92O5733C94O5793,,
code-creation,LazyCompile,10,226111,0x35a8d4be96e,27, node:vm:321:27,0x35a8d4bd2c8,~
code-source-info,0x35a8d4be96e,92,10165,10216,C0O10179C10O10211C21O10179C26O10216,,
code-creation,Eval,10,226157,0x35a8d4bebe6,5, C:\\Users\\inft11\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\no-cluster.js:1:1,0x35a8d4beaa0,~
script-source,136,C:\\Users\\inft11\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\no-cluster.js,const cluster = require('cluster')\n\ncluster.on('fork'\x2C () => {\n  throw new Error('0x does not support clustering.')\n})\n
code-source-info,0x35a8d4bebe6,136,0,119,C0O0C4O119,,
code-creation,Function,10,226190,0x35a8d4becce,29, C:\\Users\\inft11\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\no-cluster.js:1:1,0x35a8d4beb60,~
code-source-info,0x35a8d4becce,136,0,119,C0O16C3O16C8O44C21O44C28O118,,
code-creation,LazyCompile,10,226293,0x35a8d4bef46,19,importModuleDynamicallyWrap node:internal/vm/module:436:37,0x35a8d498fa0,~
code-source-info,0x35a8d4bef46,134,12202,12660,C0O12202C13O12272C18O12657,,
code-creation,LazyCompile,10,226373,0xc4d993fede,159,makeRequireFunction node:internal/modules/cjs/helpers:58:29,0xc4d99227c0,~
code-source-info,0xc4d993fede,114,1765,3805,C0O1765C22O1802C25O1806C29O1802C31O1828C33O1840C53O1873C58O1877C69O1893C73O1873C75O1921C81O1921C83O1949C89O1958C95O1987C104O3182C109O3423C111O3439C115O3586C117O3600C121O3614C126O3637C130O3627C134O3705C137O3733C141O3724C145O3751C148O3774C152O3765C156O3787C158O3802,,
new,MemoryChunk,0x37947c80000,262144
code-creation,LazyCompile,10,226467,0x37947c81216,14,require node:internal/modules/cjs/helpers:101:31,0xc4d993fdb0,~
code-source-info,0x37947c81216,114,3208,3256,C0O3224C3O3235C8O3235C13O3249,,
code-creation,LazyCompile,10,226513,0x37947c81356,10, node:internal/modules/cjs/helpers:29:66,0xc4d9922990,~
code-source-info,0x37947c81356,114,838,865,C0O851C2O857C9O864,,
code-creation,LazyCompile,10,226562,0x37947c814ce,129,compileForPublicLoader node:internal/bootstrap/loaders:263:25,0x56f5c90fb0,~
code-source-info,0x37947c814ce,9,8268,8956,C0O8288C6O8435C16O8478C33O8441C38O8435C39O8517C44O8517C48O8560C54O8752C61O8783C69O8752C75O8808C80O8826C90O8842C93O8858C98O8842C102O8824C106O8885C111O8885C115O8911C120O8911C124O8943C128O8951,,
code-creation,Eval,10,226630,0x37947c8182e,5, node:cluster:1:1,0x37947c816e8,~
script-source,137,node:cluster,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst childOrPrimary = 'NODE_UNIQUE_ID' in process.env ? 'child' : 'primary';\x0d\nmodule.exports = require(`internal/cluster/${childOrPrimary}`);\x0d\n
code-source-info,0x37947c8182e,137,0,1316,C0O0C4O1316,,
code-creation,Function,10,226700,0x37947c818d6,39, node:cluster:1:1,0x37947c817a8,~
code-source-info,0x37947c818d6,137,0,1316,C0O1195C3O1223C7O1212C19O1251C24O1296C29O1268C33O1266C38O1315,,
code-creation,Eval,10,227011,0x37947c82496,5, node:internal/cluster/primary:1:1,0x37947c82110,~
script-source,138,node:internal/cluster/primary,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectValues\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst { fork } = require('child_process');\x0d\nconst path = require('path');\x0d\nconst EventEmitter = require('events');\x0d\nconst RoundRobinHandle = require('internal/cluster/round_robin_handle');\x0d\nconst SharedHandle = require('internal/cluster/shared_handle');\x0d\nconst Worker = require('internal/cluster/worker');\x0d\nconst { internal\x2C sendHelper } = require('internal/cluster/utils');\x0d\nconst cluster = new EventEmitter();\x0d\nconst intercom = new EventEmitter();\x0d\nconst SCHED_NONE = 1;\x0d\nconst SCHED_RR = 2;\x0d\nconst minPort = 1024;\x0d\nconst maxPort = 65535;\x0d\nconst { validatePort } = require('internal/validators');\x0d\n\x0d\nmodule.exports = cluster;\x0d\n\x0d\nconst handles = new SafeMap();\x0d\ncluster.isWorker = false;\x0d\ncluster.isMaster = true; // Deprecated alias. Must be same as isPrimary.\x0d\ncluster.isPrimary = true;\x0d\ncluster.Worker = Worker;\x0d\ncluster.workers = {};\x0d\ncluster.settings = {};\x0d\ncluster.SCHED_NONE = SCHED_NONE;  // Leave it to the operating system.\x0d\ncluster.SCHED_RR = SCHED_RR;      // Primary distributes connections.\x0d\n\x0d\nlet ids = 0;\x0d\nlet debugPortOffset = 1;\x0d\nlet initialized = false;\x0d\n\x0d\n// XXX(bnoordhuis) Fold cluster.schedulingPolicy into cluster.settings?\x0d\nlet schedulingPolicy = process.env.NODE_CLUSTER_SCHED_POLICY;\x0d\nif (schedulingPolicy === 'rr')\x0d\n  schedulingPolicy = SCHED_RR;\x0d\nelse if (schedulingPolicy === 'none')\x0d\n  schedulingPolicy = SCHED_NONE;\x0d\nelse if (process.platform === 'win32') {\x0d\n  // Round-robin doesn't perform well on\x0d\n  // Windows due to the way IOCP is wired up.\x0d\n  schedulingPolicy = SCHED_NONE;\x0d\n} else\x0d\n  schedulingPolicy = SCHED_RR;\x0d\n\x0d\ncluster.schedulingPolicy = schedulingPolicy;\x0d\n\x0d\ncluster.setupPrimary = function(options) {\x0d\n  const settings = {\x0d\n    args: ArrayPrototypeSlice(process.argv\x2C 2)\x2C\x0d\n    exec: process.argv[1]\x2C\x0d\n    execArgv: process.execArgv\x2C\x0d\n    silent: false\x2C\x0d\n    ...cluster.settings\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  // Tell V8 to write profile data for each process to a separate file.\x0d\n  // Without --logfile=v8-%p.log\x2C everything ends up in a single\x2C unusable\x0d\n  // file. (Unusable because what V8 logs are memory addresses and each\x0d\n  // process has its own memory mappings.)\x0d\n  if (ArrayPrototypeSome(settings.execArgv\x2C\x0d\n                         (s) => StringPrototypeStartsWith(s\x2C '--prof')) &&\x0d\n      !ArrayPrototypeSome(settings.execArgv\x2C\x0d\n                          (s) => StringPrototypeStartsWith(s\x2C '--logfile='))) {\x0d\n    settings.execArgv = [...settings.execArgv\x2C '--logfile=v8-%p.log'];\x0d\n  }\x0d\n\x0d\n  cluster.settings = settings;\x0d\n\x0d\n  if (initialized === true)\x0d\n    return process.nextTick(setupSettingsNT\x2C settings);\x0d\n\x0d\n  initialized = true;\x0d\n  schedulingPolicy = cluster.schedulingPolicy;  // Freeze policy.\x0d\n  assert(schedulingPolicy === SCHED_NONE || schedulingPolicy === SCHED_RR\x2C\x0d\n         `Bad cluster.schedulingPolicy: ${schedulingPolicy}`);\x0d\n\x0d\n  process.nextTick(setupSettingsNT\x2C settings);\x0d\n\x0d\n  process.on('internalMessage'\x2C (message) => {\x0d\n    if (message.cmd !== 'NODE_DEBUG_ENABLED')\x0d\n      return;\x0d\n\x0d\n    for (const worker of ObjectValues(cluster.workers)) {\x0d\n      if (worker.state === 'online' || worker.state === 'listening') {\x0d\n        process._debugProcess(worker.process.pid);\x0d\n      } else {\x0d\n        worker.once('online'\x2C function() {\x0d\n          process._debugProcess(this.process.pid);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n// Deprecated alias must be same as setupPrimary\x0d\ncluster.setupMaster = cluster.setupPrimary;\x0d\n\x0d\nfunction setupSettingsNT(settings) {\x0d\n  cluster.emit('setup'\x2C settings);\x0d\n}\x0d\n\x0d\nfunction createWorkerProcess(id\x2C env) {\x0d\n  const workerEnv = { ...process.env\x2C ...env\x2C NODE_UNIQUE_ID: `${id}` };\x0d\n  const execArgv = [...cluster.settings.execArgv];\x0d\n  const debugArgRegex = /--inspect(?:-brk|-port)?|--debug-port/;\x0d\n  const nodeOptions = process.env.NODE_OPTIONS || '';\x0d\n\x0d\n  if (ArrayPrototypeSome(execArgv\x2C\x0d\n                         (arg) => RegExpPrototypeExec(debugArgRegex\x2C arg) !== null) ||\x0d\n      RegExpPrototypeExec(debugArgRegex\x2C nodeOptions) !== null) {\x0d\n    let inspectPort;\x0d\n    if ('inspectPort' in cluster.settings) {\x0d\n      if (typeof cluster.settings.inspectPort === 'function')\x0d\n        inspectPort = cluster.settings.inspectPort();\x0d\n      else\x0d\n        inspectPort = cluster.settings.inspectPort;\x0d\n\x0d\n      validatePort(inspectPort);\x0d\n    } else {\x0d\n      inspectPort = process.debugPort + debugPortOffset;\x0d\n      if (inspectPort > maxPort)\x0d\n        inspectPort = inspectPort - maxPort + minPort - 1;\x0d\n      debugPortOffset++;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(execArgv\x2C `--inspect-port=${inspectPort}`);\x0d\n  }\x0d\n\x0d\n  return fork(cluster.settings.exec\x2C cluster.settings.args\x2C {\x0d\n    cwd: cluster.settings.cwd\x2C\x0d\n    env: workerEnv\x2C\x0d\n    serialization: cluster.settings.serialization\x2C\x0d\n    silent: cluster.settings.silent\x2C\x0d\n    windowsHide: cluster.settings.windowsHide\x2C\x0d\n    execArgv: execArgv\x2C\x0d\n    stdio: cluster.settings.stdio\x2C\x0d\n    gid: cluster.settings.gid\x2C\x0d\n    uid: cluster.settings.uid\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction removeWorker(worker) {\x0d\n  assert(worker);\x0d\n  delete cluster.workers[worker.id];\x0d\n\x0d\n  if (ObjectKeys(cluster.workers).length === 0) {\x0d\n    assert(handles.size === 0\x2C 'Resource leak detected.');\x0d\n    intercom.emit('disconnect');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeHandlesForWorker(worker) {\x0d\n  assert(worker);\x0d\n\x0d\n  handles.forEach((handle\x2C key) => {\x0d\n    if (handle.remove(worker))\x0d\n      handles.delete(key);\x0d\n  });\x0d\n}\x0d\n\x0d\ncluster.fork = function(env) {\x0d\n  cluster.setupPrimary();\x0d\n  const id = ++ids;\x0d\n  const workerProcess = createWorkerProcess(id\x2C env);\x0d\n  const worker = new Worker({\x0d\n    id: id\x2C\x0d\n    process: workerProcess\x0d\n  });\x0d\n\x0d\n  worker.on('message'\x2C function(message\x2C handle) {\x0d\n    cluster.emit('message'\x2C this\x2C message\x2C handle);\x0d\n  });\x0d\n\x0d\n  worker.process.once('exit'\x2C (exitCode\x2C signalCode) => {\x0d\n    /*\x0d\n     * Remove the worker from the workers list only\x0d\n     * if it has disconnected\x2C otherwise we might\x0d\n     * still want to access it.\x0d\n     */\x0d\n    if (!worker.isConnected()) {\x0d\n      removeHandlesForWorker(worker);\x0d\n      removeWorker(worker);\x0d\n    }\x0d\n\x0d\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\x0d\n    worker.state = 'dead';\x0d\n    worker.emit('exit'\x2C exitCode\x2C signalCode);\x0d\n    cluster.emit('exit'\x2C worker\x2C exitCode\x2C signalCode);\x0d\n  });\x0d\n\x0d\n  worker.process.once('disconnect'\x2C () => {\x0d\n    /*\x0d\n     * Now is a good time to remove the handles\x0d\n     * associated with this worker because it is\x0d\n     * not connected to the primary anymore.\x0d\n     */\x0d\n    removeHandlesForWorker(worker);\x0d\n\x0d\n    /*\x0d\n     * Remove the worker from the workers list only\x0d\n     * if its process has exited. Otherwise\x2C we might\x0d\n     * still want to access it.\x0d\n     */\x0d\n    if (worker.isDead())\x0d\n      removeWorker(worker);\x0d\n\x0d\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\x0d\n    worker.state = 'disconnected';\x0d\n    worker.emit('disconnect');\x0d\n    cluster.emit('disconnect'\x2C worker);\x0d\n  });\x0d\n\x0d\n  worker.process.on('internalMessage'\x2C internal(worker\x2C onmessage));\x0d\n  process.nextTick(emitForkNT\x2C worker);\x0d\n  cluster.workers[worker.id] = worker;\x0d\n  return worker;\x0d\n};\x0d\n\x0d\nfunction emitForkNT(worker) {\x0d\n  cluster.emit('fork'\x2C worker);\x0d\n}\x0d\n\x0d\ncluster.disconnect = function(cb) {\x0d\n  const workers = ObjectKeys(cluster.workers);\x0d\n\x0d\n  if (workers.length === 0) {\x0d\n    process.nextTick(() => intercom.emit('disconnect'));\x0d\n  } else {\x0d\n    for (const worker of ObjectValues(cluster.workers)) {\x0d\n      if (worker.isConnected()) {\x0d\n        worker.disconnect();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof cb === 'function')\x0d\n    intercom.once('disconnect'\x2C cb);\x0d\n};\x0d\n\x0d\nconst methodMessageMapping = {\x0d\n  close\x2C\x0d\n  exitedAfterDisconnect\x2C\x0d\n  listening\x2C\x0d\n  online\x2C\x0d\n  queryServer\x2C\x0d\n};\x0d\n\x0d\nfunction onmessage(message\x2C handle) {\x0d\n  const worker = this;\x0d\n\x0d\n  const fn = methodMessageMapping[message.act];\x0d\n\x0d\n  if (typeof fn === 'function')\x0d\n    fn(worker\x2C message);\x0d\n}\x0d\n\x0d\nfunction online(worker) {\x0d\n  worker.state = 'online';\x0d\n  worker.emit('online');\x0d\n  cluster.emit('online'\x2C worker);\x0d\n}\x0d\n\x0d\nfunction exitedAfterDisconnect(worker\x2C message) {\x0d\n  worker.exitedAfterDisconnect = true;\x0d\n  send(worker\x2C { ack: message.seq });\x0d\n}\x0d\n\x0d\nfunction queryServer(worker\x2C message) {\x0d\n  // Stop processing if worker already disconnecting\x0d\n  if (worker.exitedAfterDisconnect)\x0d\n    return;\x0d\n\x0d\n  const key = `${message.address}:${message.port}:${message.addressType}:` +\x0d\n              `${message.fd}:${message.index}`;\x0d\n  let handle = handles.get(key);\x0d\n\x0d\n  if (handle === undefined) {\x0d\n    let address = message.address;\x0d\n\x0d\n    // Find shortest path for unix sockets because of the ~100 byte limit\x0d\n    if (message.port < 0 && typeof address === 'string' &&\x0d\n        process.platform !== 'win32') {\x0d\n\x0d\n      address = path.relative(process.cwd()\x2C address);\x0d\n\x0d\n      if (message.address.length < address.length)\x0d\n        address = message.address;\x0d\n    }\x0d\n\x0d\n    // UDP is exempt from round-robin connection balancing for what should\x0d\n    // be obvious reasons: it's connectionless. There is nothing to send to\x0d\n    // the workers except raw datagrams and that's pointless.\x0d\n    if (schedulingPolicy !== SCHED_RR ||\x0d\n        message.addressType === 'udp4' ||\x0d\n        message.addressType === 'udp6') {\x0d\n      handle = new SharedHandle(key\x2C address\x2C message);\x0d\n    } else {\x0d\n      handle = new RoundRobinHandle(key\x2C address\x2C message);\x0d\n    }\x0d\n\x0d\n    handles.set(key\x2C handle);\x0d\n  }\x0d\n\x0d\n  if (!handle.data)\x0d\n    handle.data = message.data;\x0d\n\x0d\n  // Set custom server data\x0d\n  handle.add(worker\x2C (errno\x2C reply\x2C handle) => {\x0d\n    const { data } = handles.get(key);\x0d\n\x0d\n    if (errno)\x0d\n      handles.delete(key);  // Gives other workers a chance to retry.\x0d\n\x0d\n    send(worker\x2C {\x0d\n      errno\x2C\x0d\n      key\x2C\x0d\n      ack: message.seq\x2C\x0d\n      data\x2C\x0d\n      ...reply\x0d\n    }\x2C handle);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction listening(worker\x2C message) {\x0d\n  const info = {\x0d\n    addressType: message.addressType\x2C\x0d\n    address: message.address\x2C\x0d\n    port: message.port\x2C\x0d\n    fd: message.fd\x0d\n  };\x0d\n\x0d\n  worker.state = 'listening';\x0d\n  worker.emit('listening'\x2C info);\x0d\n  cluster.emit('listening'\x2C worker\x2C info);\x0d\n}\x0d\n\x0d\n// Server in worker is closing\x2C remove from list. The handle may have been\x0d\n// removed by a prior call to removeHandlesForWorker() so guard against that.\x0d\nfunction close(worker\x2C message) {\x0d\n  const key = message.key;\x0d\n  const handle = handles.get(key);\x0d\n\x0d\n  if (handle && handle.remove(worker))\x0d\n    handles.delete(key);\x0d\n}\x0d\n\x0d\nfunction send(worker\x2C message\x2C handle\x2C cb) {\x0d\n  return sendHelper(worker.process\x2C message\x2C handle\x2C cb);\x0d\n}\x0d\n\x0d\n// Extend generic Worker with methods specific to the primary process.\x0d\nWorker.prototype.disconnect = function() {\x0d\n  this.exitedAfterDisconnect = true;\x0d\n  send(this\x2C { act: 'disconnect' });\x0d\n  removeHandlesForWorker(this);\x0d\n  removeWorker(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nWorker.prototype.destroy = function(signo) {\x0d\n  const proc = this.process;\x0d\n\x0d\n  signo = signo || 'SIGTERM';\x0d\n\x0d\n  if (this.isConnected()) {\x0d\n    this.once('disconnect'\x2C () => proc.kill(signo));\x0d\n    this.disconnect();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  proc.kill(signo);\x0d\n};\x0d\n
code-source-info,0x37947c82496,138,0,11199,C0O0C4O11199,,
code-creation,Function,10,227462,0x37947c82e5e,640, node:internal/cluster/primary:1:1,0x37947c82410,~
code-source-info,0x37947c82e5e
code-creation,Eval,10,227993,0x37947c844e6,5, node:internal/cluster/round_robin_handle:1:1,0x37947c842d0,~
script-source,139,node:internal/cluster/round_robin_handle,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  Boolean\x2C\x0d\n  ObjectCreate\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst net = require('net');\x0d\nconst { sendHelper } = require('internal/cluster/utils');\x0d\nconst { append\x2C init\x2C isEmpty\x2C peek\x2C remove } = require('internal/linkedlist');\x0d\nconst { constants } = internalBinding('tcp_wrap');\x0d\n\x0d\nmodule.exports = RoundRobinHandle;\x0d\n\x0d\nfunction RoundRobinHandle(key\x2C address\x2C { port\x2C fd\x2C flags\x2C backlog\x2C readableAll\x2C writableAll }) {\x0d\n  this.key = key;\x0d\n  this.all = new SafeMap();\x0d\n  this.free = new SafeMap();\x0d\n  this.handles = init(ObjectCreate(null));\x0d\n  this.handle = null;\x0d\n  this.server = net.createServer(assert.fail);\x0d\n\x0d\n  if (fd >= 0)\x0d\n    this.server.listen({ fd\x2C backlog });\x0d\n  else if (port >= 0) {\x0d\n    this.server.listen({\x0d\n      port\x2C\x0d\n      host: address\x2C\x0d\n      // Currently\x2C net module only supports `ipv6Only` option in `flags`.\x0d\n      ipv6Only: Boolean(flags & constants.UV_TCP_IPV6ONLY)\x2C\x0d\n      backlog\x2C\x0d\n    });\x0d\n  } else\x0d\n    this.server.listen({\x0d\n      path: address\x2C\x0d\n      backlog\x2C\x0d\n      readableAll\x2C\x0d\n      writableAll\x2C\x0d\n    });  // UNIX socket path.\x0d\n  this.server.once('listening'\x2C () => {\x0d\n    this.handle = this.server._handle;\x0d\n    this.handle.onconnection = (err\x2C handle) => this.distribute(err\x2C handle);\x0d\n    this.server._handle = null;\x0d\n    this.server = null;\x0d\n  });\x0d\n}\x0d\n\x0d\nRoundRobinHandle.prototype.add = function(worker\x2C send) {\x0d\n  assert(this.all.has(worker.id) === false);\x0d\n  this.all.set(worker.id\x2C worker);\x0d\n\x0d\n  const done = () => {\x0d\n    if (this.handle.getsockname) {\x0d\n      const out = {};\x0d\n      this.handle.getsockname(out);\x0d\n      // TODO(bnoordhuis) Check err.\x0d\n      send(null\x2C { sockname: out }\x2C null);\x0d\n    } else {\x0d\n      send(null\x2C null\x2C null);  // UNIX socket.\x0d\n    }\x0d\n\x0d\n    this.handoff(worker);  // In case there are connections pending.\x0d\n  };\x0d\n\x0d\n  if (this.server === null)\x0d\n    return done();\x0d\n\x0d\n  // Still busy binding.\x0d\n  this.server.once('listening'\x2C done);\x0d\n  this.server.once('error'\x2C (err) => {\x0d\n    send(err.errno\x2C null);\x0d\n  });\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.remove = function(worker) {\x0d\n  const existed = this.all.delete(worker.id);\x0d\n\x0d\n  if (!existed)\x0d\n    return false;\x0d\n\x0d\n  this.free.delete(worker.id);\x0d\n\x0d\n  if (this.all.size !== 0)\x0d\n    return false;\x0d\n\x0d\n  while (!isEmpty(this.handles)) {\x0d\n    const handle = peek(this.handles);\x0d\n    handle.close();\x0d\n    remove(handle);\x0d\n  }\x0d\n\x0d\n  this.handle.close();\x0d\n  this.handle = null;\x0d\n  return true;\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.distribute = function(err\x2C handle) {\x0d\n  append(this.handles\x2C handle);\x0d\n  // eslint-disable-next-line node-core/no-array-destructuring\x0d\n  const [ workerEntry ] = this.free; // this.free is a SafeMap\x0d\n\x0d\n  if (ArrayIsArray(workerEntry)) {\x0d\n    const { 0: workerId\x2C 1: worker } = workerEntry;\x0d\n    this.free.delete(workerId);\x0d\n    this.handoff(worker);\x0d\n  }\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.handoff = function(worker) {\x0d\n  if (!this.all.has(worker.id)) {\x0d\n    return;  // Worker is closing (or has closed) the server.\x0d\n  }\x0d\n\x0d\n  const handle = peek(this.handles);\x0d\n\x0d\n  if (handle === null) {\x0d\n    this.free.set(worker.id\x2C worker);  // Add to ready queue again.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  remove(handle);\x0d\n\x0d\n  const message = { act: 'newconn'\x2C key: this.key };\x0d\n\x0d\n  sendHelper(worker.process\x2C message\x2C handle\x2C (reply) => {\x0d\n    if (reply.accepted)\x0d\n      handle.close();\x0d\n    else\x0d\n      this.distribute(0\x2C handle);  // Worker is shutting down. Send to another.\x0d\n\x0d\n    this.handoff(worker);\x0d\n  });\x0d\n};\x0d\n
code-source-info,0x37947c844e6,139,0,3517,C0O0C4O3517,,
code-creation,Function,10,228373,0x37947c848ae,217, node:internal/cluster/round_robin_handle:1:1,0x37947c84460,~
code-source-info,0x37947c848ae,139,0,3517,C0O0C49O28C55O45C61O57C67O74C73O119C76O119C80O119C82O160C85O160C89O160C91O200C94O200C99O185C105O284C108O284C113O244C119O252C125O258C131O267C137O273C143O339C146O339C151O325C157O371C159O386C163O1401C172O1415C176O2093C185O2110C189O2513C198O2534C202O2901C211O2919C216O3516,,
code-creation,Eval,10,228581,0x37947c851ee,5, node:internal/cluster/utils:1:1,0x37947c85078,~
script-source,140,node:internal/cluster/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ReflectApply\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = {\x0d\n  sendHelper\x2C\x0d\n  internal\x0d\n};\x0d\n\x0d\nconst callbacks = new SafeMap();\x0d\nlet seq = 0;\x0d\n\x0d\nfunction sendHelper(proc\x2C message\x2C handle\x2C cb) {\x0d\n  if (!proc.connected)\x0d\n    return false;\x0d\n\x0d\n  // Mark message as internal. See INTERNAL_PREFIX\x0d\n  // in lib/internal/child_process.js\x0d\n  message = { cmd: 'NODE_CLUSTER'\x2C ...message\x2C seq };\x0d\n\x0d\n  if (typeof cb === 'function')\x0d\n    callbacks.set(seq\x2C cb);\x0d\n\x0d\n  seq += 1;\x0d\n  return proc.send(message\x2C handle);\x0d\n}\x0d\n\x0d\n// Returns an internalMessage listener that hands off normal messages\x0d\n// to the callback but intercepts and redirects ACK messages.\x0d\nfunction internal(worker\x2C cb) {\x0d\n  return function onInternalMessage(message\x2C handle) {\x0d\n    if (message.cmd !== 'NODE_CLUSTER')\x0d\n      return;\x0d\n\x0d\n    let fn = cb;\x0d\n\x0d\n    if (message.ack !== undefined) {\x0d\n      const callback = callbacks.get(message.ack);\x0d\n\x0d\n      if (callback !== undefined) {\x0d\n        fn = callback;\x0d\n        callbacks.delete(message.ack);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    ReflectApply(fn\x2C worker\x2C arguments);\x0d\n  };\x0d\n}\x0d\n
code-source-info,0x37947c851ee,140,0,1104,C0O0C4O1104,,
code-creation,Function,10,228741,0x37947c853ae,72, node:internal/cluster/utils:1:1,0x37947c85168,~
code-source-info,0x37947c853ae,140,0,1104,C0O0C24O28C30O45C35O75C42O97C48O112C54O90C58O146C60O146C65O146C67O172C68O172C71O1103,,
code-creation,Eval,10,229222,0x37947c859be,5, node:internal/cluster/shared_handle:1:1,0x37947c85838,~
script-source,141,node:internal/cluster/shared_handle,'use strict';\x0d\nconst { SafeMap } = primordials;\x0d\nconst assert = require('internal/assert');\x0d\nconst dgram = require('internal/dgram');\x0d\nconst net = require('net');\x0d\n\x0d\nmodule.exports = SharedHandle;\x0d\n\x0d\nfunction SharedHandle(key\x2C address\x2C { port\x2C addressType\x2C fd\x2C flags }) {\x0d\n  this.key = key;\x0d\n  this.workers = new SafeMap();\x0d\n  this.handle = null;\x0d\n  this.errno = 0;\x0d\n\x0d\n  let rval;\x0d\n  if (addressType === 'udp4' || addressType === 'udp6')\x0d\n    rval = dgram._createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n  else\x0d\n    rval = net._createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n  if (typeof rval === 'number')\x0d\n    this.errno = rval;\x0d\n  else\x0d\n    this.handle = rval;\x0d\n}\x0d\n\x0d\nSharedHandle.prototype.add = function(worker\x2C send) {\x0d\n  assert(!this.workers.has(worker.id));\x0d\n  this.workers.set(worker.id\x2C worker);\x0d\n  send(this.errno\x2C null\x2C this.handle);\x0d\n};\x0d\n\x0d\nSharedHandle.prototype.remove = function(worker) {\x0d\n  if (!this.workers.has(worker.id))\x0d\n    return false;\x0d\n\x0d\n  this.workers.delete(worker.id);\x0d\n\x0d\n  if (this.workers.size !== 0)\x0d\n    return false;\x0d\n\x0d\n  this.handle.close();\x0d\n  this.handle = null;\x0d\n  return true;\x0d\n};\x0d\n
code-source-info,0x37947c859be,141,0,1147,C0O0C4O1147,,
code-creation,Function,10,229336,0x37947c85bf6,89, node:internal/cluster/shared_handle:1:1,0x37947c85938,~
code-source-info,0x37947c85bf6,141,0,1147,C0O0C22O23C28O64C31O64C35O64C37O107C40O107C44O107C46O147C49O147C53O147C55O166C57O181C61O711C70O725C74O893C83O910C88O1146,,
code-creation,Eval,10,229485,0x37947c861ee,5, node:internal/cluster/worker:1:1,0x37947c86068,~
script-source,142,node:internal/cluster/worker,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\n\x0d\nmodule.exports = Worker;\x0d\n\x0d\n// Common Worker implementation shared between the cluster primary and workers.\x0d\nfunction Worker(options) {\x0d\n  if (!(this instanceof Worker))\x0d\n    return new Worker(options);\x0d\n\x0d\n  ReflectApply(EventEmitter\x2C this\x2C []);\x0d\n\x0d\n  if (options === null || typeof options !== 'object')\x0d\n    options = kEmptyObject;\x0d\n\x0d\n  this.exitedAfterDisconnect = undefined;\x0d\n\x0d\n  this.state = options.state || 'none';\x0d\n  this.id = options.id | 0;\x0d\n\x0d\n  if (options.process) {\x0d\n    this.process = options.process;\x0d\n    this.process.on('error'\x2C (code\x2C signal) =>\x0d\n      this.emit('error'\x2C code\x2C signal)\x0d\n    );\x0d\n    this.process.on('message'\x2C (message\x2C handle) =>\x0d\n      this.emit('message'\x2C message\x2C handle)\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Worker.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Worker\x2C EventEmitter);\x0d\n\x0d\nWorker.prototype.kill = function() {\x0d\n  ReflectApply(this.destroy\x2C this\x2C arguments);\x0d\n};\x0d\n\x0d\nWorker.prototype.send = function() {\x0d\n  return ReflectApply(this.process.send\x2C this.process\x2C arguments);\x0d\n};\x0d\n\x0d\nWorker.prototype.isDead = function() {\x0d\n  return this.process.exitCode != null || this.process.signalCode != null;\x0d\n};\x0d\n\x0d\nWorker.prototype.isConnected = function() {\x0d\n  return this.process.connected;\x0d\n};\x0d\n
code-source-info,0x37947c861ee,142,0,1434,C0O0C4O1434,,
code-creation,Function,10,229564,0x37947c86566,158, node:internal/cluster/worker:1:1,0x37947c86168,~
code-source-info,0x37947c86566,142,0,1434,C0O0C20O28C25O53C31O109C34O109C38O109C40O156C43O156C48O139C54O185C56O200C60O913C63O941C71O965C76O913C81O978C87O978C92O1025C95O1032C104O1047C108O1117C111O1124C120O1139C124O1229C127O1236C136O1253C140O1351C143O1358C152O1380C157O1433,,
code-creation,LazyCompile,10,229841,0x37947c86d2e,151,getESMFacade node:internal/bootstrap/loaders:281:15,0x56f5c91028,~
code-source-info,0x37947c86d2e,9,8974,9620,C0O8974C8O8993C14O9013C18O9020C19O9049C29O9049C34O9034C39O9098C42O9111C51O9143C53O9143C55O9174C62O9199C67O9174C72O9217C82O9217C87O9266C89O9319C102O9280C107O9278C111O9531C116O9538C121O9538C125O9563C130O9570C140O9570C146O9608C150O9615,,
code-creation,LazyCompile,10,229936,0x37947c87116,40, node:internal/bootstrap/loaders:290:15,0x37947c86c28,~
code-source-info,0x37947c87116,9,9347,9455,C0O9361C5O9374C10O9374C14O9403C24O9424C27O9437C32O9403C39O9454,,
code-creation,LazyCompile,10,229993,0x37947c8726e,89,syncExports node:internal/bootstrap/loaders:304:14,0x56f5c91098,~
code-source-info,0x37947c8726e,9,9933,10276,C0O9962C5O9988C11O10018C13O10031C17O10023C22O10074C24O10079C28O10093C30O10108C35O10123C37O10147C42O10154C51O10207C54O10219C59O10245C67O10207C73O10154C79O10040C84O10005C88O10275,,
code-creation,LazyCompile,10,230039,0x37947c873d6,35,getOwn node:internal/bootstrap/loaders:187:16,0x56f5c90c38,~
code-source-info,0x37947c873d6,9,5832,5990,C0O5869C5O5876C14O5931C26O5931C34O5987,,
code-creation,RegExp,3,230245,0x21ab3647f60,1532,(?:^|\\/)\\.?\\.$
code-creation,Function,11,230456,0x21ab36485c0,252,SafeSet node:internal/per_context/primordials:379:16,0x56f5c8abe0,^
code-source-info,0x21ab36485c0,6,11306,11323,,,
code-creation,Function,11,230497,0x21ab3648720,1936,toNamespacedPath node:path:618:19,0x3a93d9cd6f8,^
code-source-info,0x21ab3648720,41,20086,21201,,,
code-creation,Function,11,230520,0x21ab3648f20,320,isFileType node:fs:213:20,0x39c7b617598,^
code-source-info,0x21ab3648f20,83,5673,5921,,,
code-creation,Function,11,230539,0x21ab36490c0,304,getOwn node:internal/bootstrap/loaders:187:16,0x56f5c90c38,^
code-source-info,0x21ab36490c0,9,5832,5990,,,
code-creation,Function,11,230560,0x21ab3649260,672,syncExports node:internal/bootstrap/loaders:304:14,0x56f5c91098,^
code-source-info,0x21ab3649260,9,9933,10276,,,
code-creation,RegExp,3,230635,0x21ab3649560,1592,^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*
code-creation,Function,11,231005,0x21ab3649c00,72,isUint32 node:internal/validators:41:18,0xf2840091e0,^
code-source-info,0x21ab3649c00,16,851,898,,,
code-creation,Function,11,231059,0x21ab3649cc0,3380,dirname node:path:653:10,0x3a93d9cd768,^
code-source-info,0x21ab3649cc0,41,21280,23908,,,
code-creation,Function,11,231079,0x21ab364aa60,216, node:vm:321:27,0x35a8d4bd2c8,^
code-source-info,0x21ab364aa60,92,10165,10216,,,
code-creation,Eval,10,231193,0x37947c88216,5, C:\\Users\\inft11\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js:1:1,0x37947c88070,~
script-source,143,C:\\Users\\inft11\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js,'use strict'\nconst net = require('net')\n\nlet isWorker = false\ntry {\n  // Skip redirecting stdout in Worker threads.\n  isWorker = !require('worker_threads').isMainThread\n} catch (e) {}\n\nif (!isWorker) {\n  const socket = new net.Socket({\n    fd: 3\x2C\n    readable: false\x2C\n    writable: true\n  })\n  Object.defineProperty(process\x2C 'stdout'\x2C {\n    configurable: true\x2C\n    enumerable: true\x2C\n    get: () => socket\n  })\n  Object.defineProperty(process.stdout\x2C 'fd'\x2C {\n    value: socket._handle.fd\n  })\n}\n
code-source-info,0x37947c88216,143,0,494,C0O0C4O494,,
code-creation,Function,10,231251,0x37947c884be,157, C:\\Users\\inft11\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js:1:1,0x37947c88190,~
code-source-info,0x37947c884be,143,0,494,C0O25C3O25C8O56C13O118C16O130C21O155C30O127C42O185C53O227C65O219C70O219C72O294C76O301C81O316C93O392C101O301C106O412C110O419C115O434C119O442C135O476C140O484C148O419C156O493,,
code-creation,LazyCompile,10,231357,0x37947c8898e,37,get SocketAddress node:net:1924:20,0x3d2862785d8,~
code-source-info,0x37947c8898e,105,53607,53715,C0O53617C14O53635C19O53668C26O53631C32O53689C36O53710,,
code-creation,Eval,10,231460,0x37947c88d4e,5, node:worker_threads:1:1,0x37947c88c08,~
script-source,144,node:worker_threads,'use strict';\x0d\n\x0d\nconst {\x0d\n  isMainThread\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  resourceLimits\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n  threadId\x2C\x0d\n  Worker\x0d\n} = require('internal/worker');\x0d\n\x0d\nconst {\x0d\n  MessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  moveMessagePortToContext\x2C\x0d\n  receiveMessageOnPort\x2C\x0d\n  BroadcastChannel\x2C\x0d\n} = require('internal/worker/io');\x0d\n\x0d\nconst {\x0d\n  markAsUntransferable\x2C\x0d\n} = require('internal/buffer');\x0d\n\x0d\nmodule.exports = {\x0d\n  isMainThread\x2C\x0d\n  MessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  moveMessagePortToContext\x2C\x0d\n  receiveMessageOnPort\x2C\x0d\n  resourceLimits\x2C\x0d\n  threadId\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  Worker\x2C\x0d\n  parentPort: null\x2C\x0d\n  workerData: null\x2C\x0d\n  BroadcastChannel\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n};\x0d\n
code-source-info,0x37947c88d4e,144,0,727,C0O0C4O727,,
code-creation,Function,10,231524,0x37947c88f5e,180, node:worker_threads:1:1,0x37947c88cc8,~
code-source-info,0x37947c88f5e,144,0,727,C0O149C3O149C8O28C13O45C18O59C23O78C28O101C33O124C38O137C43O303C46O303C51O191C56O207C61O226C66O255C71O280C76O375C79O375C84O348C89O406C96O428C102O445C108O461C114O480C120O505C126O534C132O559C138O578C144O591C150O605C156O658C162O679C168O702C174O421C179O726,,
code-creation,Eval,10,231970,0x37947c89ef6,5, node:internal/worker:1:1,0x37947c89908,~
script-source,145,node:internal/worker,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  Float64Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  JSONStringify\x2C\x0d\n  MathMax\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectEntries\x2C\x0d\n  Promise\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  Uint32Array\x2C\x0d\n  globalThis: { Atomics\x2C SharedArrayBuffer }\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst assert = require('internal/assert');\x0d\nconst path = require('path');\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst errorCodes = require('internal/errors').codes;\x0d\nconst {\x0d\n  ERR_WORKER_NOT_RUNNING\x2C\x0d\n  ERR_WORKER_PATH\x2C\x0d\n  ERR_WORKER_UNSERIALIZABLE_ERROR\x2C\x0d\n  ERR_WORKER_INVALID_EXEC_ARGV\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n} = errorCodes;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\nconst workerIo = require('internal/worker/io');\x0d\nconst {\x0d\n  drainMessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  messageTypes\x2C\x0d\n  kPort\x2C\x0d\n  kIncrementsPortRef\x2C\x0d\n  kWaitingStreams\x2C\x0d\n  kStdioWantsMoreDataCallback\x2C\x0d\n  setupPortReferencing\x2C\x0d\n  ReadableWorkerStdio\x2C\x0d\n  WritableWorkerStdio\x0d\n} = workerIo;\x0d\nconst { deserializeError } = require('internal/error_serdes');\x0d\nconst { fileURLToPath\x2C isURLInstance\x2C pathToFileURL } = require('internal/url');\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\nconst { validateArray } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  ownsProcessState\x2C\x0d\n  isMainThread\x2C\x0d\n  resourceLimits: resourceLimitsRaw\x2C\x0d\n  threadId\x2C\x0d\n  Worker: WorkerImpl\x2C\x0d\n  kMaxYoungGenerationSizeMb\x2C\x0d\n  kMaxOldGenerationSizeMb\x2C\x0d\n  kCodeRangeSizeMb\x2C\x0d\n  kStackSizeMb\x2C\x0d\n  kTotalResourceLimitCount\x0d\n} = internalBinding('worker');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kPublicPort = Symbol('kPublicPort');\x0d\nconst kDispose = Symbol('kDispose');\x0d\nconst kOnExit = Symbol('kOnExit');\x0d\nconst kOnMessage = Symbol('kOnMessage');\x0d\nconst kOnCouldNotSerializeErr = Symbol('kOnCouldNotSerializeErr');\x0d\nconst kOnErrorMessage = Symbol('kOnErrorMessage');\x0d\nconst kParentSideStdio = Symbol('kParentSideStdio');\x0d\nconst kLoopStartTime = Symbol('kLoopStartTime');\x0d\nconst kIsOnline = Symbol('kIsOnline');\x0d\n\x0d\nconst SHARE_ENV = SymbolFor('nodejs.worker_threads.SHARE_ENV');\x0d\nlet debug = require('internal/util/debuglog').debuglog('worker'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nlet cwdCounter;\x0d\n\x0d\nconst environmentData = new SafeMap();\x0d\n\x0d\nif (isMainThread) {\x0d\n  cwdCounter = new Uint32Array(new SharedArrayBuffer(4));\x0d\n  const originalChdir = process.chdir;\x0d\n  process.chdir = function(path) {\x0d\n    Atomics.add(cwdCounter\x2C 0\x2C 1);\x0d\n    originalChdir(path);\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction setEnvironmentData(key\x2C value) {\x0d\n  if (value === undefined)\x0d\n    environmentData.delete(key);\x0d\n  else\x0d\n    environmentData.set(key\x2C value);\x0d\n}\x0d\n\x0d\nfunction getEnvironmentData(key) {\x0d\n  return environmentData.get(key);\x0d\n}\x0d\n\x0d\nfunction assignEnvironmentData(data) {\x0d\n  if (data === undefined) return;\x0d\n  data.forEach((value\x2C key) => {\x0d\n    environmentData.set(key\x2C value);\x0d\n  });\x0d\n}\x0d\n\x0d\nclass Worker extends EventEmitter {\x0d\n  constructor(filename\x2C options = kEmptyObject) {\x0d\n    super();\x0d\n    debug(`[${threadId}] create new worker`\x2C filename\x2C options);\x0d\n    if (options.execArgv)\x0d\n      validateArray(options.execArgv\x2C 'options.execArgv');\x0d\n\x0d\n    let argv;\x0d\n    if (options.argv) {\x0d\n      validateArray(options.argv\x2C 'options.argv');\x0d\n      argv = ArrayPrototypeMap(options.argv\x2C String);\x0d\n    }\x0d\n\x0d\n    let url\x2C doEval;\x0d\n    if (options.eval) {\x0d\n      if (typeof filename !== 'string') {\x0d\n        throw new ERR_INVALID_ARG_VALUE(\x0d\n          'options.eval'\x2C\x0d\n          options.eval\x2C\x0d\n          'must be false when \\'filename\\' is not a string'\x0d\n        );\x0d\n      }\x0d\n      url = null;\x0d\n      doEval = 'classic';\x0d\n    } else if (isURLInstance(filename) && filename.protocol === 'data:') {\x0d\n      url = null;\x0d\n      doEval = 'module';\x0d\n      filename = `import ${JSONStringify(`${filename}`)}`;\x0d\n    } else {\x0d\n      doEval = false;\x0d\n      if (isURLInstance(filename)) {\x0d\n        url = filename;\x0d\n        filename = fileURLToPath(filename);\x0d\n      } else if (typeof filename !== 'string') {\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          'filename'\x2C\x0d\n          ['string'\x2C 'URL']\x2C\x0d\n          filename\x0d\n        );\x0d\n      } else if (path.isAbsolute(filename) ||\x0d\n                 RegExpPrototypeExec(/^\\.\\.?[\\\\/]/\x2C filename) !== null) {\x0d\n        filename = path.resolve(filename);\x0d\n        url = pathToFileURL(filename);\x0d\n      } else {\x0d\n        throw new ERR_WORKER_PATH(filename);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let env;\x0d\n    if (typeof options.env === 'object' && options.env !== null) {\x0d\n      env = ObjectCreate(null);\x0d\n      ArrayPrototypeForEach(\x0d\n        ObjectEntries(options.env)\x2C\x0d\n        ({ 0: key\x2C 1: value }) => { env[key] = `${value}`; }\x0d\n      );\x0d\n    } else if (options.env == null) {\x0d\n      env = process.env;\x0d\n    } else if (options.env !== SHARE_ENV) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.env'\x2C\x0d\n        ['object'\x2C 'undefined'\x2C 'null'\x2C 'worker_threads.SHARE_ENV']\x2C\x0d\n        options.env);\x0d\n    }\x0d\n\x0d\n    // Set up the C++ handle for the worker\x2C as well as some internal wiring.\x0d\n    this[kHandle] = new WorkerImpl(url\x2C\x0d\n                                   env === process.env ? null : env\x2C\x0d\n                                   options.execArgv\x2C\x0d\n                                   parseResourceLimits(options.resourceLimits)\x2C\x0d\n                                   !!(options.trackUnmanagedFds ?? true));\x0d\n    if (this[kHandle].invalidExecArgv) {\x0d\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(this[kHandle].invalidExecArgv);\x0d\n    }\x0d\n    if (this[kHandle].invalidNodeOptions) {\x0d\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(\x0d\n        this[kHandle].invalidNodeOptions\x2C 'invalid NODE_OPTIONS env variable');\x0d\n    }\x0d\n    this[kHandle].onexit = (code\x2C customErr\x2C customErrReason) => {\x0d\n      this[kOnExit](code\x2C customErr\x2C customErrReason);\x0d\n    };\x0d\n    this[kPort] = this[kHandle].messagePort;\x0d\n    this[kPort].on('message'\x2C (data) => this[kOnMessage](data));\x0d\n    this[kPort].start();\x0d\n    this[kPort].unref();\x0d\n    this[kPort][kWaitingStreams] = 0;\x0d\n    debug(`[${threadId}] created Worker with ID ${this.threadId}`);\x0d\n\x0d\n    let stdin = null;\x0d\n    if (options.stdin)\x0d\n      stdin = new WritableWorkerStdio(this[kPort]\x2C 'stdin');\x0d\n    const stdout = new ReadableWorkerStdio(this[kPort]\x2C 'stdout');\x0d\n    if (!options.stdout) {\x0d\n      stdout[kIncrementsPortRef] = false;\x0d\n      pipeWithoutWarning(stdout\x2C process.stdout);\x0d\n    }\x0d\n    const stderr = new ReadableWorkerStdio(this[kPort]\x2C 'stderr');\x0d\n    if (!options.stderr) {\x0d\n      stderr[kIncrementsPortRef] = false;\x0d\n      pipeWithoutWarning(stderr\x2C process.stderr);\x0d\n    }\x0d\n\x0d\n    this[kParentSideStdio] = { stdin\x2C stdout\x2C stderr };\x0d\n\x0d\n    const { port1\x2C port2 } = new MessageChannel();\x0d\n    const transferList = [port2];\x0d\n    // If transferList is provided.\x0d\n    if (options.transferList)\x0d\n      ArrayPrototypePush(transferList\x2C\x0d\n                         ...new SafeArrayIterator(options.transferList));\x0d\n\x0d\n    this[kPublicPort] = port1;\x0d\n    ArrayPrototypeForEach(['message'\x2C 'messageerror']\x2C (event) => {\x0d\n      this[kPublicPort].on(event\x2C (message) => this.emit(event\x2C message));\x0d\n    });\x0d\n    setupPortReferencing(this[kPublicPort]\x2C this\x2C 'message');\x0d\n    this[kPort].postMessage({\x0d\n      argv\x2C\x0d\n      type: messageTypes.LOAD_SCRIPT\x2C\x0d\n      filename\x2C\x0d\n      doEval\x2C\x0d\n      cwdCounter: cwdCounter || workerIo.sharedCwdCounter\x2C\x0d\n      workerData: options.workerData\x2C\x0d\n      environmentData\x2C\x0d\n      publicPort: port2\x2C\x0d\n      manifestURL: getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').url :\x0d\n        null\x2C\x0d\n      manifestSrc: getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').src :\x0d\n        null\x2C\x0d\n      hasStdin: !!options.stdin\x0d\n    }\x2C transferList);\x0d\n    // Use this to cache the Worker's loopStart value once available.\x0d\n    this[kLoopStartTime] = -1;\x0d\n    this[kIsOnline] = false;\x0d\n    this.performance = {\x0d\n      eventLoopUtilization: FunctionPrototypeBind(eventLoopUtilization\x2C this)\x2C\x0d\n    };\x0d\n    // Actually start the new thread now that everything is in place.\x0d\n    this[kHandle].startThread();\x0d\n\x0d\n    process.nextTick(() => process.emit('worker'\x2C this));\x0d\n  }\x0d\n\x0d\n  [kOnExit](code\x2C customErr\x2C customErrReason) {\x0d\n    debug(`[${threadId}] hears end event for Worker ${this.threadId}`);\x0d\n    drainMessagePort(this[kPublicPort]);\x0d\n    drainMessagePort(this[kPort]);\x0d\n    this.removeAllListeners('message');\x0d\n    this.removeAllListeners('messageerrors');\x0d\n    this[kPublicPort].unref();\x0d\n    this[kPort].unref();\x0d\n    this[kDispose]();\x0d\n    if (customErr) {\x0d\n      debug(`[${threadId}] failing with custom error ${customErr} \\\x0d\n        and with reason ${customErrReason}`);\x0d\n      this.emit('error'\x2C new errorCodes[customErr](customErrReason));\x0d\n    }\x0d\n    this.emit('exit'\x2C code);\x0d\n    this.removeAllListeners();\x0d\n  }\x0d\n\x0d\n  [kOnCouldNotSerializeErr]() {\x0d\n    this.emit('error'\x2C new ERR_WORKER_UNSERIALIZABLE_ERROR());\x0d\n  }\x0d\n\x0d\n  [kOnErrorMessage](serialized) {\x0d\n    // This is what is called for uncaught exceptions.\x0d\n    const error = deserializeError(serialized);\x0d\n    this.emit('error'\x2C error);\x0d\n  }\x0d\n\x0d\n  [kOnMessage](message) {\x0d\n    switch (message.type) {\x0d\n      case messageTypes.UP_AND_RUNNING:\x0d\n        this[kIsOnline] = true;\x0d\n        return this.emit('online');\x0d\n      case messageTypes.COULD_NOT_SERIALIZE_ERROR:\x0d\n        return this[kOnCouldNotSerializeErr]();\x0d\n      case messageTypes.ERROR_MESSAGE:\x0d\n        return this[kOnErrorMessage](message.error);\x0d\n      case messageTypes.STDIO_PAYLOAD:\x0d\n      {\x0d\n        const { stream\x2C chunks } = message;\x0d\n        const readable = this[kParentSideStdio][stream];\x0d\n        ArrayPrototypeForEach(chunks\x2C ({ chunk\x2C encoding }) => {\x0d\n          readable.push(chunk\x2C encoding);\x0d\n        });\x0d\n        return;\x0d\n      }\x0d\n      case messageTypes.STDIO_WANTS_MORE_DATA:\x0d\n      {\x0d\n        const { stream } = message;\x0d\n        return this[kParentSideStdio][stream][kStdioWantsMoreDataCallback]();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    assert.fail(`Unknown worker message type ${message.type}`);\x0d\n  }\x0d\n\x0d\n  [kDispose]() {\x0d\n    this[kHandle].onexit = null;\x0d\n    this[kHandle] = null;\x0d\n    this[kPort] = null;\x0d\n    this[kPublicPort] = null;\x0d\n\x0d\n    const { stdout\x2C stderr } = this[kParentSideStdio];\x0d\n\x0d\n    if (!stdout.readableEnded) {\x0d\n      debug(`[${threadId}] explicitly closes stdout for ${this.threadId}`);\x0d\n      stdout.push(null);\x0d\n    }\x0d\n    if (!stderr.readableEnded) {\x0d\n      debug(`[${threadId}] explicitly closes stderr for ${this.threadId}`);\x0d\n      stderr.push(null);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  postMessage(...args) {\x0d\n    if (this[kPublicPort] === null) return;\x0d\n\x0d\n    ReflectApply(this[kPublicPort].postMessage\x2C this[kPublicPort]\x2C args);\x0d\n  }\x0d\n\x0d\n  terminate(callback) {\x0d\n    debug(`[${threadId}] terminates Worker with ID ${this.threadId}`);\x0d\n\x0d\n    this.ref();\x0d\n\x0d\n    if (typeof callback === 'function') {\x0d\n      process.emitWarning(\x0d\n        'Passing a callback to worker.terminate() is deprecated. ' +\x0d\n        'It returns a Promise instead.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0132');\x0d\n      if (this[kHandle] === null) return PromiseResolve();\x0d\n      this.once('exit'\x2C (exitCode) => callback(null\x2C exitCode));\x0d\n    }\x0d\n\x0d\n    if (this[kHandle] === null) return PromiseResolve();\x0d\n\x0d\n    this[kHandle].stopThread();\x0d\n\x0d\n    // Do not use events.once() here\x2C because the 'exit' event will always be\x0d\n    // emitted regardless of any errors\x2C and the point is to only resolve\x0d\n    // once the thread has actually stopped.\x0d\n    return new Promise((resolve) => {\x0d\n      this.once('exit'\x2C resolve);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    if (this[kHandle] === null) return;\x0d\n\x0d\n    this[kHandle].ref();\x0d\n    this[kPublicPort].ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    if (this[kHandle] === null) return;\x0d\n\x0d\n    this[kHandle].unref();\x0d\n    this[kPublicPort].unref();\x0d\n  }\x0d\n\x0d\n  get threadId() {\x0d\n    if (this[kHandle] === null) return -1;\x0d\n\x0d\n    return this[kHandle].threadId;\x0d\n  }\x0d\n\x0d\n  get stdin() {\x0d\n    return this[kParentSideStdio].stdin;\x0d\n  }\x0d\n\x0d\n  get stdout() {\x0d\n    return this[kParentSideStdio].stdout;\x0d\n  }\x0d\n\x0d\n  get stderr() {\x0d\n    return this[kParentSideStdio].stderr;\x0d\n  }\x0d\n\x0d\n  get resourceLimits() {\x0d\n    if (this[kHandle] === null) return {};\x0d\n\x0d\n    return makeResourceLimits(this[kHandle].getResourceLimits());\x0d\n  }\x0d\n\x0d\n  getHeapSnapshot() {\x0d\n    const heapSnapshotTaker = this[kHandle] && this[kHandle].takeHeapSnapshot();\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      if (!heapSnapshotTaker) return reject(new ERR_WORKER_NOT_RUNNING());\x0d\n      heapSnapshotTaker.ondone = (handle) => {\x0d\n        const { HeapSnapshotStream } = require('internal/heap_utils');\x0d\n        resolve(new HeapSnapshotStream(handle));\x0d\n      };\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction pipeWithoutWarning(source\x2C dest) {\x0d\n  const sourceMaxListeners = source._maxListeners;\x0d\n  const destMaxListeners = dest._maxListeners;\x0d\n  source.setMaxListeners(Infinity);\x0d\n  dest.setMaxListeners(Infinity);\x0d\n\x0d\n  source.pipe(dest);\x0d\n\x0d\n  source._maxListeners = sourceMaxListeners;\x0d\n  dest._maxListeners = destMaxListeners;\x0d\n}\x0d\n\x0d\nconst resourceLimitsArray = new Float64Array(kTotalResourceLimitCount);\x0d\nfunction parseResourceLimits(obj) {\x0d\n  const ret = resourceLimitsArray;\x0d\n  TypedArrayPrototypeFill(ret\x2C -1);\x0d\n  if (typeof obj !== 'object' || obj === null) return ret;\x0d\n\x0d\n  if (typeof obj.maxOldGenerationSizeMb === 'number')\x0d\n    ret[kMaxOldGenerationSizeMb] = MathMax(obj.maxOldGenerationSizeMb\x2C 2);\x0d\n  if (typeof obj.maxYoungGenerationSizeMb === 'number')\x0d\n    ret[kMaxYoungGenerationSizeMb] = obj.maxYoungGenerationSizeMb;\x0d\n  if (typeof obj.codeRangeSizeMb === 'number')\x0d\n    ret[kCodeRangeSizeMb] = obj.codeRangeSizeMb;\x0d\n  if (typeof obj.stackSizeMb === 'number')\x0d\n    ret[kStackSizeMb] = obj.stackSizeMb;\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nfunction makeResourceLimits(float64arr) {\x0d\n  return {\x0d\n    maxYoungGenerationSizeMb: float64arr[kMaxYoungGenerationSizeMb]\x2C\x0d\n    maxOldGenerationSizeMb: float64arr[kMaxOldGenerationSizeMb]\x2C\x0d\n    codeRangeSizeMb: float64arr[kCodeRangeSizeMb]\x2C\x0d\n    stackSizeMb: float64arr[kStackSizeMb]\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction eventLoopUtilization(util1\x2C util2) {\x0d\n  // TODO(trevnorris): Works to solve the thread-safe read/write issue of\x0d\n  // loopTime\x2C but has the drawback that it can't be set until the event loop\x0d\n  // has had a chance to turn. So it will be impossible to read the ELU of\x0d\n  // a worker thread immediately after it's been created.\x0d\n  if (!this[kIsOnline] || !this[kHandle]) {\x0d\n    return { idle: 0\x2C active: 0\x2C utilization: 0 };\x0d\n  }\x0d\n\x0d\n  // Cache loopStart\x2C since it's only written to once.\x0d\n  if (this[kLoopStartTime] === -1) {\x0d\n    this[kLoopStartTime] = this[kHandle].loopStartTime();\x0d\n    if (this[kLoopStartTime] === -1)\x0d\n      return { idle: 0\x2C active: 0\x2C utilization: 0 };\x0d\n  }\x0d\n\x0d\n  if (util2) {\x0d\n    const idle = util1.idle - util2.idle;\x0d\n    const active = util1.active - util2.active;\x0d\n    return { idle\x2C active\x2C utilization: active / (idle + active) };\x0d\n  }\x0d\n\x0d\n  const idle = this[kHandle].loopIdleTime();\x0d\n\x0d\n  // Using performance.now() here is fine since it's always the time from\x0d\n  // the beginning of the process\x2C and is why it needs to be offset by the\x0d\n  // loopStart time (which is also calculated from the beginning of the\x0d\n  // process).\x0d\n  const active = now() - this[kLoopStartTime] - idle;\x0d\n\x0d\n  if (!util1) {\x0d\n    return { idle\x2C active\x2C utilization: active / (idle + active) };\x0d\n  }\x0d\n\x0d\n  const idle_delta = idle - util1.idle;\x0d\n  const active_delta = active - util1.active;\x0d\n  const utilization = active_delta / (idle_delta + active_delta);\x0d\n  return { idle: idle_delta\x2C active: active_delta\x2C utilization };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ownsProcessState\x2C\x0d\n  isMainThread\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  resourceLimits:\x0d\n    !isMainThread ? makeResourceLimits(resourceLimitsRaw) : {}\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n  assignEnvironmentData\x2C\x0d\n  threadId\x2C\x0d\n  Worker\x2C\x0d\n};\x0d\n
code-source-info,0x37947c89ef6,145,0,15928,C0O0C4O15928,,
code-creation,Function,10,232674,0x37947c8b256,1208, node:internal/worker:1:1,0x37947c89e70,~
code-source-info,0x37947c8b256,145,0,15928,C0O0C247O28C253O54C259O76C265O99C270O116C276O142C282O160C288O172C294O189C300O207C306O219C312O238C318O255C324O279C330O301C335O313C341O324C346O335C351O349C357O377C368O407C374O416C379O479C387O479C392O514C400O514C404O514C406O556C414O556C418O556C420O590C428O590C434O582C440O644C448O644C454O670C458O644C460O859C464O690C470O717C476O737C482O773C488O806C494O831C500O899C508O899C514O880C520O948C528O948C532O948C534O1207C538O991C544O1012C550O1031C556O1048C562O1058C568O1081C574O1101C580O1133C586O1158C592O1182C598O1247C606O1247C612O1226C618O1338C626O1338C632O1290C638O1305C644O1320C650O1389C658O1389C664O1372C670O1442C678O1442C684O1424C690O1726C694O1726C700O1488C705O1509C710O1542C715O1564C721O1585C727O1600C733O1630C739O1658C745O1679C751O1696C756O1772C760O1772C764O1772C766O1812C770O1812C774O1812C776O1853C780O1853C784O1853C786O1890C790O1890C794O1890C796O1929C800O1929C804O1929C806O1984C810O1984C814O1984C816O2044C820O2044C824O2044C826O2097C830O2097C834O2097C836O2149C840O2149C844O2149C846O2194C850O2194C854O2194C856O2236C860O2236C864O2236C866O2295C874O2295C880O2328C896O2329C902O2295C904O2385C905O2385C907O2424C909O2424C914O2424C916O2442C927O2465C933O2494C942O2478C947O2476C951O2546C957O2554C961O2546C963O2564C973O2578C979O3084C989O8301C999O8955C1009O9059C1019O9238C1029O10163C1115O13157C1117O13157C1122O13157C1124O15672C1132O15694C1138O15715C1144O15732C1153O15768C1159O15783C1172O15830C1178O15853C1184O15876C1190O15902C1196O15915C1202O15687C1207O15927,,
tick,0x7ff662d239b0,233101,1,0x7ff662e52230,3,0x7ff663796a40,0x21ab3644b9b,0x21ab36432e5,0x37947c88f61,0x21ab3644c63,0x37947c814fa,0x35a8d4b614b,0x35a8d4a43ae,0x35a8d4a3fd2,0x37947c8121e,0x37947c884ce,0x35a8d4bb759,0x35a8d4b762b,0x35a8d4b6b2e,0x35a8d4a4428,0x35a8d4a3fd2,0x35a8d4a2dab,0x35a8d4a2b55,0x3d28624f344,0x3d28624a9d5
code-creation,Eval,10,233404,0x37947c8d1c6,5, node:internal/error_serdes:1:1,0x37947c8cf00,~
script-source,146,node:internal/error_serdes,'use strict';\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Error\x2C\x0d\n  EvalError\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeToString\x2C\x0d\n  RangeError\x2C\x0d\n  ReferenceError\x2C\x0d\n  SafeSet\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  SyntaxError\x2C\x0d\n  TypeError\x2C\x0d\n  URIError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kSerializedError = 0;\x0d\nconst kSerializedObject = 1;\x0d\nconst kInspectedError = 2;\x0d\n\x0d\nconst errors = {\x0d\n  Error\x2C TypeError\x2C RangeError\x2C URIError\x2C SyntaxError\x2C ReferenceError\x2C EvalError\x0d\n};\x0d\nconst errorConstructorNames = new SafeSet(ObjectKeys(errors));\x0d\n\x0d\nfunction TryGetAllProperties(object\x2C target = object) {\x0d\n  const all = ObjectCreate(null);\x0d\n  if (object === null)\x0d\n    return all;\x0d\n  ObjectAssign(all\x2C\x0d\n               TryGetAllProperties(ObjectGetPrototypeOf(object)\x2C target));\x0d\n  const keys = ObjectGetOwnPropertyNames(object);\x0d\n  ArrayPrototypeForEach(keys\x2C (key) => {\x0d\n    let descriptor;\x0d\n    try {\x0d\n      descriptor = ObjectGetOwnPropertyDescriptor(object\x2C key);\x0d\n    } catch { return; }\x0d\n    const getter = descriptor.get;\x0d\n    if (getter && key !== '__proto__') {\x0d\n      try {\x0d\n        descriptor.value = FunctionPrototypeCall(getter\x2C target);\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n    }\x0d\n    if ('value' in descriptor && typeof descriptor.value !== 'function') {\x0d\n      delete descriptor.get;\x0d\n      delete descriptor.set;\x0d\n      all[key] = descriptor;\x0d\n    }\x0d\n  });\x0d\n  return all;\x0d\n}\x0d\n\x0d\nfunction GetConstructors(object) {\x0d\n  const constructors = [];\x0d\n\x0d\n  for (let current = object;\x0d\n    current !== null;\x0d\n    current = ObjectGetPrototypeOf(current)) {\x0d\n    const desc = ObjectGetOwnPropertyDescriptor(current\x2C 'constructor');\x0d\n    if (desc && desc.value) {\x0d\n      ObjectDefineProperty(constructors\x2C constructors.length\x2C {\x0d\n        __proto__: null\x2C\x0d\n        value: desc.value\x2C enumerable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return constructors;\x0d\n}\x0d\n\x0d\nfunction GetName(object) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(object\x2C 'name');\x0d\n  return desc && desc.value;\x0d\n}\x0d\n\x0d\nlet internalUtilInspect;\x0d\nfunction inspect(...args) {\x0d\n  if (!internalUtilInspect) {\x0d\n    internalUtilInspect = require('internal/util/inspect');\x0d\n  }\x0d\n  return internalUtilInspect.inspect(...args);\x0d\n}\x0d\n\x0d\nlet serialize;\x0d\nfunction serializeError(error) {\x0d\n  if (!serialize) serialize = require('v8').serialize;\x0d\n  try {\x0d\n    if (typeof error === 'object' &&\x0d\n        ObjectPrototypeToString(error) === '[object Error]') {\x0d\n      const constructors = GetConstructors(error);\x0d\n      for (let i = 0; i < constructors.length; i++) {\x0d\n        const name = GetName(constructors[i]);\x0d\n        if (errorConstructorNames.has(name)) {\x0d\n          const serialized = serialize({\x0d\n            constructor: name\x2C\x0d\n            properties: TryGetAllProperties(error)\x0d\n          });\x0d\n          return Buffer.concat([Buffer.from([kSerializedError])\x2C serialized]);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  try {\x0d\n    const serialized = serialize(error);\x0d\n    return Buffer.concat([Buffer.from([kSerializedObject])\x2C serialized]);\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  return Buffer.concat([Buffer.from([kInspectedError])\x2C\x0d\n                        Buffer.from(inspect(error)\x2C 'utf8')]);\x0d\n}\x0d\n\x0d\nlet deserialize;\x0d\nfunction deserializeError(error) {\x0d\n  if (!deserialize) deserialize = require('v8').deserialize;\x0d\n  switch (error[0]) {\x0d\n    case kSerializedError: {\x0d\n      const { constructor\x2C properties } = deserialize(error.subarray(1));\x0d\n      const ctor = errors[constructor];\x0d\n      ObjectDefineProperty(properties\x2C SymbolToStringTag\x2C {\x0d\n        __proto__: null\x2C\x0d\n        value: { value: 'Error'\x2C configurable: true }\x2C\x0d\n        enumerable: true\x0d\n      });\x0d\n      return ObjectCreate(ctor.prototype\x2C properties);\x0d\n    }\x0d\n    case kSerializedObject:\x0d\n      return deserialize(error.subarray(1));\x0d\n    case kInspectedError: {\x0d\n      const buf = Buffer.from(error.buffer\x2C\x0d\n                              error.byteOffset + 1\x2C\x0d\n                              error.byteLength - 1);\x0d\n      return buf.toString('utf8');\x0d\n    }\x0d\n  }\x0d\n  require('assert').fail('This should not happen');\x0d\n}\x0d\n\x0d\nmodule.exports = { serializeError\x2C deserializeError };\x0d\n
code-source-info,0x37947c8d1c6,146,0,4376,C0O0C4O4376,,
code-creation,Function,10,233597,0x37947c8d5e6,335, node:internal/error_serdes:1:1,0x37947c8d140,~
code-source-info,0x37947c8d5e6,146,0,4376,C0O0C100O32C106O32C111O49C115O32C117O70C123O96C128O106C133O120C139O146C145O163C151O180C157O205C163O240C169O270C175O295C180O310C186O338C191O353C196O372C201O384C207O406C212O422C217O436C222O492C223O492C225O522C227O522C229O550C231O550C233O571C240O576C246O583C252O594C258O606C264O616C270O629C276O645C282O571C284O690C287O702C294O690C299O690C301O2197C302O2197C304O2402C305O2402C307O3434C308O3434C310O4320C317O4339C323O4355C329O4335C334O4375,,
code-creation,LazyCompile,10,233983,0x37947c8e7f6,914,Socket node:net:294:16,0x3d286276388,~
code-source-info,0x37947c8e7f
code-creation,LazyCompile,10,234174,0x37947c8eec6,109,Duplex node:internal/streams/duplex:54:16,0x3a93d9fe618,~
script-source,57,node:internal/streams/duplex,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// a duplex stream is just a stream that is both readable and writable.\x0d\n// Since JS doesn't have multiple prototype inheritance\x2C this class\x0d\n// prototypically inherits from Readable\x2C and then parasitically from\x0d\n// Writable.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Duplex;\x0d\n\x0d\nconst Readable = require('internal/streams/readable');\x0d\nconst Writable = require('internal/streams/writable');\x0d\n\x0d\nObjectSetPrototypeOf(Duplex.prototype\x2C Readable.prototype);\x0d\nObjectSetPrototypeOf(Duplex\x2C Readable);\x0d\n\x0d\n{\x0d\n  const keys = ObjectKeys(Writable.prototype);\x0d\n  // Allow the keys array to be GC'ed.\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const method = keys[i];\x0d\n    if (!Duplex.prototype[method])\x0d\n      Duplex.prototype[method] = Writable.prototype[method];\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Duplex(options) {\x0d\n  if (!(this instanceof Duplex))\x0d\n    return new Duplex(options);\x0d\n\x0d\n  Readable.call(this\x2C options);\x0d\n  Writable.call(this\x2C options);\x0d\n  this.allowHalfOpen = true;\x0d\n\x0d\n  if (options) {\x0d\n    if (options.readable === false)\x0d\n      this.readable = false;\x0d\n\x0d\n    if (options.writable === false)\x0d\n      this.writable = false;\x0d\n\x0d\n    if (options.allowHalfOpen === false) {\x0d\n      this.allowHalfOpen = false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(Duplex.prototype\x2C {\x0d\n  writable:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writable') }\x2C\x0d\n  writableHighWaterMark:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableHighWaterMark') }\x2C\x0d\n  writableObjectMode:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableObjectMode') }\x2C\x0d\n  writableBuffer:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableBuffer') }\x2C\x0d\n  writableLength:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableLength') }\x2C\x0d\n  writableFinished:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableFinished') }\x2C\x0d\n  writableCorked:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableCorked') }\x2C\x0d\n  writableEnded:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableEnded') }\x2C\x0d\n  writableNeedDrain:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableNeedDrain') }\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      if (this._readableState === undefined ||\x0d\n        this._writableState === undefined) {\x0d\n        return false;\x0d\n      }\x0d\n      return this._readableState.destroyed && this._writableState.destroyed;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // Backward compatibility\x2C the user is explicitly\x0d\n      // managing destroyed.\x0d\n      if (this._readableState && this._writableState) {\x0d\n        this._readableState.destroyed = value;\x0d\n        this._writableState.destroyed = value;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nlet duplexify;\x0d\n\x0d\nDuplex.from = function(body) {\x0d\n  if (!duplexify) {\x0d\n    duplexify = require('internal/streams/duplexify');\x0d\n  }\x0d\n  return duplexify(body\x2C 'body');\x0d\n};\x0d\n
code-source-info,0x37947c8eec6,57,2064,2492,C0O2079C2O2090C7O2115C12O2122C17O2142C18O2148C23O2157C28O2157C34O2181C39O2190C44O2190C50O2214C51O2233C55O2246C59O2278C65O2287C70O2305C71O2319C75O2347C81O2356C86O2374C87O2388C91O2416C97O2430C102O2450C103O2469C108O2491,,
code-creation,LazyCompile,10,234461,0x37947c8f586,220,Readable node:internal/streams/readable:181:18,0xa61434c320,~
script-source,58,node:internal/streams/readable,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n  Symbol\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Readable;\x0d\nReadable.ReadableState = ReadableState;\x0d\n\x0d\nconst EE = require('events');\x0d\nconst { Stream\x2C prependListener } = require('internal/streams/legacy');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  addAbortSignalNoValidate\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst BufferList = require('internal/streams/buffer_list');\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\nconst {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x0d\n} = require('internal/streams/state');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_STREAM_PUSH_AFTER_EOF\x2C\x0d\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateObject } = require('internal/validators');\x0d\n\x0d\nconst kPaused = Symbol('kPaused');\x0d\n\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst from = require('internal/streams/from');\x0d\n\x0d\nObjectSetPrototypeOf(Readable.prototype\x2C Stream.prototype);\x0d\nObjectSetPrototypeOf(Readable\x2C Stream);\x0d\nconst nop = () => {};\x0d\n\x0d\nconst { errorOrDestroy } = destroyImpl;\x0d\n\x0d\nfunction ReadableState(options\x2C stream\x2C isDuplex) {\x0d\n  // Duplex streams are both readable and writable\x2C but share\x0d\n  // the same options object.\x0d\n  // However\x2C some cases require setting options to different\x0d\n  // values for the readable and the writable sides of the duplex stream.\x0d\n  // These options can be provided separately as readableXXX and writableXXX.\x0d\n  if (typeof isDuplex !== 'boolean')\x0d\n    isDuplex = stream instanceof Stream.Duplex;\x0d\n\x0d\n  // Object stream flag. Used to make read(n) ignore n and to\x0d\n  // make all the buffer merging and length checks go away.\x0d\n  this.objectMode = !!(options && options.objectMode);\x0d\n\x0d\n  if (isDuplex)\x0d\n    this.objectMode = this.objectMode ||\x0d\n      !!(options && options.readableObjectMode);\x0d\n\x0d\n  // The point at which it stops calling _read() to fill the buffer\x0d\n  // Note: 0 is a valid value\x2C means "don't call _read preemptively ever"\x0d\n  this.highWaterMark = options ?\x0d\n    getHighWaterMark(this\x2C options\x2C 'readableHighWaterMark'\x2C isDuplex) :\x0d\n    getDefaultHighWaterMark(false);\x0d\n\x0d\n  // A linked list is used to store data chunks instead of an array because the\x0d\n  // linked list can remove elements from the beginning faster than\x0d\n  // array.shift().\x0d\n  this.buffer = new BufferList();\x0d\n  this.length = 0;\x0d\n  this.pipes = [];\x0d\n  this.flowing = null;\x0d\n  this.ended = false;\x0d\n  this.endEmitted = false;\x0d\n  this.reading = false;\x0d\n\x0d\n  // Stream is still being constructed and cannot be\x0d\n  // destroyed until construction finished or failed.\x0d\n  // Async construction is opt in\x2C therefore we start as\x0d\n  // constructed.\x0d\n  this.constructed = true;\x0d\n\x0d\n  // A flag to be able to tell if the event 'readable'/'data' is emitted\x0d\n  // immediately\x2C or on a later tick.  We set this to true at first\x2C because\x0d\n  // any actions that shouldn't happen until "later" should generally also\x0d\n  // not happen before the first read call.\x0d\n  this.sync = true;\x0d\n\x0d\n  // Whenever we return null\x2C then we set a flag to say\x0d\n  // that we're awaiting a 'readable' event emission.\x0d\n  this.needReadable = false;\x0d\n  this.emittedReadable = false;\x0d\n  this.readableListening = false;\x0d\n  this.resumeScheduled = false;\x0d\n  this[kPaused] = null;\x0d\n\x0d\n  // True if the error was already emitted and should not be thrown again.\x0d\n  this.errorEmitted = false;\x0d\n\x0d\n  // Should close be emitted on destroy. Defaults to true.\x0d\n  this.emitClose = !options || options.emitClose !== false;\x0d\n\x0d\n  // Should .destroy() be called after 'end' (and potentially 'finish').\x0d\n  this.autoDestroy = !options || options.autoDestroy !== false;\x0d\n\x0d\n  // Has it been destroyed.\x0d\n  this.destroyed = false;\x0d\n\x0d\n  // Indicates whether the stream has errored. When true no further\x0d\n  // _read calls\x2C 'data' or 'readable' events should occur. This is needed\x0d\n  // since when autoDestroy is disabled we need a way to tell whether the\x0d\n  // stream has failed.\x0d\n  this.errored = null;\x0d\n\x0d\n  // Indicates whether the stream has finished destroying.\x0d\n  this.closed = false;\x0d\n\x0d\n  // True if close has been emitted or would have been emitted\x0d\n  // depending on emitClose.\x0d\n  this.closeEmitted = false;\x0d\n\x0d\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\x0d\n  // encoding is 'binary' so we have to make this configurable.\x0d\n  // Everything else in the universe uses 'utf8'\x2C though.\x0d\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8';\x0d\n\x0d\n  // Ref the piped dest which we need a drain event on it\x0d\n  // type: null | Writable | Set<Writable>.\x0d\n  this.awaitDrainWriters = null;\x0d\n  this.multiAwaitDrain = false;\x0d\n\x0d\n  // If true\x2C a maybeReadMore has been scheduled.\x0d\n  this.readingMore = false;\x0d\n\x0d\n  this.dataEmitted = false;\x0d\n\x0d\n  this.decoder = null;\x0d\n  this.encoding = null;\x0d\n  if (options && options.encoding) {\x0d\n    this.decoder = new StringDecoder(options.encoding);\x0d\n    this.encoding = options.encoding;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction Readable(options) {\x0d\n  if (!(this instanceof Readable))\x0d\n    return new Readable(options);\x0d\n\x0d\n  // Checking for a Stream.Duplex instance is faster here instead of inside\x0d\n  // the ReadableState constructor\x2C at least with V8 6.5.\x0d\n  const isDuplex = this instanceof Stream.Duplex;\x0d\n\x0d\n  this._readableState = new ReadableState(options\x2C this\x2C isDuplex);\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.read === 'function')\x0d\n      this._read = options.read;\x0d\n\x0d\n    if (typeof options.destroy === 'function')\x0d\n      this._destroy = options.destroy;\x0d\n\x0d\n    if (typeof options.construct === 'function')\x0d\n      this._construct = options.construct;\x0d\n    if (options.signal && !isDuplex)\x0d\n      addAbortSignalNoValidate(options.signal\x2C this);\x0d\n  }\x0d\n\x0d\n  Stream.call(this\x2C options);\x0d\n\x0d\n  destroyImpl.construct(this\x2C () => {\x0d\n    if (this._readableState.needReadable) {\x0d\n      maybeReadMore(this\x2C this._readableState);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nReadable.prototype.destroy = destroyImpl.destroy;\x0d\nReadable.prototype._undestroy = destroyImpl.undestroy;\x0d\nReadable.prototype._destroy = function(err\x2C cb) {\x0d\n  cb(err);\x0d\n};\x0d\n\x0d\nReadable.prototype[EE.captureRejectionSymbol] = function(err) {\x0d\n  this.destroy(err);\x0d\n};\x0d\n\x0d\n// Manually shove something into the read() buffer.\x0d\n// This returns true if the highWaterMark has not been hit yet\x2C\x0d\n// similar to how Writable.write() returns true if you should\x0d\n// write() some more.\x0d\nReadable.prototype.push = function(chunk\x2C encoding) {\x0d\n  return readableAddChunk(this\x2C chunk\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\n// Unshift should *always* be something directly out of read().\x0d\nReadable.prototype.unshift = function(chunk\x2C encoding) {\x0d\n  return readableAddChunk(this\x2C chunk\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nfunction readableAddChunk(stream\x2C chunk\x2C encoding\x2C addToFront) {\x0d\n  debug('readableAddChunk'\x2C chunk);\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  let err;\x0d\n  if (!state.objectMode) {\x0d\n    if (typeof chunk === 'string') {\x0d\n      encoding = encoding || state.defaultEncoding;\x0d\n      if (state.encoding !== encoding) {\x0d\n        if (addToFront && state.encoding) {\x0d\n          // When unshifting\x2C if state.encoding is set\x2C we have to save\x0d\n          // the string in the BufferList with the state encoding.\x0d\n          chunk = Buffer.from(chunk\x2C encoding).toString(state.encoding);\x0d\n        } else {\x0d\n          chunk = Buffer.from(chunk\x2C encoding);\x0d\n          encoding = '';\x0d\n        }\x0d\n      }\x0d\n    } else if (chunk instanceof Buffer) {\x0d\n      encoding = '';\x0d\n    } else if (Stream._isUint8Array(chunk)) {\x0d\n      chunk = Stream._uint8ArrayToBuffer(chunk);\x0d\n      encoding = '';\x0d\n    } else if (chunk != null) {\x0d\n      err = new ERR_INVALID_ARG_TYPE(\x0d\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    errorOrDestroy(stream\x2C err);\x0d\n  } else if (chunk === null) {\x0d\n    state.reading = false;\x0d\n    onEofChunk(stream\x2C state);\x0d\n  } else if (state.objectMode || (chunk && chunk.length > 0)) {\x0d\n    if (addToFront) {\x0d\n      if (state.endEmitted)\x0d\n        errorOrDestroy(stream\x2C new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());\x0d\n      else\x0d\n        addChunk(stream\x2C state\x2C chunk\x2C true);\x0d\n    } else if (state.ended) {\x0d\n      errorOrDestroy(stream\x2C new ERR_STREAM_PUSH_AFTER_EOF());\x0d\n    } else if (state.destroyed || state.errored) {\x0d\n      return false;\x0d\n    } else {\x0d\n      state.reading = false;\x0d\n      if (state.decoder && !encoding) {\x0d\n        chunk = state.decoder.write(chunk);\x0d\n        if (state.objectMode || chunk.length !== 0)\x0d\n          addChunk(stream\x2C state\x2C chunk\x2C false);\x0d\n        else\x0d\n          maybeReadMore(stream\x2C state);\x0d\n      } else {\x0d\n        addChunk(stream\x2C state\x2C chunk\x2C false);\x0d\n      }\x0d\n    }\x0d\n  } else if (!addToFront) {\x0d\n    state.reading = false;\x0d\n    maybeReadMore(stream\x2C state);\x0d\n  }\x0d\n\x0d\n  // We can push more data if we are below the highWaterMark.\x0d\n  // Also\x2C if we have no data yet\x2C we can stand some more bytes.\x0d\n  // This is to work around cases where hwm=0\x2C such as the repl.\x0d\n  return !state.ended &&\x0d\n    (state.length < state.highWaterMark || state.length === 0);\x0d\n}\x0d\n\x0d\nfunction addChunk(stream\x2C state\x2C chunk\x2C addToFront) {\x0d\n  if (state.flowing && state.length === 0 && !state.sync &&\x0d\n      stream.listenerCount('data') > 0) {\x0d\n    // Use the guard to avoid creating `Set()` repeatedly\x0d\n    // when we have multiple pipes.\x0d\n    if (state.multiAwaitDrain) {\x0d\n      state.awaitDrainWriters.clear();\x0d\n    } else {\x0d\n      state.awaitDrainWriters = null;\x0d\n    }\x0d\n    state.dataEmitted = true;\x0d\n    stream.emit('data'\x2C chunk);\x0d\n  } else {\x0d\n    // Update the buffer info.\x0d\n    state.length += state.objectMode ? 1 : chunk.length;\x0d\n    if (addToFront)\x0d\n      state.buffer.unshift(chunk);\x0d\n    else\x0d\n      state.buffer.push(chunk);\x0d\n\x0d\n    if (state.needReadable)\x0d\n      emitReadable(stream);\x0d\n  }\x0d\n  maybeReadMore(stream\x2C state);\x0d\n}\x0d\n\x0d\nReadable.prototype.isPaused = function() {\x0d\n  const state = this._readableState;\x0d\n  return state[kPaused] === true || state.flowing === false;\x0d\n};\x0d\n\x0d\n// Backwards compatibility.\x0d\nReadable.prototype.setEncoding = function(enc) {\x0d\n  const decoder = new StringDecoder(enc);\x0d\n  this._readableState.decoder = decoder;\x0d\n  // If setEncoding(null)\x2C decoder.encoding equals utf8.\x0d\n  this._readableState.encoding = this._readableState.decoder.encoding;\x0d\n\x0d\n  const buffer = this._readableState.buffer;\x0d\n  // Iterate over current buffer to convert already stored Buffers:\x0d\n  let content = '';\x0d\n  for (const data of buffer) {\x0d\n    content += decoder.write(data);\x0d\n  }\x0d\n  buffer.clear();\x0d\n  if (content !== '')\x0d\n    buffer.push(content);\x0d\n  this._readableState.length = content.length;\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// Don't raise the hwm > 1GB.\x0d\nconst MAX_HWM = 0x40000000;\x0d\nfunction computeNewHighWaterMark(n) {\x0d\n  if (n >= MAX_HWM) {\x0d\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\x0d\n    n = MAX_HWM;\x0d\n  } else {\x0d\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\x0d\n    // tiny amounts.\x0d\n    n--;\x0d\n    n |= n >>> 1;\x0d\n    n |= n >>> 2;\x0d\n    n |= n >>> 4;\x0d\n    n |= n >>> 8;\x0d\n    n |= n >>> 16;\x0d\n    n++;\x0d\n  }\x0d\n  return n;\x0d\n}\x0d\n\x0d\n// This function is designed to be inlinable\x2C so please take care when making\x0d\n// changes to the function body.\x0d\nfunction howMuchToRead(n\x2C state) {\x0d\n  if (n <= 0 || (state.length === 0 && state.ended))\x0d\n    return 0;\x0d\n  if (state.objectMode)\x0d\n    return 1;\x0d\n  if (NumberIsNaN(n)) {\x0d\n    // Only flow one buffer at a time.\x0d\n    if (state.flowing && state.length)\x0d\n      return state.buffer.first().length;\x0d\n    return state.length;\x0d\n  }\x0d\n  if (n <= state.length)\x0d\n    return n;\x0d\n  return state.ended ? state.length : 0;\x0d\n}\x0d\n\x0d\n// You can override either this method\x2C or the async _read(n) below.\x0d\nReadable.prototype.read = function(n) {\x0d\n  debug('read'\x2C n);\x0d\n  // Same as parseInt(undefined\x2C 10)\x2C however V8 7.3 performance regressed\x0d\n  // in this scenario\x2C so we are doing it manually.\x0d\n  if (n === undefined) {\x0d\n    n = NaN;\x0d\n  } else if (!NumberIsInteger(n)) {\x0d\n    n = NumberParseInt(n\x2C 10);\x0d\n  }\x0d\n  const state = this._readableState;\x0d\n  const nOrig = n;\x0d\n\x0d\n  // If we're asking for more than the current hwm\x2C then raise the hwm.\x0d\n  if (n > state.highWaterMark)\x0d\n    state.highWaterMark = computeNewHighWaterMark(n);\x0d\n\x0d\n  if (n !== 0)\x0d\n    state.emittedReadable = false;\x0d\n\x0d\n  // If we're doing read(0) to trigger a readable event\x2C but we\x0d\n  // already have a bunch of data in the buffer\x2C then just trigger\x0d\n  // the 'readable' event and move on.\x0d\n  if (n === 0 &&\x0d\n      state.needReadable &&\x0d\n      ((state.highWaterMark !== 0 ?\x0d\n        state.length >= state.highWaterMark :\x0d\n        state.length > 0) ||\x0d\n       state.ended)) {\x0d\n    debug('read: emitReadable'\x2C state.length\x2C state.ended);\x0d\n    if (state.length === 0 && state.ended)\x0d\n      endReadable(this);\x0d\n    else\x0d\n      emitReadable(this);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  n = howMuchToRead(n\x2C state);\x0d\n\x0d\n  // If we've ended\x2C and we're now clear\x2C then finish it up.\x0d\n  if (n === 0 && state.ended) {\x0d\n    if (state.length === 0)\x0d\n      endReadable(this);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // All the actual chunk generation logic needs to be\x0d\n  // *below* the call to _read.  The reason is that in certain\x0d\n  // synthetic stream cases\x2C such as passthrough streams\x2C _read\x0d\n  // may be a completely synchronous operation which may change\x0d\n  // the state of the read buffer\x2C providing enough data when\x0d\n  // before there was *not* enough.\x0d\n  //\x0d\n  // So\x2C the steps are:\x0d\n  // 1. Figure out what the state of things will be after we do\x0d\n  // a read from the buffer.\x0d\n  //\x0d\n  // 2. If that resulting state will trigger a _read\x2C then call _read.\x0d\n  // Note that this may be asynchronous\x2C or synchronous.  Yes\x2C it is\x0d\n  // deeply ugly to write APIs this way\x2C but that still doesn't mean\x0d\n  // that the Readable class should behave improperly\x2C as streams are\x0d\n  // designed to be sync/async agnostic.\x0d\n  // Take note if the _read call is sync or async (ie\x2C if the read call\x0d\n  // has returned yet)\x2C so that we know whether or not it's safe to emit\x0d\n  // 'readable' etc.\x0d\n  //\x0d\n  // 3. Actually pull the requested chunks out of the buffer and return.\x0d\n\x0d\n  // if we need a readable event\x2C then we need to do some reading.\x0d\n  let doRead = state.needReadable;\x0d\n  debug('need readable'\x2C doRead);\x0d\n\x0d\n  // If we currently have less than the highWaterMark\x2C then also read some.\x0d\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\x0d\n    doRead = true;\x0d\n    debug('length less than watermark'\x2C doRead);\x0d\n  }\x0d\n\x0d\n  // However\x2C if we've ended\x2C then there's no point\x2C if we're already\x0d\n  // reading\x2C then it's unnecessary\x2C if we're constructing we have to wait\x2C\x0d\n  // and if we're destroyed or errored\x2C then it's not allowed\x2C\x0d\n  if (state.ended || state.reading || state.destroyed || state.errored ||\x0d\n      !state.constructed) {\x0d\n    doRead = false;\x0d\n    debug('reading\x2C ended or constructing'\x2C doRead);\x0d\n  } else if (doRead) {\x0d\n    debug('do read');\x0d\n    state.reading = true;\x0d\n    state.sync = true;\x0d\n    // If the length is currently zero\x2C then we *need* a readable event.\x0d\n    if (state.length === 0)\x0d\n      state.needReadable = true;\x0d\n\x0d\n    // Call internal read method\x0d\n    this._read(state.highWaterMark);\x0d\n\x0d\n    state.sync = false;\x0d\n    // If _read pushed data synchronously\x2C then `reading` will be false\x2C\x0d\n    // and we need to re-evaluate how much data we can return to the user.\x0d\n    if (!state.reading)\x0d\n      n = howMuchToRead(nOrig\x2C state);\x0d\n  }\x0d\n\x0d\n  let ret;\x0d\n  if (n > 0)\x0d\n    ret = fromList(n\x2C state);\x0d\n  else\x0d\n    ret = null;\x0d\n\x0d\n  if (ret === null) {\x0d\n    state.needReadable = state.length <= state.highWaterMark;\x0d\n    n = 0;\x0d\n  } else {\x0d\n    state.length -= n;\x0d\n    if (state.multiAwaitDrain) {\x0d\n      state.awaitDrainWriters.clear();\x0d\n    } else {\x0d\n      state.awaitDrainWriters = null;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (state.length === 0) {\x0d\n    // If we have nothing in the buffer\x2C then we want to know\x0d\n    // as soon as we *do* get something into the buffer.\x0d\n    if (!state.ended)\x0d\n      state.needReadable = true;\x0d\n\x0d\n    // If we tried to read() past the EOF\x2C then emit end on the next tick.\x0d\n    if (nOrig !== n && state.ended)\x0d\n      endReadable(this);\x0d\n  }\x0d\n\x0d\n  if (ret !== null) {\x0d\n    state.dataEmitted = true;\x0d\n    this.emit('data'\x2C ret);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n};\x0d\n\x0d\nfunction onEofChunk(stream\x2C state) {\x0d\n  debug('onEofChunk');\x0d\n  if (state.ended) return;\x0d\n  if (state.decoder) {\x0d\n    const chunk = state.decoder.end();\x0d\n    if (chunk && chunk.length) {\x0d\n      state.buffer.push(chunk);\x0d\n      state.length += state.objectMode ? 1 : chunk.length;\x0d\n    }\x0d\n  }\x0d\n  state.ended = true;\x0d\n\x0d\n  if (state.sync) {\x0d\n    // If we are sync\x2C wait until next tick to emit the data.\x0d\n    // Otherwise we risk emitting data in the flow()\x0d\n    // the readable code triggers during a read() call.\x0d\n    emitReadable(stream);\x0d\n  } else {\x0d\n    // Emit 'readable' now to make sure it gets picked up.\x0d\n    state.needReadable = false;\x0d\n    state.emittedReadable = true;\x0d\n    // We have to emit readable now that we are EOF. Modules\x0d\n    // in the ecosystem (e.g. dicer) rely on this event being sync.\x0d\n    emitReadable_(stream);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Don't emit readable right away in sync mode\x2C because this can trigger\x0d\n// another read() call => stack overflow.  This way\x2C it might trigger\x0d\n// a nextTick recursion warning\x2C but that's not so bad.\x0d\nfunction emitReadable(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('emitReadable'\x2C state.needReadable\x2C state.emittedReadable);\x0d\n  state.needReadable = false;\x0d\n  if (!state.emittedReadable) {\x0d\n    debug('emitReadable'\x2C state.flowing);\x0d\n    state.emittedReadable = true;\x0d\n    process.nextTick(emitReadable_\x2C stream);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitReadable_(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('emitReadable_'\x2C state.destroyed\x2C state.length\x2C state.ended);\x0d\n  if (!state.destroyed && !state.errored && (state.length || state.ended)) {\x0d\n    stream.emit('readable');\x0d\n    state.emittedReadable = false;\x0d\n  }\x0d\n\x0d\n  // The stream needs another readable event if:\x0d\n  // 1. It is not flowing\x2C as the flow mechanism will take\x0d\n  //    care of it.\x0d\n  // 2. It is not ended.\x0d\n  // 3. It is below the highWaterMark\x2C so we can schedule\x0d\n  //    another readable later.\x0d\n  state.needReadable =\x0d\n    !state.flowing &&\x0d\n    !state.ended &&\x0d\n    state.length <= state.highWaterMark;\x0d\n  flow(stream);\x0d\n}\x0d\n\x0d\n\x0d\n// At this point\x2C the user has presumably seen the 'readable' event\x2C\x0d\n// and called read() to consume some data.  that may have triggered\x0d\n// in turn another _read(n) call\x2C in which case reading = true if\x0d\n// it's in progress.\x0d\n// However\x2C if we're not ended\x2C or reading\x2C and the length < hwm\x2C\x0d\n// then go ahead and try to read some more preemptively.\x0d\nfunction maybeReadMore(stream\x2C state) {\x0d\n  if (!state.readingMore && state.constructed) {\x0d\n    state.readingMore = true;\x0d\n    process.nextTick(maybeReadMore_\x2C stream\x2C state);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeReadMore_(stream\x2C state) {\x0d\n  // Attempt to read more data if we should.\x0d\n  //\x0d\n  // The conditions for reading more data are (one of):\x0d\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\x0d\n  //   is responsible for filling the buffer with enough data if such data\x0d\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\x0d\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\x0d\n  //   when the stream consumer calls read() instead.\x0d\n  // - No data in the buffer\x2C and the stream is in flowing mode. In this mode\x0d\n  //   the loop below is responsible for ensuring read() is called. Failing to\x0d\n  //   call read here would abort the flow and there's no other mechanism for\x0d\n  //   continuing the flow if the stream consumer has just subscribed to the\x0d\n  //   'data' event.\x0d\n  //\x0d\n  // In addition to the above conditions to keep reading data\x2C the following\x0d\n  // conditions prevent the data from being read:\x0d\n  // - The stream has ended (state.ended).\x0d\n  // - There is already a pending 'read' operation (state.reading). This is a\x0d\n  //   case where the stream has called the implementation defined _read()\x0d\n  //   method\x2C but they are processing the call asynchronously and have _not_\x0d\n  //   called push() with new data. In this case we skip performing more\x0d\n  //   read()s. The execution ends in this method again after the _read() ends\x0d\n  //   up calling push() with more data.\x0d\n  while (!state.reading && !state.ended &&\x0d\n         (state.length < state.highWaterMark ||\x0d\n          (state.flowing && state.length === 0))) {\x0d\n    const len = state.length;\x0d\n    debug('maybeReadMore read 0');\x0d\n    stream.read(0);\x0d\n    if (len === state.length)\x0d\n      // Didn't get any data\x2C stop spinning.\x0d\n      break;\x0d\n  }\x0d\n  state.readingMore = false;\x0d\n}\x0d\n\x0d\n// Abstract method.  to be overridden in specific implementation classes.\x0d\n// call cb(er\x2C data) where data is <= n in length.\x0d\n// for virtual (non-string\x2C non-buffer) streams\x2C "length" is somewhat\x0d\n// arbitrary\x2C and perhaps not very meaningful.\x0d\nReadable.prototype._read = function(n) {\x0d\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_read()');\x0d\n};\x0d\n\x0d\nReadable.prototype.pipe = function(dest\x2C pipeOpts) {\x0d\n  const src = this;\x0d\n  const state = this._readableState;\x0d\n\x0d\n  if (state.pipes.length === 1) {\x0d\n    if (!state.multiAwaitDrain) {\x0d\n      state.multiAwaitDrain = true;\x0d\n      state.awaitDrainWriters = new SafeSet(\x0d\n        state.awaitDrainWriters ? [state.awaitDrainWriters] : []\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n\x0d\n  state.pipes.push(dest);\x0d\n  debug('pipe count=%d opts=%j'\x2C state.pipes.length\x2C pipeOpts);\x0d\n\x0d\n  const doEnd = (!pipeOpts || pipeOpts.end !== false) &&\x0d\n              dest !== process.stdout &&\x0d\n              dest !== process.stderr;\x0d\n\x0d\n  const endFn = doEnd ? onend : unpipe;\x0d\n  if (state.endEmitted)\x0d\n    process.nextTick(endFn);\x0d\n  else\x0d\n    src.once('end'\x2C endFn);\x0d\n\x0d\n  dest.on('unpipe'\x2C onunpipe);\x0d\n  function onunpipe(readable\x2C unpipeInfo) {\x0d\n    debug('onunpipe');\x0d\n    if (readable === src) {\x0d\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\x0d\n        unpipeInfo.hasUnpiped = true;\x0d\n        cleanup();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function onend() {\x0d\n    debug('onend');\x0d\n    dest.end();\x0d\n  }\x0d\n\x0d\n  let ondrain;\x0d\n\x0d\n  let cleanedUp = false;\x0d\n  function cleanup() {\x0d\n    debug('cleanup');\x0d\n    // Cleanup event handlers once the pipe is broken.\x0d\n    dest.removeListener('close'\x2C onclose);\x0d\n    dest.removeListener('finish'\x2C onfinish);\x0d\n    if (ondrain) {\x0d\n      dest.removeListener('drain'\x2C ondrain);\x0d\n    }\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n    dest.removeListener('unpipe'\x2C onunpipe);\x0d\n    src.removeListener('end'\x2C onend);\x0d\n    src.removeListener('end'\x2C unpipe);\x0d\n    src.removeListener('data'\x2C ondata);\x0d\n\x0d\n    cleanedUp = true;\x0d\n\x0d\n    // If the reader is waiting for a drain event from this\x0d\n    // specific writer\x2C then it would cause it to never start\x0d\n    // flowing again.\x0d\n    // So\x2C if this is awaiting a drain\x2C then we just call it now.\x0d\n    // If we don't know\x2C then assume that we are waiting for one.\x0d\n    if (ondrain && state.awaitDrainWriters &&\x0d\n        (!dest._writableState || dest._writableState.needDrain))\x0d\n      ondrain();\x0d\n  }\x0d\n\x0d\n  function pause() {\x0d\n    // If the user unpiped during `dest.write()`\x2C it is possible\x0d\n    // to get stuck in a permanently paused state if that write\x0d\n    // also returned false.\x0d\n    // => Check whether `dest` is still a piping destination.\x0d\n    if (!cleanedUp) {\x0d\n      if (state.pipes.length === 1 && state.pipes[0] === dest) {\x0d\n        debug('false write response\x2C pause'\x2C 0);\x0d\n        state.awaitDrainWriters = dest;\x0d\n        state.multiAwaitDrain = false;\x0d\n      } else if (state.pipes.length > 1 && state.pipes.includes(dest)) {\x0d\n        debug('false write response\x2C pause'\x2C state.awaitDrainWriters.size);\x0d\n        state.awaitDrainWriters.add(dest);\x0d\n      }\x0d\n      src.pause();\x0d\n    }\x0d\n    if (!ondrain) {\x0d\n      // When the dest drains\x2C it reduces the awaitDrain counter\x0d\n      // on the source.  This would be more elegant with a .once()\x0d\n      // handler in flow()\x2C but adding and removing repeatedly is\x0d\n      // too slow.\x0d\n      ondrain = pipeOnDrain(src\x2C dest);\x0d\n      dest.on('drain'\x2C ondrain);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  src.on('data'\x2C ondata);\x0d\n  function ondata(chunk) {\x0d\n    debug('ondata');\x0d\n    const ret = dest.write(chunk);\x0d\n    debug('dest.write'\x2C ret);\x0d\n    if (ret === false) {\x0d\n      pause();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // If the dest has an error\x2C then stop piping into it.\x0d\n  // However\x2C don't suppress the throwing behavior for this.\x0d\n  function onerror(er) {\x0d\n    debug('onerror'\x2C er);\x0d\n    unpipe();\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n    if (dest.listenerCount('error') === 0) {\x0d\n      const s = dest._writableState || dest._readableState;\x0d\n      if (s && !s.errorEmitted) {\x0d\n        // User incorrectly emitted 'error' directly on the stream.\x0d\n        errorOrDestroy(dest\x2C er);\x0d\n      } else {\x0d\n        dest.emit('error'\x2C er);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Make sure our error handler is attached before userland ones.\x0d\n  prependListener(dest\x2C 'error'\x2C onerror);\x0d\n\x0d\n  // Both close and finish should trigger unpipe\x2C but only once.\x0d\n  function onclose() {\x0d\n    dest.removeListener('finish'\x2C onfinish);\x0d\n    unpipe();\x0d\n  }\x0d\n  dest.once('close'\x2C onclose);\x0d\n  function onfinish() {\x0d\n    debug('onfinish');\x0d\n    dest.removeListener('close'\x2C onclose);\x0d\n    unpipe();\x0d\n  }\x0d\n  dest.once('finish'\x2C onfinish);\x0d\n\x0d\n  function unpipe() {\x0d\n    debug('unpipe');\x0d\n    src.unpipe(dest);\x0d\n  }\x0d\n\x0d\n  // Tell the dest that it's being piped to.\x0d\n  dest.emit('pipe'\x2C src);\x0d\n\x0d\n  // Start the flow if it hasn't been started already.\x0d\n\x0d\n  if (dest.writableNeedDrain === true) {\x0d\n    if (state.flowing) {\x0d\n      pause();\x0d\n    }\x0d\n  } else if (!state.flowing) {\x0d\n    debug('pipe resume');\x0d\n    src.resume();\x0d\n  }\x0d\n\x0d\n  return dest;\x0d\n};\x0d\n\x0d\nfunction pipeOnDrain(src\x2C dest) {\x0d\n  return function pipeOnDrainFunctionResult() {\x0d\n    const state = src._readableState;\x0d\n\x0d\n    // `ondrain` will call directly\x2C\x0d\n    // `this` maybe not a reference to dest\x2C\x0d\n    // so we use the real dest here.\x0d\n    if (state.awaitDrainWriters === dest) {\x0d\n      debug('pipeOnDrain'\x2C 1);\x0d\n      state.awaitDrainWriters = null;\x0d\n    } else if (state.multiAwaitDrain) {\x0d\n      debug('pipeOnDrain'\x2C state.awaitDrainWriters.size);\x0d\n      state.awaitDrainWriters.delete(dest);\x0d\n    }\x0d\n\x0d\n    if ((!state.awaitDrainWriters || state.awaitDrainWriters.size === 0) &&\x0d\n      src.listenerCount('data')) {\x0d\n      src.resume();\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\n\x0d\nReadable.prototype.unpipe = function(dest) {\x0d\n  const state = this._readableState;\x0d\n  const unpipeInfo = { hasUnpiped: false };\x0d\n\x0d\n  // If we're not piping anywhere\x2C then do nothing.\x0d\n  if (state.pipes.length === 0)\x0d\n    return this;\x0d\n\x0d\n  if (!dest) {\x0d\n    // remove all.\x0d\n    const dests = state.pipes;\x0d\n    state.pipes = [];\x0d\n    this.pause();\x0d\n\x0d\n    for (let i = 0; i < dests.length; i++)\x0d\n      dests[i].emit('unpipe'\x2C this\x2C { hasUnpiped: false });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Try to find the right one.\x0d\n  const index = ArrayPrototypeIndexOf(state.pipes\x2C dest);\x0d\n  if (index === -1)\x0d\n    return this;\x0d\n\x0d\n  state.pipes.splice(index\x2C 1);\x0d\n  if (state.pipes.length === 0)\x0d\n    this.pause();\x0d\n\x0d\n  dest.emit('unpipe'\x2C this\x2C unpipeInfo);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// Set up data events if they are asked for\x0d\n// Ensure readable listeners eventually get something.\x0d\nReadable.prototype.on = function(ev\x2C fn) {\x0d\n  const res = Stream.prototype.on.call(this\x2C ev\x2C fn);\x0d\n  const state = this._readableState;\x0d\n\x0d\n  if (ev === 'data') {\x0d\n    // Update readableListening so that resume() may be a no-op\x0d\n    // a few lines down. This is needed to support once('readable').\x0d\n    state.readableListening = this.listenerCount('readable') > 0;\x0d\n\x0d\n    // Try start flowing on next tick if stream isn't explicitly paused.\x0d\n    if (state.flowing !== false)\x0d\n      this.resume();\x0d\n  } else if (ev === 'readable') {\x0d\n    if (!state.endEmitted && !state.readableListening) {\x0d\n      state.readableListening = state.needReadable = true;\x0d\n      state.flowing = false;\x0d\n      state.emittedReadable = false;\x0d\n      debug('on readable'\x2C state.length\x2C state.reading);\x0d\n      if (state.length) {\x0d\n        emitReadable(this);\x0d\n      } else if (!state.reading) {\x0d\n        process.nextTick(nReadingNextTick\x2C this);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\nReadable.prototype.addListener = Readable.prototype.on;\x0d\n\x0d\nReadable.prototype.removeListener = function(ev\x2C fn) {\x0d\n  const res = Stream.prototype.removeListener.call(this\x2C\x0d\n                                                   ev\x2C fn);\x0d\n\x0d\n  if (ev === 'readable') {\x0d\n    // We need to check if there is someone still listening to\x0d\n    // readable and reset the state. However this needs to happen\x0d\n    // after readable has been emitted but before I/O (nextTick) to\x0d\n    // support once('readable'\x2C fn) cycles. This means that calling\x0d\n    // resume within the same tick will have no\x0d\n    // effect.\x0d\n    process.nextTick(updateReadableListening\x2C this);\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\nReadable.prototype.off = Readable.prototype.removeListener;\x0d\n\x0d\nReadable.prototype.removeAllListeners = function(ev) {\x0d\n  const res = Stream.prototype.removeAllListeners.apply(this\x2C\x0d\n                                                        arguments);\x0d\n\x0d\n  if (ev === 'readable' || ev === undefined) {\x0d\n    // We need to check if there is someone still listening to\x0d\n    // readable and reset the state. However this needs to happen\x0d\n    // after readable has been emitted but before I/O (nextTick) to\x0d\n    // support once('readable'\x2C fn) cycles. This means that calling\x0d\n    // resume within the same tick will have no\x0d\n    // effect.\x0d\n    process.nextTick(updateReadableListening\x2C this);\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\n\x0d\nfunction updateReadableListening(self) {\x0d\n  const state = self._readableState;\x0d\n  state.readableListening = self.listenerCount('readable') > 0;\x0d\n\x0d\n  if (state.resumeScheduled && state[kPaused] === false) {\x0d\n    // Flowing needs to be set to true now\x2C otherwise\x0d\n    // the upcoming resume will not flow.\x0d\n    state.flowing = true;\x0d\n\x0d\n    // Crude way to check if we should resume.\x0d\n  } else if (self.listenerCount('data') > 0) {\x0d\n    self.resume();\x0d\n  } else if (!state.readableListening) {\x0d\n    state.flowing = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction nReadingNextTick(self) {\x0d\n  debug('readable nexttick read 0');\x0d\n  self.read(0);\x0d\n}\x0d\n\x0d\n// pause() and resume() are remnants of the legacy readable stream API\x0d\n// If the user uses them\x2C then switch into old mode.\x0d\nReadable.prototype.resume = function() {\x0d\n  const state = this._readableState;\x0d\n  if (!state.flowing) {\x0d\n    debug('resume');\x0d\n    // We flow only if there is no one listening\x0d\n    // for readable\x2C but we still have to call\x0d\n    // resume().\x0d\n    state.flowing = !state.readableListening;\x0d\n    resume(this\x2C state);\x0d\n  }\x0d\n  state[kPaused] = false;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction resume(stream\x2C state) {\x0d\n  if (!state.resumeScheduled) {\x0d\n    state.resumeScheduled = true;\x0d\n    process.nextTick(resume_\x2C stream\x2C state);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction resume_(stream\x2C state) {\x0d\n  debug('resume'\x2C state.reading);\x0d\n  if (!state.reading) {\x0d\n    stream.read(0);\x0d\n  }\x0d\n\x0d\n  state.resumeScheduled = false;\x0d\n  stream.emit('resume');\x0d\n  flow(stream);\x0d\n  if (state.flowing && !state.reading)\x0d\n    stream.read(0);\x0d\n}\x0d\n\x0d\nReadable.prototype.pause = function() {\x0d\n  debug('call pause flowing=%j'\x2C this._readableState.flowing);\x0d\n  if (this._readableState.flowing !== false) {\x0d\n    debug('pause');\x0d\n    this._readableState.flowing = false;\x0d\n    this.emit('pause');\x0d\n  }\x0d\n  this._readableState[kPaused] = true;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction flow(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('flow'\x2C state.flowing);\x0d\n  while (state.flowing && stream.read() !== null);\x0d\n}\x0d\n\x0d\n// Wrap an old-style stream as the async data source.\x0d\n// This is *not* part of the readable stream interface.\x0d\n// It is an ugly unfortunate mess of history.\x0d\nReadable.prototype.wrap = function(stream) {\x0d\n  let paused = false;\x0d\n\x0d\n  // TODO (ronag): Should this.destroy(err) emit\x0d\n  // 'error' on the wrapped stream? Would require\x0d\n  // a static factory method\x2C e.g. Readable.wrap(stream).\x0d\n\x0d\n  stream.on('data'\x2C (chunk) => {\x0d\n    if (!this.push(chunk) && stream.pause) {\x0d\n      paused = true;\x0d\n      stream.pause();\x0d\n    }\x0d\n  });\x0d\n\x0d\n  stream.on('end'\x2C () => {\x0d\n    this.push(null);\x0d\n  });\x0d\n\x0d\n  stream.on('error'\x2C (err) => {\x0d\n    errorOrDestroy(this\x2C err);\x0d\n  });\x0d\n\x0d\n  stream.on('close'\x2C () => {\x0d\n    this.destroy();\x0d\n  });\x0d\n\x0d\n  stream.on('destroy'\x2C () => {\x0d\n    this.destroy();\x0d\n  });\x0d\n\x0d\n  this._read = () => {\x0d\n    if (paused && stream.resume) {\x0d\n      paused = false;\x0d\n      stream.resume();\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Proxy all the other methods. Important when wrapping filters and duplexes.\x0d\n  const streamKeys = ObjectKeys(stream);\x0d\n  for (let j = 1; j < streamKeys.length; j++) {\x0d\n    const i = streamKeys[j];\x0d\n    if (this[i] === undefined && typeof stream[i] === 'function') {\x0d\n      this[i] = stream[i].bind(stream);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nReadable.prototype[SymbolAsyncIterator] = function() {\x0d\n  return streamToAsyncIterator(this);\x0d\n};\x0d\n\x0d\nReadable.prototype.iterator = function(options) {\x0d\n  if (options !== undefined) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  return streamToAsyncIterator(this\x2C options);\x0d\n};\x0d\n\x0d\nfunction streamToAsyncIterator(stream\x2C options) {\x0d\n  if (typeof stream.read !== 'function') {\x0d\n    stream = Readable.wrap(stream\x2C { objectMode: true });\x0d\n  }\x0d\n\x0d\n  const iter = createAsyncIterator(stream\x2C options);\x0d\n  iter.stream = stream;\x0d\n  return iter;\x0d\n}\x0d\n\x0d\nasync function* createAsyncIterator(stream\x2C options) {\x0d\n  let callback = nop;\x0d\n\x0d\n  const opts = {\x0d\n    destroyOnReturn: true\x2C\x0d\n    destroyOnError: true\x2C\x0d\n    ...options\x2C\x0d\n  };\x0d\n\x0d\n  function next(resolve) {\x0d\n    if (this === stream) {\x0d\n      callback();\x0d\n      callback = nop;\x0d\n    } else {\x0d\n      callback = resolve;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  let error = state.errored;\x0d\n  let errorEmitted = state.errorEmitted;\x0d\n  let endEmitted = state.endEmitted;\x0d\n  let closeEmitted = state.closeEmitted;\x0d\n\x0d\n  stream\x0d\n    .on('readable'\x2C next)\x0d\n    .on('error'\x2C function(err) {\x0d\n      error = err;\x0d\n      errorEmitted = true;\x0d\n      next.call(this);\x0d\n    })\x0d\n    .on('end'\x2C function() {\x0d\n      endEmitted = true;\x0d\n      next.call(this);\x0d\n    })\x0d\n    .on('close'\x2C function() {\x0d\n      closeEmitted = true;\x0d\n      next.call(this);\x0d\n    });\x0d\n\x0d\n  let errorThrown = false;\x0d\n  try {\x0d\n    while (true) {\x0d\n      const chunk = stream.destroyed ? null : stream.read();\x0d\n      if (chunk !== null) {\x0d\n        yield chunk;\x0d\n      } else if (errorEmitted) {\x0d\n        throw error;\x0d\n      } else if (endEmitted) {\x0d\n        break;\x0d\n      } else if (closeEmitted) {\x0d\n        break;\x0d\n      } else {\x0d\n        await new Promise(next);\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    if (opts.destroyOnError) {\x0d\n      destroyImpl.destroyer(stream\x2C err);\x0d\n    }\x0d\n    errorThrown = true;\x0d\n    throw err;\x0d\n  } finally {\x0d\n    if (!errorThrown && opts.destroyOnReturn) {\x0d\n      if (state.autoDestroy || !endEmitted) {\x0d\n        // TODO(ronag): ERR_PREMATURE_CLOSE?\x0d\n        destroyImpl.destroyer(stream\x2C null);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Making it explicit these properties are not enumerable\x0d\n// because otherwise some prototype manipulation in\x0d\n// userland will fail.\x0d\nObjectDefineProperties(Readable.prototype\x2C {\x0d\n  readable: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const r = this._readableState;\x0d\n      // r.readable === false means that this is part of a Duplex stream\x0d\n      // where the readable side was disabled upon construction.\x0d\n      // Compat. The user might manually disable readable side through\x0d\n      // deprecated setter.\x0d\n      return !!r && r.readable !== false && !r.destroyed && !r.errorEmitted &&\x0d\n        !r.endEmitted;\x0d\n    }\x2C\x0d\n    set(val) {\x0d\n      // Backwards compat.\x0d\n      if (this._readableState) {\x0d\n        this._readableState.readable = !!val;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableDidRead: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.dataEmitted;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableAborted: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return !!(\x0d\n        this._readableState.readable !== false &&\x0d\n        (this._readableState.destroyed || this._readableState.errored) &&\x0d\n        !this._readableState.endEmitted\x0d\n      );\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableHighWaterMark: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.highWaterMark;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableBuffer: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState && this._readableState.buffer;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableFlowing: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.flowing;\x0d\n    }\x2C\x0d\n    set: function(state) {\x0d\n      if (this._readableState) {\x0d\n        this._readableState.flowing = state;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableLength: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState.length;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableObjectMode: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.objectMode : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableEncoding: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.encoding : null;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      if (this._readableState === undefined) {\x0d\n        return false;\x0d\n      }\x0d\n      return this._readableState.destroyed;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // We ignore the value if the stream\x0d\n      // has not been initialized yet.\x0d\n      if (!this._readableState) {\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      // Backward compatibility\x2C the user is explicitly\x0d\n      // managing destroyed.\x0d\n      this._readableState.destroyed = value;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableEnded: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.endEmitted : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n});\x0d\n\x0d\nObjectDefineProperties(ReadableState.prototype\x2C {\x0d\n  // Legacy getter for `pipesCount`.\x0d\n  pipesCount: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this.pipes.length;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy property for `paused`.\x0d\n  paused: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this[kPaused] !== false;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[kPaused] = !!value;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\n// Exposed for testing purposes only.\x0d\nReadable._fromList = fromList;\x0d\n\x0d\n// Pluck off n bytes from an array of buffers.\x0d\n// Length is the combined lengths of all the buffers in the list.\x0d\n// This function is designed to be inlinable\x2C so please take care when making\x0d\n// changes to the function body.\x0d\nfunction fromList(n\x2C state) {\x0d\n  // nothing buffered.\x0d\n  if (state.length === 0)\x0d\n    return null;\x0d\n\x0d\n  let ret;\x0d\n  if (state.objectMode)\x0d\n    ret = state.buffer.shift();\x0d\n  else if (!n || n >= state.length) {\x0d\n    // Read it all\x2C truncate the list.\x0d\n    if (state.decoder)\x0d\n      ret = state.buffer.join('');\x0d\n    else if (state.buffer.length === 1)\x0d\n      ret = state.buffer.first();\x0d\n    else\x0d\n      ret = state.buffer.concat(state.length);\x0d\n    state.buffer.clear();\x0d\n  } else {\x0d\n    // read part of list.\x0d\n    ret = state.buffer.consume(n\x2C state.decoder);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nfunction endReadable(stream) {\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  debug('endReadable'\x2C state.endEmitted);\x0d\n  if (!state.endEmitted) {\x0d\n    state.ended = true;\x0d\n    process.nextTick(endReadableNT\x2C state\x2C stream);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction endReadableNT(state\x2C stream) {\x0d\n  debug('endReadableNT'\x2C state.endEmitted\x2C state.length);\x0d\n\x0d\n  // Check that we didn't get one last unshift.\x0d\n  if (!state.errorEmitted && !state.closeEmitted &&\x0d\n      !state.endEmitted && state.length === 0) {\x0d\n    state.endEmitted = true;\x0d\n    stream.emit('end');\x0d\n\x0d\n    if (stream.writable && stream.allowHalfOpen === false) {\x0d\n      process.nextTick(endWritableNT\x2C stream);\x0d\n    } else if (state.autoDestroy) {\x0d\n      // In case of duplex streams we need a way to detect\x0d\n      // if the writable side is ready for autoDestroy as well.\x0d\n      const wState = stream._writableState;\x0d\n      const autoDestroy = !wState || (\x0d\n        wState.autoDestroy &&\x0d\n        // We don't expect the writable to ever 'finish'\x0d\n        // if writable is explicitly set to false.\x0d\n        (wState.finished || wState.writable === false)\x0d\n      );\x0d\n\x0d\n      if (autoDestroy) {\x0d\n        stream.destroy();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction endWritableNT(stream) {\x0d\n  const writable = stream.writable && !stream.writableEnded &&\x0d\n    !stream.destroyed;\x0d\n  if (writable) {\x0d\n    stream.end();\x0d\n  }\x0d\n}\x0d\n\x0d\nReadable.from = function(iterable\x2C opts) {\x0d\n  return from(Readable\x2C iterable\x2C opts);\x0d\n};\x0d\n\x0d\nReadable.wrap = function(src\x2C options) {\x0d\n  return new Readable({\x0d\n    objectMode: src.readableObjectMode ?? src.objectMode ?? true\x2C\x0d\n    ...options\x2C\x0d\n    destroy(err\x2C callback) {\x0d\n      destroyImpl.destroyer(src\x2C err);\x0d\n      callback(err);\x0d\n    }\x0d\n  }).wrap(src);\x0d\n};\x0d\n
code-source-info,0x37947c8f586,58,6426,7336,C0O6426C9O6441C16O6452C21O6479C28O6486C33O6508C34O6667C41O6683C44O6690C48O6672C52O6703C71O6725C76O6723C80O6774C84O6813C92O6841C95O6862C99O6852C103O6894C111O6925C114O6949C118O6939C122O6984C130O7017C133O7043C137O7033C141O7071C149O7082C151O7099C158O7132C166O7099C171O7157C178O7164C186O7164C192O7190C199O7202C212O7202C219O7335,,
code-creation,LazyCompile,10,236034,0x37947c923be,18,Stream node:internal/streams/legacy:10:16,0xa61434eb80,~
script-source,59,node:internal/streams/legacy,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EE = require('events');\x0d\n\x0d\nfunction Stream(opts) {\x0d\n  EE.call(this\x2C opts);\x0d\n}\x0d\nObjectSetPrototypeOf(Stream.prototype\x2C EE.prototype);\x0d\nObjectSetPrototypeOf(Stream\x2C EE);\x0d\n\x0d\nStream.prototype.pipe = function(dest\x2C options) {\x0d\n  const source = this;\x0d\n\x0d\n  function ondata(chunk) {\x0d\n    if (dest.writable && dest.write(chunk) === false && source.pause) {\x0d\n      source.pause();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  source.on('data'\x2C ondata);\x0d\n\x0d\n  function ondrain() {\x0d\n    if (source.readable && source.resume) {\x0d\n      source.resume();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  dest.on('drain'\x2C ondrain);\x0d\n\x0d\n  // If the 'end' option is not supplied\x2C dest.end() will be called when\x0d\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\x0d\n  if (!dest._isStdio && (!options || options.end !== false)) {\x0d\n    source.on('end'\x2C onend);\x0d\n    source.on('close'\x2C onclose);\x0d\n  }\x0d\n\x0d\n  let didOnEnd = false;\x0d\n  function onend() {\x0d\n    if (didOnEnd) return;\x0d\n    didOnEnd = true;\x0d\n\x0d\n    dest.end();\x0d\n  }\x0d\n\x0d\n\x0d\n  function onclose() {\x0d\n    if (didOnEnd) return;\x0d\n    didOnEnd = true;\x0d\n\x0d\n    if (typeof dest.destroy === 'function') dest.destroy();\x0d\n  }\x0d\n\x0d\n  // Don't leave dangling pipes when there are errors.\x0d\n  function onerror(er) {\x0d\n    cleanup();\x0d\n    if (EE.listenerCount(this\x2C 'error') === 0) {\x0d\n      this.emit('error'\x2C er);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  prependListener(source\x2C 'error'\x2C onerror);\x0d\n  prependListener(dest\x2C 'error'\x2C onerror);\x0d\n\x0d\n  // Remove all the event listeners that were added.\x0d\n  function cleanup() {\x0d\n    source.removeListener('data'\x2C ondata);\x0d\n    dest.removeListener('drain'\x2C ondrain);\x0d\n\x0d\n    source.removeListener('end'\x2C onend);\x0d\n    source.removeListener('close'\x2C onclose);\x0d\n\x0d\n    source.removeListener('error'\x2C onerror);\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n\x0d\n    source.removeListener('end'\x2C cleanup);\x0d\n    source.removeListener('close'\x2C cleanup);\x0d\n\x0d\n    dest.removeListener('close'\x2C cleanup);\x0d\n  }\x0d\n\x0d\n  source.on('end'\x2C cleanup);\x0d\n  source.on('close'\x2C cleanup);\x0d\n\x0d\n  dest.on('close'\x2C cleanup);\x0d\n  dest.emit('pipe'\x2C source);\x0d\n\x0d\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\x0d\n  return dest;\x0d\n};\x0d\n\x0d\nfunction prependListener(emitter\x2C event\x2C fn) {\x0d\n  // Sadly this is not cacheable as some libraries bundle their own\x0d\n  // event emitter implementation with them.\x0d\n  if (typeof emitter.prependListener === 'function')\x0d\n    return emitter.prependListener(event\x2C fn);\x0d\n\x0d\n  // This is a hack to make sure that our error handler is attached before any\x0d\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\x0d\n  // to continue to work with older versions of Node.js that do not include\x0d\n  // the prependListener() method. The goal is to eventually remove this hack.\x0d\n  if (!emitter._events || !emitter._events[event])\x0d\n    emitter.on(event\x2C fn);\x0d\n  else if (ArrayIsArray(emitter._events[event]))\x0d\n    emitter._events[event].unshift(fn);\x0d\n  else\x0d\n    emitter._events[event] = [fn\x2C emitter._events[event]];\x0d\n}\x0d\n\x0d\nmodule.exports = { Stream\x2C prependListener };\x0d\n
code-source-info,0x37947c923be,59,136,171,C0O148C5O151C10O151C17O170,,
code-creation,LazyCompile,10,236287,0x37947c92c66,354,ReadableState node:internal/streams/readable:78:23,0xa61434c2d0,~
code-source-info,0x37947c92c
code-creation,LazyCompile,10,236412,0x37947c93076,98,getHighWaterMark node:internal/streams/state:19:26,0xa6143516a0,~
script-source,62,node:internal/streams/state,'use strict';\x0d\n\x0d\nconst {\x0d\n  MathFloor\x2C\x0d\n  NumberIsInteger\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ERR_INVALID_ARG_VALUE } = require('internal/errors').codes;\x0d\n\x0d\nfunction highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey) {\x0d\n  return options.highWaterMark != null ? options.highWaterMark :\x0d\n    isDuplex ? options[duplexKey] : null;\x0d\n}\x0d\n\x0d\nfunction getDefaultHighWaterMark(objectMode) {\x0d\n  return objectMode ? 16 : 16 * 1024;\x0d\n}\x0d\n\x0d\nfunction getHighWaterMark(state\x2C options\x2C duplexKey\x2C isDuplex) {\x0d\n  const hwm = highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey);\x0d\n  if (hwm != null) {\x0d\n    if (!NumberIsInteger(hwm) || hwm < 0) {\x0d\n      const name = isDuplex ? `options.${duplexKey}` : 'options.highWaterMark';\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C hwm);\x0d\n    }\x0d\n    return MathFloor(hwm);\x0d\n  }\x0d\n\x0d\n  // Default value\x0d\n  return getDefaultHighWaterMark(state.objectMode);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x0d\n};\x0d\n
code-source-info,0x37947c93076,62,442,862,C0O497C12O497C18O549C21O573C26O578C33O606C38O633C47O655C56O701C69O707C74O701C75O757C80O764C84O779C85O810C88O847C93O817C97O859,,
code-creation,LazyCompile,10,236498,0x37947c9330e,26,highWaterMarkFrom node:internal/streams/state:10:27,0xa614351540,~
code-source-info,0x37947c9330e,62,177,321,C0O228C7O260C15O281C19O299C25O318,,
code-creation,LazyCompile,10,236527,0x37947c933e6,13,getDefaultHighWaterMark node:internal/streams/state:15:33,0xa614351650,~
code-source-info,0x37947c933e6,62,357,413,C0O375C12O410,,
code-creation,LazyCompile,10,236563,0x37947c934c6,17,BufferList node:internal/streams/buffer_list:14:14,0xa6143509f8,~
script-source,61,node:internal/streams/buffer_list,'use strict';\x0d\n\x0d\nconst {\x0d\n  StringPrototypeSlice\x2C\x0d\n  SymbolIterator\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nmodule.exports = class BufferList {\x0d\n  constructor() {\x0d\n    this.head = null;\x0d\n    this.tail = null;\x0d\n    this.length = 0;\x0d\n  }\x0d\n\x0d\n  push(v) {\x0d\n    const entry = { data: v\x2C next: null };\x0d\n    if (this.length > 0)\x0d\n      this.tail.next = entry;\x0d\n    else\x0d\n      this.head = entry;\x0d\n    this.tail = entry;\x0d\n    ++this.length;\x0d\n  }\x0d\n\x0d\n  unshift(v) {\x0d\n    const entry = { data: v\x2C next: this.head };\x0d\n    if (this.length === 0)\x0d\n      this.tail = entry;\x0d\n    this.head = entry;\x0d\n    ++this.length;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    if (this.length === 0)\x0d\n      return;\x0d\n    const ret = this.head.data;\x0d\n    if (this.length === 1)\x0d\n      this.head = this.tail = null;\x0d\n    else\x0d\n      this.head = this.head.next;\x0d\n    --this.length;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  clear() {\x0d\n    this.head = this.tail = null;\x0d\n    this.length = 0;\x0d\n  }\x0d\n\x0d\n  join(s) {\x0d\n    if (this.length === 0)\x0d\n      return '';\x0d\n    let p = this.head;\x0d\n    let ret = '' + p.data;\x0d\n    while ((p = p.next) !== null)\x0d\n      ret += s + p.data;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  concat(n) {\x0d\n    if (this.length === 0)\x0d\n      return Buffer.alloc(0);\x0d\n    const ret = Buffer.allocUnsafe(n >>> 0);\x0d\n    let p = this.head;\x0d\n    let i = 0;\x0d\n    while (p) {\x0d\n      TypedArrayPrototypeSet(ret\x2C p.data\x2C i);\x0d\n      i += p.data.length;\x0d\n      p = p.next;\x0d\n    }\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of bytes or characters from the buffered data.\x0d\n  consume(n\x2C hasStrings) {\x0d\n    const data = this.head.data;\x0d\n    if (n < data.length) {\x0d\n      // `slice` is the same for buffers and strings.\x0d\n      const slice = data.slice(0\x2C n);\x0d\n      this.head.data = data.slice(n);\x0d\n      return slice;\x0d\n    }\x0d\n    if (n === data.length) {\x0d\n      // First chunk is a perfect match.\x0d\n      return this.shift();\x0d\n    }\x0d\n    // Result spans more than one buffer.\x0d\n    return hasStrings ? this._getString(n) : this._getBuffer(n);\x0d\n  }\x0d\n\x0d\n  first() {\x0d\n    return this.head.data;\x0d\n  }\x0d\n\x0d\n  *[SymbolIterator]() {\x0d\n    for (let p = this.head; p; p = p.next) {\x0d\n      yield p.data;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of characters from the buffered data.\x0d\n  _getString(n) {\x0d\n    let ret = '';\x0d\n    let p = this.head;\x0d\n    let c = 0;\x0d\n    do {\x0d\n      const str = p.data;\x0d\n      if (n > str.length) {\x0d\n        ret += str;\x0d\n        n -= str.length;\x0d\n      } else {\x0d\n        if (n === str.length) {\x0d\n          ret += str;\x0d\n          ++c;\x0d\n          if (p.next)\x0d\n            this.head = p.next;\x0d\n          else\x0d\n            this.head = this.tail = null;\x0d\n        } else {\x0d\n          ret += StringPrototypeSlice(str\x2C 0\x2C n);\x0d\n          this.head = p;\x0d\n          p.data = StringPrototypeSlice(str\x2C n);\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n      ++c;\x0d\n    } while ((p = p.next) !== null);\x0d\n    this.length -= c;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of bytes from the buffered data.\x0d\n  _getBuffer(n) {\x0d\n    const ret = Buffer.allocUnsafe(n);\x0d\n    const retLen = n;\x0d\n    let p = this.head;\x0d\n    let c = 0;\x0d\n    do {\x0d\n      const buf = p.data;\x0d\n      if (n > buf.length) {\x0d\n        TypedArrayPrototypeSet(ret\x2C buf\x2C retLen - n);\x0d\n        n -= buf.length;\x0d\n      } else {\x0d\n        if (n === buf.length) {\x0d\n          TypedArrayPrototypeSet(ret\x2C buf\x2C retLen - n);\x0d\n          ++c;\x0d\n          if (p.next)\x0d\n            this.head = p.next;\x0d\n          else\x0d\n            this.head = this.tail = null;\x0d\n        } else {\x0d\n          TypedArrayPrototypeSet(ret\x2C\x0d\n                                 new Uint8Array(buf.buffer\x2C buf.byteOffset\x2C n)\x2C\x0d\n                                 retLen - n);\x0d\n          this.head = p;\x0d\n          p.data = buf.slice(n);\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n      ++c;\x0d\n    } while ((p = p.next) !== null);\x0d\n    this.length -= c;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Make sure the linked list only shows the minimal necessary information.\x0d\n  [inspect.custom](_\x2C options) {\x0d\n    return inspect(this\x2C {\x0d\n      ...options\x2C\x0d\n      // Only inspect one level.\x0d\n      depth: 0\x2C\x0d\n      // It should not recurse.\x0d\n      customInspect: false\x0d\n    });\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x37947c934c6,61,278,355,C0O288C1O298C5O311C6O321C10O334C11O346C16O354,,
code-creation,LazyCompile,10,236830,0x37947c93bf6,98,construct node:internal/streams/destroy:225:19,0x3a93d9fd1b0,~
script-source,56,node:internal/streams/destroy,'use strict';\x0d\n\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_MULTIPLE_CALLBACK\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kDestroy = Symbol('kDestroy');\x0d\nconst kConstruct = Symbol('kConstruct');\x0d\n\x0d\nfunction checkError(err\x2C w\x2C r) {\x0d\n  if (err) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    err.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (w && !w.errored) {\x0d\n      w.errored = err;\x0d\n    }\x0d\n    if (r && !r.errored) {\x0d\n      r.errored = err;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Backwards compat. cb() is undocumented and unused in core but\x0d\n// unfortunately might be used by modules.\x0d\nfunction destroy(err\x2C cb) {\x0d\n  const r = this._readableState;\x0d\n  const w = this._writableState;\x0d\n  // With duplex streams we use the writable side for state.\x0d\n  const s = w || r;\x0d\n\x0d\n  if ((w && w.destroyed) || (r && r.destroyed)) {\x0d\n    if (typeof cb === 'function') {\x0d\n      cb();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n\x0d\n  // We set destroyed to true before firing error callbacks in order\x0d\n  // to make it re-entrance safe in case destroy() is called within callbacks\x0d\n  checkError(err\x2C w\x2C r);\x0d\n\x0d\n  if (w) {\x0d\n    w.destroyed = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.destroyed = true;\x0d\n  }\x0d\n\x0d\n  // If still constructing then defer calling _destroy.\x0d\n  if (!s.constructed) {\x0d\n    this.once(kDestroy\x2C function(er) {\x0d\n      _destroy(this\x2C aggregateTwoErrors(er\x2C err)\x2C cb);\x0d\n    });\x0d\n  } else {\x0d\n    _destroy(this\x2C err\x2C cb);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n}\x0d\n\x0d\nfunction _destroy(self\x2C err\x2C cb) {\x0d\n  let called = false;\x0d\n\x0d\n  function onDestroy(err) {\x0d\n    if (called) {\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    const r = self._readableState;\x0d\n    const w = self._writableState;\x0d\n\x0d\n    checkError(err\x2C w\x2C r);\x0d\n\x0d\n    if (w) {\x0d\n      w.closed = true;\x0d\n    }\x0d\n    if (r) {\x0d\n      r.closed = true;\x0d\n    }\x0d\n\x0d\n    if (typeof cb === 'function') {\x0d\n      cb(err);\x0d\n    }\x0d\n\x0d\n    if (err) {\x0d\n      process.nextTick(emitErrorCloseNT\x2C self\x2C err);\x0d\n    } else {\x0d\n      process.nextTick(emitCloseNT\x2C self);\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const result = self._destroy(err || null\x2C onDestroy);\x0d\n    if (result != null) {\x0d\n      const then = result.then;\x0d\n      if (typeof then === 'function') {\x0d\n        then.call(\x0d\n          result\x2C\x0d\n          function() {\x0d\n            process.nextTick(onDestroy\x2C null);\x0d\n          }\x2C\x0d\n          function(err) {\x0d\n            process.nextTick(onDestroy\x2C err);\x0d\n          });\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    onDestroy(err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitErrorCloseNT(self\x2C err) {\x0d\n  emitErrorNT(self\x2C err);\x0d\n  emitCloseNT(self);\x0d\n}\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  const r = self._readableState;\x0d\n  const w = self._writableState;\x0d\n\x0d\n  if (w) {\x0d\n    w.closeEmitted = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.closeEmitted = true;\x0d\n  }\x0d\n\x0d\n  if ((w && w.emitClose) || (r && r.emitClose)) {\x0d\n    self.emit('close');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  const r = self._readableState;\x0d\n  const w = self._writableState;\x0d\n\x0d\n  if ((w && w.errorEmitted) || (r && r.errorEmitted)) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (w) {\x0d\n    w.errorEmitted = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.errorEmitted = true;\x0d\n  }\x0d\n\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\nfunction undestroy() {\x0d\n  const r = this._readableState;\x0d\n  const w = this._writableState;\x0d\n\x0d\n  if (r) {\x0d\n    r.constructed = true;\x0d\n    r.closed = false;\x0d\n    r.closeEmitted = false;\x0d\n    r.destroyed = false;\x0d\n    r.errored = null;\x0d\n    r.errorEmitted = false;\x0d\n    r.reading = false;\x0d\n    r.ended = false;\x0d\n    r.endEmitted = false;\x0d\n  }\x0d\n\x0d\n  if (w) {\x0d\n    w.constructed = true;\x0d\n    w.destroyed = false;\x0d\n    w.closed = false;\x0d\n    w.closeEmitted = false;\x0d\n    w.errored = null;\x0d\n    w.errorEmitted = false;\x0d\n    w.ended = false;\x0d\n    w.ending = false;\x0d\n    w.finalCalled = false;\x0d\n    w.prefinished = false;\x0d\n    w.finished = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction errorOrDestroy(stream\x2C err\x2C sync) {\x0d\n  // We have tests that rely on errors being emitted\x0d\n  // in the same tick\x2C so changing this is semver major.\x0d\n  // For now when you opt-in to autoDestroy we allow\x0d\n  // the error to be emitted nextTick. In a future\x0d\n  // semver major update we should change the default to this.\x0d\n\x0d\n  const r = stream._readableState;\x0d\n  const w = stream._writableState;\x0d\n\x0d\n  if ((w && w.destroyed) || (r && r.destroyed)) {\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if ((r && r.autoDestroy) || (w && w.autoDestroy))\x0d\n    stream.destroy(err);\x0d\n  else if (err) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    err.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (w && !w.errored) {\x0d\n      w.errored = err;\x0d\n    }\x0d\n    if (r && !r.errored) {\x0d\n      r.errored = err;\x0d\n    }\x0d\n    if (sync) {\x0d\n      process.nextTick(emitErrorNT\x2C stream\x2C err);\x0d\n    } else {\x0d\n      emitErrorNT(stream\x2C err);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction construct(stream\x2C cb) {\x0d\n  if (typeof stream._construct !== 'function') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const r = stream._readableState;\x0d\n  const w = stream._writableState;\x0d\n\x0d\n  if (r) {\x0d\n    r.constructed = false;\x0d\n  }\x0d\n  if (w) {\x0d\n    w.constructed = false;\x0d\n  }\x0d\n\x0d\n  stream.once(kConstruct\x2C cb);\x0d\n\x0d\n  if (stream.listenerCount(kConstruct) > 1) {\x0d\n    // Duplex\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.nextTick(constructNT\x2C stream);\x0d\n}\x0d\n\x0d\nfunction constructNT(stream) {\x0d\n  let called = false;\x0d\n\x0d\n  function onConstruct(err) {\x0d\n    if (called) {\x0d\n      errorOrDestroy(stream\x2C err ?? new ERR_MULTIPLE_CALLBACK());\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    const r = stream._readableState;\x0d\n    const w = stream._writableState;\x0d\n    const s = w || r;\x0d\n\x0d\n    if (r) {\x0d\n      r.constructed = true;\x0d\n    }\x0d\n    if (w) {\x0d\n      w.constructed = true;\x0d\n    }\x0d\n\x0d\n    if (s.destroyed) {\x0d\n      stream.emit(kDestroy\x2C err);\x0d\n    } else if (err) {\x0d\n      errorOrDestroy(stream\x2C err\x2C true);\x0d\n    } else {\x0d\n      process.nextTick(emitConstructNT\x2C stream);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const result = stream._construct(onConstruct);\x0d\n    if (result != null) {\x0d\n      const then = result.then;\x0d\n      if (typeof then === 'function') {\x0d\n        then.call(\x0d\n          result\x2C\x0d\n          function() {\x0d\n            if (!called) {\x0d\n              process.nextTick(onConstruct\x2C null);\x0d\n            }\x0d\n          }\x2C\x0d\n          function(err) {\x0d\n            if (!called) {\x0d\n              process.nextTick(onConstruct\x2C err);\x0d\n            }\x0d\n          });\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    onConstruct(err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitConstructNT(stream) {\x0d\n  stream.emit(kConstruct);\x0d\n}\x0d\n\x0d\nfunction isRequest(stream) {\x0d\n  return stream && stream.setHeader && typeof stream.abort === 'function';\x0d\n}\x0d\n\x0d\n// Normalize destroy for legacy.\x0d\nfunction destroyer(stream\x2C err) {\x0d\n  if (!stream) return;\x0d\n  if (isRequest(stream)) return stream.abort();\x0d\n  if (isRequest(stream.req)) return stream.req.abort();\x0d\n  if (typeof stream.destroy === 'function') return stream.destroy(err);\x0d\n  if (typeof stream.close === 'function') return stream.close();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  construct\x2C\x0d\n  destroyer\x2C\x0d\n  destroy\x2C\x0d\n  undestroy\x2C\x0d\n  errorOrDestroy\x0d\n};\x0d\n
code-source-info,0x37947c93bf6,56,4850,5261,C0O4886C8O4920C9O4927C10O4955C15O4991C20O5012C24O5026C25O5040C29O5057C33O5071C34O5085C38O5111C45O5116C48O5111C54O5149C61O5163C64O5149C72O5175C77O5202C78O5209C79O5220C82O5228C90O5228C97O5260,,
code-creation,LazyCompile,10,237231,0x37947c948ce,266,Writable node:internal/streams/writable:220:18,0xa61435b268,~
script-source,65,node:internal/streams/writable,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// A bit simpler than readable streams.\x0d\n// Implement an async ._write(chunk\x2C encoding\x2C cb)\x2C and it'll handle all\x0d\n// the drain event emission and buffering.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeSymbolHasInstance\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolHasInstance\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Writable;\x0d\nWritable.WritableState = WritableState;\x0d\n\x0d\nconst EE = require('events');\x0d\nconst Stream = require('internal/streams/legacy').Stream;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\n\x0d\nconst {\x0d\n  addAbortSignalNoValidate\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\n\x0d\nconst {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x0d\n} = require('internal/streams/state');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  ERR_MULTIPLE_CALLBACK\x2C\x0d\n  ERR_STREAM_CANNOT_PIPE\x2C\x0d\n  ERR_STREAM_DESTROYED\x2C\x0d\n  ERR_STREAM_ALREADY_FINISHED\x2C\x0d\n  ERR_STREAM_NULL_VALUES\x2C\x0d\n  ERR_STREAM_WRITE_AFTER_END\x2C\x0d\n  ERR_UNKNOWN_ENCODING\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { errorOrDestroy } = destroyImpl;\x0d\n\x0d\nObjectSetPrototypeOf(Writable.prototype\x2C Stream.prototype);\x0d\nObjectSetPrototypeOf(Writable\x2C Stream);\x0d\n\x0d\nfunction nop() {}\x0d\n\x0d\nconst kOnFinished = Symbol('kOnFinished');\x0d\n\x0d\nfunction WritableState(options\x2C stream\x2C isDuplex) {\x0d\n  // Duplex streams are both readable and writable\x2C but share\x0d\n  // the same options object.\x0d\n  // However\x2C some cases require setting options to different\x0d\n  // values for the readable and the writable sides of the duplex stream\x2C\x0d\n  // e.g. options.readableObjectMode vs. options.writableObjectMode\x2C etc.\x0d\n  if (typeof isDuplex !== 'boolean')\x0d\n    isDuplex = stream instanceof Stream.Duplex;\x0d\n\x0d\n  // Object stream flag to indicate whether or not this stream\x0d\n  // contains buffers or objects.\x0d\n  this.objectMode = !!(options && options.objectMode);\x0d\n\x0d\n  if (isDuplex)\x0d\n    this.objectMode = this.objectMode ||\x0d\n      !!(options && options.writableObjectMode);\x0d\n\x0d\n  // The point at which write() starts returning false\x0d\n  // Note: 0 is a valid value\x2C means that we always return false if\x0d\n  // the entire buffer is not flushed immediately on write().\x0d\n  this.highWaterMark = options ?\x0d\n    getHighWaterMark(this\x2C options\x2C 'writableHighWaterMark'\x2C isDuplex) :\x0d\n    getDefaultHighWaterMark(false);\x0d\n\x0d\n  // if _final has been called.\x0d\n  this.finalCalled = false;\x0d\n\x0d\n  // drain event flag.\x0d\n  this.needDrain = false;\x0d\n  // At the start of calling end()\x0d\n  this.ending = false;\x0d\n  // When end() has been called\x2C and returned.\x0d\n  this.ended = false;\x0d\n  // When 'finish' is emitted.\x0d\n  this.finished = false;\x0d\n\x0d\n  // Has it been destroyed\x0d\n  this.destroyed = false;\x0d\n\x0d\n  // Should we decode strings into buffers before passing to _write?\x0d\n  // this is here so that some node-core streams can optimize string\x0d\n  // handling at a lower level.\x0d\n  const noDecode = !!(options && options.decodeStrings === false);\x0d\n  this.decodeStrings = !noDecode;\x0d\n\x0d\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\x0d\n  // encoding is 'binary' so we have to make this configurable.\x0d\n  // Everything else in the universe uses 'utf8'\x2C though.\x0d\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8';\x0d\n\x0d\n  // Not an actual buffer we keep track of\x2C but a measurement\x0d\n  // of how much we're waiting to get pushed to some underlying\x0d\n  // socket or file.\x0d\n  this.length = 0;\x0d\n\x0d\n  // A flag to see when we're in the middle of a write.\x0d\n  this.writing = false;\x0d\n\x0d\n  // When true all writes will be buffered until .uncork() call.\x0d\n  this.corked = 0;\x0d\n\x0d\n  // A flag to be able to tell if the onwrite cb is called immediately\x2C\x0d\n  // or on a later tick.  We set this to true at first\x2C because any\x0d\n  // actions that shouldn't happen until "later" should generally also\x0d\n  // not happen before the first write call.\x0d\n  this.sync = true;\x0d\n\x0d\n  // A flag to know if we're processing previously buffered items\x2C which\x0d\n  // may call the _write() callback in the same tick\x2C so that we don't\x0d\n  // end up in an overlapped onwrite situation.\x0d\n  this.bufferProcessing = false;\x0d\n\x0d\n  // The callback that's passed to _write(chunk\x2C cb).\x0d\n  this.onwrite = onwrite.bind(undefined\x2C stream);\x0d\n\x0d\n  // The callback that the user supplies to write(chunk\x2C encoding\x2C cb).\x0d\n  this.writecb = null;\x0d\n\x0d\n  // The amount that is being written when _write is called.\x0d\n  this.writelen = 0;\x0d\n\x0d\n  // Storage for data passed to the afterWrite() callback in case of\x0d\n  // synchronous _write() completion.\x0d\n  this.afterWriteTickInfo = null;\x0d\n\x0d\n  resetBuffer(this);\x0d\n\x0d\n  // Number of pending user-supplied write callbacks\x0d\n  // this must be 0 before 'finish' can be emitted.\x0d\n  this.pendingcb = 0;\x0d\n\x0d\n  // Stream is still being constructed and cannot be\x0d\n  // destroyed until construction finished or failed.\x0d\n  // Async construction is opt in\x2C therefore we start as\x0d\n  // constructed.\x0d\n  this.constructed = true;\x0d\n\x0d\n  // Emit prefinish if the only thing we're waiting for is _write cbs\x0d\n  // This is relevant for synchronous Transform streams.\x0d\n  this.prefinished = false;\x0d\n\x0d\n  // True if the error was already emitted and should not be thrown again.\x0d\n  this.errorEmitted = false;\x0d\n\x0d\n  // Should close be emitted on destroy. Defaults to true.\x0d\n  this.emitClose = !options || options.emitClose !== false;\x0d\n\x0d\n  // Should .destroy() be called after 'finish' (and potentially 'end').\x0d\n  this.autoDestroy = !options || options.autoDestroy !== false;\x0d\n\x0d\n  // Indicates whether the stream has errored. When true all write() calls\x0d\n  // should return false. This is needed since when autoDestroy\x0d\n  // is disabled we need a way to tell whether the stream has failed.\x0d\n  this.errored = null;\x0d\n\x0d\n  // Indicates whether the stream has finished destroying.\x0d\n  this.closed = false;\x0d\n\x0d\n  // True if close has been emitted or would have been emitted\x0d\n  // depending on emitClose.\x0d\n  this.closeEmitted = false;\x0d\n\x0d\n  this[kOnFinished] = [];\x0d\n}\x0d\n\x0d\nfunction resetBuffer(state) {\x0d\n  state.buffered = [];\x0d\n  state.bufferedIndex = 0;\x0d\n  state.allBuffers = true;\x0d\n  state.allNoop = true;\x0d\n}\x0d\n\x0d\nWritableState.prototype.getBuffer = function getBuffer() {\x0d\n  return ArrayPrototypeSlice(this.buffered\x2C this.bufferedIndex);\x0d\n};\x0d\n\x0d\nObjectDefineProperty(WritableState.prototype\x2C 'bufferedRequestCount'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return this.buffered.length - this.bufferedIndex;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction Writable(options) {\x0d\n  // Writable ctor is applied to Duplexes\x2C too.\x0d\n  // `realHasInstance` is necessary because using plain `instanceof`\x0d\n  // would return false\x2C as no `_writableState` property is attached.\x0d\n\x0d\n  // Trying to use the custom `instanceof` for Writable here will also break the\x0d\n  // Node.js LazyTransform implementation\x2C which has a non-trivial getter for\x0d\n  // `_writableState` that would lead to infinite recursion.\x0d\n\x0d\n  // Checking for a Stream.Duplex instance is faster here instead of inside\x0d\n  // the WritableState constructor\x2C at least with V8 6.5.\x0d\n  const isDuplex = (this instanceof Stream.Duplex);\x0d\n\x0d\n  if (!isDuplex && !FunctionPrototypeSymbolHasInstance(Writable\x2C this))\x0d\n    return new Writable(options);\x0d\n\x0d\n  this._writableState = new WritableState(options\x2C this\x2C isDuplex);\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.write === 'function')\x0d\n      this._write = options.write;\x0d\n\x0d\n    if (typeof options.writev === 'function')\x0d\n      this._writev = options.writev;\x0d\n\x0d\n    if (typeof options.destroy === 'function')\x0d\n      this._destroy = options.destroy;\x0d\n\x0d\n    if (typeof options.final === 'function')\x0d\n      this._final = options.final;\x0d\n\x0d\n    if (typeof options.construct === 'function')\x0d\n      this._construct = options.construct;\x0d\n    if (options.signal)\x0d\n      addAbortSignalNoValidate(options.signal\x2C this);\x0d\n  }\x0d\n\x0d\n  Stream.call(this\x2C options);\x0d\n\x0d\n  destroyImpl.construct(this\x2C () => {\x0d\n    const state = this._writableState;\x0d\n\x0d\n    if (!state.writing) {\x0d\n      clearBuffer(this\x2C state);\x0d\n    }\x0d\n\x0d\n    finishMaybe(this\x2C state);\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Writable\x2C SymbolHasInstance\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: function(object) {\x0d\n    if (FunctionPrototypeSymbolHasInstance(this\x2C object)) return true;\x0d\n    if (this !== Writable) return false;\x0d\n\x0d\n    return object && object._writableState instanceof WritableState;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Otherwise people can pipe Writable streams\x2C which is just wrong.\x0d\nWritable.prototype.pipe = function() {\x0d\n  errorOrDestroy(this\x2C new ERR_STREAM_CANNOT_PIPE());\x0d\n};\x0d\n\x0d\nfunction _write(stream\x2C chunk\x2C encoding\x2C cb) {\x0d\n  const state = stream._writableState;\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = state.defaultEncoding;\x0d\n  } else {\x0d\n    if (!encoding)\x0d\n      encoding = state.defaultEncoding;\x0d\n    else if (encoding !== 'buffer' && !Buffer.isEncoding(encoding))\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (typeof cb !== 'function')\x0d\n      cb = nop;\x0d\n  }\x0d\n\x0d\n  if (chunk === null) {\x0d\n    throw new ERR_STREAM_NULL_VALUES();\x0d\n  } else if (!state.objectMode) {\x0d\n    if (typeof chunk === 'string') {\x0d\n      if (state.decodeStrings !== false) {\x0d\n        chunk = Buffer.from(chunk\x2C encoding);\x0d\n        encoding = 'buffer';\x0d\n      }\x0d\n    } else if (chunk instanceof Buffer) {\x0d\n      encoding = 'buffer';\x0d\n    } else if (Stream._isUint8Array(chunk)) {\x0d\n      chunk = Stream._uint8ArrayToBuffer(chunk);\x0d\n      encoding = 'buffer';\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (state.ending) {\x0d\n    err = new ERR_STREAM_WRITE_AFTER_END();\x0d\n  } else if (state.destroyed) {\x0d\n    err = new ERR_STREAM_DESTROYED('write');\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    process.nextTick(cb\x2C err);\x0d\n    errorOrDestroy(stream\x2C err\x2C true);\x0d\n    return err;\x0d\n  }\x0d\n  state.pendingcb++;\x0d\n  return writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C cb);\x0d\n}\x0d\n\x0d\nWritable.prototype.write = function(chunk\x2C encoding\x2C cb) {\x0d\n  return _write(this\x2C chunk\x2C encoding\x2C cb) === true;\x0d\n};\x0d\n\x0d\nWritable.prototype.cork = function() {\x0d\n  this._writableState.corked++;\x0d\n};\x0d\n\x0d\nWritable.prototype.uncork = function() {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  if (state.corked) {\x0d\n    state.corked--;\x0d\n\x0d\n    if (!state.writing)\x0d\n      clearBuffer(this\x2C state);\x0d\n  }\x0d\n};\x0d\n\x0d\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\x0d\n  // node::ParseEncoding() requires lower case.\x0d\n  if (typeof encoding === 'string')\x0d\n    encoding = StringPrototypeToLowerCase(encoding);\x0d\n  if (!Buffer.isEncoding(encoding))\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  this._writableState.defaultEncoding = encoding;\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// If we're already writing something\x2C then just put this\x0d\n// in the queue\x2C and wait our turn.  Otherwise\x2C call _write\x0d\n// If we return false\x2C then we need a drain event\x2C so set that flag.\x0d\nfunction writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C callback) {\x0d\n  const len = state.objectMode ? 1 : chunk.length;\x0d\n\x0d\n  state.length += len;\x0d\n\x0d\n  // stream._write resets state.length\x0d\n  const ret = state.length < state.highWaterMark;\x0d\n  // We must ensure that previous needDrain will not be reset to false.\x0d\n  if (!ret)\x0d\n    state.needDrain = true;\x0d\n\x0d\n  if (state.writing || state.corked || state.errored || !state.constructed) {\x0d\n    state.buffered.push({ chunk\x2C encoding\x2C callback });\x0d\n    if (state.allBuffers && encoding !== 'buffer') {\x0d\n      state.allBuffers = false;\x0d\n    }\x0d\n    if (state.allNoop && callback !== nop) {\x0d\n      state.allNoop = false;\x0d\n    }\x0d\n  } else {\x0d\n    state.writelen = len;\x0d\n    state.writecb = callback;\x0d\n    state.writing = true;\x0d\n    state.sync = true;\x0d\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\x0d\n    state.sync = false;\x0d\n  }\x0d\n\x0d\n  // Return false if errored or destroyed in order to break\x0d\n  // any synchronous while(stream.write(data)) loops.\x0d\n  return ret && !state.errored && !state.destroyed;\x0d\n}\x0d\n\x0d\nfunction doWrite(stream\x2C state\x2C writev\x2C len\x2C chunk\x2C encoding\x2C cb) {\x0d\n  state.writelen = len;\x0d\n  state.writecb = cb;\x0d\n  state.writing = true;\x0d\n  state.sync = true;\x0d\n  if (state.destroyed)\x0d\n    state.onwrite(new ERR_STREAM_DESTROYED('write'));\x0d\n  else if (writev)\x0d\n    stream._writev(chunk\x2C state.onwrite);\x0d\n  else\x0d\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\x0d\n  state.sync = false;\x0d\n}\x0d\n\x0d\nfunction onwriteError(stream\x2C state\x2C er\x2C cb) {\x0d\n  --state.pendingcb;\x0d\n\x0d\n  cb(er);\x0d\n  // Ensure callbacks are invoked even when autoDestroy is\x0d\n  // not enabled. Passing `er` here doesn't make sense since\x0d\n  // it's related to one specific write\x2C not to the buffered\x0d\n  // writes.\x0d\n  errorBuffer(state);\x0d\n  // This can emit error\x2C but error must always follow cb.\x0d\n  errorOrDestroy(stream\x2C er);\x0d\n}\x0d\n\x0d\nfunction onwrite(stream\x2C er) {\x0d\n  const state = stream._writableState;\x0d\n  const sync = state.sync;\x0d\n  const cb = state.writecb;\x0d\n\x0d\n  if (typeof cb !== 'function') {\x0d\n    errorOrDestroy(stream\x2C new ERR_MULTIPLE_CALLBACK());\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  state.writing = false;\x0d\n  state.writecb = null;\x0d\n  state.length -= state.writelen;\x0d\n  state.writelen = 0;\x0d\n\x0d\n  if (er) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    er.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (!state.errored) {\x0d\n      state.errored = er;\x0d\n    }\x0d\n\x0d\n    // In case of duplex streams we need to notify the readable side of the\x0d\n    // error.\x0d\n    if (stream._readableState && !stream._readableState.errored) {\x0d\n      stream._readableState.errored = er;\x0d\n    }\x0d\n\x0d\n    if (sync) {\x0d\n      process.nextTick(onwriteError\x2C stream\x2C state\x2C er\x2C cb);\x0d\n    } else {\x0d\n      onwriteError(stream\x2C state\x2C er\x2C cb);\x0d\n    }\x0d\n  } else {\x0d\n    if (state.buffered.length > state.bufferedIndex) {\x0d\n      clearBuffer(stream\x2C state);\x0d\n    }\x0d\n\x0d\n    if (sync) {\x0d\n      // It is a common case that the callback passed to .write() is always\x0d\n      // the same. In that case\x2C we do not schedule a new nextTick()\x2C but\x0d\n      // rather just increase a counter\x2C to improve performance and avoid\x0d\n      // memory allocations.\x0d\n      if (state.afterWriteTickInfo !== null &&\x0d\n          state.afterWriteTickInfo.cb === cb) {\x0d\n        state.afterWriteTickInfo.count++;\x0d\n      } else {\x0d\n        state.afterWriteTickInfo = { count: 1\x2C cb\x2C stream\x2C state };\x0d\n        process.nextTick(afterWriteTick\x2C state.afterWriteTickInfo);\x0d\n      }\x0d\n    } else {\x0d\n      afterWrite(stream\x2C state\x2C 1\x2C cb);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterWriteTick({ stream\x2C state\x2C count\x2C cb }) {\x0d\n  state.afterWriteTickInfo = null;\x0d\n  return afterWrite(stream\x2C state\x2C count\x2C cb);\x0d\n}\x0d\n\x0d\nfunction afterWrite(stream\x2C state\x2C count\x2C cb) {\x0d\n  const needDrain = !state.ending && !stream.destroyed && state.length === 0 &&\x0d\n    state.needDrain;\x0d\n  if (needDrain) {\x0d\n    state.needDrain = false;\x0d\n    stream.emit('drain');\x0d\n  }\x0d\n\x0d\n  while (count-- > 0) {\x0d\n    state.pendingcb--;\x0d\n    cb();\x0d\n  }\x0d\n\x0d\n  if (state.destroyed) {\x0d\n    errorBuffer(state);\x0d\n  }\x0d\n\x0d\n  finishMaybe(stream\x2C state);\x0d\n}\x0d\n\x0d\n// If there's something in the buffer waiting\x2C then invoke callbacks.\x0d\nfunction errorBuffer(state) {\x0d\n  if (state.writing) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  for (let n = state.bufferedIndex; n < state.buffered.length; ++n) {\x0d\n    const { chunk\x2C callback } = state.buffered[n];\x0d\n    const len = state.objectMode ? 1 : chunk.length;\x0d\n    state.length -= len;\x0d\n    callback(new ERR_STREAM_DESTROYED('write'));\x0d\n  }\x0d\n\x0d\n  const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n    onfinishCallbacks[i](new ERR_STREAM_DESTROYED('end'));\x0d\n  }\x0d\n\x0d\n  resetBuffer(state);\x0d\n}\x0d\n\x0d\n// If there's something in the buffer waiting\x2C then process it.\x0d\nfunction clearBuffer(stream\x2C state) {\x0d\n  if (state.corked ||\x0d\n      state.bufferProcessing ||\x0d\n      state.destroyed ||\x0d\n      !state.constructed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const { buffered\x2C bufferedIndex\x2C objectMode } = state;\x0d\n  const bufferedLength = buffered.length - bufferedIndex;\x0d\n\x0d\n  if (!bufferedLength) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let i = bufferedIndex;\x0d\n\x0d\n  state.bufferProcessing = true;\x0d\n  if (bufferedLength > 1 && stream._writev) {\x0d\n    state.pendingcb -= bufferedLength - 1;\x0d\n\x0d\n    const callback = state.allNoop ? nop : (err) => {\x0d\n      for (let n = i; n < buffered.length; ++n) {\x0d\n        buffered[n].callback(err);\x0d\n      }\x0d\n    };\x0d\n    // Make a copy of `buffered` if it's going to be used by `callback` above\x2C\x0d\n    // since `doWrite` will mutate the array.\x0d\n    const chunks = state.allNoop && i === 0 ?\x0d\n      buffered : ArrayPrototypeSlice(buffered\x2C i);\x0d\n    chunks.allBuffers = state.allBuffers;\x0d\n\x0d\n    doWrite(stream\x2C state\x2C true\x2C state.length\x2C chunks\x2C ''\x2C callback);\x0d\n\x0d\n    resetBuffer(state);\x0d\n  } else {\x0d\n    do {\x0d\n      const { chunk\x2C encoding\x2C callback } = buffered[i];\x0d\n      buffered[i++] = null;\x0d\n      const len = objectMode ? 1 : chunk.length;\x0d\n      doWrite(stream\x2C state\x2C false\x2C len\x2C chunk\x2C encoding\x2C callback);\x0d\n    } while (i < buffered.length && !state.writing);\x0d\n\x0d\n    if (i === buffered.length) {\x0d\n      resetBuffer(state);\x0d\n    } else if (i > 256) {\x0d\n      buffered.splice(0\x2C i);\x0d\n      state.bufferedIndex = 0;\x0d\n    } else {\x0d\n      state.bufferedIndex = i;\x0d\n    }\x0d\n  }\x0d\n  state.bufferProcessing = false;\x0d\n}\x0d\n\x0d\nWritable.prototype._write = function(chunk\x2C encoding\x2C cb) {\x0d\n  if (this._writev) {\x0d\n    this._writev([{ chunk\x2C encoding }]\x2C cb);\x0d\n  } else {\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('_write()');\x0d\n  }\x0d\n};\x0d\n\x0d\nWritable.prototype._writev = null;\x0d\n\x0d\nWritable.prototype.end = function(chunk\x2C encoding\x2C cb) {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  if (typeof chunk === 'function') {\x0d\n    cb = chunk;\x0d\n    chunk = null;\x0d\n    encoding = null;\x0d\n  } else if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (chunk !== null && chunk !== undefined) {\x0d\n    const ret = _write(this\x2C chunk\x2C encoding);\x0d\n    if (ret instanceof Error) {\x0d\n      err = ret;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // .end() fully uncorks.\x0d\n  if (state.corked) {\x0d\n    state.corked = 1;\x0d\n    this.uncork();\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    // Do nothing...\x0d\n  } else if (!state.errored && !state.ending) {\x0d\n    // This is forgiving in terms of unnecessary calls to end() and can hide\x0d\n    // logic errors. However\x2C usually such errors are harmless and causing a\x0d\n    // hard error can be disproportionately destructive. It is not always\x0d\n    // trivial for the user to determine whether end() needs to be called\x0d\n    // or not.\x0d\n\x0d\n    state.ending = true;\x0d\n    finishMaybe(this\x2C state\x2C true);\x0d\n    state.ended = true;\x0d\n  } else if (state.finished) {\x0d\n    err = new ERR_STREAM_ALREADY_FINISHED('end');\x0d\n  } else if (state.destroyed) {\x0d\n    err = new ERR_STREAM_DESTROYED('end');\x0d\n  }\x0d\n\x0d\n  if (typeof cb === 'function') {\x0d\n    if (err || state.finished) {\x0d\n      process.nextTick(cb\x2C err);\x0d\n    } else {\x0d\n      state[kOnFinished].push(cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction needFinish(state) {\x0d\n  return (state.ending &&\x0d\n          state.constructed &&\x0d\n          state.length === 0 &&\x0d\n          !state.errored &&\x0d\n          state.buffered.length === 0 &&\x0d\n          !state.finished &&\x0d\n          !state.writing &&\x0d\n          !state.errorEmitted &&\x0d\n          !state.closeEmitted);\x0d\n}\x0d\n\x0d\nfunction callFinal(stream\x2C state) {\x0d\n  let called = false;\x0d\n\x0d\n  function onFinish(err) {\x0d\n    if (called) {\x0d\n      errorOrDestroy(stream\x2C err ?? ERR_MULTIPLE_CALLBACK());\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    state.pendingcb--;\x0d\n    if (err) {\x0d\n      const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n      for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n        onfinishCallbacks[i](err);\x0d\n      }\x0d\n      errorOrDestroy(stream\x2C err\x2C state.sync);\x0d\n    } else if (needFinish(state)) {\x0d\n      state.prefinished = true;\x0d\n      stream.emit('prefinish');\x0d\n      // Backwards compat. Don't check state.sync here.\x0d\n      // Some streams assume 'finish' will be emitted\x0d\n      // asynchronously relative to _final callback.\x0d\n      state.pendingcb++;\x0d\n      process.nextTick(finish\x2C stream\x2C state);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  state.sync = true;\x0d\n  state.pendingcb++;\x0d\n\x0d\n  try {\x0d\n    const result = stream._final(onFinish);\x0d\n    if (result != null) {\x0d\n      const then = result.then;\x0d\n      if (typeof then === 'function') {\x0d\n        then.call(\x0d\n          result\x2C\x0d\n          function() {\x0d\n            if (!called) {\x0d\n              process.nextTick(onFinish\x2C null);\x0d\n            }\x0d\n          }\x2C\x0d\n          function(err) {\x0d\n            if (!called) {\x0d\n              process.nextTick(onFinish\x2C err);\x0d\n            }\x0d\n          });\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    onFinish(err);\x0d\n  }\x0d\n\x0d\n  state.sync = false;\x0d\n}\x0d\n\x0d\nfunction prefinish(stream\x2C state) {\x0d\n  if (!state.prefinished && !state.finalCalled) {\x0d\n    if (typeof stream._final === 'function' && !state.destroyed) {\x0d\n      state.finalCalled = true;\x0d\n      callFinal(stream\x2C state);\x0d\n    } else {\x0d\n      state.prefinished = true;\x0d\n      stream.emit('prefinish');\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction finishMaybe(stream\x2C state\x2C sync) {\x0d\n  if (needFinish(state)) {\x0d\n    prefinish(stream\x2C state);\x0d\n    if (state.pendingcb === 0 && needFinish(state)) {\x0d\n      state.pendingcb++;\x0d\n      if (sync) {\x0d\n        process.nextTick(finish\x2C stream\x2C state);\x0d\n      } else {\x0d\n        finish(stream\x2C state);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction finish(stream\x2C state) {\x0d\n  state.pendingcb--;\x0d\n  state.finished = true;\x0d\n\x0d\n  const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n    onfinishCallbacks[i]();\x0d\n  }\x0d\n\x0d\n  stream.emit('finish');\x0d\n\x0d\n  if (state.autoDestroy) {\x0d\n    // In case of duplex streams we need a way to detect\x0d\n    // if the readable side is ready for autoDestroy as well.\x0d\n    const rState = stream._readableState;\x0d\n    const autoDestroy = !rState || (\x0d\n      rState.autoDestroy &&\x0d\n      // We don't expect the readable to ever 'end'\x0d\n      // if readable is explicitly set to false.\x0d\n      (rState.endEmitted || rState.readable === false)\x0d\n    );\x0d\n    if (autoDestroy) {\x0d\n      stream.destroy();\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(Writable.prototype\x2C {\x0d\n\x0d\n  destroyed: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.destroyed : false;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // Backward compatibility\x2C the user is explicitly managing destroyed.\x0d\n      if (this._writableState) {\x0d\n        this._writableState.destroyed = value;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writable: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const w = this._writableState;\x0d\n      // w.writable === false means that this is part of a Duplex stream\x0d\n      // where the writable side was disabled upon construction.\x0d\n      // Compat. The user might manually disable writable side through\x0d\n      // deprecated setter.\x0d\n      return !!w && w.writable !== false && !w.destroyed && !w.errored &&\x0d\n        !w.ending && !w.ended;\x0d\n    }\x2C\x0d\n    set(val) {\x0d\n      // Backwards compatible.\x0d\n      if (this._writableState) {\x0d\n        this._writableState.writable = !!val;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableFinished: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.finished : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableObjectMode: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.objectMode : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableBuffer: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.getBuffer();\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableEnded: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.ending : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableNeedDrain: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const wState = this._writableState;\x0d\n      if (!wState) return false;\x0d\n      return !wState.destroyed && !wState.ending && wState.needDrain;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableHighWaterMark: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.highWaterMark;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableCorked: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.corked : 0;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableLength: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.length;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableAborted: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return !!(\x0d\n        this._writableState.writable !== false &&\x0d\n        (this._writableState.destroyed || this._writableState.errored) &&\x0d\n        !this._writableState.finished\x0d\n      );\x0d\n    }\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nconst destroy = destroyImpl.destroy;\x0d\nWritable.prototype.destroy = function(err\x2C cb) {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  // Invoke pending callbacks.\x0d\n  if (!state.destroyed &&\x0d\n    (state.bufferedIndex < state.buffered.length ||\x0d\n      state[kOnFinished].length)) {\x0d\n    process.nextTick(errorBuffer\x2C state);\x0d\n  }\x0d\n\x0d\n  destroy.call(this\x2C err\x2C cb);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nWritable.prototype._undestroy = destroyImpl.undestroy;\x0d\nWritable.prototype._destroy = function(err\x2C cb) {\x0d\n  cb(err);\x0d\n};\x0d\n\x0d\nWritable.prototype[EE.captureRejectionSymbol] = function(err) {\x0d\n  this.destroy(err);\x0d\n};\x0d\n
code-source-info,0x37947c948ce,65,7647,9215,C0O7647C9O8232C16O8249C19O8256C23O8238C27O8270C33O8288C44O8288C51O8345C58O8352C63O8374C64O8380C83O8402C88O8400C92O8451C96O8490C104O8519C107O8541C111O8531C115O8574C123O8604C126O8627C130O8617C134O8661C142O8692C145O8716C149O8706C153O8751C161O8780C164O8802C168O8792C172O8835C180O8868C183O8894C187O8884C191O8922C197O8937C204O8970C212O8937C217O8995C224O9002C232O9002C238O9028C245O9040C258O9040C265O9214,,
code-creation,LazyCompile,10,238296,0x37947c969fe,341,WritableState node:internal/streams/writable:77:23,0xa61435b108,~
code-source-info,0x37947c969fe
code-creation,LazyCompile,10,238412,0x37947c96e0e,23,resetBuffer node:internal/streams/writable:202:21,0xa61435b158,~
code-source-info,0x37947c96e0e,65,7206,7323,C0O7219C2O7234C6O7243C7O7263C11O7271C12O7288C16O7299C17O7313C22O7322,,
code-creation,LazyCompile,10,238480,0x37947c96f16,21,set node:internal/streams/readable:1175:8,0xa61434d2c8,~
code-source-info,0x37947c96f16,58,36999,37131,C0O37051C6O37083C13O37111C15O37107C20O37130,,
code-creation,LazyCompile,10,238540,0x37947c9706e,131,createHandle node:net:146:22,0x3d286276158,~
code-source-info,0x37947c9706e,105,3961,4337,C0O3982C13O3982C18O4026C23O4026C28O4050C30O4059C35O4078C42O4102C46O4114C49O4128C57O4137C60O4151C67O4085C72O4165C73O4176C75O4185C80O4203C87O4226C91O4238C94O4251C102O4260C105O4273C112O4210C117O4287C118O4298C125O4304C130O4298,,
code-creation,LazyCompile,10,238604,0x37947c9720e,14,set node:net:1848:6,0x3d2862782b0,~
code-source-info,0x37947c9720e,105,51625,51658,C0O51631C2O51643C7O51652C13O51656,,
code-creation,LazyCompile,10,238634,0x37947c972fe,8,get node:net:1847:6,0x3d286278260,~
code-source-info,0x37947c972fe,105,51589,51617,C0O51594C2O51606C4O51605C7O51615,,
code-creation,LazyCompile,10,238729,0x37947c974ae,196,Readable.on node:internal/streams/readable:874:33,0xa61434cc00,~
code-source-info,0x37947c974ae,58,28613,29539,C0O28639C5O28646C10O28656C15O28659C29O28659C35O28701C40O28722C42O28729C47O28914C55O28914C62O28940C65O28907C69O29036C75O29044C80O29067C85O29067C91O29087C93O29094C98O29128C104O29149C110O29177C112O29222C118O29201C122O29237C123O29251C127O29267C128O29289C132O29305C140O29332C145O29346C150O29305C155O29373C161O29392C164O29392C170O29437C176O29457C179O29465C187O29465C193O29525C195O29536,,
code-creation,LazyCompile,10,238819,0x37947c97726,135,initSocketHandle node:net:263:26,0x3d286276338,~
code-source-info,0x37947c97726,105,6802,7402,C0O6819C5O6819C9O6836C10O6851C14O6940C20O6961C27O6969C32O6983C36O7001C43O7018C45O7016C49O7037C51O7042C57O7080C62O7061C66O7059C70O7111C72O7116C74O7115C78O7131C80O7168C82O7173C84O7172C88O7193C90O7235C94O7254C99O7259C105O7293C106O7300C107O7310C109O7315C114O7324C118O7356C123O7364C128O7364C134O7401,,
code-creation,LazyCompile,10,238898,0x37947c97956,120,undestroy node:internal/streams/destroy:160:19,0x3a93d9fd0f0,~
code-source-info,0x37947c97956,56,3223,3849,C0O3246C5O3280C10O3301C14O3315C15O3329C19O3342C20O3351C24O3365C25O3380C29O3394C30O3406C34O3420C35O3430C39O3443C40O3458C44O3472C45O3482C49O3496C50O3504C54O3518C55O3531C59O3550C63O3564C64O3578C68O3591C69O3603C73O3617C74O3626C78O3640C79O3655C83O3669C84O3679C88O3692C89O3707C93O3721C94O3729C98O3743C99O3752C103O3766C104O3780C108O3794C109O3808C113O3822C114O3833C119O3848,,
code-creation,LazyCompile,10,238968,0x37947c97b56,32,getNewAsyncId node:net:165:23,0x3d2862761a8,~
code-source-info,0x37947c97b56,105,4365,4484,C0O4379C4O4412C14O4446C17O4446C22O4468C27O4468C31O4481,,
code-creation,LazyCompile,10,239015,0x37947c97c56,5,get node:internal/bootstrap/pre_execution:413:8,0xc4d99243b8,~
code-source-info,0x37947c97c56,100,13524,13559,C0O13536C4O13552,,
code-creation,LazyCompile,10,239052,0x37947c97efe,5,get C:\\Users\\inft11\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js:19:10,0x37947c88248,~
code-source-info,0x37947c97efe,143,392,404,C0O398C4O404,,
code-creation,Eval,10,239631,0x37947c9839e,5, C:\\Users\\inft11\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\soft-exit.js:1:1,0x37947c98258,~
script-source,147,C:\\Users\\inft11\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\soft-exit.js,'use strict'\n\nprocess.on('SIGINT'\x2C process.exit)\nprocess.on('SIGTERM'\x2C process.exit)\n
code-source-info,0x37947c9839e,147,0,85,C0O0C4O85,,
code-creation,Function,10,239670,0x37947c9843e,56, C:\\Users\\inft11\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\soft-exit.js:1:1,0x37947c98318,~
code-source-info,0x37947c9843e,147,0,85,C0O14C4O22C12O35C16O43C21O22C27O49C31O57C39O71C43O79C48O57C55O84,,
code-creation,LazyCompile,10,239814,0x37947c98b1e,50,initializeFrozenIntrinsics node:internal/bootstrap/pre_execution:566:36,0x3d28624d2d0,~
code-source-info,0x37947c98b1e,100,18629,18857,C0O18637C8O18641C14O18687C17O18695C28O18695C34O18809C40O18809C45O18846C49O18856,,
code-creation,LazyCompile,10,239882,0x37947c98c46,80,executeUserEntryPoint node:internal/modules/run_main:74:31,0x35a8d4a20a0,~
code-source-info,0x37947c98c46,135,2398,2712,C7O2414C14O2418C22O2449C25O2449C30O2496C33O2496C38O2533C40O2558C45O2569C50O2558C56O2673C61O2680C73O2680C79O2711,,
code-creation,LazyCompile,10,239936,0x37947c99096,68,resolveMainPath node:internal/modules/run_main:15:25,0x35a8d4a1f60,~
code-source-info,0x37947c99096,135,412,839,C0O588C5O595C12O605C15O610C20O610C30O595C36O641C38O661C39O668C40O703C48O703C53O750C55O782C60O793C65O820C67O836,,
code-creation,Function,11,240326,0x21ab364aba0,7900,realpathSync node:fs:2460:22,0x39c7b619940,^
code-source-info,0x21ab364aba0,83,67994,72014,,,
code-creation,Function,11,240353,0x21ab364cae0,40,noop node:internal/util/debuglog:47:14,0xf284025ac8,^
code-source-info,0x21ab364cae0,22,1465,1473,,,
code-creation,Function,11,240379,0x21ab364cb80,1020,debuglog node:internal/util/debuglog:71:18,0xf284025b68,^
code-source-info,0x21ab364cb80,22,2302,3350,,,
code-creation,Function,11,240400,0x21ab364cfe0,252,canBeRequiredByUsers node:internal/bootstrap/loaders:247:30,0x56f5c90e40,^
code-source-info,0x21ab364cfe0,9,7748,7847,,,
code-creation,Function,11,240416,0x21ab364d140,72,isInt32 node:internal/validators:37:17,0xf284008d58,^
code-source-info,0x21ab364d140,16,785,830,,,
code-creation,Function,11,240442,0x21ab364d200,1148,readPackageScope node:internal/modules/cjs/loader:332:26,0xc4d9927660,^
code-source-info,0x21ab364d200,115,9584,10117,,,
code-creation,Function,11,240492,0x21ab364d6e0,160,checkListener node:events:265:23,0xf28402ef98,^
code-source-info,0x21ab364d6e0,23,7994,8052,,,
code-creation,Function,11,240513,0x21ab364d7e0,128,addListener node:events:604:58,0xf28402f688,^
code-source-info,0x21ab364d7e0,23,18313,18387,,,
code-creation,LazyCompile,10,240838,0x37947c99e7e,118,shouldUseESMLoader node:internal/modules/run_main:30:28,0x35a8d4a1fb0,~
code-source-info,0x37947c99e7e,135,870,1612,C0O1060C8O1060C13O1120C19O1127C24O1137C25O1149C26O1194C34O1194C39O1252C41O1284C46O1301C47O1313C48O1363C54O1379C60O1379C67O1427C68O1439C69O1443C75O1460C81O1460C88O1508C89O1521C90O1537C95O1537C100O1568C102O1586C107O1591C114O1596C117O1609,,
code-creation,Eval,10,241256,0x37947c9a2e6,5, C:\\Users\\inft11\\Desktop\\Coderhouse (Lautaro)\\Desafio16-LoggersGzipPerformance\\src\\controllers\\randoms.js:1:1,0x37947c9a190,~
script-source,148,C:\\Users\\inft11\\Desktop\\Coderhouse (Lautaro)\\Desafio16-LoggersGzipPerformance\\src\\controllers\\randoms.js,// Funci\xf3n que devuelve un objeto que contendr\xe1 como claves los n\xfameros random generados junto a la cantidad de veces que sali\xf3 cada uno.\x0d\n\x0d\nprocess.on('message'\x2C msg => {\x0d\n\x09const { cantidad\x2C obj } = msg\x0d\n\x09const result = randomNum(cantidad\x2C obj)\x0d\n\x09process.send(result)\x0d\n});\x0d\n\x0d\nconst randomNum = (cantidad\x2C obj) => {\x0d\n\x09for (let i = 0; i < cantidad; i++) {\x0d\n\x09\x09const random = Math.floor(Math.random() * 10);\x0d\n\x09\x09if (obj[random]) {\x0d\n\x09\x09\x09obj[random]++;\x0d\n\x09\x09\x09continue;\x0d\n\x09\x09}\x0d\n\x09\x09obj[random] = 1;\x0d\n\x09}\x0d\n\x09return obj;\x0d\n};\x0d\n\x0d\n\x0d\n\x0d\n\x0d\n// Esta funci\xf3n simplemente genera n\xfameros random con la cantidad que le mandemos\x2C o 500.000.000 por defecto.\x0d\n// function generateRandomNumbers(n) {\x0d\n//     const randomNumbers = [];\x0d\n    \x0d\n//     for (let i = 0; i < n; i++) {\x0d\n//         randomNumbers.push(\x0d\n//             Math.floor(Math.random() * 1000)\x0d\n//         )\x0d\n//     }\x0d\n//     return randomNumbers;\x0d\n// }\x0d\n\x0d\n// process.on('message'\x2C (num) => {\x0d\n//     const numbers = generateRandomNumbers(num);\x0d\n//     process.send(numbers);\x0d\n// })\x0d\n\x0d\n
code-source-info,0x37947c9a2e6,148,0,1017,C0O0C4O1017,,
code-creation,Function,10,241334,0x37947c9a42e,39, C:\\Users\\inft11\\Desktop\\Coderhouse (Lautaro)\\Desafio16-LoggersGzipPerformance\\src\\controllers\\randoms.js:1:1,0x37947c9a260,~
code-source-info,0x37947c9a42e,148,0,1017,C0O0C8O141C12O149C25O149C31O295C35O295C38O1016,,
code-creation,LazyCompile,10,241417,0x37947c9a6fe,44,refCounted node:internal/child_process:539:13,0x3d286270a48,~
code-source-info,0x37947c9a6fe,104,14732,14834,C0O14742C3O14752C9O14753C15O14759C22O14774C27O14802C29O14807C33O14816C38O14816C43O14833,,
code-creation,LazyCompile,10,241516,0x37947c9a8be,318,processTicksAndRejections node:internal/process/task_queues:68:35,0x233c001adb8,~
code-source-info,0x37947c9a8be
code-creation,LazyCompile,10,241593,0x37947c9ab96,43,shift node:internal/fixed_queue:108:8,0x233c00200f0,~
code-source-info,0x37947c9ab96,34,4061,4295,C0O4089C5O4118C10O4118C15O4141C20O4141C26O4159C32O4260C36O4253C40O4278C42O4290,,
code-creation,LazyCompile,10,241634,0x37947c9acde,54,shift node:internal/fixed_queue:80:8,0x233c001ff00,~
code-source-info,0x37947c9acde,34,3379,3596,C0O3411C5O3421C9O3415C13O3435C15O3470C16O3482C17O3493C22O3503C28O3511C32O3549C36O3556C42O3563C44O3561C47O3541C51O3575C53O3591,,
code-creation,LazyCompile,10,241689,0x37947c9ae16,42,emitBeforeScript node:internal/async_hooks:509:26,0x56f5cbaaa8,~
code-source-info,0x37947c9ae16,13,17331,17487,C0O17372C12O17372C17O17430C22O17443C25O17434C31O17458C36O17458C41O17486,,
code-creation,LazyCompile,10,241743,0x37947c9af66,180,pushAsyncContext node:internal/async_hooks:539:26,0x56f5cbac50,~
code-source-info,0x37947c9af66,13,18005,18560,C0O18061C7O18079C9O18078C13O18097C20O18131C24O18146C26O18157C32O18164C35O18175C40O18191C44O18161C49O18204C54O18211C59O18254C60O18258C65O18269C72O18292C78O18299C83O18315C85O18314C88O18297C92O18338C97O18349C104O18372C107O18376C113O18383C118O18399C120O18398C123O18381C127O18420C134O18438C142O18451C146O18458C153O18474C158O18493C162O18507C169O18523C174O18540C179O18559,,
code-creation,LazyCompile,10,241824,0x37947c9b17e,125, node:internal/child_process:709:22,0xc4d991b700,~
code-source-info,0x37947c9b17e,104,20146,20523,C0O20161C3O20173C12O20192C20O20192C27O20227C28O20234C29O20261C32O20268C41O20276C43O20275C47O20310C52O20338C54O20351C55O20358C56O20381C58O20386C60O20386C65O20412C75O20432C85O20454C89O20412C94O20397C99O20368C102O20478C105O20485C114O20493C119O20511C124O20522,,
code-creation,LazyCompile,10,241889,0x37947c9b33e,31,listenerCount node:events:840:23,0xf28402fbd0,~
code-source-info,0x37947c9b33e,23,24974,25256,C0O25006C5O25020C7O25072C9O25078C13O25093C17O25140C19O25149C20O25162C24O25219C28O25226C29O25244C30O25253,,
code-creation,LazyCompile,10,241924,0x37947c9b446,13,destroyHooksExist node:internal/async_hooks:486:27,0x56f5cba9b8,~
code-source-info,0x37947c9b446,13,16757,16794,C0O16765C5O16781C8O16772C12O16791,,
code-creation,LazyCompile,10,241954,0x37947c9b536,32,emitAfterScript node:internal/async_hooks:517:25,0x56f5cbaaf8,~
code-source-info,0x37947c9b536,13,17517,17618,C0O17532C5O17545C8O17536C14O17559C19O17559C23O17590C26O17590C31O17617,,
code-creation,LazyCompile,10,242002,0x37947c9b69e,167,popAsyncContext node:internal/async_hooks:553:25,0x56f5cbaca0,~
code-source-info,0x37947c9b69e,13,18653,19255,C0O18688C7O18706C9O18705C13O18724C14O18740C19O18747C20O18760C21O18766C24O18770C31O18793C36O18809C38O18808C44O18828C49O18912C54O18919C58O18945C59O18971C61O18983C65O18991C72O19007C77O19028C80O19039C87O19057C90O19054C93O19026C97O19071C104O19087C109O19106C112O19117C119O19135C122O19144C125O19132C128O19104C132O19153C137O19179C142O19179C146O19189C153O19207C158O19221C162O19234C163O19248C166O19252,,
code-creation,LazyCompile,10,242054,0x37947c9b87e,13,enabledHooksExist node:internal/async_hooks:474:27,0x56f5cba8a8,~
code-source-info,0x37947c9b87e,13,16568,16603,C0O16576C5O16592C8O16583C12O16600,,
code-creation,LazyCompile,10,242213,0x37947c9bbe6,627,processPromiseRejections node:internal/process/promises:211:34,0x233c001e808,~
script-source,33,node:internal/process/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  Error\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeWeakMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  tickInfo\x2C\x0d\n  promiseRejectEvents: {\x0d\n    kPromiseRejectWithNoHandler\x2C\x0d\n    kPromiseHandlerAddedAfterReject\x2C\x0d\n    kPromiseResolveAfterResolved\x2C\x0d\n    kPromiseRejectAfterResolved\x0d\n  }\x2C\x0d\n  setPromiseRejectCallback\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  noSideEffectsToString\x2C\x0d\n  triggerUncaughtException\x0d\n} = internalBinding('errors');\x0d\n\x0d\nconst {\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol: kAsyncIdSymbol\x2C\x0d\n    trigger_async_id_symbol: kTriggerAsyncIdSymbol\x0d\n  }\x0d\n} = require('internal/async_hooks');\x0d\nconst { isErrorStackTraceLimitWritable } = require('internal/errors');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasRejectionToWarn = 1;\x0d\n\x0d\nconst maybeUnhandledPromises = new SafeWeakMap();\x0d\nconst pendingUnhandledRejections = [];\x0d\nconst asyncHandledRejections = [];\x0d\nlet lastPromiseId = 0;\x0d\n\x0d\n// --unhandled-rejections=none:\x0d\n// Emit 'unhandledRejection'\x2C but do not emit any warning.\x0d\nconst kIgnoreUnhandledRejections = 0;\x0d\n\x0d\n// --unhandled-rejections=warn:\x0d\n// Emit 'unhandledRejection'\x2C then emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kAlwaysWarnUnhandledRejections = 1;\x0d\n\x0d\n// --unhandled-rejections=strict:\x0d\n// Emit 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\n// Otherwise\x2C emit 'unhandledRejection'. If 'unhandledRejection' is not\x0d\n// handled\x2C emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kStrictUnhandledRejections = 2;\x0d\n\x0d\n// --unhandled-rejections=throw:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\nconst kThrowUnhandledRejections = 3;\x0d\n\x0d\n// --unhandled-rejections=warn-with-error-code:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'UnhandledPromiseRejectionWarning'\x2C then set process exit code to 1.\x0d\n\x0d\nconst kWarnWithErrorCodeUnhandledRejections = 4;\x0d\n\x0d\nlet unhandledRejectionsMode;\x0d\n\x0d\nfunction setHasRejectionToWarn(value) {\x0d\n  tickInfo[kHasRejectionToWarn] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nfunction hasRejectionToWarn() {\x0d\n  return tickInfo[kHasRejectionToWarn] === 1;\x0d\n}\x0d\n\x0d\nfunction isErrorLike(o) {\x0d\n  return typeof o === 'object' &&\x0d\n         o !== null &&\x0d\n         ObjectPrototypeHasOwnProperty(o\x2C 'stack');\x0d\n}\x0d\n\x0d\nfunction getUnhandledRejectionsMode() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  switch (getOptionValue('--unhandled-rejections')) {\x0d\n    case 'none':\x0d\n      return kIgnoreUnhandledRejections;\x0d\n    case 'warn':\x0d\n      return kAlwaysWarnUnhandledRejections;\x0d\n    case 'strict':\x0d\n      return kStrictUnhandledRejections;\x0d\n    case 'throw':\x0d\n      return kThrowUnhandledRejections;\x0d\n    case 'warn-with-error-code':\x0d\n      return kWarnWithErrorCodeUnhandledRejections;\x0d\n    default:\x0d\n      return kThrowUnhandledRejections;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseRejectHandler(type\x2C promise\x2C reason) {\x0d\n  if (unhandledRejectionsMode === undefined) {\x0d\n    unhandledRejectionsMode = getUnhandledRejectionsMode();\x0d\n  }\x0d\n  switch (type) {\x0d\n    case kPromiseRejectWithNoHandler:\x0d\n      unhandledRejection(promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseHandlerAddedAfterReject:\x0d\n      handledRejection(promise);\x0d\n      break;\x0d\n    case kPromiseResolveAfterResolved:\x0d\n      resolveError('resolve'\x2C promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseRejectAfterResolved:\x0d\n      resolveError('reject'\x2C promise\x2C reason);\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction resolveError(type\x2C promise\x2C reason) {\x0d\n  // We have to wrap this in a next tick. Otherwise the error could be caught by\x0d\n  // the executed promise.\x0d\n  process.nextTick(() => {\x0d\n    process.emit('multipleResolves'\x2C type\x2C promise\x2C reason);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction unhandledRejection(promise\x2C reason) {\x0d\n  const emit = (reason\x2C promise\x2C promiseInfo) => {\x0d\n    if (promiseInfo.domain) {\x0d\n      return promiseInfo.domain.emit('error'\x2C reason);\x0d\n    }\x0d\n    return process.emit('unhandledRejection'\x2C reason\x2C promise);\x0d\n  };\x0d\n\x0d\n  maybeUnhandledPromises.set(promise\x2C {\x0d\n    reason\x2C\x0d\n    uid: ++lastPromiseId\x2C\x0d\n    warned: false\x2C\x0d\n    domain: process.domain\x2C\x0d\n    emit\x0d\n  });\x0d\n  // This causes the promise to be referenced at least for one tick.\x0d\n  ArrayPrototypePush(pendingUnhandledRejections\x2C promise);\x0d\n  setHasRejectionToWarn(true);\x0d\n}\x0d\n\x0d\nfunction handledRejection(promise) {\x0d\n  const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n  if (promiseInfo !== undefined) {\x0d\n    maybeUnhandledPromises.delete(promise);\x0d\n    if (promiseInfo.warned) {\x0d\n      const { uid } = promiseInfo;\x0d\n      // Generate the warning object early to get a good stack trace.\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const warning = new Error('Promise rejection was handled ' +\x0d\n                                `asynchronously (rejection id: ${uid})`);\x0d\n      warning.name = 'PromiseRejectionHandledWarning';\x0d\n      warning.id = uid;\x0d\n      ArrayPrototypePush(asyncHandledRejections\x2C { promise\x2C warning });\x0d\n      setHasRejectionToWarn(true);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  if (maybeUnhandledPromises.size === 0 && asyncHandledRejections.length === 0)\x0d\n    setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\nconst unhandledRejectionErrName = 'UnhandledPromiseRejectionWarning';\x0d\nfunction emitUnhandledRejectionWarning(uid\x2C reason) {\x0d\n  const warning = getErrorWithoutStack(\x0d\n    unhandledRejectionErrName\x2C\x0d\n    'Unhandled promise rejection. This error originated either by ' +\x0d\n      'throwing inside of an async function without a catch block\x2C ' +\x0d\n      'or by rejecting a promise which was not handled with .catch(). ' +\x0d\n      'To terminate the node process on unhandled promise ' +\x0d\n      'rejection\x2C use the CLI flag `--unhandled-rejections=strict` (see ' +\x0d\n      'https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). ' +\x0d\n      `(rejection id: ${uid})`\x0d\n  );\x0d\n  try {\x0d\n    if (isErrorLike(reason)) {\x0d\n      warning.stack = reason.stack;\x0d\n      process.emitWarning(reason.stack\x2C unhandledRejectionErrName);\x0d\n    } else {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    }\x0d\n  } catch {\x0d\n    try {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    } catch {\x0d\n      // Ignore.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  process.emitWarning(warning);\x0d\n}\x0d\n\x0d\n// If this method returns true\x2C we've executed user code or triggered\x0d\n// a warning to be emitted which requires the microtask and next tick\x0d\n// queues to be drained again.\x0d\nfunction processPromiseRejections() {\x0d\n  let maybeScheduledTicksOrMicrotasks = asyncHandledRejections.length > 0;\x0d\n\x0d\n  while (asyncHandledRejections.length > 0) {\x0d\n    const { promise\x2C warning } = ArrayPrototypeShift(asyncHandledRejections);\x0d\n    if (!process.emit('rejectionHandled'\x2C promise)) {\x0d\n      process.emitWarning(warning);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let len = pendingUnhandledRejections.length;\x0d\n  while (len--) {\x0d\n    const promise = ArrayPrototypeShift(pendingUnhandledRejections);\x0d\n    const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n    if (promiseInfo === undefined) {\x0d\n      continue;\x0d\n    }\x0d\n    promiseInfo.warned = true;\x0d\n    const { reason\x2C uid\x2C emit } = promiseInfo;\x0d\n\x0d\n    let needPop = true;\x0d\n    const {\x0d\n      [kAsyncIdSymbol]: promiseAsyncId\x2C\x0d\n      [kTriggerAsyncIdSymbol]: promiseTriggerAsyncId\x2C\x0d\n    } = promise;\x0d\n    // We need to check if async_hooks are enabled\x0d\n    // don't use enabledHooksExist as a Promise could\x0d\n    // come from a vm.* context and not have an async id\x0d\n    if (typeof promiseAsyncId !== 'undefined') {\x0d\n      pushAsyncContext(\x0d\n        promiseAsyncId\x2C\x0d\n        promiseTriggerAsyncId\x2C\x0d\n        promise\x0d\n      );\x0d\n    }\x0d\n    try {\x0d\n      switch (unhandledRejectionsMode) {\x0d\n        case kStrictUnhandledRejections: {\x0d\n          const err = isErrorLike(reason) ?\x0d\n            reason : generateUnhandledRejectionError(reason);\x0d\n          // This destroys the async stack\x2C don't clear it after\x0d\n          triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n          if (typeof promiseAsyncId !== 'undefined') {\x0d\n            pushAsyncContext(\x0d\n              promise[kAsyncIdSymbol]\x2C\x0d\n              promise[kTriggerAsyncIdSymbol]\x2C\x0d\n              promise\x0d\n            );\x0d\n          }\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kIgnoreUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          break;\x0d\n        }\x0d\n        case kAlwaysWarnUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kThrowUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            const err = isErrorLike(reason) ?\x0d\n              reason : generateUnhandledRejectionError(reason);\x0d\n              // This destroys the async stack\x2C don't clear it after\x0d\n            triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n            needPop = false;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n        case kWarnWithErrorCodeUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n            process.exitCode = 1;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    } finally {\x0d\n      if (needPop) {\x0d\n        if (typeof promiseAsyncId !== 'undefined') {\x0d\n          popAsyncContext(promiseAsyncId);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    maybeScheduledTicksOrMicrotasks = true;\x0d\n  }\x0d\n  return maybeScheduledTicksOrMicrotasks ||\x0d\n         pendingUnhandledRejections.length !== 0;\x0d\n}\x0d\n\x0d\nfunction getErrorWithoutStack(name\x2C message) {\x0d\n  // Reset the stack to prevent any overhead.\x0d\n  const tmp = Error.stackTraceLimit;\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmp;\x0d\n  ObjectDefineProperty(err\x2C 'name'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: name\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction generateUnhandledRejectionError(reason) {\x0d\n  const message =\x0d\n    'This error originated either by ' +\x0d\n    'throwing inside of an async function without a catch block\x2C ' +\x0d\n    'or by rejecting a promise which was not handled with .catch().' +\x0d\n    ' The promise rejected with the reason ' +\x0d\n    `"${noSideEffectsToString(reason)}".`;\x0d\n\x0d\n  const err = getErrorWithoutStack('UnhandledPromiseRejection'\x2C message);\x0d\n  err.code = 'ERR_UNHANDLED_REJECTION';\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction listenForRejections() {\x0d\n  setPromiseRejectCallback(promiseRejectHandler);\x0d\n}\x0d\nmodule.exports = {\x0d\n  hasRejectionToWarn\x2C\x0d\n  setHasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x2C\x0d\n};\x0d\n
code-source-info,0x37947c9bbe
code-creation,LazyCompile,10,242718,0x37947c9cb46,25,setHasRejectionToWarn node:internal/process/promises:75:31,0x233c001dd78,~
code-source-info,0x37947c9cb46,33,2169,2231,C0O2182C7O2191C12O2214C19O2212C24O2230,,
tick,0x7fffe05afeb4,248865,0,0x0,8
tick,0x7fffe05afeb4,264856,0,0x0,8
tick,0x7fffe05afeb4,280768,0,0x0,8
tick,0x7fffe05afeb4,295897,0,0x0,8
tick,0x7fffe05afeb4,311895,0,0x0,8
tick,0x7fffe05afeb4,328035,0,0x0,8
tick,0x7fffe05afeb4,343733,0,0x0,8
tick,0x7fffe05afeb4,360030,0,0x0,8
tick,0x7fffe05afeb4,375770,0,0x0,8
tick,0x7fffe05afeb4,391844,0,0x0,8
tick,0x7fffe05afeb4,412240,0,0x0,8
tick,0x7fffe05afeb4,423971,0,0x0,8
tick,0x7fffe05afeb4,440109,0,0x0,8
tick,0x7fffe05afeb4,455946,0,0x0,8
tick,0x7fffe05afeb4,471892,0,0x0,8
tick,0x7fffe05afeb4,487899,0,0x0,8
tick,0x7fffe05afeb4,503831,0,0x0,8
tick,0x7fffe05afeb4,519299,0,0x0,8
tick,0x7fffe05afeb4,534910,0,0x0,8
tick,0x7fffe05afeb4,550949,0,0x0,8
tick,0x7fffe05afeb4,567085,0,0x0,8
tick,0x7fffe05afeb4,583493,0,0x0,8
tick,0x7fffe05afeb4,598935,0,0x0,8
tick,0x7fffe05afeb4,615581,0,0x0,8
tick,0x7fffe05afeb4,630970,0,0x0,8
tick,0x7fffe05afeb4,647058,0,0x0,8
tick,0x7fffe05afeb4,661789,0,0x0,8
tick,0x7fffe05afeb4,677856,0,0x0,8
tick,0x7fffe05afeb4,693743,0,0x0,8
tick,0x7fffe05afeb4,710103,0,0x0,8
tick,0x7fffe05afeb4,725864,0,0x0,8
tick,0x7fffe05afeb4,741807,0,0x0,8
tick,0x7fffe05afeb4,757790,0,0x0,8
tick,0x7fffe05afeb4,772895,0,0x0,8
tick,0x7fffe05afeb4,788801,0,0x0,8
tick,0x7fffe05afeb4,804869,0,0x0,8
tick,0x7fffe05afeb4,822349,0,0x0,8
tick,0x7fffe05afeb4,837095,0,0x0,8
tick,0x7fffe05afeb4,853943,0,0x0,8
tick,0x7fffe05afeb4,868806,0,0x0,8
tick,0x7fffe05afeb4,885272,0,0x0,8
tick,0x7fffe05afeb4,900801,0,0x0,8
tick,0x7fffe05afeb4,916941,0,0x0,8
tick,0x7fffe05afeb4,932913,0,0x0,8
tick,0x7fffe05afeb4,949091,0,0x0,8
tick,0x7fffe05afeb4,965000,0,0x0,8
tick,0x7fffe05afeb4,980871,0,0x0,8
tick,0x7fffe05afeb4,995897,0,0x0,8
tick,0x7fffe05afeb4,1011752,0,0x0,8
tick,0x7fffe05afeb4,1026906,0,0x0,8
tick,0x7fffe05afeb4,1042949,0,0x0,8
tick,0x7fffe05afeb4,1058936,0,0x0,8
tick,0x7fffe05afeb4,1073908,0,0x0,8
tick,0x7fffe05afeb4,1089041,0,0x0,8
tick,0x7fffe05afeb4,1105604,0,0x0,8
tick,0x7fffe05afeb4,1121163,0,0x0,8
tick,0x7fffe05afeb4,1137093,0,0x0,8
tick,0x7fffe05afeb4,1152921,0,0x0,8
tick,0x7fffe05afeb4,1169004,0,0x0,8
tick,0x7fffe05afeb4,1185151,0,0x0,8
tick,0x7fffe05afeb4,1200763,0,0x0,8
tick,0x7fffe05afeb4,1216938,0,0x0,8
tick,0x7fffe05afeb4,1232092,0,0x0,8
tick,0x7fffe05afeb4,1246851,0,0x0,8
tick,0x7fffe05afeb4,1262975,0,0x0,8
tick,0x7fffe05afeb4,1278975,0,0x0,8
tick,0x7fffe05afeb4,1294772,0,0x0,8
tick,0x7fffe05afeb4,1310161,0,0x0,8
tick,0x7fffe05afeb4,1324722,0,0x0,8
tick,0x7fffe05afeb4,1340119,0,0x0,8
tick,0x7fffe05afeb4,1355786,0,0x0,8
tick,0x7fffe05afeb4,1371894,0,0x0,8
tick,0x7fffe05afeb4,1387866,0,0x0,8
tick,0x7fffe05afeb4,1404000,0,0x0,8
tick,0x7fffe05afeb4,1419778,0,0x0,8
tick,0x7fffe05afeb4,1436098,0,0x0,8
tick,0x7fffe05afeb4,1451765,0,0x0,8
tick,0x7fffe05afeb4,1467898,0,0x0,8
tick,0x7fffe05afeb4,1483741,0,0x0,8
tick,0x7fffe05afeb4,1500012,0,0x0,8
tick,0x7fffe05afeb4,1515839,0,0x0,8
tick,0x7fffe05afeb4,1530929,0,0x0,8
tick,0x7fffe05afeb4,1546731,0,0x0,8
tick,0x7fffe05afeb4,1562878,0,0x0,8
tick,0x7fffe05afeb4,1578818,0,0x0,8
tick,0x7fffe05afeb4,1594778,0,0x0,8
tick,0x7fffe05afeb4,1610849,0,0x0,8
tick,0x7fffe05afeb4,1626923,0,0x0,8
tick,0x7fffe05afeb4,1642832,0,0x0,8
tick,0x7fffe05afeb4,1658971,0,0x0,8
tick,0x7fffe05afeb4,1674748,0,0x0,8
tick,0x7fffe05afeb4,1690895,0,0x0,8
tick,0x7fffe05afeb4,1706748,0,0x0,8
tick,0x7fffe05afeb4,1722782,0,0x0,8
tick,0x7fffe05afeb4,1738977,0,0x0,8
tick,0x7fffe05afeb4,1754899,0,0x0,8
tick,0x7fffe05afeb4,1770860,0,0x0,8
tick,0x7fffe05afeb4,1785861,0,0x0,8
tick,0x7fffe05afeb4,1801822,0,0x0,8
tick,0x7fffe05afeb4,1818073,0,0x0,8
tick,0x7fffe05afeb4,1833748,0,0x0,8
tick,0x7fffe05afeb4,1850023,0,0x0,8
tick,0x7fffe05afeb4,1865850,0,0x0,8
tick,0x7fffe05afeb4,1881930,0,0x0,8
tick,0x7fffe05afeb4,1897791,0,0x0,8
tick,0x7fffe05afeb4,1913761,0,0x0,8
tick,0x7fffe05afeb4,1929850,0,0x0,8
tick,0x7fffe05afeb4,1946106,0,0x0,8
tick,0x7fffe05afeb4,1961898,0,0x0,8
tick,0x7fffe05afeb4,1976883,0,0x0,8
tick,0x7fffe05afeb4,1992726,0,0x0,8
tick,0x7fffe05afeb4,2008875,0,0x0,8
tick,0x7fffe05afeb4,2024748,0,0x0,8
tick,0x7fffe05afeb4,2041184,0,0x0,8
tick,0x7fffe05afeb4,2056781,0,0x0,8
tick,0x7fffe05afeb4,2072926,0,0x0,8
tick,0x7fffe05afeb4,2088872,0,0x0,8
tick,0x7fffe05afeb4,2104850,0,0x0,8
tick,0x7fffe05afeb4,2120732,0,0x0,8
tick,0x7fffe05afeb4,2136873,0,0x0,8
tick,0x7fffe05afeb4,2152843,0,0x0,8
tick,0x7fffe05afeb4,2169021,0,0x0,8
tick,0x7fffe05afeb4,2184951,0,0x0,8
tick,0x7fffe05afeb4,2200845,0,0x0,8
tick,0x7fffe05afeb4,2216757,0,0x0,8
tick,0x7fffe05afeb4,2231861,0,0x0,8
tick,0x7fffe05afeb4,2247761,0,0x0,8
tick,0x7fffe05afeb4,2264041,0,0x0,8
tick,0x7fffe05afeb4,2279877,0,0x0,8
tick,0x7fffe05afeb4,2295955,0,0x0,8
tick,0x7fffe05afeb4,2311815,0,0x0,8
tick,0x7fffe05afeb4,2327919,0,0x0,8
tick,0x7fffe05afeb4,2343732,0,0x0,8
tick,0x7fffe05afeb4,2359989,0,0x0,8
tick,0x7fffe05afeb4,2375830,0,0x0,8
tick,0x7fffe05afeb4,2392654,0,0x0,8
tick,0x7fffe05afeb4,2407850,0,0x0,8
tick,0x7fffe05afeb4,2424503,0,0x0,8
tick,0x7fffe05afeb4,2439845,0,0x0,8
tick,0x7fffe05afeb4,2455950,0,0x0,8
tick,0x7fffe05afeb4,2471028,0,0x0,8
tick,0x7fffe05afeb4,2486997,0,0x0,8
tick,0x7fffe05afeb4,2502752,0,0x0,8
tick,0x7fffe05afeb4,2519054,0,0x0,8
tick,0x7fffe05afeb4,2534773,0,0x0,8
tick,0x7fffe05afeb4,2550868,0,0x0,8
tick,0x7fffe05afeb4,2567045,0,0x0,8
tick,0x7fffe05afeb4,2582890,0,0x0,8
tick,0x7fffe05afeb4,2598736,0,0x0,8
tick,0x7fffe05afeb4,2614864,0,0x0,8
tick,0x7fffe05afeb4,2630858,0,0x0,8
tick,0x7fffe05afeb4,2645809,0,0x0,8
tick,0x7fffe05afeb4,2661807,0,0x0,8
tick,0x7fffe05afeb4,2677882,0,0x0,8
tick,0x7fffe05afeb4,2693822,0,0x0,8
tick,0x7fffe05afeb4,2709946,0,0x0,8
tick,0x7fffe05afeb4,2725818,0,0x0,8
tick,0x7fffe05afeb4,2742217,0,0x0,8
tick,0x7fffe05afeb4,2756749,0,0x0,8
tick,0x7fffe05afeb4,2772950,0,0x0,8
tick,0x7fffe05afeb4,2788828,0,0x0,8
tick,0x7fffe05afeb4,2804938,0,0x0,8
tick,0x7fffe05afeb4,2820959,0,0x0,8
tick,0x7fffe05afeb4,2835902,0,0x0,8
tick,0x7fffe05afeb4,2851737,0,0x0,8
tick,0x7fffe05afeb4,2867793,0,0x0,8
tick,0x7fffe05afeb4,2883785,0,0x0,8
tick,0x7fffe05afeb4,2899969,0,0x0,8
tick,0x7fffe05afeb4,2915749,0,0x0,8
tick,0x7fffe05afeb4,2930918,0,0x0,8
tick,0x7fffe05afeb4,2946827,0,0x0,8
tick,0x7fffe05afeb4,2962851,0,0x0,8
tick,0x7fffe05afeb4,2979379,0,0x0,8
tick,0x7fffe05afeb4,2994892,0,0x0,8
tick,0x7fffe05afeb4,3010728,0,0x0,8
tick,0x7fffe05afeb4,3026842,0,0x0,8
tick,0x7fffe05afeb4,3042844,0,0x0,8
tick,0x7fffe05afeb4,3058775,0,0x0,8
tick,0x7fffe05afeb4,3074761,0,0x0,8
tick,0x7fffe05afeb4,3090859,0,0x0,8
tick,0x7fffe05afeb4,3105818,0,0x0,8
tick,0x7fffe05afeb4,3121931,0,0x0,8
tick,0x7fffe05afeb4,3137815,0,0x0,8
tick,0x7fffe05afeb4,3153896,0,0x0,8
tick,0x7fffe05afeb4,3170053,0,0x0,8
tick,0x7fffe05afeb4,3186023,0,0x0,8
tick,0x7fffe05afeb4,3201723,0,0x0,8
tick,0x7fffe05afeb4,3217892,0,0x0,8
tick,0x7fffe05afeb4,3233829,0,0x0,8
tick,0x7fffe05afeb4,3249910,0,0x0,8
tick,0x7fffe05afeb4,3265901,0,0x0,8
tick,0x7fffe05afeb4,3281943,0,0x0,8
tick,0x7fffe05afeb4,3296735,0,0x0,8
tick,0x7fffe05afeb4,3312827,0,0x0,8
tick,0x7fffe05afeb4,3328913,0,0x0,8
tick,0x7fffe05afeb4,3345045,0,0x0,8
tick,0x7fffe05afeb4,3360872,0,0x0,8
tick,0x7fffe05afeb4,3376901,0,0x0,8
tick,0x7fffe05afeb4,3392798,0,0x0,8
tick,0x7fffe05afeb4,3408924,0,0x0,8
tick,0x7fffe05afeb4,3424743,0,0x0,8
tick,0x7fffe05afeb4,3440893,0,0x0,8
tick,0x7fffe05afeb4,3456812,0,0x0,8
tick,0x7fffe05afeb4,3472993,0,0x0,8
tick,0x7fffe05afeb4,3488939,0,0x0,8
tick,0x7fffe05afeb4,3503794,0,0x0,8
tick,0x7fffe05afeb4,3519947,0,0x0,8
tick,0x7fffe05afeb4,3535955,0,0x0,8
tick,0x7fffe05afeb4,3550720,0,0x0,8
tick,0x7fffe05afeb4,3566882,0,0x0,8
tick,0x7fffe05afeb4,3582962,0,0x0,8
tick,0x7fffe05afeb4,3598969,0,0x0,8
tick,0x7fffe05afeb4,3614743,0,0x0,8
tick,0x7fffe05afeb4,3630974,0,0x0,8
tick,0x7fffe05afeb4,3645758,0,0x0,8
tick,0x7fffe05afeb4,3661826,0,0x0,8
tick,0x7fffe05afeb4,3677787,0,0x0,8
tick,0x7fffe05afeb4,3693768,0,0x0,8
tick,0x7fffe05afeb4,3709858,0,0x0,8
tick,0x7fffe05afeb4,3725969,0,0x0,8
tick,0x7fffe05afeb4,3741782,0,0x0,8
tick,0x7fffe05afeb4,3757848,0,0x0,8
tick,0x7fffe05afeb4,3772758,0,0x0,8
tick,0x7fffe05afeb4,3787856,0,0x0,8
tick,0x7fffe05afeb4,3803765,0,0x0,8
tick,0x7fffe05afeb4,3819968,0,0x0,8
tick,0x7fffe05afeb4,3835770,0,0x0,8
tick,0x7fffe05afeb4,3850860,0,0x0,8
tick,0x7fffe05afeb4,3865813,0,0x0,8
tick,0x7fffe05afeb4,3881781,0,0x0,8
tick,0x7fffe05afeb4,3897735,0,0x0,8
tick,0x7fffe05afeb4,3912878,0,0x0,8
tick,0x7fffe05afeb4,3928745,0,0x0,8
tick,0x7fffe05afeb4,3944904,0,0x0,8
tick,0x7fffe05afeb4,3960803,0,0x0,8
tick,0x7fffe05afeb4,3977023,0,0x0,8
tick,0x7fffe05afeb4,3991737,0,0x0,8
tick,0x7fffe05afeb4,4007784,0,0x0,8
tick,0x7fffe05afeb4,4023751,0,0x0,8
tick,0x7fffe05afeb4,4039910,0,0x0,8
tick,0x7fffe05afeb4,4055764,0,0x0,8
tick,0x7fffe05afeb4,4071883,0,0x0,8
tick,0x7fffe05afeb4,4087017,0,0x0,8
tick,0x7fffe05afeb4,4111015,0,0x0,8
tick,0x7fffe05afeb4,4118736,0,0x0,8
tick,0x7fffe05afeb4,4135199,0,0x0,8
tick,0x7fffe05afeb4,4150848,0,0x0,8
tick,0x7fffe05afeb4,4166971,0,0x0,8
tick,0x7fffe05afeb4,4182837,0,0x0,8
tick,0x7fffe05afeb4,4198861,0,0x0,8
tick,0x7fffe05afeb4,4214823,0,0x0,8
tick,0x7fffe05afeb4,4230827,0,0x0,8
tick,0x7fffe05afeb4,4246745,0,0x0,8
tick,0x7fffe05afeb4,4262756,0,0x0,8
tick,0x7fffe05afeb4,4278837,0,0x0,8
tick,0x7fffe05afeb4,4294763,0,0x0,8
tick,0x7fffe05afeb4,4310768,0,0x0,8
tick,0x7fffe05afeb4,4326741,0,0x0,8
tick,0x7fffe05afeb4,4342807,0,0x0,8
tick,0x7fffe05afeb4,4358767,0,0x0,8
tick,0x7fffe05afeb4,4373744,0,0x0,8
tick,0x7fffe05afeb4,4389882,0,0x0,8
tick,0x7fffe05afeb4,4405825,0,0x0,8
tick,0x7fffe05afeb4,4421734,0,0x0,8
tick,0x7fffe05afeb4,4437746,0,0x0,8
tick,0x7fffe05afeb4,4453812,0,0x0,8
tick,0x7fffe05afeb4,4469764,0,0x0,8
tick,0x7fffe05afeb4,4485766,0,0x0,8
tick,0x7fffe05afeb4,4501807,0,0x0,8
tick,0x7fffe05afeb4,4517824,0,0x0,8
tick,0x7fffe05afeb4,4533833,0,0x0,8
tick,0x7fffe05afeb4,4549780,0,0x0,8
tick,0x7fffe05afeb4,4565791,0,0x0,8
tick,0x7fffe05afeb4,4581772,0,0x0,8
tick,0x7fffe05afeb4,4596725,0,0x0,8
tick,0x7fffe05afeb4,4612774,0,0x0,8
tick,0x7fffe05afeb4,4627774,0,0x0,8
tick,0x7fffe05afeb4,4643784,0,0x0,8
tick,0x7fffe05afeb4,4659762,0,0x0,8
tick,0x7fffe05afeb4,4674832,0,0x0,8
tick,0x7fffe05afeb4,4690751,0,0x0,8
tick,0x7fffe05afeb4,4706873,0,0x0,8
tick,0x7fffe05afeb4,4722937,0,0x0,8
tick,0x7fffe05afeb4,4738833,0,0x0,8
tick,0x7fffe05afeb4,4755013,0,0x0,8
tick,0x7fffe05afeb4,4770834,0,0x0,8
tick,0x7fffe05afeb4,4785739,0,0x0,8
tick,0x7fffe05afeb4,4801745,0,0x0,8
tick,0x7fffe05afeb4,4817828,0,0x0,8
tick,0x7fffe05afeb4,4833751,0,0x0,8
tick,0x7fffe05afeb4,4848850,0,0x0,8
tick,0x7fffe05afeb4,4864828,0,0x0,8
tick,0x7fffe05afeb4,4880826,0,0x0,8
tick,0x7fffe05afeb4,4896747,0,0x0,8
tick,0x7fffe05afeb4,4912731,0,0x0,8
tick,0x7fffe05afeb4,4928765,0,0x0,8
tick,0x7fffe05afeb4,4944857,0,0x0,8
tick,0x7fffe05afeb4,4960793,0,0x0,8
tick,0x7fffe05afeb4,4976931,0,0x0,8
tick,0x7fffe05afeb4,4992747,0,0x0,8
tick,0x7fffe05afeb4,5008871,0,0x0,8
tick,0x7fffe05afeb4,5024764,0,0x0,8
tick,0x7fffe05afeb4,5040905,0,0x0,8
tick,0x7fffe05afeb4,5056817,0,0x0,8
tick,0x7fffe05afeb4,5072763,0,0x0,8
tick,0x7fffe05afeb4,5088765,0,0x0,8
tick,0x7fffe05afeb4,5104743,0,0x0,8
tick,0x7fffe05afeb4,5120748,0,0x0,8
tick,0x7fffe05afeb4,5136742,0,0x0,8
tick,0x7fffe05afeb4,5152831,0,0x0,8
tick,0x7fffe05afeb4,5168826,0,0x0,8
tick,0x7fffe05afeb4,5184857,0,0x0,8
tick,0x7fffe05afeb4,5199767,0,0x0,8
tick,0x7fffe05afeb4,5215755,0,0x0,8
tick,0x7fffe05afeb4,5230738,0,0x0,8
tick,0x7fffe05afeb4,5246741,0,0x0,8
tick,0x7fffe05afeb4,5261816,0,0x0,8
tick,0x7fffe05afeb4,5277843,0,0x0,8
tick,0x7fffe05afeb4,5293745,0,0x0,8
tick,0x7fffe05afeb4,5310018,0,0x0,8
tick,0x7fffe05afeb4,5324748,0,0x0,8
tick,0x7fffe05afeb4,5340737,0,0x0,8
tick,0x7fffe05afeb4,5355812,0,0x0,8
tick,0x7fffe05afeb4,5371795,0,0x0,8
tick,0x7fffe05afeb4,5387761,0,0x0,8
tick,0x7fffe05afeb4,5402752,0,0x0,8
tick,0x7fffe05afeb4,5417734,0,0x0,8
tick,0x7fffe05afeb4,5433734,0,0x0,8
tick,0x7fffe05afeb4,5449851,0,0x0,8
tick,0x7fffe05afeb4,5464721,0,0x0,8
tick,0x7fffe05afeb4,5479768,0,0x0,8
tick,0x7fffe05afeb4,5495783,0,0x0,8
tick,0x7fffe05afeb4,5511755,0,0x0,8
tick,0x7fffe05afeb4,5527749,0,0x0,8
tick,0x7fffe05afeb4,5543747,0,0x0,8
tick,0x7fffe05afeb4,5558788,0,0x0,8
tick,0x7fffe05afeb4,5573851,0,0x0,8
tick,0x7fffe05afeb4,5589853,0,0x0,8
tick,0x7fffe05afeb4,5605782,0,0x0,8
tick,0x7fffe05afeb4,5621851,0,0x0,8
tick,0x7fffe05afeb4,5636820,0,0x0,8
tick,0x7fffe05afeb4,5652819,0,0x0,8
tick,0x7fffe05afeb4,5668783,0,0x0,8
tick,0x7fffe05afeb4,5684779,0,0x0,8
tick,0x7fffe05afeb4,5700798,0,0x0,8
tick,0x7fffe05afeb4,5716901,0,0x0,8
tick,0x7fffe05afeb4,5731751,0,0x0,8
tick,0x7fffe05afeb4,5746817,0,0x0,8
tick,0x7fffe05afeb4,5762777,0,0x0,8
tick,0x7fffe05afeb4,5778893,0,0x0,8
tick,0x7fffe05afeb4,5794740,0,0x0,8
tick,0x7fffe05afeb4,5810737,0,0x0,8
tick,0x7fffe05afeb4,5826831,0,0x0,8
tick,0x7fffe05afeb4,5842830,0,0x0,8
tick,0x7fffe05afeb4,5858810,0,0x0,8
tick,0x7fffe05afeb4,5874806,0,0x0,8
tick,0x7fffe05afeb4,5890740,0,0x0,8
tick,0x7fffe05afeb4,5906732,0,0x0,8
tick,0x7fffe05afeb4,5922726,0,0x0,8
tick,0x7fffe05afeb4,5938855,0,0x0,8
tick,0x7fffe05afeb4,5954737,0,0x0,8
tick,0x7fffe05afeb4,5970822,0,0x0,8
tick,0x7fffe05afeb4,5985817,0,0x0,8
tick,0x7fffe05afeb4,6001732,0,0x0,8
tick,0x7fffe05afeb4,6017719,0,0x0,8
tick,0x7fffe05afeb4,6033808,0,0x0,8
tick,0x7fffe05afeb4,6049781,0,0x0,8
tick,0x7fffe05afeb4,6065831,0,0x0,8
tick,0x7fffe05afeb4,6081741,0,0x0,8
tick,0x7fffe05afeb4,6096823,0,0x0,8
tick,0x7fffe05afeb4,6112746,0,0x0,8
tick,0x7fffe05afeb4,6127721,0,0x0,8
tick,0x7fffe05afeb4,6142803,0,0x0,8
tick,0x7fffe05afeb4,6158917,0,0x0,8
tick,0x7fffe05afeb4,6174761,0,0x0,8
tick,0x7fffe05afeb4,6190768,0,0x0,8
tick,0x7fffe05afeb4,6206783,0,0x0,8
tick,0x7fffe05afeb4,6222746,0,0x0,8
tick,0x7fffe05afeb4,6238761,0,0x0,8
tick,0x7fffe05afeb4,6254811,0,0x0,8
tick,0x7fffe05afeb4,6270776,0,0x0,8
tick,0x7fffe05afeb4,6286839,0,0x0,8
tick,0x7fffe05afeb4,6302733,0,0x0,8
tick,0x7fffe05afeb4,6318825,0,0x0,8
tick,0x7fffe05afeb4,6334741,0,0x0,8
tick,0x7fffe05afeb4,6350729,0,0x0,8
tick,0x7fffe05afeb4,6366761,0,0x0,8
tick,0x7fffe05afeb4,6382795,0,0x0,8
tick,0x7fffe05afeb4,6398884,0,0x0,8
tick,0x7fffe05afeb4,6413729,0,0x0,8
tick,0x7fffe05afeb4,6429789,0,0x0,8
tick,0x7fffe05afeb4,6445941,0,0x0,8
tick,0x7fffe05afeb4,6461769,0,0x0,8
tick,0x7fffe05afeb4,6477899,0,0x0,8
tick,0x7fffe05afeb4,6493846,0,0x0,8
tick,0x7fffe05afeb4,6509821,0,0x0,8
tick,0x7fffe05afeb4,6525828,0,0x0,8
tick,0x7fffe05afeb4,6541818,0,0x0,8
tick,0x7fffe05afeb4,6557901,0,0x0,8
tick,0x7fffe05afeb4,6573740,0,0x0,8
tick,0x7fffe05afeb4,6589789,0,0x0,8
tick,0x7fffe05afeb4,6605760,0,0x0,8
tick,0x7fffe05afeb4,6621842,0,0x0,8
tick,0x7fffe05afeb4,6636817,0,0x0,8
tick,0x7fffe05afeb4,6652821,0,0x0,8
tick,0x7fffe05afeb4,6668827,0,0x0,8
tick,0x7fffe05afeb4,6684821,0,0x0,8
tick,0x7fffe05afeb4,6700745,0,0x0,8
tick,0x7fffe05afeb4,6716736,0,0x0,8
tick,0x7fffe05afeb4,6732837,0,0x0,8
tick,0x7fffe05afeb4,6748825,0,0x0,8
tick,0x7fffe05afeb4,6764832,0,0x0,8
tick,0x7fffe05afeb4,6780947,0,0x0,8
tick,0x7fffe05afeb4,6795731,0,0x0,8
tick,0x7fffe05afeb4,6811735,0,0x0,8
tick,0x7fffe05afeb4,6827733,0,0x0,8
tick,0x7fffe05afeb4,6842738,0,0x0,8
tick,0x7fffe05afeb4,6858740,0,0x0,8
tick,0x7fffe05afeb4,6874809,0,0x0,8
tick,0x7fffe05afeb4,6890740,0,0x0,8
tick,0x7fffe05afeb4,6906825,0,0x0,8
tick,0x7fffe05afeb4,6922742,0,0x0,8
tick,0x7fffe05afeb4,6938825,0,0x0,8
tick,0x7fffe05afeb4,6954855,0,0x0,8
tick,0x7fffe05afeb4,6969768,0,0x0,8
tick,0x7fffe05afeb4,6985828,0,0x0,8
tick,0x7fffe05afeb4,7001743,0,0x0,8
tick,0x7fffe05afeb4,7017845,0,0x0,8
tick,0x7fffe05afeb4,7033819,0,0x0,8
tick,0x7fffe05afeb4,7048754,0,0x0,8
tick,0x7fffe05afeb4,7064763,0,0x0,8
tick,0x7fffe05afeb4,7079772,0,0x0,8
tick,0x7fffe05afeb4,7095780,0,0x0,8
tick,0x7fffe05afeb4,7111738,0,0x0,8
tick,0x7fffe05afeb4,7127731,0,0x0,8
tick,0x7fffe05afeb4,7143731,0,0x0,8
tick,0x7fffe05afeb4,7159775,0,0x0,8
tick,0x7fffe05afeb4,7175783,0,0x0,8
tick,0x7fffe05afeb4,7191757,0,0x0,8
tick,0x7fffe05afeb4,7206739,0,0x0,8
tick,0x7fffe05afeb4,7222802,0,0x0,8
tick,0x7fffe05afeb4,7238746,0,0x0,8
tick,0x7fffe05afeb4,7253815,0,0x0,8
tick,0x7fffe05afeb4,7269805,0,0x0,8
tick,0x7fffe05afeb4,7285783,0,0x0,8
tick,0x7fffe05afeb4,7301739,0,0x0,8
tick,0x7fffe05afeb4,7317819,0,0x0,8
tick,0x7fffe05afeb4,7333742,0,0x0,8
tick,0x7fffe05afeb4,7349759,0,0x0,8
tick,0x7fffe05afeb4,7365779,0,0x0,8
tick,0x7fffe05afeb4,7381724,0,0x0,8
tick,0x7fffe05afeb4,7397839,0,0x0,8
tick,0x7fffe05afeb4,7413739,0,0x0,8
tick,0x7fffe05afeb4,7429790,0,0x0,8
tick,0x7fffe05afeb4,7445746,0,0x0,8
tick,0x7fffe05afeb4,7461823,0,0x0,8
tick,0x7fffe05afeb4,7476763,0,0x0,8
tick,0x7fffe05afeb4,7491741,0,0x0,8
tick,0x7fffe05afeb4,7507751,0,0x0,8
tick,0x7fffe05afeb4,7523751,0,0x0,8
tick,0x7fffe05afeb4,7539990,0,0x0,8
tick,0x7fffe05afeb4,7555744,0,0x0,8
tick,0x7fffe05afeb4,7571853,0,0x0,8
tick,0x7fffe05afeb4,7587750,0,0x0,8
tick,0x7fffe05afeb4,7603787,0,0x0,8
tick,0x7fffe05afeb4,7619794,0,0x0,8
tick,0x7fffe05afeb4,7635761,0,0x0,8
tick,0x7fffe05afeb4,7651759,0,0x0,8
tick,0x7fffe05afeb4,7667746,0,0x0,8
tick,0x7fffe05afeb4,7683771,0,0x0,8
tick,0x7fffe05afeb4,7699760,0,0x0,8
tick,0x7fffe05afeb4,7715731,0,0x0,8
tick,0x7fffe05afeb4,7731901,0,0x0,8
tick,0x7fffe05afeb4,7746924,0,0x0,8
tick,0x7fffe05afeb4,7762741,0,0x0,8
tick,0x7fffe05afeb4,7778757,0,0x0,8
tick,0x7fffe05afeb4,7794747,0,0x0,8
tick,0x7fffe05afeb4,7810742,0,0x0,8
tick,0x7fffe05afeb4,7826848,0,0x0,8
tick,0x7fffe05afeb4,7842834,0,0x0,8
tick,0x7fffe05afeb4,7858789,0,0x0,8
tick,0x7fffe05afeb4,7874739,0,0x0,8
tick,0x7fffe05afeb4,7890753,0,0x0,8
tick,0x7fffe05afeb4,7906722,0,0x0,8
tick,0x7fffe05afeb4,7923749,0,0x0,8
tick,0x7fffe05afeb4,7938864,0,0x0,8
tick,0x7fffe05afeb4,7954890,0,0x0,8
tick,0x7fffe05afeb4,7970739,0,0x0,8
tick,0x7fffe05afeb4,7986804,0,0x0,8
tick,0x7fffe05afeb4,8002829,0,0x0,8
tick,0x7fffe05afeb4,8018844,0,0x0,8
tick,0x7fffe05afeb4,8034821,0,0x0,8
tick,0x7fffe05afeb4,8050779,0,0x0,8
tick,0x7fffe05afeb4,8066789,0,0x0,8
tick,0x7fffe05afeb4,8083085,0,0x0,8
tick,0x7fffe05afeb4,8098829,0,0x0,8
tick,0x7fffe05afeb4,8114851,0,0x0,8
tick,0x7fffe05afeb4,8130778,0,0x0,8
tick,0x7fffe05afeb4,8145939,0,0x0,8
tick,0x7fffe05afeb4,8161819,0,0x0,8
tick,0x7fffe05afeb4,8177771,0,0x0,8
tick,0x7fffe05afeb4,8193744,0,0x0,8
tick,0x7fffe05afeb4,8209823,0,0x0,8
tick,0x7fffe05afeb4,8225797,0,0x0,8
tick,0x7fffe05afeb4,8241812,0,0x0,8
tick,0x7fffe05afeb4,8257727,0,0x0,8
tick,0x7fffe05afeb4,8273885,0,0x0,8
tick,0x7fffe05afeb4,8289868,0,0x0,8
tick,0x7fffe05afeb4,8305767,0,0x0,8
tick,0x7fffe05afeb4,8322206,0,0x0,8
tick,0x7fffe05afeb4,8337753,0,0x0,8
tick,0x7fffe05afeb4,8353642,0,0x0,8
tick,0x7fffe05afeb4,8367777,0,0x0,8
tick,0x7fffe05afeb4,8383922,0,0x0,8
tick,0x7fffe05afeb4,8399822,0,0x0,8
tick,0x7fffe05afeb4,8415893,0,0x0,8
tick,0x7fffe05afeb4,8430836,0,0x0,8
tick,0x7fffe05afeb4,8445791,0,0x0,8
tick,0x7fffe05afeb4,8461882,0,0x0,8
tick,0x7fffe05afeb4,8478094,0,0x0,8
tick,0x7fffe05afeb4,8493767,0,0x0,8
tick,0x7fffe05afeb4,8510220,0,0x0,8
tick,0x7fffe05afeb4,8525835,0,0x0,8
tick,0x7fffe05afeb4,8541832,0,0x0,8
tick,0x7fffe05afeb4,8557819,0,0x0,8
tick,0x7fffe05afeb4,8572926,0,0x0,8
tick,0x7fffe05afeb4,8587737,0,0x0,8
tick,0x7fffe05afeb4,8602796,0,0x0,8
tick,0x7fffe05afeb4,8618759,0,0x0,8
tick,0x7fffe05afeb4,8633881,0,0x0,8
tick,0x7fffe05afeb4,8649845,0,0x0,8
tick,0x7fffe05afeb4,8666045,0,0x0,8
tick,0x7fffe05afeb4,8680774,0,0x0,8
tick,0x7fffe05afeb4,8695952,0,0x0,8
tick,0x7fffe05afeb4,8711769,0,0x0,8
tick,0x7fffe05afeb4,8726843,0,0x0,8
tick,0x7fffe05afeb4,8742867,0,0x0,8
tick,0x7fffe05afeb4,8760164,0,0x0,8
tick,0x7fffe05afeb4,8774808,0,0x0,8
tick,0x7fffe05afeb4,8789905,0,0x0,8
tick,0x7fffe05afeb4,8805764,0,0x0,8
tick,0x7fffe05afeb4,8822266,0,0x0,8
tick,0x7fffe05afeb4,8837839,0,0x0,8
tick,0x7fffe05afeb4,8853924,0,0x0,8
tick,0x7fffe05afeb4,8869854,0,0x0,8
tick,0x7fffe05afeb4,8885828,0,0x0,8
tick,0x7fffe05afeb4,8901744,0,0x0,8
tick,0x7fffe05afeb4,8917843,0,0x0,8
tick,0x7fffe05afeb4,8933814,0,0x0,8
tick,0x7fffe05afeb4,8950096,0,0x0,8
tick,0x7fffe05afeb4,8965826,0,0x0,8
tick,0x7fffe05afeb4,8981758,0,0x0,8
tick,0x7fffe05afeb4,8996778,0,0x0,8
tick,0x7fffe05afeb4,9012757,0,0x0,8
tick,0x7fffe05afeb4,9028727,0,0x0,8
tick,0x7fffe05afeb4,9044786,0,0x0,8
tick,0x7fffe05afeb4,9061043,0,0x0,8
tick,0x7fffe05afeb4,9077147,0,0x0,8
tick,0x7fffe05afeb4,9092940,0,0x0,8
tick,0x7fffe05afeb4,9108824,0,0x0,8
tick,0x7fffe05afeb4,9123772,0,0x0,8
tick,0x7fffe05afeb4,9139955,0,0x0,8
tick,0x7fffe05afeb4,9155907,0,0x0,8
tick,0x7fffe05afeb4,9171107,0,0x0,8
tick,0x7fffe05afeb4,9186909,0,0x0,8
tick,0x7fffe05afeb4,9202848,0,0x0,8
tick,0x7fffe05afeb4,9218739,0,0x0,8
tick,0x7fffe05afeb4,9235088,0,0x0,8
tick,0x7fffe05afeb4,9250883,0,0x0,8
tick,0x7fffe05afeb4,9266944,0,0x0,8
tick,0x7fffe05afeb4,9282835,0,0x0,8
tick,0x7fffe05afeb4,9299006,0,0x0,8
tick,0x7fffe05afeb4,9314806,0,0x0,8
tick,0x7fffe05afeb4,9330939,0,0x0,8
tick,0x7fffe05afeb4,9345820,0,0x0,8
tick,0x7fffe05afeb4,9361996,0,0x0,8
tick,0x7fffe05afeb4,9377877,0,0x0,8
tick,0x7fffe05afeb4,9393042,0,0x0,8
tick,0x7fffe05afeb4,9407739,0,0x0,8
tick,0x7fffe05afeb4,9423748,0,0x0,8
tick,0x7fffe05afeb4,9439918,0,0x0,8
tick,0x7fffe05afeb4,9456054,0,0x0,8
tick,0x7fffe05afeb4,9470842,0,0x0,8
tick,0x7fffe05afeb4,9487136,0,0x0,8
tick,0x7fffe05afeb4,9502867,0,0x0,8
tick,0x7fffe05afeb4,9517831,0,0x0,8
tick,0x7fffe05afeb4,9533799,0,0x0,8
tick,0x7fffe05afeb4,9549916,0,0x0,8
tick,0x7fffe05afeb4,9564853,0,0x0,8
tick,0x7fffe05afeb4,9579963,0,0x0,8
tick,0x7fffe05afeb4,9595817,0,0x0,8
tick,0x7fffe05afeb4,9612306,0,0x0,8
tick,0x7fffe05afeb4,9627767,0,0x0,8
tick,0x7fffe05afeb4,9643934,0,0x0,8
tick,0x7fffe05afeb4,9659748,0,0x0,8
tick,0x7fffe05afeb4,9676075,0,0x0,8
tick,0x7fffe05afeb4,9691749,0,0x0,8
tick,0x7fffe05afeb4,9707858,0,0x0,8
tick,0x7fffe05afeb4,9722751,0,0x0,8
tick,0x7fffe05afeb4,9738962,0,0x0,8
tick,0x7fffe05afeb4,9754752,0,0x0,8
tick,0x7fffe05afeb4,9770868,0,0x0,8
tick,0x7fffe05afeb4,9785924,0,0x0,8
tick,0x7fffe05afeb4,9801954,0,0x0,8
tick,0x7fffe05afeb4,9817821,0,0x0,8
tick,0x7fffe05afeb4,9834405,0,0x0,8
tick,0x7fffe05afeb4,9849834,0,0x0,8
tick,0x7fffe05afeb4,9865815,0,0x0,8
tick,0x7fffe05afeb4,9881755,0,0x0,8
tick,0x7fffe05afeb4,9898063,0,0x0,8
tick,0x7fffe05afeb4,9913820,0,0x0,8
tick,0x7fffe05afeb4,9929104,0,0x0,8
tick,0x7fffe05afeb4,9944963,0,0x0,8
tick,0x7fffe05afeb4,9960935,0,0x0,8
tick,0x7fffe05afeb4,9976739,0,0x0,8
tick,0x7fffe05afeb4,9992812,0,0x0,8
tick,0x7fffe05afeb4,10009789,0,0x0,8
tick,0x7fffe05afeb4,10024907,0,0x0,8
tick,0x7fffe05afeb4,10041565,0,0x0,8
tick,0x7fffe05afeb4,10056779,0,0x0,8
tick,0x7fffe05afeb4,10072829,0,0x0,8
tick,0x7fffe05afeb4,10089024,0,0x0,8
tick,0x7fffe05afeb4,10104903,0,0x0,8
tick,0x7fffe05afeb4,10120757,0,0x0,8
tick,0x7fffe05afeb4,10136817,0,0x0,8
tick,0x7fffe05afeb4,10152887,0,0x0,8
tick,0x7fffe05afeb4,10169257,0,0x0,8
tick,0x7fffe05afeb4,10183826,0,0x0,8
tick,0x7fffe05afeb4,10199825,0,0x0,8
tick,0x7fffe05afeb4,10215804,0,0x0,8
tick,0x7fffe05afeb4,10230831,0,0x0,8
tick,0x7fffe05afeb4,10246747,0,0x0,8
tick,0x7fffe05afeb4,10261871,0,0x0,8
tick,0x7fffe05afeb4,10278039,0,0x0,8
tick,0x7fffe05afeb4,10293817,0,0x0,8
tick,0x7fffe05afeb4,10309849,0,0x0,8
tick,0x7fffe05afeb4,10325784,0,0x0,8
tick,0x7fffe05afeb4,10341860,0,0x0,8
tick,0x7fffe05afeb4,10357767,0,0x0,8
tick,0x7fffe05afeb4,10373809,0,0x0,8
tick,0x7fffe05afeb4,10389920,0,0x0,8
tick,0x7fffe05afeb4,10405920,0,0x0,8
tick,0x7fffe05afeb4,10421800,0,0x0,8
tick,0x7fffe05afeb4,10437818,0,0x0,8
tick,0x7fffe05afeb4,10453822,0,0x0,8
tick,0x7fffe05afeb4,10469868,0,0x0,8
tick,0x7fffe05afeb4,10485811,0,0x0,8
tick,0x7fffe05afeb4,10501896,0,0x0,8
tick,0x7fffe05afeb4,10517737,0,0x0,8
tick,0x7fffe05afeb4,10534024,0,0x0,8
tick,0x7fffe05afeb4,10549774,0,0x0,8
tick,0x7fffe05afeb4,10565823,0,0x0,8
tick,0x7fffe05afeb4,10582562,0,0x0,8
tick,0x7fffe05afeb4,10597896,0,0x0,8
tick,0x7fffe05afeb4,10613848,0,0x0,8
tick,0x7fffe05afeb4,10629933,0,0x0,8
tick,0x7fffe05afeb4,10645753,0,0x0,8
tick,0x7fffe05afeb4,10661907,0,0x0,8
tick,0x7fffe05afeb4,10677832,0,0x0,8
tick,0x7fffe05afeb4,10692903,0,0x0,8
tick,0x7fffe05afeb4,10708920,0,0x0,8
tick,0x7fffe05afeb4,10724969,0,0x0,8
tick,0x7fffe05afeb4,10740791,0,0x0,8
tick,0x7fffe05afeb4,10756743,0,0x0,8
tick,0x7fffe05afeb4,10771814,0,0x0,8
tick,0x7fffe05afeb4,10787801,0,0x0,8
tick,0x7fffe05afeb4,10802762,0,0x0,8
tick,0x7fffe05afeb4,10818844,0,0x0,8
tick,0x7fffe05afeb4,10833807,0,0x0,8
tick,0x7fffe05afeb4,10849936,0,0x0,8
tick,0x7fffe05afeb4,10865850,0,0x0,8
tick,0x7fffe05afeb4,10881785,0,0x0,8
tick,0x7fffe05afeb4,10897795,0,0x0,8
tick,0x7fffe05afeb4,10913840,0,0x0,8
tick,0x7fffe05afeb4,10929967,0,0x0,8
tick,0x7fffe05afeb4,10946722,0,0x0,8
tick,0x7fffe05afeb4,10961862,0,0x0,8
tick,0x7fffe05afeb4,10978050,0,0x0,8
tick,0x7fffe05afeb4,10993775,0,0x0,8
tick,0x7fffe05afeb4,11009840,0,0x0,8
tick,0x7fffe05afeb4,11024870,0,0x0,8
tick,0x7fffe05afeb4,11041800,0,0x0,8
tick,0x7fffe05afeb4,11056831,0,0x0,8
tick,0x7fffe05afeb4,11072780,0,0x0,8
tick,0x7fffe05afeb4,11088970,0,0x0,8
tick,0x7fffe05afeb4,11104876,0,0x0,8
tick,0x7fffe05afeb4,11120733,0,0x0,8
tick,0x7fffe05afeb4,11136738,0,0x0,8
tick,0x7fffe05afeb4,11151806,0,0x0,8
tick,0x7fffe05afeb4,11167912,0,0x0,8
tick,0x7fffe05afeb4,11183881,0,0x0,8
tick,0x7fffe05afeb4,11200190,0,0x0,8
tick,0x7fffe05afeb4,11215816,0,0x0,8
tick,0x7fffe05afeb4,11232206,0,0x0,8
tick,0x7fffe05afeb4,11247742,0,0x0,8
tick,0x7fffe05afeb4,11263750,0,0x0,8
tick,0x7fffe05afeb4,11279906,0,0x0,8
tick,0x7fffe05afeb4,11295901,0,0x0,8
tick,0x7fffe05afeb4,11311765,0,0x0,8
tick,0x7fffe05afeb4,11326861,0,0x0,8
tick,0x7fffe05afeb4,11342761,0,0x0,8
tick,0x7fffe05afeb4,11358858,0,0x0,8
tick,0x7fffe05afeb4,11373808,0,0x0,8
tick,0x7fffe05afeb4,11390091,0,0x0,8
tick,0x7fffe05afeb4,11405819,0,0x0,8
tick,0x7fffe05afeb4,11420785,0,0x0,8
tick,0x7fffe05afeb4,11436873,0,0x0,8
tick,0x7fffe05afeb4,11452774,0,0x0,8
tick,0x7fffe05afeb4,11468786,0,0x0,8
tick,0x7fffe05afeb4,11484971,0,0x0,8
tick,0x7fffe05afeb4,11500789,0,0x0,8
tick,0x7fffe05afeb4,11516750,0,0x0,8
tick,0x7fffe05afeb4,11531841,0,0x0,8
tick,0x7fffe05afeb4,11547812,0,0x0,8
tick,0x7fffe05afeb4,11563732,0,0x0,8
tick,0x7fffe05afeb4,11579878,0,0x0,8
tick,0x7fffe05afeb4,11595870,0,0x0,8
tick,0x7fffe05afeb4,11611932,0,0x0,8
tick,0x7fffe05afeb4,11626835,0,0x0,8
tick,0x7fffe05afeb4,11642826,0,0x0,8
tick,0x7fffe05afeb4,11657816,0,0x0,8
tick,0x7fffe05afeb4,11673885,0,0x0,8
tick,0x7fffe05afeb4,11689932,0,0x0,8
tick,0x7fffe05afeb4,11705842,0,0x0,8
tick,0x7fffe05afeb4,11721858,0,0x0,8
tick,0x7fffe05afeb4,11737985,0,0x0,8
tick,0x7fffe05afeb4,11756736,0,0x0,8
tick,0x7fffe05afeb4,11769873,0,0x0,8
tick,0x7fffe05afeb4,11785738,0,0x0,8
tick,0x7fffe05afeb4,11801841,0,0x0,8
tick,0x7fffe05afeb4,11816811,0,0x0,8
tick,0x7fffe05afeb4,11832907,0,0x0,8
tick,0x7fffe05afeb4,11848926,0,0x0,8
tick,0x7fffe05afeb4,11865054,0,0x0,8
tick,0x7fffe05afeb4,11880851,0,0x0,8
tick,0x7fffe05afeb4,11895918,0,0x0,8
tick,0x7fffe05afeb4,11910833,0,0x0,8
tick,0x7fffe05afeb4,11927000,0,0x0,8
tick,0x7fffe05afeb4,11942875,0,0x0,8
tick,0x7fffe05afeb4,11958898,0,0x0,8
tick,0x7fffe05afeb4,11974797,0,0x0,8
tick,0x7fffe05afeb4,11990874,0,0x0,8
tick,0x7fffe05afeb4,12006726,0,0x0,8
tick,0x7fffe05afeb4,12021931,0,0x0,8
tick,0x7fffe05afeb4,12037932,0,0x0,8
tick,0x7fffe05afeb4,12053909,0,0x0,8
tick,0x7fffe05afeb4,12069883,0,0x0,8
tick,0x7fffe05afeb4,12085934,0,0x0,8
tick,0x7fffe05afeb4,12101887,0,0x0,8
tick,0x7fffe05afeb4,12117096,0,0x0,8
tick,0x7fffe05afeb4,12132750,0,0x0,8
tick,0x7fffe05afeb4,12148857,0,0x0,8
tick,0x7fffe05afeb4,12167311,0,0x0,8
tick,0x7fffe05afeb4,12180481,0,0x0,8
tick,0x7fffe05afeb4,12195958,0,0x0,8
tick,0x7fffe05afeb4,12212080,0,0x0,8
tick,0x7fffe05afeb4,12226828,0,0x0,8
tick,0x7fffe05afeb4,12241993,0,0x0,8
tick,0x7fffe05afeb4,12257735,0,0x0,8
tick,0x7fffe05afeb4,12274274,0,0x0,8
tick,0x7fffe05afeb4,12289998,0,0x0,8
tick,0x7fffe05afeb4,12304974,0,0x0,8
tick,0x7fffe05afeb4,12322436,0,0x0,8
tick,0x7fffe05afeb4,12336927,0,0x0,8
tick,0x7fffe05afeb4,12354293,0,0x0,8
tick,0x7fffe05afeb4,12368938,0,0x0,8
tick,0x7fffe05afeb4,12386567,0,0x0,8
tick,0x7fffe05afeb4,12400837,0,0x0,8
tick,0x7fffe05afeb4,12417504,0,0x0,8
tick,0x7fffe05afeb4,12432801,0,0x0,8
tick,0x7fffe05afeb4,12449556,0,0x0,8
tick,0x7fffe05afeb4,12464877,0,0x0,8
tick,0x7fffe05afeb4,12480912,0,0x0,8
tick,0x7fffe05afeb4,12494951,0,0x0,8
tick,0x7fffe05afeb4,12510976,0,0x0,8
tick,0x7fffe05afeb4,12526919,0,0x0,8
tick,0x7fffe05afeb4,12543492,0,0x0,8
tick,0x7fffe05afeb4,12558901,0,0x0,8
tick,0x7fffe05afeb4,12574063,0,0x0,8
tick,0x7fffe05afeb4,12589835,0,0x0,8
tick,0x7fffe05afeb4,12606572,0,0x0,8
tick,0x7fffe05afeb4,12622020,0,0x0,8
tick,0x7fffe05afeb4,12637867,0,0x0,8
tick,0x7fffe05afeb4,12653761,0,0x0,8
tick,0x7fffe05afeb4,12668831,0,0x0,8
tick,0x7fffe05afeb4,12684846,0,0x0,8
tick,0x7fffe05afeb4,12700984,0,0x0,8
tick,0x7fffe05afeb4,12716902,0,0x0,8
tick,0x7fffe05afeb4,12732841,0,0x0,8
tick,0x7fffe05afeb4,12748921,0,0x0,8
tick,0x7fffe05afeb4,12764730,0,0x0,8
tick,0x7fffe05afeb4,12779889,0,0x0,8
tick,0x7fffe05afeb4,12795768,0,0x0,8
tick,0x7fffe05afeb4,12811993,0,0x0,8
tick,0x7fffe05afeb4,12827749,0,0x0,8
tick,0x7fffe05afeb4,12843818,0,0x0,8
tick,0x7fffe05afeb4,12859774,0,0x0,8
tick,0x7fffe05afeb4,12875823,0,0x0,8
tick,0x7fffe05afeb4,12891747,0,0x0,8
tick,0x7fffe05afeb4,12907743,0,0x0,8
tick,0x7fffe05afeb4,12923788,0,0x0,8
tick,0x7fffe05afeb4,12939875,0,0x0,8
tick,0x7fffe05afeb4,12955775,0,0x0,8
tick,0x7fffe05afeb4,12971754,0,0x0,8
tick,0x7fffe05afeb4,12987800,0,0x0,8
tick,0x7fffe05afeb4,13003742,0,0x0,8
tick,0x7fffe05afeb4,13019766,0,0x0,8
tick,0x7fffe05afeb4,13035771,0,0x0,8
tick,0x7fffe05afeb4,13051787,0,0x0,8
tick,0x7fffe05afeb4,13067879,0,0x0,8
tick,0x7fffe05afeb4,13083761,0,0x0,8
tick,0x7fffe05afeb4,13099752,0,0x0,8
tick,0x7fffe05afeb4,13114741,0,0x0,8
tick,0x7fffe05afeb4,13129921,0,0x0,8
tick,0x7fffe05afeb4,13145802,0,0x0,8
tick,0x7fffe05afeb4,13161730,0,0x0,8
tick,0x7fffe05afeb4,13177818,0,0x0,8
tick,0x7fffe05afeb4,13193954,0,0x0,8
tick,0x7fffe05afeb4,13209792,0,0x0,8
tick,0x7fffe05afeb4,13224869,0,0x0,8
tick,0x7fffe05afeb4,13240942,0,0x0,8
tick,0x7fffe05afeb4,13256835,0,0x0,8
tick,0x7fffe05afeb4,13272764,0,0x0,8
tick,0x7fffe05afeb4,13288872,0,0x0,8
tick,0x7fffe05afeb4,13304845,0,0x0,8
tick,0x7fffe05afeb4,13321284,0,0x0,8
tick,0x7fffe05afeb4,13335817,0,0x0,8
tick,0x7fffe05afeb4,13351994,0,0x0,8
tick,0x7fffe05afeb4,13367866,0,0x0,8
tick,0x7fffe05afeb4,13388487,0,0x0,8
tick,0x7fffe05afeb4,13400428,0,0x0,8
tick,0x7fffe05afeb4,13422556,0,0x0,8
tick,0x7fffe05afeb4,13431057,0,0x0,8
tick,0x7fffe05afeb4,13456006,0,0x0,8
tick,0x7fffe05afeb4,13462879,0,0x0,8
tick,0x7fffe05afeb4,13482487,0,0x0,8
tick,0x7fffe05afeb4,13492861,0,0x0,8
tick,0x7fffe05afeb4,13508317,0,0x0,8
tick,0x7fffe05afeb4,13523912,0,0x0,8
tick,0x7fffe05afeb4,13538982,0,0x0,8
tick,0x7fffe05afeb4,13553839,0,0x0,8
tick,0x7fffe05afeb4,13569966,0,0x0,8
tick,0x7fffe05afeb4,13585846,0,0x0,8
tick,0x7fffe05afeb4,13601833,0,0x0,8
tick,0x7fffe05afeb4,13617846,0,0x0,8
tick,0x7fffe05afeb4,13634905,0,0x0,8
tick,0x7fffe05afeb4,13649926,0,0x0,8
tick,0x7fffe05afeb4,13666411,0,0x0,8
tick,0x7fffe05afeb4,13681831,0,0x0,8
tick,0x7fffe05afeb4,13697798,0,0x0,8
tick,0x7fffe05afeb4,13714068,0,0x0,8
tick,0x7fffe05afeb4,13729858,0,0x0,8
tick,0x7fffe05afeb4,13744787,0,0x0,8
tick,0x7fffe05afeb4,13759922,0,0x0,8
tick,0x7fffe05afeb4,13775760,0,0x0,8
tick,0x7fffe05afeb4,13791755,0,0x0,8
tick,0x7fffe05afeb4,13807741,0,0x0,8
tick,0x7fffe05afeb4,13823910,0,0x0,8
tick,0x7fffe05afeb4,13839807,0,0x0,8
tick,0x7fffe05afeb4,13855906,0,0x0,8
tick,0x7fffe05afeb4,13871778,0,0x0,8
tick,0x7fffe05afeb4,13886788,0,0x0,8
tick,0x7fffe05afeb4,13902867,0,0x0,8
tick,0x7fffe05afeb4,13918822,0,0x0,8
tick,0x7fffe05afeb4,13934948,0,0x0,8
tick,0x7fffe05afeb4,13950830,0,0x0,8
tick,0x7fffe05afeb4,13966795,0,0x0,8
tick,0x7fffe05afeb4,13981787,0,0x0,8
tick,0x7fffe05afeb4,13997789,0,0x0,8
tick,0x7fffe05afeb4,14013876,0,0x0,8
tick,0x7fffe05afeb4,14029794,0,0x0,8
tick,0x7fffe05afeb4,14045118,0,0x0,8
tick,0x7fffe05afeb4,14060831,0,0x0,8
tick,0x7fffe05afeb4,14076882,0,0x0,8
tick,0x7fffe05afeb4,14092798,0,0x0,8
tick,0x7fffe05afeb4,14108755,0,0x0,8
tick,0x7fffe05afeb4,14124976,0,0x0,8
tick,0x7fffe05afeb4,14140840,0,0x0,8
tick,0x7fffe05afeb4,14157015,0,0x0,8
tick,0x7fffe05afeb4,14172773,0,0x0,8
tick,0x7fffe05afeb4,14187784,0,0x0,8
tick,0x7fffe05afeb4,14204068,0,0x0,8
tick,0x7fffe05afeb4,14218779,0,0x0,8
tick,0x7fffe05afeb4,14233831,0,0x0,8
tick,0x7fffe05afeb4,14249833,0,0x0,8
tick,0x7fffe05afeb4,14266162,0,0x0,8
tick,0x7fffe05afeb4,14281748,0,0x0,8
tick,0x7fffe05afeb4,14297815,0,0x0,8
tick,0x7fffe05afeb4,14313751,0,0x0,8
tick,0x7fffe05afeb4,14329998,0,0x0,8
tick,0x7fffe05afeb4,14344939,0,0x0,8
tick,0x7fffe05afeb4,14360966,0,0x0,8
tick,0x7fffe05afeb4,14376884,0,0x0,8
tick,0x7fffe05afeb4,14392869,0,0x0,8
tick,0x7fffe05afeb4,14408745,0,0x0,8
tick,0x7fffe05afeb4,14424766,0,0x0,8
tick,0x7fffe05afeb4,14440896,0,0x0,8
tick,0x7fffe05afeb4,14456938,0,0x0,8
tick,0x7fffe05afeb4,14472811,0,0x0,8
tick,0x7fffe05afeb4,14488822,0,0x0,8
tick,0x7fffe05afeb4,14504893,0,0x0,8
tick,0x7fffe05afeb4,14520824,0,0x0,8
tick,0x7fffe05afeb4,14536788,0,0x0,8
tick,0x7fffe05afeb4,14552731,0,0x0,8
tick,0x7fffe05afeb4,14568797,0,0x0,8
tick,0x7fffe05afeb4,14584817,0,0x0,8
tick,0x7fffe05afeb4,14600732,0,0x0,8
tick,0x7fffe05afeb4,14616878,0,0x0,8
tick,0x7fffe05afeb4,14633009,0,0x0,8
tick,0x7fffe05afeb4,14648968,0,0x0,8
tick,0x7fffe05afeb4,14664953,0,0x0,8
tick,0x7fffe05afeb4,14680767,0,0x0,8
tick,0x7fffe05afeb4,14695741,0,0x0,8
tick,0x7fffe05afeb4,14711975,0,0x0,8
tick,0x7fffe05afeb4,14728344,0,0x0,8
tick,0x7fffe05afeb4,14743748,0,0x0,8
tick,0x7fffe05afeb4,14760090,0,0x0,8
tick,0x7fffe05afeb4,14775931,0,0x0,8
tick,0x7fffe05afeb4,14790867,0,0x0,8
tick,0x7fffe05afeb4,14806819,0,0x0,8
tick,0x7fffe05afeb4,14822849,0,0x0,8
tick,0x7fffe05afeb4,14838962,0,0x0,8
tick,0x7fffe05afeb4,14854818,0,0x0,8
tick,0x7fffe05afeb4,14870867,0,0x0,8
tick,0x7fffe05afeb4,14886810,0,0x0,8
tick,0x7fffe05afeb4,14902943,0,0x0,8
tick,0x7fffe05afeb4,14917741,0,0x0,8
tick,0x7fffe05afeb4,14933930,0,0x0,8
tick,0x7fffe05afeb4,14949880,0,0x0,8
tick,0x7fffe05afeb4,14965948,0,0x0,8
tick,0x7fffe05afeb4,14981815,0,0x0,8
tick,0x7fffe05afeb4,14997814,0,0x0,8
tick,0x7fffe05afeb4,15013800,0,0x0,8
tick,0x7fffe05afeb4,15029919,0,0x0,8
tick,0x7fffe05afeb4,15045974,0,0x0,8
tick,0x7fffe05afeb4,15061827,0,0x0,8
tick,0x7fffe05afeb4,15077891,0,0x0,8
tick,0x7fffe05afeb4,15093917,0,0x0,8
tick,0x7fffe05afeb4,15109806,0,0x0,8
tick,0x7fffe05afeb4,15125807,0,0x0,8
tick,0x7fffe05afeb4,15141887,0,0x0,8
tick,0x7fffe05afeb4,15158129,0,0x0,8
tick,0x7fffe05afeb4,15173829,0,0x0,8
tick,0x7fffe05afeb4,15189914,0,0x0,8
tick,0x7fffe05afeb4,15205756,0,0x0,8
tick,0x7fffe05afeb4,15221801,0,0x0,8
tick,0x7fffe05afeb4,15237753,0,0x0,8
tick,0x7fffe05afeb4,15253733,0,0x0,8
tick,0x7fffe05afeb4,15270018,0,0x0,8
tick,0x7fffe05afeb4,15285945,0,0x0,8
tick,0x7fffe05afeb4,15300757,0,0x0,8
tick,0x7fffe05afeb4,15316902,0,0x0,8
tick,0x7fffe05afeb4,15332878,0,0x0,8
tick,0x7fffe05afeb4,15348927,0,0x0,8
tick,0x7fffe05afeb4,15364782,0,0x0,8
tick,0x7fffe05afeb4,15379929,0,0x0,8
tick,0x7fffe05afeb4,15395843,0,0x0,8
tick,0x7fffe05afeb4,15411808,0,0x0,8
tick,0x7fffe05afeb4,15426889,0,0x0,8
tick,0x7fffe05afeb4,15442852,0,0x0,8
tick,0x7fffe05afeb4,15457817,0,0x0,8
tick,0x7fffe05afeb4,15473777,0,0x0,8
tick,0x7fffe05afeb4,15489832,0,0x0,8
tick,0x7fffe05afeb4,15505937,0,0x0,8
tick,0x7fffe05afeb4,15521867,0,0x0,8
tick,0x7fffe05afeb4,15537961,0,0x0,8
tick,0x7fffe05afeb4,15553764,0,0x0,8
tick,0x7fffe05afeb4,15569918,0,0x0,8
tick,0x7fffe05afeb4,15585753,0,0x0,8
tick,0x7fffe05afeb4,15601847,0,0x0,8
tick,0x7fffe05afeb4,15617803,0,0x0,8
tick,0x7fffe05afeb4,15634026,0,0x0,8
tick,0x7fffe05afeb4,15649894,0,0x0,8
tick,0x7fffe05afeb4,15666142,0,0x0,8
tick,0x7fffe05afeb4,15681759,0,0x0,8
tick,0x7fffe05afeb4,15697888,0,0x0,8
tick,0x7fffe05afeb4,15713930,0,0x0,8
tick,0x7fffe05afeb4,15729992,0,0x0,8
tick,0x7fffe05afeb4,15745821,0,0x0,8
tick,0x7fffe05afeb4,15761903,0,0x0,8
tick,0x7fffe05afeb4,15777771,0,0x0,8
tick,0x7fffe05afeb4,15793930,0,0x0,8
tick,0x7fffe05afeb4,15809758,0,0x0,8
tick,0x7fffe05afeb4,15825825,0,0x0,8
tick,0x7fffe05afeb4,15841768,0,0x0,8
tick,0x7fffe05afeb4,15856959,0,0x0,8
tick,0x7fffe05afeb4,15872856,0,0x0,8
tick,0x7fffe05afeb4,15888817,0,0x0,8
tick,0x7fffe05afeb4,15904769,0,0x0,8
tick,0x7fffe05afeb4,15920905,0,0x0,8
tick,0x7fffe05afeb4,15936850,0,0x0,8
tick,0x7fffe05afeb4,15952821,0,0x0,8
tick,0x7fffe05afeb4,15967778,0,0x0,8
tick,0x7fffe05afeb4,15983895,0,0x0,8
tick,0x7fffe05afeb4,15998829,0,0x0,8
tick,0x7fffe05afeb4,16014868,0,0x0,8
tick,0x7fffe05afeb4,16030796,0,0x0,8
tick,0x7fffe05afeb4,16045903,0,0x0,8
tick,0x7fffe05afeb4,16060730,0,0x0,8
tick,0x7fffe05afeb4,16076846,0,0x0,8
tick,0x7fffe05afeb4,16092803,0,0x0,8
tick,0x7fffe05afeb4,16107823,0,0x0,8
tick,0x7fffe05afeb4,16123746,0,0x0,8
tick,0x7fffe05afeb4,16139842,0,0x0,8
tick,0x7fffe05afeb4,16156064,0,0x0,8
tick,0x7fffe05afeb4,16171900,0,0x0,8
tick,0x7fffe05afeb4,16187862,0,0x0,8
tick,0x7fffe05afeb4,16202870,0,0x0,8
tick,0x7fffe05afeb4,16218838,0,0x0,8
tick,0x7fffe05afeb4,16234934,0,0x0,8
tick,0x7fffe05afeb4,16250877,0,0x0,8
tick,0x7fffe05afeb4,16266811,0,0x0,8
tick,0x7fffe05afeb4,16282759,0,0x0,8
tick,0x7fffe05afeb4,16298939,0,0x0,8
tick,0x7fffe05afeb4,16314751,0,0x0,8
tick,0x7fffe05afeb4,16330965,0,0x0,8
tick,0x7fffe05afeb4,16346838,0,0x0,8
tick,0x7fffe05afeb4,16362926,0,0x0,8
tick,0x7fffe05afeb4,16378815,0,0x0,8
tick,0x7fffe05afeb4,16394832,0,0x0,8
tick,0x7fffe05afeb4,16410781,0,0x0,8
tick,0x7fffe05afeb4,16426865,0,0x0,8
tick,0x7fffe05afeb4,16442764,0,0x0,8
tick,0x7fffe05afeb4,16457802,0,0x0,8
tick,0x7fffe05afeb4,16473811,0,0x0,8
tick,0x7fffe05afeb4,16490036,0,0x0,8
tick,0x7fffe05afeb4,16505763,0,0x0,8
tick,0x7fffe05afeb4,16521762,0,0x0,8
tick,0x7fffe05afeb4,16537857,0,0x0,8
tick,0x7fffe05afeb4,16553825,0,0x0,8
tick,0x7fffe05afeb4,16569851,0,0x0,8
tick,0x7fffe05afeb4,16585830,0,0x0,8
tick,0x7fffe05afeb4,16601816,0,0x0,8
tick,0x7fffe05afeb4,16616808,0,0x0,8
tick,0x7fffe05afeb4,16632737,0,0x0,8
tick,0x7fffe05afeb4,16648759,0,0x0,8
tick,0x7fffe05afeb4,16663739,0,0x0,8
tick,0x7fffe05afeb4,16679947,0,0x0,8
tick,0x7fffe05afeb4,16695755,0,0x0,8
tick,0x7fffe05afeb4,16711808,0,0x0,8
tick,0x7fffe05afeb4,16726792,0,0x0,8
tick,0x7fffe05afeb4,16743205,0,0x0,8
tick,0x7fffe05afeb4,16758957,0,0x0,8
tick,0x7fffe05afeb4,16774919,0,0x0,8
tick,0x7fffe05afeb4,16790830,0,0x0,8
tick,0x7fffe05afeb4,16805901,0,0x0,8
tick,0x7fffe05afeb4,16821937,0,0x0,8
tick,0x7fffe05afeb4,16837811,0,0x0,8
tick,0x7fffe05afeb4,16853745,0,0x0,8
tick,0x7fffe05afeb4,16870085,0,0x0,8
tick,0x7fffe05afeb4,16885875,0,0x0,8
tick,0x7fffe05afeb4,16901812,0,0x0,8
tick,0x7fffe05afeb4,16917808,0,0x0,8
tick,0x7fffe05afeb4,16934097,0,0x0,8
tick,0x7fffe05afeb4,16949795,0,0x0,8
tick,0x7fffe05afeb4,16964815,0,0x0,8
tick,0x7fffe05afeb4,16979757,0,0x0,8
tick,0x7fffe05afeb4,16995836,0,0x0,8
tick,0x7fffe05afeb4,17011878,0,0x0,8
tick,0x7fffe05afeb4,17027749,0,0x0,8
tick,0x7fffe05afeb4,17043865,0,0x0,8
tick,0x7fffe05afeb4,17059895,0,0x0,8
tick,0x7fffe05afeb4,17074796,0,0x0,8
tick,0x7fffe05afeb4,17090882,0,0x0,8
tick,0x7fffe05afeb4,17106933,0,0x0,8
tick,0x7fffe05afeb4,17123075,0,0x0,8
tick,0x7fffe05afeb4,17138754,0,0x0,8
tick,0x7fffe05afeb4,17154937,0,0x0,8
tick,0x7fffe05afeb4,17169949,0,0x0,8
tick,0x7fffe05afeb4,17185964,0,0x0,8
tick,0x7fffe05afeb4,17201734,0,0x0,8
tick,0x7fffe05afeb4,17217738,0,0x0,8
tick,0x7fffe05afeb4,17233819,0,0x0,8
tick,0x7fffe05afeb4,17249958,0,0x0,8
tick,0x7fffe05afeb4,17265856,0,0x0,8
tick,0x7fffe05afeb4,17281877,0,0x0,8
tick,0x7fffe05afeb4,17297735,0,0x0,8
tick,0x7fffe05afeb4,17313845,0,0x0,8
tick,0x7fffe05afeb4,17329821,0,0x0,8
tick,0x7fffe05afeb4,17345749,0,0x0,8
tick,0x7fffe05afeb4,17361820,0,0x0,8
tick,0x7fffe05afeb4,17378052,0,0x0,8
tick,0x7fffe05afeb4,17393833,0,0x0,8
tick,0x7fffe05afeb4,17409989,0,0x0,8
tick,0x7fffe05afeb4,17425773,0,0x0,8
tick,0x7fffe05afeb4,17441919,0,0x0,8
tick,0x7fffe05afeb4,17456751,0,0x0,8
tick,0x7fffe05afeb4,17472861,0,0x0,8
tick,0x7fffe05afeb4,17488876,0,0x0,8
tick,0x7fffe05afeb4,17504917,0,0x0,8
tick,0x7fffe05afeb4,17520745,0,0x0,8
tick,0x7fffe05afeb4,17536981,0,0x0,8
tick,0x7fffe05afeb4,17552749,0,0x0,8
tick,0x7fffe05afeb4,17568806,0,0x0,8
tick,0x7fffe05afeb4,17583742,0,0x0,8
tick,0x7fffe05afeb4,17599823,0,0x0,8
tick,0x7fffe05afeb4,17614772,0,0x0,8
tick,0x7fffe05afeb4,17630829,0,0x0,8
tick,0x7fffe05afeb4,17646832,0,0x0,8
tick,0x7fffe05afeb4,17662730,0,0x0,8
tick,0x7fffe05afeb4,17678923,0,0x0,8
tick,0x7fffe05afeb4,17694950,0,0x0,8
tick,0x7fffe05afeb4,17710807,0,0x0,8
tick,0x7fffe05afeb4,17726907,0,0x0,8
tick,0x7fffe05afeb4,17742798,0,0x0,8
tick,0x7fffe05afeb4,17757954,0,0x0,8
tick,0x7fffe05afeb4,17773875,0,0x0,8
tick,0x7fffe05afeb4,17790207,0,0x0,8
tick,0x7fffe05afeb4,17805821,0,0x0,8
tick,0x7fffe05afeb4,17822388,0,0x0,8
tick,0x7fffe05afeb4,17836740,0,0x0,8
tick,0x7fffe05afeb4,17851806,0,0x0,8
tick,0x7fffe05afeb4,17867841,0,0x0,8
tick,0x7fffe05afeb4,17884096,0,0x0,8
tick,0x7fffe05afeb4,17899847,0,0x0,8
tick,0x7fffe05afeb4,17916076,0,0x0,8
tick,0x7fffe05afeb4,17930957,0,0x0,8
tick,0x7fffe05afeb4,17946210,0,0x0,8
tick,0x7fffe05afeb4,17961737,0,0x0,8
tick,0x7fffe05afeb4,17976917,0,0x0,8
tick,0x7fffe05afeb4,17992766,0,0x0,8
tick,0x7fffe05afeb4,18009104,0,0x0,8
tick,0x7fffe05afeb4,18024756,0,0x0,8
tick,0x7fffe05afeb4,18040961,0,0x0,8
tick,0x7fffe05afeb4,18056757,0,0x0,8
tick,0x7fffe05afeb4,18072799,0,0x0,8
tick,0x7fffe05afeb4,18088868,0,0x0,8
tick,0x7fffe05afeb4,18104814,0,0x0,8
tick,0x7fffe05afeb4,18119816,0,0x0,8
tick,0x7fffe05afeb4,18135845,0,0x0,8
tick,0x7fffe05afeb4,18151849,0,0x0,8
tick,0x7fffe05afeb4,18167813,0,0x0,8
tick,0x7fffe05afeb4,18183934,0,0x0,8
tick,0x7fffe05afeb4,18199926,0,0x0,8
tick,0x7fffe05afeb4,18215747,0,0x0,8
tick,0x7fffe05afeb4,18231756,0,0x0,8
tick,0x7fffe05afeb4,18246732,0,0x0,8
tick,0x7fffe05afeb4,18263049,0,0x0,8
tick,0x7fffe05afeb4,18278942,0,0x0,8
tick,0x7fffe05afeb4,18293936,0,0x0,8
tick,0x7fffe05afeb4,18309874,0,0x0,8
tick,0x7fffe05afeb4,18325875,0,0x0,8
tick,0x7fffe05afeb4,18341788,0,0x0,8
tick,0x7fffe05afeb4,18357834,0,0x0,8
tick,0x7fffe05afeb4,18373833,0,0x0,8
tick,0x7fffe05afeb4,18390122,0,0x0,8
tick,0x7fffe05afeb4,18405818,0,0x0,8
tick,0x7fffe05afeb4,18421833,0,0x0,8
tick,0x7fffe05afeb4,18437795,0,0x0,8
tick,0x7fffe05afeb4,18453888,0,0x0,8
tick,0x7fffe05afeb4,18469791,0,0x0,8
tick,0x7fffe05afeb4,18485839,0,0x0,8
tick,0x7fffe05afeb4,18501796,0,0x0,8
tick,0x7fffe05afeb4,18518055,0,0x0,8
tick,0x7fffe05afeb4,18533040,0,0x0,8
tick,0x7fffe05afeb4,18547905,0,0x0,8
tick,0x7fffe05afeb4,18563747,0,0x0,8
tick,0x7fffe05afeb4,18580151,0,0x0,8
tick,0x7fffe05afeb4,18595760,0,0x0,8
tick,0x7fffe05afeb4,18611748,0,0x0,8
tick,0x7fffe05afeb4,18627728,0,0x0,8
tick,0x7fffe05afeb4,18643902,0,0x0,8
tick,0x7fffe05afeb4,18659783,0,0x0,8
tick,0x7fffe05afeb4,18675785,0,0x0,8
tick,0x7fffe05afeb4,18691770,0,0x0,8
tick,0x7fffe05afeb4,18707985,0,0x0,8
tick,0x7fffe05afeb4,18723731,0,0x0,8
tick,0x7fffe05afeb4,18739789,0,0x0,8
tick,0x7fffe05afeb4,18755722,0,0x0,8
tick,0x7fffe05afeb4,18771959,0,0x0,8
tick,0x7fffe05afeb4,18787804,0,0x0,8
tick,0x7fffe05afeb4,18803818,0,0x0,8
tick,0x7fffe05afeb4,18819874,0,0x0,8
tick,0x7fffe05afeb4,18834897,0,0x0,8
tick,0x7fffe05afeb4,18850721,0,0x0,8
tick,0x7fffe05afeb4,18866874,0,0x0,8
tick,0x7fffe05afeb4,18882858,0,0x0,8
tick,0x7fffe05afeb4,18897929,0,0x0,8
tick,0x7fffe05afeb4,18913875,0,0x0,8
tick,0x7fffe05afeb4,18929975,0,0x0,8
tick,0x7fffe05afeb4,18944759,0,0x0,8
tick,0x7fffe05afeb4,18960917,0,0x0,8
tick,0x7fffe05afeb4,18976879,0,0x0,8
tick,0x7fffe05afeb4,18992819,0,0x0,8
tick,0x7fffe05afeb4,19009048,0,0x0,8
tick,0x7fffe05afeb4,19023867,0,0x0,8
tick,0x7fffe05afeb4,19040043,0,0x0,8
tick,0x7fffe05afeb4,19055802,0,0x0,8
tick,0x7fffe05afeb4,19072087,0,0x0,8
tick,0x7fffe05afeb4,19086927,0,0x0,8
tick,0x7fffe05afeb4,19103334,0,0x0,8
tick,0x7fffe05afeb4,19118911,0,0x0,8
tick,0x7fffe05afeb4,19135342,0,0x0,8
tick,0x7fffe05afeb4,19150884,0,0x0,8
tick,0x7fffe05afeb4,19166756,0,0x0,8
tick,0x7fffe05afeb4,19182832,0,0x0,8
tick,0x7fffe05afeb4,19198855,0,0x0,8
tick,0x7fffe05afeb4,19214934,0,0x0,8
tick,0x7fffe05afeb4,19230738,0,0x0,8
tick,0x7fffe05afeb4,19245746,0,0x0,8
tick,0x7fffe05afeb4,19260791,0,0x0,8
tick,0x7fffe05afeb4,19276885,0,0x0,8
tick,0x7fffe05afeb4,19292918,0,0x0,8
tick,0x7fffe05afeb4,19308808,0,0x0,8
tick,0x7fffe05afeb4,19324835,0,0x0,8
tick,0x7fffe05afeb4,19340896,0,0x0,8
tick,0x7fffe05afeb4,19356889,0,0x0,8
tick,0x7fffe05afeb4,19372926,0,0x0,8
tick,0x7fffe05afeb4,19388773,0,0x0,8
tick,0x7fffe05afeb4,19404985,0,0x0,8
tick,0x7fffe05afeb4,19420802,0,0x0,8
tick,0x7fffe05afeb4,19436822,0,0x0,8
tick,0x7fffe05afeb4,19452809,0,0x0,8
tick,0x7fffe05afeb4,19468953,0,0x0,8
tick,0x7fffe05afeb4,19484771,0,0x0,8
tick,0x7fffe05afeb4,19500803,0,0x0,8
tick,0x7fffe05afeb4,19516719,0,0x0,8
tick,0x7fffe05afeb4,19533116,0,0x0,8
tick,0x7fffe05afeb4,19548749,0,0x0,8
tick,0x7fffe05afeb4,19564865,0,0x0,8
tick,0x7fffe05afeb4,19580762,0,0x0,8
tick,0x7fffe05afeb4,19595847,0,0x0,8
tick,0x7fffe05afeb4,19611762,0,0x0,8
tick,0x7fffe05afeb4,19626887,0,0x0,8
tick,0x7fffe05afeb4,19642858,0,0x0,8
tick,0x7fffe05afeb4,19658932,0,0x0,8
tick,0x7fffe05afeb4,19674767,0,0x0,8
tick,0x7fffe05afeb4,19690762,0,0x0,8
tick,0x7fffe05afeb4,19707238,0,0x0,8
tick,0x7fffe05afeb4,19722818,0,0x0,8
tick,0x7fffe05afeb4,19737761,0,0x0,8
tick,0x7fffe05afeb4,19753797,0,0x0,8
tick,0x7fffe05afeb4,19769973,0,0x0,8
tick,0x7fffe05afeb4,19785930,0,0x0,8
tick,0x7fffe05afeb4,19801806,0,0x0,8
tick,0x7fffe05afeb4,19817914,0,0x0,8
tick,0x7fffe05afeb4,19832745,0,0x0,8
tick,0x7fffe05afeb4,19848809,0,0x0,8
tick,0x7fffe05afeb4,19864736,0,0x0,8
tick,0x7fffe05afeb4,19879902,0,0x0,8
tick,0x7fffe05afeb4,19895827,0,0x0,8
tick,0x7fffe05afeb4,19911827,0,0x0,8
tick,0x7fffe05afeb4,19927901,0,0x0,8
tick,0x7fffe05afeb4,19943743,0,0x0,8
tick,0x7fffe05afeb4,19959829,0,0x0,8
tick,0x7fffe05afeb4,19975884,0,0x0,8
tick,0x7fffe05afeb4,19991775,0,0x0,8
tick,0x7fffe05afeb4,20006843,0,0x0,8
tick,0x7fffe05afeb4,20022815,0,0x0,8
tick,0x7fffe05afeb4,20038947,0,0x0,8
tick,0x7fffe05afeb4,20054806,0,0x0,8
tick,0x7fffe05afeb4,20070930,0,0x0,8
tick,0x7fffe05afeb4,20086808,0,0x0,8
tick,0x7fffe05afeb4,20103104,0,0x0,8
tick,0x7fffe05afeb4,20118915,0,0x0,8
tick,0x7fffe05afeb4,20135017,0,0x0,8
tick,0x7fffe05afeb4,20150886,0,0x0,8
tick,0x7fffe05afeb4,20166976,0,0x0,8
tick,0x7fffe05afeb4,20182800,0,0x0,8
tick,0x7fffe05afeb4,20198752,0,0x0,8
tick,0x7fffe05afeb4,20214906,0,0x0,8
tick,0x7fffe05afeb4,20230920,0,0x0,8
tick,0x7fffe05afeb4,20246742,0,0x0,8
tick,0x7fffe05afeb4,20262976,0,0x0,8
tick,0x7fffe05afeb4,20278789,0,0x0,8
tick,0x7fffe05afeb4,20294989,0,0x0,8
tick,0x7fffe05afeb4,20310915,0,0x0,8
tick,0x7fffe05afeb4,20326822,0,0x0,8
tick,0x7fffe05afeb4,20342842,0,0x0,8
tick,0x7fffe05afeb4,20357859,0,0x0,8
tick,0x7fffe05afeb4,20373901,0,0x0,8
tick,0x7fffe05afeb4,20389863,0,0x0,8
tick,0x7fffe05afeb4,20405916,0,0x0,8
tick,0x7fffe05afeb4,20421900,0,0x0,8
tick,0x7fffe05afeb4,20437779,0,0x0,8
tick,0x7fffe05afeb4,20453782,0,0x0,8
tick,0x7fffe05afeb4,20469836,0,0x0,8
tick,0x7fffe05afeb4,20485950,0,0x0,8
tick,0x7fffe05afeb4,20501812,0,0x0,8
tick,0x7fffe05afeb4,20517813,0,0x0,8
tick,0x7fffe05afeb4,20533877,0,0x0,8
tick,0x7fffe05afeb4,20548832,0,0x0,8
tick,0x7fffe05afeb4,20564822,0,0x0,8
tick,0x7fffe05afeb4,20580758,0,0x0,8
tick,0x7fffe05afeb4,20595777,0,0x0,8
tick,0x7fffe05afeb4,20611809,0,0x0,8
tick,0x7fffe05afeb4,20627732,0,0x0,8
tick,0x7fffe05afeb4,20643804,0,0x0,8
tick,0x7fffe05afeb4,20659831,0,0x0,8
tick,0x7fffe05afeb4,20675870,0,0x0,8
tick,0x7fffe05afeb4,20691725,0,0x0,8
tick,0x7fffe05afeb4,20707822,0,0x0,8
tick,0x7fffe05afeb4,20723751,0,0x0,8
tick,0x7fffe05afeb4,20739914,0,0x0,8
tick,0x7fffe05afeb4,20755732,0,0x0,8
tick,0x7fffe05afeb4,20771796,0,0x0,8
tick,0x7fffe05afeb4,20787806,0,0x0,8
tick,0x7fffe05afeb4,20803836,0,0x0,8
tick,0x7fffe05afeb4,20820646,0,0x0,8
tick,0x7fffe05afeb4,20834754,0,0x0,8
tick,0x7fffe05afeb4,20850813,0,0x0,8
tick,0x7fffe05afeb4,20866962,0,0x0,8
tick,0x7fffe05afeb4,20882803,0,0x0,8
tick,0x7fffe05afeb4,20897842,0,0x0,8
tick,0x7fffe05afeb4,20913726,0,0x0,8
tick,0x7fffe05afeb4,20930323,0,0x0,8
tick,0x7fffe05afeb4,20945725,0,0x0,8
tick,0x7fffe05afeb4,20961813,0,0x0,8
tick,0x7fffe05afeb4,20977948,0,0x0,8
tick,0x7fffe05afeb4,20993860,0,0x0,8
tick,0x7fffe05afeb4,21009781,0,0x0,8
tick,0x7fffe05afeb4,21025738,0,0x0,8
tick,0x7fffe05afeb4,21041885,0,0x0,8
tick,0x7fffe05afeb4,21057904,0,0x0,8
tick,0x7fffe05afeb4,21073900,0,0x0,8
tick,0x7fffe05afeb4,21089846,0,0x0,8
tick,0x7fffe05afeb4,21104948,0,0x0,8
tick,0x7fffe05afeb4,21120880,0,0x0,8
tick,0x7fffe05afeb4,21136804,0,0x0,8
tick,0x7fffe05afeb4,21152896,0,0x0,8
tick,0x7fffe05afeb4,21168769,0,0x0,8
tick,0x7fffe05afeb4,21185041,0,0x0,8
tick,0x7fffe05afeb4,21200734,0,0x0,8
tick,0x7fffe05afeb4,21216837,0,0x0,8
tick,0x7fffe05afeb4,21232847,0,0x0,8
tick,0x7fffe05afeb4,21247914,0,0x0,8
tick,0x7fffe05afeb4,21263753,0,0x0,8
tick,0x7fffe05afeb4,21279820,0,0x0,8
tick,0x7fffe05afeb4,21295759,0,0x0,8
tick,0x7fffe05afeb4,21311819,0,0x0,8
tick,0x7fffe05afeb4,21332367,0,0x0,8
tick,0x7fffe05afeb4,21341757,0,0x0,8
tick,0x7fffe05afeb4,21356869,0,0x0,8
tick,0x7fffe05afeb4,21374005,0,0x0,8
tick,0x7fffe05afeb4,21387941,0,0x0,8
tick,0x7fffe05afeb4,21402977,0,0x0,8
tick,0x7fffe05afeb4,21417854,0,0x0,8
tick,0x7fffe05afeb4,21433392,0,0x0,8
tick,0x7fffe05afeb4,21448123,0,0x0,8
tick,0x7fffe05afeb4,21462879,0,0x0,8
tick,0x7fffe05afeb4,21478449,0,0x0,8
tick,0x7fffe05afeb4,21494943,0,0x0,8
tick,0x7fffe05afeb4,21509332,0,0x0,8
tick,0x7fffe05afeb4,21524399,0,0x0,8
tick,0x7fffe05afeb4,21539059,0,0x0,8
tick,0x7fffe05afeb4,21553897,0,0x0,8
tick,0x7fffe05afeb4,21568914,0,0x0,8
tick,0x7fffe05afeb4,21585060,0,0x0,8
tick,0x7fffe05afeb4,21601480,0,0x0,8
tick,0x7fffe05afeb4,21616176,0,0x0,8
tick,0x7fffe05afeb4,21630838,0,0x0,8
tick,0x7fffe05afeb4,21646729,0,0x0,8
tick,0x7fffe05afeb4,21662680,0,0x0,8
tick,0x7fffe05afeb4,21677449,0,0x0,8
tick,0x7fffe05afeb4,21691997,0,0x0,8
tick,0x7fffe05afeb4,21710360,0,0x0,8
tick,0x7fffe05afeb4,21723028,0,0x0,8
tick,0x7fffe05afeb4,21738237,0,0x0,8
tick,0x7fffe05afeb4,21753141,0,0x0,8
tick,0x7fffe05afeb4,21767791,0,0x0,8
tick,0x7fffe05afeb4,21783764,0,0x0,8
tick,0x7fffe05afeb4,21800124,0,0x0,8
tick,0x7fffe05afeb4,21815945,0,0x0,8
tick,0x7fffe05afeb4,21831909,0,0x0,8
tick,0x7fffe05afeb4,21847769,0,0x0,8
tick,0x7fffe05afeb4,21864021,0,0x0,8
tick,0x7fffe05afeb4,21879797,0,0x0,8
tick,0x7fffe05afeb4,21894829,0,0x0,8
tick,0x7fffe05afeb4,21910770,0,0x0,8
tick,0x7fffe05afeb4,21927754,0,0x0,8
tick,0x7fffe05afeb4,21942848,0,0x0,8
tick,0x7fffe05afeb4,21958828,0,0x0,8
tick,0x7fffe05afeb4,21974967,0,0x0,8
tick,0x7fffe05afeb4,21991114,0,0x0,8
tick,0x7fffe05afeb4,22006757,0,0x0,8
tick,0x7fffe05afeb4,22022736,0,0x0,8
tick,0x7fffe05afeb4,22037804,0,0x0,8
tick,0x7fffe05afeb4,22054010,0,0x0,8
tick,0x7fffe05afeb4,22069887,0,0x0,8
tick,0x7fffe05afeb4,22085873,0,0x0,8
tick,0x7fffe05afeb4,22101814,0,0x0,8
tick,0x7fffe05afeb4,22117878,0,0x0,8
tick,0x7fffe05afeb4,22132829,0,0x0,8
tick,0x7fffe05afeb4,22149164,0,0x0,8
tick,0x7fffe05afeb4,22165563,0,0x0,8
tick,0x7fffe05afeb4,22180018,0,0x0,8
tick,0x7fffe05afeb4,22194827,0,0x0,8
tick,0x7fffe05afeb4,22210809,0,0x0,8
tick,0x7fffe05afeb4,22226794,0,0x0,8
tick,0x7fffe05afeb4,22243136,0,0x0,8
tick,0x7fffe05afeb4,22260833,0,0x0,8
tick,0x7fffe05afeb4,22274949,0,0x0,8
tick,0x7fffe05afeb4,22291805,0,0x0,8
tick,0x7fffe05afeb4,22306011,0,0x0,8
tick,0x7fffe05afeb4,22323090,0,0x0,8
tick,0x7fffe05afeb4,22337997,0,0x0,8
tick,0x7fffe05afeb4,22355328,0,0x0,8
tick,0x7fffe05afeb4,22370080,0,0x0,8
tick,0x7fffe05afeb4,22386153,0,0x0,8
tick,0x7fffe05afeb4,22401812,0,0x0,8
tick,0x7fffe05afeb4,22418789,0,0x0,8
tick,0x7fffe05afeb4,22432825,0,0x0,8
tick,0x7fffe05afeb4,22448309,0,0x0,8
tick,0x7fffe05afeb4,22463766,0,0x0,8
tick,0x7fffe05afeb4,22480531,0,0x0,8
tick,0x7fffe05afeb4,22495822,0,0x0,8
tick,0x7fffe05afeb4,22510894,0,0x0,8
tick,0x7fffe05afeb4,22525925,0,0x0,8
tick,0x7fffe05afeb4,22541777,0,0x0,8
tick,0x7fffe05afeb4,22558012,0,0x0,8
tick,0x7fffe05afeb4,22573748,0,0x0,8
tick,0x7fffe05afeb4,22590043,0,0x0,8
tick,0x7fffe05afeb4,22605819,0,0x0,8
tick,0x7fffe05afeb4,22621823,0,0x0,8
tick,0x7fffe05afeb4,22637756,0,0x0,8
tick,0x7fffe05afeb4,22653876,0,0x0,8
tick,0x7fffe05afeb4,22669904,0,0x0,8
tick,0x7fffe05afeb4,22685905,0,0x0,8
tick,0x7fffe05afeb4,22701745,0,0x0,8
tick,0x7fffe05afeb4,22717891,0,0x0,8
tick,0x7fffe05afeb4,22733950,0,0x0,8
tick,0x7fffe05afeb4,22750033,0,0x0,8
tick,0x7fffe05afeb4,22765821,0,0x0,8
tick,0x7fffe05afeb4,22781818,0,0x0,8
tick,0x7fffe05afeb4,22797804,0,0x0,8
tick,0x7fffe05afeb4,22813934,0,0x0,8
tick,0x7fffe05afeb4,22829831,0,0x0,8
tick,0x7fffe05afeb4,22846132,0,0x0,8
tick,0x7fffe05afeb4,22861741,0,0x0,8
tick,0x7fffe05afeb4,22877801,0,0x0,8
tick,0x7fffe05afeb4,22893792,0,0x0,8
tick,0x7fffe05afeb4,22909860,0,0x0,8
tick,0x7fffe05afeb4,22924915,0,0x0,8
tick,0x7fffe05afeb4,22939853,0,0x0,8
tick,0x7fffe05afeb4,22955817,0,0x0,8
tick,0x7fffe05afeb4,22971849,0,0x0,8
tick,0x7fffe05afeb4,22986824,0,0x0,8
tick,0x7fffe05afeb4,23002836,0,0x0,8
tick,0x7fffe05afeb4,23018807,0,0x0,8
tick,0x7fffe05afeb4,23034849,0,0x0,8
tick,0x7fffe05afeb4,23050724,0,0x0,8
tick,0x7fffe05afeb4,23067011,0,0x0,8
tick,0x7fffe05afeb4,23082865,0,0x0,8
tick,0x7fffe05afeb4,23098858,0,0x0,8
tick,0x7fffe05afeb4,23114737,0,0x0,8
tick,0x7fffe05afeb4,23131000,0,0x0,8
tick,0x7fffe05afeb4,23145887,0,0x0,8
tick,0x7fffe05afeb4,23161800,0,0x0,8
tick,0x7fffe05afeb4,23177783,0,0x0,8
tick,0x7fffe05afeb4,23193818,0,0x0,8
tick,0x7fffe05afeb4,23209783,0,0x0,8
tick,0x7fffe05afeb4,23224735,0,0x0,8
tick,0x7fffe05afeb4,23240755,0,0x0,8
tick,0x7fffe05afeb4,23256995,0,0x0,8
tick,0x7fffe05afeb4,23271800,0,0x0,8
tick,0x7fffe05afeb4,23287732,0,0x0,8
tick,0x7fffe05afeb4,23304123,0,0x0,8
tick,0x7fffe05afeb4,23319879,0,0x0,8
tick,0x7fffe05afeb4,23335824,0,0x0,8
tick,0x7fffe05afeb4,23351977,0,0x0,8
tick,0x7fffe05afeb4,23367858,0,0x0,8
tick,0x7fffe05afeb4,23383803,0,0x0,8
tick,0x7fffe05afeb4,23399761,0,0x0,8
tick,0x7fffe05afeb4,23416012,0,0x0,8
tick,0x7fffe05afeb4,23431757,0,0x0,8
tick,0x7fffe05afeb4,23447839,0,0x0,8
tick,0x7fffe05afeb4,23463840,0,0x0,8
tick,0x7fffe05afeb4,23479870,0,0x0,8
tick,0x7fffe05afeb4,23495814,0,0x0,8
tick,0x7fffe05afeb4,23510812,0,0x0,8
tick,0x7fffe05afeb4,23526784,0,0x0,8
tick,0x7fffe05afeb4,23542914,0,0x0,8
tick,0x7fffe05afeb4,23558910,0,0x0,8
tick,0x7fffe05afeb4,23574842,0,0x0,8
tick,0x7fffe05afeb4,23590804,0,0x0,8
tick,0x7fffe05afeb4,23606765,0,0x0,8
tick,0x7fffe05afeb4,23622735,0,0x0,8
tick,0x7fffe05afeb4,23638900,0,0x0,8
tick,0x7fffe05afeb4,23654813,0,0x0,8
tick,0x7fffe05afeb4,23670899,0,0x0,8
tick,0x7fffe05afeb4,23686807,0,0x0,8
tick,0x7fffe05afeb4,23702921,0,0x0,8
tick,0x7fffe05afeb4,23718787,0,0x0,8
tick,0x7fffe05afeb4,23734819,0,0x0,8
tick,0x7fffe05afeb4,23750730,0,0x0,8
tick,0x7fffe05afeb4,23766913,0,0x0,8
tick,0x7fffe05afeb4,23782892,0,0x0,8
tick,0x7fffe05afeb4,23798843,0,0x0,8
tick,0x7fffe05afeb4,23815158,0,0x0,8
tick,0x7fffe05afeb4,23830836,0,0x0,8
tick,0x7fffe05afeb4,23845842,0,0x0,8
tick,0x7fffe05afeb4,23861908,0,0x0,8
tick,0x7fffe05afeb4,23877795,0,0x0,8
tick,0x7fffe05afeb4,23893863,0,0x0,8
tick,0x7fffe05afeb4,23909902,0,0x0,8
tick,0x7fffe05afeb4,23925941,0,0x0,8
tick,0x7fffe05afeb4,23940826,0,0x0,8
tick,0x7fffe05afeb4,23956938,0,0x0,8
tick,0x7fffe05afeb4,23972809,0,0x0,8
tick,0x7fffe05afeb4,23988796,0,0x0,8
tick,0x7fffe05afeb4,24003780,0,0x0,8
tick,0x7fffe05afeb4,24019831,0,0x0,8
tick,0x7fffe05afeb4,24035833,0,0x0,8
tick,0x7fffe05afeb4,24050789,0,0x0,8
tick,0x7fffe05afeb4,24066813,0,0x0,8
tick,0x7fffe05afeb4,24081946,0,0x0,8
tick,0x7fffe05afeb4,24097845,0,0x0,8
tick,0x7fffe05afeb4,24113797,0,0x0,8
tick,0x7fffe05afeb4,24129831,0,0x0,8
tick,0x7fffe05afeb4,24146056,0,0x0,8
tick,0x7fffe05afeb4,24161866,0,0x0,8
tick,0x7fffe05afeb4,24177765,0,0x0,8
tick,0x7fffe05afeb4,24192781,0,0x0,8
tick,0x7fffe05afeb4,24208851,0,0x0,8
tick,0x7fffe05afeb4,24224759,0,0x0,8
tick,0x7fffe05afeb4,24240789,0,0x0,8
tick,0x7fffe05afeb4,24255791,0,0x0,8
tick,0x7fffe05afeb4,24271740,0,0x0,8
tick,0x7fffe05afeb4,24287749,0,0x0,8
tick,0x7fffe05afeb4,24303804,0,0x0,8
tick,0x7fffe05afeb4,24318931,0,0x0,8
tick,0x7fffe05afeb4,24334793,0,0x0,8
tick,0x7fffe05afeb4,24350745,0,0x0,8
tick,0x7fffe05afeb4,24366768,0,0x0,8
tick,0x7fffe05afeb4,24381748,0,0x0,8
tick,0x7fffe05afeb4,24397726,0,0x0,8
tick,0x7fffe05afeb4,24413733,0,0x0,8
tick,0x7fffe05afeb4,24429844,0,0x0,8
tick,0x7fffe05afeb4,24445819,0,0x0,8
tick,0x7fffe05afeb4,24461818,0,0x0,8
tick,0x7fffe05afeb4,24478117,0,0x0,8
tick,0x7fffe05afeb4,24493834,0,0x0,8
tick,0x7fffe05afeb4,24508962,0,0x0,8
tick,0x7fffe05afeb4,24523787,0,0x0,8
tick,0x7fffe05afeb4,24539968,0,0x0,8
tick,0x7fffe05afeb4,24555737,0,0x0,8
tick,0x7fffe05afeb4,24572104,0,0x0,8
tick,0x7fffe05afeb4,24587756,0,0x0,8
tick,0x7fffe05afeb4,24603550,0,0x0,8
tick,0x7fffe05afeb4,24618745,0,0x0,8
tick,0x7fffe05afeb4,24634803,0,0x0,8
tick,0x7fffe05afeb4,24650732,0,0x0,8
tick,0x7fffe05afeb4,24666740,0,0x0,8
tick,0x7fffe05afeb4,24682810,0,0x0,8
tick,0x7fffe05afeb4,24698806,0,0x0,8
tick,0x7fffe05afeb4,24713758,0,0x0,8
tick,0x7fffe05afeb4,24729772,0,0x0,8
tick,0x7fffe05afeb4,24745766,0,0x0,8
tick,0x7fffe05afeb4,24761751,0,0x0,8
tick,0x7fffe05afeb4,24776800,0,0x0,8
tick,0x7fffe05afeb4,24792736,0,0x0,8
tick,0x7fffe05afeb4,24808838,0,0x0,8
tick,0x7fffe05afeb4,24824753,0,0x0,8
tick,0x7fffe05afeb4,24840736,0,0x0,8
tick,0x7fffe05afeb4,24856893,0,0x0,8
tick,0x7fffe05afeb4,24872765,0,0x0,8
tick,0x7fffe05afeb4,24888750,0,0x0,8
tick,0x7fffe05afeb4,24904818,0,0x0,8
tick,0x7fffe05afeb4,24920757,0,0x0,8
tick,0x7fffe05afeb4,24935729,0,0x0,8
tick,0x7fffe05afeb4,24950736,0,0x0,8
tick,0x7fffe05afeb4,24966737,0,0x0,8
tick,0x7fffe05afeb4,24981748,0,0x0,8
tick,0x7fffe05afeb4,24997884,0,0x0,8
tick,0x7fffe05afeb4,25013839,0,0x0,8
tick,0x7fffe05afeb4,25029853,0,0x0,8
tick,0x7fffe05afeb4,25044735,0,0x0,8
tick,0x7fffe05afeb4,25060807,0,0x0,8
tick,0x7fffe05afeb4,25075781,0,0x0,8
tick,0x7fffe05afeb4,25090748,0,0x0,8
tick,0x7fffe05afeb4,25106747,0,0x0,8
tick,0x7fffe05afeb4,25122924,0,0x0,8
tick,0x7fffe05afeb4,25138856,0,0x0,8
tick,0x7fffe05afeb4,25155043,0,0x0,8
tick,0x7fffe05afeb4,25170947,0,0x0,8
tick,0x7fffe05afeb4,25185821,0,0x0,8
tick,0x7fffe05afeb4,25201759,0,0x0,8
tick,0x7fffe05afeb4,25217838,0,0x0,8
tick,0x7fffe05afeb4,25233824,0,0x0,8
tick,0x7fffe05afeb4,25249890,0,0x0,8
tick,0x7fffe05afeb4,25265853,0,0x0,8
tick,0x7fffe05afeb4,25282053,0,0x0,8
tick,0x7fffe05afeb4,25297815,0,0x0,8
tick,0x7fffe05afeb4,25313845,0,0x0,8
tick,0x7fffe05afeb4,25329963,0,0x0,8
tick,0x7fffe05afeb4,25345809,0,0x0,8
tick,0x7fffe05afeb4,25360913,0,0x0,8
tick,0x7fffe05afeb4,25375887,0,0x0,8
tick,0x7fffe05afeb4,25390750,0,0x0,8
tick,0x7fffe05afeb4,25406888,0,0x0,8
tick,0x7fffe05afeb4,25422733,0,0x0,8
tick,0x7fffe05afeb4,25438831,0,0x0,8
tick,0x7fffe05afeb4,25454817,0,0x0,8
tick,0x7fffe05afeb4,25470862,0,0x0,8
tick,0x7fffe05afeb4,25486882,0,0x0,8
tick,0x7fffe05afeb4,25502813,0,0x0,8
tick,0x7fffe05afeb4,25518843,0,0x0,8
tick,0x7fffe05afeb4,25534908,0,0x0,8
tick,0x7fffe05afeb4,25550757,0,0x0,8
tick,0x7fffe05afeb4,25566790,0,0x0,8
tick,0x7fffe05afeb4,25581854,0,0x0,8
tick,0x7fffe05afeb4,25597816,0,0x0,8
tick,0x7fffe05afeb4,25613819,0,0x0,8
tick,0x7fffe05afeb4,25628857,0,0x0,8
tick,0x7fffe05afeb4,25644758,0,0x0,8
tick,0x7fffe05afeb4,25660854,0,0x0,8
tick,0x7fffe05afeb4,25676042,0,0x0,8
tick,0x7fffe05afeb4,25691803,0,0x0,8
tick,0x7fffe05afeb4,25707747,0,0x0,8
tick,0x7fffe05afeb4,25723837,0,0x0,8
tick,0x7fffe05afeb4,25739891,0,0x0,8
tick,0x7fffe05afeb4,25755742,0,0x0,8
tick,0x7fffe05afeb4,25771752,0,0x0,8
tick,0x7fffe05afeb4,25788070,0,0x0,8
tick,0x7fffe05afeb4,25803862,0,0x0,8
tick,0x7fffe05afeb4,25819765,0,0x0,8
tick,0x7fffe05afeb4,25835815,0,0x0,8
tick,0x7fffe05afeb4,25851799,0,0x0,8
tick,0x7fffe05afeb4,25866816,0,0x0,8
tick,0x7fffe05afeb4,25881929,0,0x0,8
tick,0x7fffe05afeb4,25897814,0,0x0,8
tick,0x7fffe05afeb4,25914023,0,0x0,8
tick,0x7fffe05afeb4,25929909,0,0x0,8
tick,0x7fffe05afeb4,25946415,0,0x0,8
tick,0x7fffe05afeb4,25961761,0,0x0,8
tick,0x7fffe05afeb4,25978563,0,0x0,8
tick,0x7fffe05afeb4,25993839,0,0x0,8
tick,0x7fffe05afeb4,26010184,0,0x0,8
tick,0x7fffe05afeb4,26025886,0,0x0,8
tick,0x7fffe05afeb4,26041889,0,0x0,8
tick,0x7fffe05afeb4,26057739,0,0x0,8
tick,0x7fffe05afeb4,26073733,0,0x0,8
tick,0x7fffe05afeb4,26089873,0,0x0,8
tick,0x7fffe05afeb4,26105943,0,0x0,8
tick,0x7fffe05afeb4,26144764,0,0x0,8
tick,0x7fffe05afeb4,26153845,0,0x0,8
tick,0x7fffe05afeb4,26170179,0,0x0,8
tick,0x7fffe05afeb4,26184916,0,0x0,8
tick,0x7fffe05afeb4,26199837,0,0x0,8
tick,0x7fffe05afeb4,26215814,0,0x0,8
tick,0x7fffe05afeb4,26231851,0,0x0,8
tick,0x7fffe05afeb4,26247856,0,0x0,8
tick,0x7fffe05afeb4,26263745,0,0x0,8
tick,0x7fffe05afeb4,26278808,0,0x0,8
tick,0x7fffe05afeb4,26294948,0,0x0,8
tick,0x7fffe05afeb4,26310887,0,0x0,8
tick,0x7fffe05afeb4,26325844,0,0x0,8
tick,0x7fffe05afeb4,26341829,0,0x0,8
tick,0x7fffe05afeb4,26358019,0,0x0,8
tick,0x7fffe05afeb4,26373843,0,0x0,8
tick,0x7fffe05afeb4,26390089,0,0x0,8
tick,0x7fffe05afeb4,26405777,0,0x0,8
tick,0x7fffe05afeb4,26421775,0,0x0,8
tick,0x7fffe05afeb4,26437734,0,0x0,8
tick,0x7fffe05afeb4,26452764,0,0x0,8
tick,0x7fffe05afeb4,26467812,0,0x0,8
tick,0x7fffe05afeb4,26483873,0,0x0,8
tick,0x7fffe05afeb4,26499806,0,0x0,8
tick,0x7fffe05afeb4,26515736,0,0x0,8
tick,0x7fffe05afeb4,26531836,0,0x0,8
tick,0x7fffe05afeb4,26547817,0,0x0,8
tick,0x7fffe05afeb4,26563723,0,0x0,8
tick,0x7fffe05afeb4,26580037,0,0x0,8
tick,0x7fffe05afeb4,26595738,0,0x0,8
tick,0x7fffe05afeb4,26611847,0,0x0,8
tick,0x7fffe05afeb4,26627721,0,0x0,8
tick,0x7fffe05afeb4,26643811,0,0x0,8
tick,0x7fffe05afeb4,26659759,0,0x0,8
tick,0x7fffe05afeb4,26675843,0,0x0,8
tick,0x7fffe05afeb4,26691752,0,0x0,8
tick,0x7fffe05afeb4,26707740,0,0x0,8
tick,0x7fffe05afeb4,26723726,0,0x0,8
tick,0x7fffe05afeb4,26740080,0,0x0,8
tick,0x7fffe05afeb4,26755729,0,0x0,8
tick,0x7fffe05afeb4,26771787,0,0x0,8
tick,0x7fffe05afeb4,26787712,0,0x0,8
tick,0x7fffe05afeb4,26804004,0,0x0,8
tick,0x7fffe05afeb4,26819745,0,0x0,8
tick,0x7fffe05afeb4,26834752,0,0x0,8
tick,0x7fffe05afeb4,26850799,0,0x0,8
tick,0x7fffe05afeb4,26867000,0,0x0,8
tick,0x7fffe05afeb4,26882835,0,0x0,8
tick,0x7fffe05afeb4,26898891,0,0x0,8
tick,0x7fffe05afeb4,26915018,0,0x0,8
tick,0x7fffe05afeb4,26930925,0,0x0,8
tick,0x7fffe05afeb4,26945754,0,0x0,8
tick,0x7fffe05afeb4,26961771,0,0x0,8
tick,0x7fffe05afeb4,26977926,0,0x0,8
tick,0x7fffe05afeb4,26992944,0,0x0,8
tick,0x7fffe05afeb4,27007785,0,0x0,8
tick,0x7fffe05afeb4,27023798,0,0x0,8
tick,0x7fffe05afeb4,27039940,0,0x0,8
tick,0x7fffe05afeb4,27055832,0,0x0,8
tick,0x7fffe05afeb4,27071740,0,0x0,8
tick,0x7fffe05afeb4,27087812,0,0x0,8
tick,0x7fffe05afeb4,27104141,0,0x0,8
tick,0x7fffe05afeb4,27119910,0,0x0,8
tick,0x7fffe05afeb4,27135795,0,0x0,8
tick,0x7fffe05afeb4,27151863,0,0x0,8
tick,0x7fffe05afeb4,27167796,0,0x0,8
tick,0x7fffe05afeb4,27183983,0,0x0,8
tick,0x7fffe05afeb4,27199751,0,0x0,8
tick,0x7fffe05afeb4,27214732,0,0x0,8
tick,0x7fffe05afeb4,27230794,0,0x0,8
tick,0x7fffe05afeb4,27245872,0,0x0,8
tick,0x7fffe05afeb4,27261877,0,0x0,8
tick,0x7fffe05afeb4,27276805,0,0x0,8
tick,0x7fffe05afeb4,27292809,0,0x0,8
tick,0x7fffe05afeb4,27307911,0,0x0,8
tick,0x7fffe05afeb4,27323736,0,0x0,8
tick,0x7fffe05afeb4,27339858,0,0x0,8
tick,0x7fffe05afeb4,27355815,0,0x0,8
tick,0x7fffe05afeb4,27371805,0,0x0,8
tick,0x7fffe05afeb4,27387856,0,0x0,8
tick,0x7fffe05afeb4,27403969,0,0x0,8
tick,0x7fffe05afeb4,27419866,0,0x0,8
tick,0x7fffe05afeb4,27435314,0,0x0,8
tick,0x7fffe05afeb4,27450728,0,0x0,8
tick,0x7fffe05afeb4,27466920,0,0x0,8
tick,0x7fffe05afeb4,27482889,0,0x0,8
tick,0x7fffe05afeb4,27498874,0,0x0,8
tick,0x7fffe05afeb4,27514768,0,0x0,8
tick,0x7fffe05afeb4,27530967,0,0x0,8
tick,0x7fffe05afeb4,27546832,0,0x0,8
tick,0x7fffe05afeb4,27562933,0,0x0,8
tick,0x7fffe05afeb4,27578848,0,0x0,8
tick,0x7fffe05afeb4,27594733,0,0x0,8
tick,0x7fffe05afeb4,27610814,0,0x0,8
tick,0x7fffe05afeb4,27626854,0,0x0,8
tick,0x7fffe05afeb4,27642742,0,0x0,8
tick,0x7fffe05afeb4,27658821,0,0x0,8
tick,0x7fffe05afeb4,27674949,0,0x0,8
tick,0x7fffe05afeb4,27690935,0,0x0,8
tick,0x7fffe05afeb4,27706818,0,0x0,8
tick,0x7fffe05afeb4,27722816,0,0x0,8
tick,0x7fffe05afeb4,27738836,0,0x0,8
tick,0x7fffe05afeb4,27754826,0,0x0,8
tick,0x7fffe05afeb4,27770835,0,0x0,8
tick,0x7fffe05afeb4,27786755,0,0x0,8
tick,0x7fffe05afeb4,27802836,0,0x0,8
tick,0x7fffe05afeb4,27817883,0,0x0,8
tick,0x7fffe05afeb4,27833834,0,0x0,8
tick,0x7fffe05afeb4,27849793,0,0x0,8
tick,0x7fffe05afeb4,27865798,0,0x0,8
tick,0x7fffe05afeb4,27881800,0,0x0,8
tick,0x7fffe05afeb4,27897902,0,0x0,8
tick,0x7fffe05afeb4,27914121,0,0x0,8
tick,0x7fffe05afeb4,27928838,0,0x0,8
tick,0x7fffe05afeb4,27944830,0,0x0,8
tick,0x7fffe05afeb4,27960805,0,0x0,8
tick,0x7fffe05afeb4,27976753,0,0x0,8
tick,0x7fffe05afeb4,27992874,0,0x0,8
tick,0x7fffe05afeb4,28009005,0,0x0,8
tick,0x7fffe05afeb4,28024846,0,0x0,8
tick,0x7fffe05afeb4,28040892,0,0x0,8
tick,0x7fffe05afeb4,28056817,0,0x0,8
tick,0x7fffe05afeb4,28072899,0,0x0,8
tick,0x7fffe05afeb4,28088742,0,0x0,8
tick,0x7fffe05afeb4,28104782,0,0x0,8
tick,0x7fffe05afeb4,28120796,0,0x0,8
tick,0x7fffe05afeb4,28136959,0,0x0,8
tick,0x7fffe05afeb4,28152737,0,0x0,8
tick,0x7fffe05afeb4,28168863,0,0x0,8
tick,0x7fffe05afeb4,28184900,0,0x0,8
tick,0x7fffe05afeb4,28200883,0,0x0,8
tick,0x7fffe05afeb4,28216717,0,0x0,8
tick,0x7fffe05afeb4,28232731,0,0x0,8
tick,0x7fffe05afeb4,28248874,0,0x0,8
tick,0x7fffe05afeb4,28264864,0,0x0,8
tick,0x7fffe05afeb4,28279801,0,0x0,8
tick,0x7fffe05afeb4,28295817,0,0x0,8
tick,0x7fffe05afeb4,28311778,0,0x0,8
tick,0x7fffe05afeb4,28328107,0,0x0,8
tick,0x7fffe05afeb4,28343735,0,0x0,8
tick,0x7fffe05afeb4,28359945,0,0x0,8
tick,0x7fffe05afeb4,28375783,0,0x0,8
tick,0x7fffe05afeb4,28391923,0,0x0,8
tick,0x7fffe05afeb4,28407735,0,0x0,8
tick,0x7fffe05afeb4,28423742,0,0x0,8
tick,0x7fffe05afeb4,28439851,0,0x0,8
tick,0x7fffe05afeb4,28455883,0,0x0,8
tick,0x7fffe05afeb4,28471813,0,0x0,8
tick,0x7fffe05afeb4,28487792,0,0x0,8
tick,0x7fffe05afeb4,28503755,0,0x0,8
tick,0x7fffe05afeb4,28519861,0,0x0,8
tick,0x7fffe05afeb4,28535843,0,0x0,8
tick,0x7fffe05afeb4,28551730,0,0x0,8
tick,0x7fffe05afeb4,28567734,0,0x0,8
tick,0x7fffe05afeb4,28583945,0,0x0,8
tick,0x7fffe05afeb4,28599765,0,0x0,8
tick,0x7fffe05afeb4,28615758,0,0x0,8
tick,0x7fffe05afeb4,28631730,0,0x0,8
tick,0x7fffe05afeb4,28646868,0,0x0,8
tick,0x7fffe05afeb4,28662822,0,0x0,8
tick,0x7fffe05afeb4,28678814,0,0x0,8
tick,0x7fffe05afeb4,28694829,0,0x0,8
tick,0x7fffe05afeb4,28710881,0,0x0,8
tick,0x7fffe05afeb4,28726798,0,0x0,8
tick,0x7fffe05afeb4,28742825,0,0x0,8
tick,0x7fffe05afeb4,28759008,0,0x0,8
tick,0x7fffe05afeb4,28774908,0,0x0,8
tick,0x7fffe05afeb4,28790711,0,0x0,8
tick,0x7fffe05afeb4,28806737,0,0x0,8
tick,0x7fffe05afeb4,28822751,0,0x0,8
tick,0x7fffe05afeb4,28838160,0,0x0,8
tick,0x7fffe05afeb4,28853728,0,0x0,8
tick,0x7fffe05afeb4,28869899,0,0x0,8
tick,0x7fffe05afeb4,28885743,0,0x0,8
tick,0x7fffe05afeb4,28901980,0,0x0,8
tick,0x7fffe05afeb4,28917745,0,0x0,8
tick,0x7fffe05afeb4,28933962,0,0x0,8
tick,0x7fffe05afeb4,28949803,0,0x0,8
tick,0x7fffe05afeb4,28965936,0,0x0,8
tick,0x7fffe05afeb4,28981789,0,0x0,8
tick,0x7fffe05afeb4,28996810,0,0x0,8
tick,0x7fffe05afeb4,29012811,0,0x0,8
tick,0x7fffe05afeb4,29028871,0,0x0,8
tick,0x7fffe05afeb4,29044832,0,0x0,8
tick,0x7fffe05afeb4,29060903,0,0x0,8
tick,0x7fffe05afeb4,29076831,0,0x0,8
tick,0x7fffe05afeb4,29093058,0,0x0,8
tick,0x7fffe05afeb4,29108831,0,0x0,8
tick,0x7fffe05afeb4,29124956,0,0x0,8
tick,0x7fffe05afeb4,29140874,0,0x0,8
tick,0x7fffe05afeb4,29156943,0,0x0,8
tick,0x7fffe05afeb4,29172892,0,0x0,8
tick,0x7fffe05afeb4,29188871,0,0x0,8
tick,0x7fffe05afeb4,29204822,0,0x0,8
tick,0x7fffe05afeb4,29220873,0,0x0,8
tick,0x7fffe05afeb4,29236823,0,0x0,8
tick,0x7fffe05afeb4,29252878,0,0x0,8
tick,0x7fffe05afeb4,29267800,0,0x0,8
tick,0x7fffe05afeb4,29283861,0,0x0,8
tick,0x7fffe05afeb4,29299813,0,0x0,8
tick,0x7fffe05afeb4,29315737,0,0x0,8
tick,0x7fffe05afeb4,29331820,0,0x0,8
tick,0x7fffe05afeb4,29348030,0,0x0,8
tick,0x7fffe05afeb4,29363830,0,0x0,8
tick,0x7fffe05afeb4,29379844,0,0x0,8
tick,0x7fffe05afeb4,29395752,0,0x0,8
tick,0x7fffe05afeb4,29411881,0,0x0,8
tick,0x7fffe05afeb4,29427745,0,0x0,8
tick,0x7fffe05afeb4,29443929,0,0x0,8
tick,0x7fffe05afeb4,29459879,0,0x0,8
tick,0x7fffe05afeb4,29475876,0,0x0,8
tick,0x7fffe05afeb4,29491768,0,0x0,8
tick,0x7fffe05afeb4,29507801,0,0x0,8
tick,0x7fffe05afeb4,29523765,0,0x0,8
tick,0x7fffe05afeb4,29539790,0,0x0,8
tick,0x7fffe05afeb4,29555744,0,0x0,8
tick,0x7fffe05afeb4,29571946,0,0x0,8
tick,0x7fffe05afeb4,29587807,0,0x0,8
tick,0x7fffe05afeb4,29603946,0,0x0,8
tick,0x7fffe05afeb4,29619767,0,0x0,8
tick,0x7fffe05afeb4,29635800,0,0x0,8
tick,0x7fffe05afeb4,29651731,0,0x0,8
tick,0x7fffe05afeb4,29667851,0,0x0,8
tick,0x7fffe05afeb4,29683749,0,0x0,8
tick,0x7fffe05afeb4,29699782,0,0x0,8
tick,0x7fffe05afeb4,29715762,0,0x0,8
tick,0x7fffe05afeb4,29731872,0,0x0,8
tick,0x7fffe05afeb4,29747733,0,0x0,8
tick,0x7fffe05afeb4,29763736,0,0x0,8
tick,0x7fffe05afeb4,29779820,0,0x0,8
tick,0x7fffe05afeb4,29795843,0,0x0,8
tick,0x7fffe05afeb4,29811731,0,0x0,8
tick,0x7fffe05afeb4,29827735,0,0x0,8
tick,0x7fffe05afeb4,29843769,0,0x0,8
tick,0x7fffe05afeb4,29860042,0,0x0,8
tick,0x7fffe05afeb4,29875817,0,0x0,8
tick,0x7fffe05afeb4,29891841,0,0x0,8
tick,0x7fffe05afeb4,29906918,0,0x0,8
tick,0x7fffe05afeb4,29923040,0,0x0,8
tick,0x7fffe05afeb4,29938816,0,0x0,8
tick,0x7fffe05afeb4,29954967,0,0x0,8
tick,0x7fffe05afeb4,29970762,0,0x0,8
tick,0x7fffe05afeb4,29986956,0,0x0,8
tick,0x7fffe05afeb4,30002885,0,0x0,8
tick,0x7fffe05afeb4,30018766,0,0x0,8
tick,0x7fffe05afeb4,30033889,0,0x0,8
tick,0x7fffe05afeb4,30049976,0,0x0,8
tick,0x7fffe05afeb4,30065805,0,0x0,8
tick,0x7fffe05afeb4,30081846,0,0x0,8
tick,0x7fffe05afeb4,30097743,0,0x0,8
tick,0x7fffe05afeb4,30113826,0,0x0,8
tick,0x7fffe05afeb4,30129952,0,0x0,8
tick,0x7fffe05afeb4,30145943,0,0x0,8
tick,0x7fffe05afeb4,30161813,0,0x0,8
tick,0x7fffe05afeb4,30177809,0,0x0,8
tick,0x7fffe05afeb4,30193891,0,0x0,8
tick,0x7fffe05afeb4,30209781,0,0x0,8
tick,0x7fffe05afeb4,30225875,0,0x0,8
tick,0x7fffe05afeb4,30241913,0,0x0,8
tick,0x7fffe05afeb4,30257721,0,0x0,8
tick,0x7fffe05afeb4,30273880,0,0x0,8
tick,0x7fffe05afeb4,30290292,0,0x0,8
tick,0x7fffe05afeb4,30305956,0,0x0,8
tick,0x7fffe05afeb4,30321912,0,0x0,8
tick,0x7fffe05afeb4,30337891,0,0x0,8
tick,0x7fffe05afeb4,30353868,0,0x0,8
tick,0x7fffe05afeb4,30370063,0,0x0,8
tick,0x7fffe05afeb4,30385744,0,0x0,8
tick,0x7fffe05afeb4,30401917,0,0x0,8
tick,0x7fffe05afeb4,30416805,0,0x0,8
tick,0x7fffe05afeb4,30432815,0,0x0,8
tick,0x7fffe05afeb4,30448745,0,0x0,8
tick,0x7fffe05afeb4,30464821,0,0x0,8
tick,0x7fffe05afeb4,30480739,0,0x0,8
tick,0x7fffe05afeb4,30495738,0,0x0,8
tick,0x7fffe05afeb4,30511733,0,0x0,8
tick,0x7fffe05afeb4,30526742,0,0x0,8
tick,0x7fffe05afeb4,30542753,0,0x0,8
tick,0x7fffe05afeb4,30558749,0,0x0,8
tick,0x7fffe05afeb4,30574750,0,0x0,8
tick,0x7fffe05afeb4,30590755,0,0x0,8
tick,0x7fffe05afeb4,30606724,0,0x0,8
tick,0x7fffe05afeb4,30622748,0,0x0,8
tick,0x7fffe05afeb4,30638769,0,0x0,8
tick,0x7fffe05afeb4,30654725,0,0x0,8
tick,0x7fffe05afeb4,30670746,0,0x0,8
tick,0x7fffe05afeb4,30686737,0,0x0,8
tick,0x7fffe05afeb4,30702784,0,0x0,8
tick,0x7fffe05afeb4,30717733,0,0x0,8
tick,0x7fffe05afeb4,30733735,0,0x0,8
tick,0x7fffe05afeb4,30749731,0,0x0,8
tick,0x7fffe05afeb4,30765746,0,0x0,8
tick,0x7fffe05afeb4,30781816,0,0x0,8
tick,0x7fffe05afeb4,30797755,0,0x0,8
tick,0x7fffe05afeb4,30813729,0,0x0,8
tick,0x7fffe05afeb4,30829772,0,0x0,8
tick,0x7fffe05afeb4,30845734,0,0x0,8
tick,0x7fffe05afeb4,30861758,0,0x0,8
tick,0x7fffe05afeb4,30876815,0,0x0,8
tick,0x7fffe05afeb4,30892737,0,0x0,8
tick,0x7fffe05afeb4,30908766,0,0x0,8
tick,0x7fffe05afeb4,30924882,0,0x0,8
tick,0x7fffe05afeb4,30940760,0,0x0,8
tick,0x7fffe05afeb4,30956733,0,0x0,8
tick,0x7fffe05afeb4,30972817,0,0x0,8
tick,0x7fffe05afeb4,30988809,0,0x0,8
tick,0x7fffe05afeb4,31004781,0,0x0,8
tick,0x7fffe05afeb4,31020805,0,0x0,8
tick,0x7fffe05afeb4,31036835,0,0x0,8
tick,0x7fffe05afeb4,31051736,0,0x0,8
tick,0x7fffe05afeb4,31067748,0,0x0,8
tick,0x7fffe05afeb4,31083801,0,0x0,8
tick,0x7fffe05afeb4,31098848,0,0x0,8
tick,0x7fffe05afeb4,31114739,0,0x0,8
tick,0x7fffe05afeb4,31130750,0,0x0,8
tick,0x7fffe05afeb4,31147143,0,0x0,8
tick,0x7fffe05afeb4,31162832,0,0x0,8
tick,0x7fffe05afeb4,31178742,0,0x0,8
tick,0x7fffe05afeb4,31194735,0,0x0,8
tick,0x7fffe05afeb4,31210814,0,0x0,8
tick,0x7fffe05afeb4,31226800,0,0x0,8
tick,0x7fffe05afeb4,31242740,0,0x0,8
tick,0x7fffe05afeb4,31258766,0,0x0,8
tick,0x7fffe05afeb4,31274845,0,0x0,8
tick,0x7fffe05afeb4,31290738,0,0x0,8
tick,0x7fffe05afeb4,31306756,0,0x0,8
tick,0x7fffe05afeb4,31322724,0,0x0,8
tick,0x7fffe05afeb4,31338827,0,0x0,8
tick,0x7fffe05afeb4,31354806,0,0x0,8
tick,0x7fffe05afeb4,31370751,0,0x0,8
tick,0x7fffe05afeb4,31386813,0,0x0,8
tick,0x7fffe05afeb4,31402822,0,0x0,8
tick,0x7fffe05afeb4,31418731,0,0x0,8
tick,0x7fffe05afeb4,31434732,0,0x0,8
tick,0x7fffe05afeb4,31450937,0,0x0,8
tick,0x7fffe05afeb4,31466835,0,0x0,8
tick,0x7fffe05afeb4,31482965,0,0x0,8
tick,0x7fffe05afeb4,31497727,0,0x0,8
tick,0x7fffe05afeb4,31513768,0,0x0,8
tick,0x7fffe05afeb4,31528737,0,0x0,8
tick,0x7fffe05afeb4,31544764,0,0x0,8
tick,0x7fffe05afeb4,31560728,0,0x0,8
tick,0x7fffe05afeb4,31575738,0,0x0,8
tick,0x7fffe05afeb4,31591812,0,0x0,8
tick,0x7fffe05afeb4,31607731,0,0x0,8
tick,0x7fffe05afeb4,31623725,0,0x0,8
tick,0x7fffe05afeb4,31639769,0,0x0,8
tick,0x7fffe05afeb4,31655732,0,0x0,8
tick,0x7fffe05afeb4,31671738,0,0x0,8
tick,0x7fffe05afeb4,31687750,0,0x0,8
tick,0x7fffe05afeb4,31703742,0,0x0,8
tick,0x7fffe05afeb4,31719763,0,0x0,8
tick,0x7fffe05afeb4,31735740,0,0x0,8
tick,0x7fffe05afeb4,31751761,0,0x0,8
tick,0x7fffe05afeb4,31767747,0,0x0,8
tick,0x7fffe05afeb4,31783730,0,0x0,8
tick,0x7fffe05afeb4,31799741,0,0x0,8
tick,0x7fffe05afeb4,31815751,0,0x0,8
tick,0x7fffe05afeb4,31831737,0,0x0,8
tick,0x7fffe05afeb4,31847745,0,0x0,8
tick,0x7fffe05afeb4,31863732,0,0x0,8
tick,0x7fffe05afeb4,31878881,0,0x0,8
tick,0x7fffe05afeb4,31894821,0,0x0,8
tick,0x7fffe05afeb4,31910723,0,0x0,8
tick,0x7fffe05afeb4,31926752,0,0x0,8
tick,0x7fffe05afeb4,31942741,0,0x0,8
tick,0x7fffe05afeb4,31958750,0,0x0,8
tick,0x7fffe05afeb4,31974799,0,0x0,8
tick,0x7fffe05afeb4,31990736,0,0x0,8
tick,0x7fffe05afeb4,32006744,0,0x0,8
tick,0x7fffe05afeb4,32022791,0,0x0,8
tick,0x7fffe05afeb4,32038808,0,0x0,8
tick,0x7fffe05afeb4,32054736,0,0x0,8
tick,0x7fffe05afeb4,32070773,0,0x0,8
tick,0x7fffe05afeb4,32086827,0,0x0,8
tick,0x7fffe05afeb4,32102784,0,0x0,8
tick,0x7fffe05afeb4,32118810,0,0x0,8
tick,0x7fffe05afeb4,32134754,0,0x0,8
tick,0x7fffe05afeb4,32150770,0,0x0,8
tick,0x7fffe05afeb4,32166751,0,0x0,8
tick,0x7fffe05afeb4,32182729,0,0x0,8
tick,0x7fffe05afeb4,32198732,0,0x0,8
tick,0x7fffe05afeb4,32214838,0,0x0,8
tick,0x7fffe05afeb4,32230726,0,0x0,8
tick,0x7fffe05afeb4,32245776,0,0x0,8
tick,0x7fffe05afeb4,32261751,0,0x0,8
tick,0x7fffe05afeb4,32277811,0,0x0,8
tick,0x7fffe05afeb4,32293739,0,0x0,8
tick,0x7fffe05afeb4,32309788,0,0x0,8
tick,0x7fffe05afeb4,32324755,0,0x0,8
tick,0x7fffe05afeb4,32340732,0,0x0,8
tick,0x7fffe05afeb4,32356734,0,0x0,8
tick,0x7fffe05afeb4,32372964,0,0x0,8
tick,0x7fffe05afeb4,32388774,0,0x0,8
tick,0x7fffe05afeb4,32404819,0,0x0,8
tick,0x7fffe05afeb4,32420741,0,0x0,8
tick,0x7fffe05afeb4,32436824,0,0x0,8
tick,0x7fffe05afeb4,32452811,0,0x0,8
tick,0x7fffe05afeb4,32468824,0,0x0,8
tick,0x7fffe05afeb4,32484745,0,0x0,8
tick,0x7fffe05afeb4,32499805,0,0x0,8
tick,0x7fffe05afeb4,32515725,0,0x0,8
tick,0x7fffe05afeb4,32531745,0,0x0,8
tick,0x7fffe05afeb4,32546754,0,0x0,8
tick,0x7fffe05afeb4,32562733,0,0x0,8
tick,0x7fffe05afeb4,32577875,0,0x0,8
tick,0x7fffe05afeb4,32593811,0,0x0,8
tick,0x7fffe05afeb4,32609779,0,0x0,8
tick,0x7fffe05afeb4,32625814,0,0x0,8
tick,0x7fffe05afeb4,32641731,0,0x0,8
tick,0x7fffe05afeb4,32657735,0,0x0,8
tick,0x7fffe05afeb4,32673759,0,0x0,8
tick,0x7fffe05afeb4,32689836,0,0x0,8
tick,0x7fffe05afeb4,32705816,0,0x0,8
tick,0x7fffe05afeb4,32721736,0,0x0,8
tick,0x7fffe05afeb4,32737830,0,0x0,8
tick,0x7fffe05afeb4,32753739,0,0x0,8
tick,0x7fffe05afeb4,32769795,0,0x0,8
tick,0x7fffe05afeb4,32785748,0,0x0,8
tick,0x7fffe05afeb4,32801725,0,0x0,8
tick,0x7fffe05afeb4,32817851,0,0x0,8
tick,0x7fffe05afeb4,32833739,0,0x0,8
tick,0x7fffe05afeb4,32849834,0,0x0,8
tick,0x7fffe05afeb4,32865782,0,0x0,8
tick,0x7fffe05afeb4,32881734,0,0x0,8
tick,0x7fffe05afeb4,32897797,0,0x0,8
tick,0x7fffe05afeb4,32913742,0,0x0,8
tick,0x7fffe05afeb4,32929846,0,0x0,8
tick,0x7fffe05afeb4,32945789,0,0x0,8
tick,0x7fffe05afeb4,32961824,0,0x0,8
tick,0x7fffe05afeb4,32977777,0,0x0,8
tick,0x7fffe05afeb4,32993813,0,0x0,8
tick,0x7fffe05afeb4,33009845,0,0x0,8
tick,0x7fffe05afeb4,33025785,0,0x0,8
tick,0x7fffe05afeb4,33041818,0,0x0,8
tick,0x7fffe05afeb4,33056833,0,0x0,8
tick,0x7fffe05afeb4,33072804,0,0x0,8
tick,0x7fffe05afeb4,33087748,0,0x0,8
tick,0x7fffe05afeb4,33103851,0,0x0,8
tick,0x7fffe05afeb4,33119805,0,0x0,8
tick,0x7fffe05afeb4,33135822,0,0x0,8
tick,0x7fffe05afeb4,33151765,0,0x0,8
tick,0x7fffe05afeb4,33167875,0,0x0,8
tick,0x7fffe05afeb4,33183749,0,0x0,8
tick,0x7fffe05afeb4,33199801,0,0x0,8
tick,0x7fffe05afeb4,33215735,0,0x0,8
tick,0x7fffe05afeb4,33231922,0,0x0,8
tick,0x7fffe05afeb4,33246733,0,0x0,8
tick,0x7fffe05afeb4,33261764,0,0x0,8
tick,0x7fffe05afeb4,33277767,0,0x0,8
tick,0x7fffe05afeb4,33292817,0,0x0,8
tick,0x7fffe05afeb4,33308809,0,0x0,8
tick,0x7fffe05afeb4,33324739,0,0x0,8
tick,0x7fffe05afeb4,33339796,0,0x0,8
tick,0x7fffe05afeb4,33355753,0,0x0,8
tick,0x7fffe05afeb4,33371771,0,0x0,8
tick,0x7fffe05afeb4,33387767,0,0x0,8
tick,0x7fffe05afeb4,33403762,0,0x0,8
tick,0x7fffe05afeb4,33418748,0,0x0,8
tick,0x7fffe05afeb4,33434798,0,0x0,8
tick,0x7fffe05afeb4,33450729,0,0x0,8
tick,0x7fffe05afeb4,33466845,0,0x0,8
tick,0x7fffe05afeb4,33482848,0,0x0,8
tick,0x7fffe05afeb4,33498730,0,0x0,8
tick,0x7fffe05afeb4,33514014,0,0x0,8
tick,0x7fffe05afeb4,33529937,0,0x0,8
tick,0x7fffe05afeb4,33546098,0,0x0,8
tick,0x7fffe05afeb4,33561806,0,0x0,8
tick,0x7fffe05afeb4,33576820,0,0x0,8
tick,0x7fffe05afeb4,33592830,0,0x0,8
tick,0x7fffe05afeb4,33607848,0,0x0,8
tick,0x7fffe05afeb4,33622738,0,0x0,8
tick,0x7fffe05afeb4,33638839,0,0x0,8
tick,0x7fffe05afeb4,33654778,0,0x0,8
tick,0x7fffe05afeb4,33670807,0,0x0,8
tick,0x7fffe05afeb4,33685818,0,0x0,8
tick,0x7fffe05afeb4,33701840,0,0x0,8
tick,0x7fffe05afeb4,33717745,0,0x0,8
tick,0x7fffe05afeb4,33733881,0,0x0,8
tick,0x7fffe05afeb4,33749850,0,0x0,8
tick,0x7fffe05afeb4,33765839,0,0x0,8
tick,0x7fffe05afeb4,33781839,0,0x0,8
tick,0x7fffe05afeb4,33797114,0,0x0,8
tick,0x7fffe05afeb4,33812758,0,0x0,8
tick,0x7fffe05afeb4,33828800,0,0x0,8
tick,0x7fffe05afeb4,33844822,0,0x0,8
tick,0x7fffe05afeb4,33860859,0,0x0,8
tick,0x7fffe05afeb4,33876752,0,0x0,8
tick,0x7fffe05afeb4,33892895,0,0x0,8
tick,0x7fffe05afeb4,33908790,0,0x0,8
tick,0x7fffe05afeb4,33925159,0,0x0,8
tick,0x7fffe05afeb4,33940812,0,0x0,8
tick,0x7fffe05afeb4,33956750,0,0x0,8
tick,0x7fffe05afeb4,33971805,0,0x0,8
tick,0x7fffe05afeb4,33986894,0,0x0,8
tick,0x7fffe05afeb4,34002846,0,0x0,8
tick,0x7fffe05afeb4,34018982,0,0x0,8
tick,0x7fffe05afeb4,34034970,0,0x0,8
tick,0x7fffe05afeb4,34050878,0,0x0,8
tick,0x7fffe05afeb4,34066868,0,0x0,8
tick,0x7fffe05afeb4,34082913,0,0x0,8
tick,0x7fffe05afeb4,34098855,0,0x0,8
tick,0x7fffe05afeb4,34114863,0,0x0,8
tick,0x7fffe05afeb4,34130795,0,0x0,8
tick,0x7fffe05afeb4,34146078,0,0x0,8
tick,0x7fffe05afeb4,34160789,0,0x0,8
tick,0x7fffe05afeb4,34176886,0,0x0,8
tick,0x7fffe05afeb4,34192890,0,0x0,8
tick,0x7fffe05afeb4,34208821,0,0x0,8
tick,0x7fffe05afeb4,34224826,0,0x0,8
tick,0x7fffe05afeb4,34240742,0,0x0,8
tick,0x7fffe05afeb4,34256748,0,0x0,8
tick,0x7fffe05afeb4,34271738,0,0x0,8
tick,0x7fffe05afeb4,34287749,0,0x0,8
tick,0x7fffe05afeb4,34302824,0,0x0,8
tick,0x7fffe05afeb4,34317728,0,0x0,8
tick,0x7fffe05afeb4,34333835,0,0x0,8
tick,0x7fffe05afeb4,34349830,0,0x0,8
tick,0x7fffe05afeb4,34365948,0,0x0,8
tick,0x7fffe05afeb4,34381753,0,0x0,8
tick,0x7fffe05afeb4,34397750,0,0x0,8
tick,0x7fffe05afeb4,34413759,0,0x0,8
tick,0x7fffe05afeb4,34429868,0,0x0,8
tick,0x7fffe05afeb4,34445721,0,0x0,8
tick,0x7fffe05afeb4,34461811,0,0x0,8
tick,0x7fffe05afeb4,34478156,0,0x0,8
tick,0x7fffe05afeb4,34493821,0,0x0,8
tick,0x7fffe05afeb4,34509806,0,0x0,8
tick,0x7fffe05afeb4,34525749,0,0x0,8
tick,0x7fffe05afeb4,34541735,0,0x0,8
tick,0x7fffe05afeb4,34556821,0,0x0,8
tick,0x7fffe05afeb4,34572820,0,0x0,8
tick,0x7fffe05afeb4,34588884,0,0x0,8
tick,0x7fffe05afeb4,34604742,0,0x0,8
tick,0x7fffe05afeb4,34620779,0,0x0,8
tick,0x7fffe05afeb4,34636769,0,0x0,8
tick,0x7fffe05afeb4,34652723,0,0x0,8
tick,0x7fffe05afeb4,34668741,0,0x0,8
tick,0x7fffe05afeb4,34684725,0,0x0,8
tick,0x7fffe05afeb4,34700933,0,0x0,8
tick,0x7fffe05afeb4,34716815,0,0x0,8
tick,0x7fffe05afeb4,34732793,0,0x0,8
tick,0x7fffe05afeb4,34747723,0,0x0,8
tick,0x7fffe05afeb4,34763755,0,0x0,8
tick,0x7fffe05afeb4,34779748,0,0x0,8
tick,0x7fffe05afeb4,34795738,0,0x0,8
tick,0x7fffe05afeb4,34811813,0,0x0,8
tick,0x7fffe05afeb4,34827735,0,0x0,8
tick,0x7fffe05afeb4,34843730,0,0x0,8
tick,0x7fffe05afeb4,34859744,0,0x0,8
tick,0x7fffe05afeb4,34875725,0,0x0,8
tick,0x7fffe05afeb4,34890734,0,0x0,8
tick,0x7fffe05afeb4,34906817,0,0x0,8
tick,0x7fffe05afeb4,34922764,0,0x0,8
tick,0x7fffe05afeb4,34938824,0,0x0,8
tick,0x7fffe05afeb4,34954854,0,0x0,8
tick,0x7fffe05afeb4,34970801,0,0x0,8
tick,0x7fffe05afeb4,34985737,0,0x0,8
tick,0x7fffe05afeb4,35001727,0,0x0,8
tick,0x7fffe05afeb4,35016758,0,0x0,8
tick,0x7fffe05afeb4,35032842,0,0x0,8
tick,0x7fffe05afeb4,35047741,0,0x0,8
tick,0x7fffe05afeb4,35063784,0,0x0,8
tick,0x7fffe05afeb4,35079760,0,0x0,8
tick,0x7fffe05afeb4,35095752,0,0x0,8
tick,0x7fffe05afeb4,35111745,0,0x0,8
tick,0x7fffe05afeb4,35126750,0,0x0,8
tick,0x7fffe05afeb4,35142864,0,0x0,8
tick,0x7fffe05afeb4,35158835,0,0x0,8
tick,0x7fffe05afeb4,35174821,0,0x0,8
tick,0x7fffe05afeb4,35190736,0,0x0,8
tick,0x7fffe05afeb4,35205813,0,0x0,8
tick,0x7fffe05afeb4,35221736,0,0x0,8
tick,0x7fffe05afeb4,35237736,0,0x0,8
tick,0x7fffe05afeb4,35253783,0,0x0,8
tick,0x7fffe05afeb4,35269847,0,0x0,8
tick,0x7fffe05afeb4,35284732,0,0x0,8
tick,0x7fffe05afeb4,35300798,0,0x0,8
tick,0x7fffe05afeb4,35316749,0,0x0,8
tick,0x7fffe05afeb4,35332757,0,0x0,8
tick,0x7fffe05afeb4,35348742,0,0x0,8
tick,0x7fffe05afeb4,35364766,0,0x0,8
tick,0x7fffe05afeb4,35379835,0,0x0,8
tick,0x7fffe05afeb4,35395723,0,0x0,8
tick,0x7fffe05afeb4,35411762,0,0x0,8
tick,0x7fffe05afeb4,35427753,0,0x0,8
tick,0x7fffe05afeb4,35443747,0,0x0,8
tick,0x7fffe05afeb4,35459820,0,0x0,8
tick,0x7fffe05afeb4,35475744,0,0x0,8
tick,0x7fffe05afeb4,35491750,0,0x0,8
tick,0x7fffe05afeb4,35507732,0,0x0,8
tick,0x7fffe05afeb4,35523806,0,0x0,8
tick,0x7fffe05afeb4,35538813,0,0x0,8
tick,0x7fffe05afeb4,35554836,0,0x0,8
tick,0x7fffe05afeb4,35570824,0,0x0,8
tick,0x7fffe05afeb4,35586775,0,0x0,8
tick,0x7fffe05afeb4,35602771,0,0x0,8
tick,0x7fffe05afeb4,35618745,0,0x0,8
tick,0x7fffe05afeb4,35635175,0,0x0,8
tick,0x7fffe05afeb4,35649792,0,0x0,8
tick,0x7fffe05afeb4,35665837,0,0x0,8
tick,0x7fffe05afeb4,35680751,0,0x0,8
tick,0x7fffe05afeb4,35697150,0,0x0,8
tick,0x7fffe05afeb4,35712830,0,0x0,8
tick,0x7fffe05afeb4,35729390,0,0x0,8
tick,0x7fffe05afeb4,35744738,0,0x0,8
tick,0x7fffe05afeb4,35760838,0,0x0,8
tick,0x7fffe05afeb4,35776719,0,0x0,8
tick,0x7fffe05afeb4,35792757,0,0x0,8
tick,0x7fffe05afeb4,35808807,0,0x0,8
tick,0x7fffe05afeb4,35824746,0,0x0,8
tick,0x7fffe05afeb4,35839777,0,0x0,8
tick,0x7fffe05afeb4,35855785,0,0x0,8
tick,0x7fffe05afeb4,35871747,0,0x0,8
tick,0x7fffe05afeb4,35887752,0,0x0,8
tick,0x7fffe05afeb4,35903757,0,0x0,8
tick,0x7fffe05afeb4,35919806,0,0x0,8
tick,0x7fffe05afeb4,35935735,0,0x0,8
tick,0x7fffe05afeb4,35951783,0,0x0,8
tick,0x7fffe05afeb4,35967751,0,0x0,8
tick,0x7fffe05afeb4,35983749,0,0x0,8
tick,0x7fffe05afeb4,35999738,0,0x0,8
tick,0x7fffe05afeb4,36015728,0,0x0,8
tick,0x7fffe05afeb4,36031720,0,0x0,8
tick,0x7fffe05afeb4,36047758,0,0x0,8
tick,0x7fffe05afeb4,36063731,0,0x0,8
tick,0x7fffe05afeb4,36080084,0,0x0,8
tick,0x7fffe05afeb4,36094746,0,0x0,8
tick,0x7fffe05afeb4,36110800,0,0x0,8
tick,0x7fffe05afeb4,36125820,0,0x0,8
tick,0x7fffe05afeb4,36141766,0,0x0,8
tick,0x7fffe05afeb4,36156976,0,0x0,8
tick,0x7fffe05afeb4,36172799,0,0x0,8
tick,0x7fffe05afeb4,36188903,0,0x0,8
tick,0x7fffe05afeb4,36204762,0,0x0,8
tick,0x7fffe05afeb4,36220740,0,0x0,8
tick,0x7fffe05afeb4,36236804,0,0x0,8
tick,0x7fffe05afeb4,36252823,0,0x0,8
tick,0x7fffe05afeb4,36268831,0,0x0,8
tick,0x7fffe05afeb4,36284809,0,0x0,8
tick,0x7fffe05afeb4,36300764,0,0x0,8
tick,0x7fffe05afeb4,36315735,0,0x0,8
tick,0x7fffe05afeb4,36331733,0,0x0,8
tick,0x7fffe05afeb4,36347727,0,0x0,8
tick,0x7fffe05afeb4,36363756,0,0x0,8
tick,0x7fffe05afeb4,36379774,0,0x0,8
tick,0x7fffe05afeb4,36396253,0,0x0,8
tick,0x7fffe05afeb4,36411802,0,0x0,8
tick,0x7fffe05afeb4,36426746,0,0x0,8
tick,0x7fffe05afeb4,36442732,0,0x0,8
tick,0x7fffe05afeb4,36458766,0,0x0,8
tick,0x7fffe05afeb4,36473745,0,0x0,8
tick,0x7fffe05afeb4,36489900,0,0x0,8
tick,0x7fffe05afeb4,36505811,0,0x0,8
tick,0x7fffe05afeb4,36521767,0,0x0,8
tick,0x7fffe05afeb4,36537772,0,0x0,8
tick,0x7fffe05afeb4,36553754,0,0x0,8
tick,0x7fffe05afeb4,36569780,0,0x0,8
tick,0x7fffe05afeb4,36585819,0,0x0,8
tick,0x7fffe05afeb4,36601734,0,0x0,8
tick,0x7fffe05afeb4,36616816,0,0x0,8
tick,0x7fffe05afeb4,36632813,0,0x0,8
tick,0x7fffe05afeb4,36648821,0,0x0,8
tick,0x7fffe05afeb4,36664768,0,0x0,8
tick,0x7fffe05afeb4,36680724,0,0x0,8
tick,0x7fffe05afeb4,36695844,0,0x0,8
tick,0x7fffe05afeb4,36711728,0,0x0,8
tick,0x7fffe05afeb4,36727732,0,0x0,8
tick,0x7fffe05afeb4,36743734,0,0x0,8
tick,0x7fffe05afeb4,36759781,0,0x0,8
tick,0x7fffe05afeb4,36775736,0,0x0,8
tick,0x7fffe05afeb4,36791727,0,0x0,8
tick,0x7fffe05afeb4,36807757,0,0x0,8
tick,0x7fffe05afeb4,36823731,0,0x0,8
tick,0x7fffe05afeb4,36838744,0,0x0,8
tick,0x7fffe05afeb4,36854757,0,0x0,8
tick,0x7fffe05afeb4,36870739,0,0x0,8
tick,0x7fffe05afeb4,36886743,0,0x0,8
tick,0x7fffe05afeb4,36902758,0,0x0,8
tick,0x7fffe05afeb4,36918757,0,0x0,8
tick,0x7fffe05afeb4,36935494,0,0x0,8
tick,0x7fffe05afeb4,36949868,0,0x0,8
tick,0x7fffe05afeb4,36965855,0,0x0,8
tick,0x7fffe05afeb4,36981769,0,0x0,8
tick,0x7fffe05afeb4,36997789,0,0x0,8
tick,0x7fffe05afeb4,37013731,0,0x0,8
tick,0x7fffe05afeb4,37029808,0,0x0,8
tick,0x7fffe05afeb4,37045807,0,0x0,8
tick,0x7fffe05afeb4,37061831,0,0x0,8
tick,0x7fffe05afeb4,37077785,0,0x0,8
tick,0x7fffe05afeb4,37093927,0,0x0,8
tick,0x7fffe05afeb4,37110460,0,0x0,8
tick,0x7fffe05afeb4,37125736,0,0x0,8
tick,0x7fffe05afeb4,37141735,0,0x0,8
tick,0x7fffe05afeb4,37157914,0,0x0,8
tick,0x7fffe05afeb4,37174011,0,0x0,8
tick,0x7fffe05afeb4,37189980,0,0x0,8
tick,0x7fffe05afeb4,37206167,0,0x0,8
tick,0x7fffe05afeb4,37221764,0,0x0,8
tick,0x7fffe05afeb4,37237848,0,0x0,8
tick,0x7fffe05afeb4,37253725,0,0x0,8
tick,0x7fffe05afeb4,37269856,0,0x0,8
tick,0x7fffe05afeb4,37285737,0,0x0,8
tick,0x7fffe05afeb4,37301834,0,0x0,8
tick,0x7fffe05afeb4,37317841,0,0x0,8
tick,0x7fffe05afeb4,37333799,0,0x0,8
tick,0x7fffe05afeb4,37349780,0,0x0,8
tick,0x7fffe05afeb4,37364860,0,0x0,8
tick,0x7fffe05afeb4,37380742,0,0x0,8
tick,0x7fffe05afeb4,37395724,0,0x0,8
tick,0x7fffe05afeb4,37411741,0,0x0,8
tick,0x7fffe05afeb4,37427828,0,0x0,8
tick,0x7fffe05afeb4,37443883,0,0x0,8
tick,0x7fffe05afeb4,37459854,0,0x0,8
tick,0x7fffe05afeb4,37475824,0,0x0,8
tick,0x7fffe05afeb4,37491726,0,0x0,8
tick,0x7fffe05afeb4,37507732,0,0x0,8
tick,0x7fffe05afeb4,37523723,0,0x0,8
tick,0x7fffe05afeb4,37540177,0,0x0,8
tick,0x7fffe05afeb4,37555799,0,0x0,8
tick,0x7fffe05afeb4,37571851,0,0x0,8
tick,0x7fffe05afeb4,37586747,0,0x0,8
tick,0x7fffe05afeb4,37601811,0,0x0,8
tick,0x7fffe05afeb4,37616812,0,0x0,8
tick,0x7fffe05afeb4,37632806,0,0x0,8
tick,0x7fffe05afeb4,37648830,0,0x0,8
tick,0x7fffe05afeb4,37664752,0,0x0,8
tick,0x7fffe05afeb4,37679798,0,0x0,8
tick,0x7fffe05afeb4,37695825,0,0x0,8
tick,0x7fffe05afeb4,37711724,0,0x0,8
tick,0x7fffe05afeb4,37727731,0,0x0,8
tick,0x7fffe05afeb4,37743738,0,0x0,8
tick,0x7fffe05afeb4,37759754,0,0x0,8
tick,0x7fffe05afeb4,37775729,0,0x0,8
tick,0x7fffe05afeb4,37791736,0,0x0,8
tick,0x7fffe05afeb4,37807775,0,0x0,8
tick,0x7fffe05afeb4,37823737,0,0x0,8
tick,0x7fffe05afeb4,37839804,0,0x0,8
tick,0x7fffe05afeb4,37854752,0,0x0,8
tick,0x7fffe05afeb4,37870728,0,0x0,8
tick,0x7fffe05afeb4,37886840,0,0x0,8
tick,0x7fffe05afeb4,37902869,0,0x0,8
tick,0x7fffe05afeb4,37918741,0,0x0,8
tick,0x7fffe05afeb4,37934738,0,0x0,8
tick,0x7fffe05afeb4,37950757,0,0x0,8
tick,0x7fffe05afeb4,37966861,0,0x0,8
tick,0x7fffe05afeb4,37983043,0,0x0,8
tick,0x7fffe05afeb4,37998814,0,0x0,8
tick,0x7fffe05afeb4,38014805,0,0x0,8
tick,0x7fffe05afeb4,38030743,0,0x0,8
tick,0x7fffe05afeb4,38045909,0,0x0,8
tick,0x7fffe05afeb4,38061834,0,0x0,8
tick,0x7fffe05afeb4,38078152,0,0x0,8
tick,0x7fffe05afeb4,38093747,0,0x0,8
tick,0x7fffe05afeb4,38109759,0,0x0,8
tick,0x7fffe05afeb4,38125734,0,0x0,8
tick,0x7fffe05afeb4,38141762,0,0x0,8
tick,0x7fffe05afeb4,38157767,0,0x0,8
tick,0x7fffe05afeb4,38173752,0,0x0,8
tick,0x7fffe05afeb4,38189965,0,0x0,8
tick,0x7fffe05afeb4,38206319,0,0x0,8
tick,0x7fffe05afeb4,38221738,0,0x0,8
tick,0x7fffe05afeb4,38237746,0,0x0,8
tick,0x7fffe05afeb4,38252823,0,0x0,8
tick,0x7fffe05afeb4,38267750,0,0x0,8
tick,0x7fffe05afeb4,38283735,0,0x0,8
tick,0x7fffe05afeb4,38298926,0,0x0,8
tick,0x7fffe05afeb4,38313815,0,0x0,8
tick,0x7fffe05afeb4,38329943,0,0x0,8
tick,0x7fffe05afeb4,38345820,0,0x0,8
tick,0x7fffe05afeb4,38361865,0,0x0,8
tick,0x7fffe05afeb4,38376766,0,0x0,8
tick,0x7fffe05afeb4,38392785,0,0x0,8
tick,0x7fffe05afeb4,38408837,0,0x0,8
tick,0x7fffe05afeb4,38425498,0,0x0,8
tick,0x7fffe05afeb4,38440863,0,0x0,8
tick,0x7fffe05afeb4,38456791,0,0x0,8
tick,0x7fffe05afeb4,38472752,0,0x0,8
tick,0x7fffe05afeb4,38488744,0,0x0,8
tick,0x7fffe05afeb4,38503724,0,0x0,8
tick,0x7fffe05afeb4,38519776,0,0x0,8
tick,0x7fffe05afeb4,38535798,0,0x0,8
tick,0x7fffe05afeb4,38551830,0,0x0,8
tick,0x7fffe05afeb4,38567735,0,0x0,8
tick,0x7fffe05afeb4,38583823,0,0x0,8
tick,0x7fffe05afeb4,38599824,0,0x0,8
tick,0x7fffe05afeb4,38615748,0,0x0,8
tick,0x7fffe05afeb4,38631753,0,0x0,8
tick,0x7fffe05afeb4,38647767,0,0x0,8
tick,0x7fffe05afeb4,38663758,0,0x0,8
tick,0x7fffe05afeb4,38679758,0,0x0,8
tick,0x7fffe05afeb4,38695888,0,0x0,8
tick,0x7fffe05afeb4,38710748,0,0x0,8
tick,0x7fffe05afeb4,38726743,0,0x0,8
tick,0x7fffe05afeb4,38742820,0,0x0,8
tick,0x7fffe05afeb4,38758794,0,0x0,8
tick,0x7fffe05afeb4,38774822,0,0x0,8
tick,0x7fffe05afeb4,38790743,0,0x0,8
tick,0x7fffe05afeb4,38806861,0,0x0,8
tick,0x7fffe05afeb4,38822723,0,0x0,8
tick,0x7fffe05afeb4,38837734,0,0x0,8
tick,0x7fffe05afeb4,38853728,0,0x0,8
tick,0x7fffe05afeb4,38869798,0,0x0,8
tick,0x7fffe05afeb4,38885743,0,0x0,8
tick,0x7fffe05afeb4,38901733,0,0x0,8
tick,0x7fffe05afeb4,38916744,0,0x0,8
tick,0x7fffe05afeb4,38932741,0,0x0,8
tick,0x7fffe05afeb4,38948745,0,0x0,8
tick,0x7fffe05afeb4,38964739,0,0x0,8
tick,0x7fffe05afeb4,38979834,0,0x0,8
tick,0x7fffe05afeb4,38995808,0,0x0,8
tick,0x7fffe05afeb4,39011741,0,0x0,8
tick,0x7fffe05afeb4,39027787,0,0x0,8
tick,0x7fffe05afeb4,39043781,0,0x0,8
tick,0x7fffe05afeb4,39059769,0,0x0,8
tick,0x7fffe05afeb4,39075748,0,0x0,8
tick,0x7fffe05afeb4,39091781,0,0x0,8
tick,0x7fffe05afeb4,39107732,0,0x0,8
tick,0x7fffe05afeb4,39123730,0,0x0,8
tick,0x7fffe05afeb4,39139847,0,0x0,8
tick,0x7fffe05afeb4,39154980,0,0x0,8
tick,0x7fffe05afeb4,39170741,0,0x0,8
tick,0x7fffe05afeb4,39186752,0,0x0,8
tick,0x7fffe05afeb4,39202824,0,0x0,8
tick,0x7fffe05afeb4,39217784,0,0x0,8
tick,0x7fffe05afeb4,39233787,0,0x0,8
tick,0x7fffe05afeb4,39249811,0,0x0,8
tick,0x7fffe05afeb4,39265871,0,0x0,8
tick,0x7fffe05afeb4,39281779,0,0x0,8
tick,0x7fffe05afeb4,39297727,0,0x0,8
tick,0x7fffe05afeb4,39313728,0,0x0,8
tick,0x7fffe05afeb4,39329852,0,0x0,8
tick,0x7fffe05afeb4,39345808,0,0x0,8
tick,0x7fffe05afeb4,39361834,0,0x0,8
tick,0x7fffe05afeb4,39376810,0,0x0,8
tick,0x7fffe05afeb4,39392826,0,0x0,8
tick,0x7fffe05afeb4,39408771,0,0x0,8
tick,0x7fffe05afeb4,39424767,0,0x0,8
tick,0x7fffe05afeb4,39440761,0,0x0,8
tick,0x7fffe05afeb4,39456828,0,0x0,8
tick,0x7fffe05afeb4,39472752,0,0x0,8
tick,0x7fffe05afeb4,39488762,0,0x0,8
tick,0x7fffe05afeb4,39504741,0,0x0,8
tick,0x7fffe05afeb4,39520742,0,0x0,8
tick,0x7fffe05afeb4,39536764,0,0x0,8
tick,0x7fffe05afeb4,39552751,0,0x0,8
tick,0x7fffe05afeb4,39567747,0,0x0,8
tick,0x7fffe05afeb4,39583729,0,0x0,8
tick,0x7fffe05afeb4,39598819,0,0x0,8
tick,0x7fffe05afeb4,39614737,0,0x0,8
tick,0x7fffe05afeb4,39630733,0,0x0,8
tick,0x7fffe05afeb4,39646776,0,0x0,8
tick,0x7fffe05afeb4,39662739,0,0x0,8
tick,0x7fffe05afeb4,39677745,0,0x0,8
tick,0x7fffe05afeb4,39693851,0,0x0,8
tick,0x7fffe05afeb4,39709813,0,0x0,8
tick,0x7fffe05afeb4,39725766,0,0x0,8
tick,0x7fffe05afeb4,39741813,0,0x0,8
tick,0x7fffe05afeb4,39757784,0,0x0,8
tick,0x7fffe05afeb4,39773730,0,0x0,8
tick,0x7fffe05afeb4,39789930,0,0x0,8
tick,0x7fffe05afeb4,39805851,0,0x0,8
tick,0x7fffe05afeb4,39821752,0,0x0,8
tick,0x7fffe05afeb4,39837818,0,0x0,8
tick,0x7fffe05afeb4,39853732,0,0x0,8
tick,0x7fffe05afeb4,39869831,0,0x0,8
tick,0x7fffe05afeb4,39885733,0,0x0,8
tick,0x7fffe05afeb4,39901720,0,0x0,8
tick,0x7fffe05afeb4,39917747,0,0x0,8
tick,0x7fffe05afeb4,39933808,0,0x0,8
tick,0x7fffe05afeb4,39948821,0,0x0,8
tick,0x7fffe05afeb4,39964813,0,0x0,8
tick,0x7fffe05afeb4,39980816,0,0x0,8
tick,0x7fffe05afeb4,39995731,0,0x0,8
tick,0x7fffe05afeb4,40011732,0,0x0,8
tick,0x7fffe05afeb4,40027738,0,0x0,8
tick,0x7fffe05afeb4,40043767,0,0x0,8
tick,0x7fffe05afeb4,40059730,0,0x0,8
tick,0x7fffe05afeb4,40075858,0,0x0,8
tick,0x7fffe05afeb4,40091749,0,0x0,8
tick,0x7fffe05afeb4,40107727,0,0x0,8
tick,0x7fffe05afeb4,40123722,0,0x0,8
tick,0x7fffe05afeb4,40139921,0,0x0,8
tick,0x7fffe05afeb4,40155737,0,0x0,8
tick,0x7fffe05afeb4,40171734,0,0x0,8
tick,0x7fffe05afeb4,40186768,0,0x0,8
tick,0x7fffe05afeb4,40202735,0,0x0,8
tick,0x7fffe05afeb4,40217807,0,0x0,8
tick,0x7fffe05afeb4,40233800,0,0x0,8
tick,0x7fffe05afeb4,40248747,0,0x0,8
tick,0x7fffe05afeb4,40264757,0,0x0,8
tick,0x7fffe05afeb4,40280734,0,0x0,8
tick,0x7fffe05afeb4,40295745,0,0x0,8
tick,0x7fffe05afeb4,40311756,0,0x0,8
tick,0x7fffe05afeb4,40326824,0,0x0,8
tick,0x7fffe05afeb4,40342732,0,0x0,8
tick,0x7fffe05afeb4,40358799,0,0x0,8
tick,0x7fffe05afeb4,40374733,0,0x0,8
tick,0x7fffe05afeb4,40390814,0,0x0,8
tick,0x7fffe05afeb4,40406818,0,0x0,8
tick,0x7fffe05afeb4,40422810,0,0x0,8
tick,0x7fffe05afeb4,40438763,0,0x0,8
tick,0x7fffe05afeb4,40454820,0,0x0,8
tick,0x7fffe05afeb4,40470811,0,0x0,8
tick,0x7fffe05afeb4,40486730,0,0x0,8
tick,0x7fffe05afeb4,40502769,0,0x0,8
tick,0x7fffe05afeb4,40517827,0,0x0,8
tick,0x7fffe05afeb4,40533820,0,0x0,8
tick,0x7fffe05afeb4,40549846,0,0x0,8
tick,0x7fffe05afeb4,40565754,0,0x0,8
tick,0x7fffe05afeb4,40581827,0,0x0,8
tick,0x7fffe05afeb4,40597743,0,0x0,8
tick,0x7fffe05afeb4,40613758,0,0x0,8
tick,0x7fffe05afeb4,40629752,0,0x0,8
tick,0x7fffe05afeb4,40645824,0,0x0,8
tick,0x7fffe05afeb4,40661878,0,0x0,8
tick,0x7fffe05afeb4,40676817,0,0x0,8
tick,0x7fffe05afeb4,40692835,0,0x0,8
tick,0x7fffe05afeb4,40708743,0,0x0,8
tick,0x7fffe05afeb4,40724782,0,0x0,8
tick,0x7fffe05afeb4,40740766,0,0x0,8
tick,0x7fffe05afeb4,40756727,0,0x0,8
tick,0x7fffe05afeb4,40772811,0,0x0,8
tick,0x7fffe05afeb4,40788806,0,0x0,8
tick,0x7fffe05afeb4,40804844,0,0x0,8
tick,0x7fffe05afeb4,40820723,0,0x0,8
tick,0x7fffe05afeb4,40836735,0,0x0,8
tick,0x7fffe05afeb4,40852757,0,0x0,8
tick,0x7fffe05afeb4,40868746,0,0x0,8
tick,0x7fffe05afeb4,40884780,0,0x0,8
tick,0x7fffe05afeb4,40900816,0,0x0,8
tick,0x7fffe05afeb4,40916752,0,0x0,8
tick,0x7fffe05afeb4,40932806,0,0x0,8
tick,0x7fffe05afeb4,40948753,0,0x0,8
tick,0x7fffe05afeb4,40964787,0,0x0,8
tick,0x7fffe05afeb4,40980745,0,0x0,8
tick,0x7fffe05afeb4,40995788,0,0x0,8
tick,0x7fffe05afeb4,41011739,0,0x0,8
tick,0x7fffe05afeb4,41027829,0,0x0,8
tick,0x7fffe05afeb4,41043756,0,0x0,8
tick,0x7fffe05afeb4,41059823,0,0x0,8
tick,0x7fffe05afeb4,41075746,0,0x0,8
tick,0x7fffe05afeb4,41091728,0,0x0,8
tick,0x7fffe05afeb4,41107749,0,0x0,8
tick,0x7fffe05afeb4,41123816,0,0x0,8
tick,0x7fffe05afeb4,41139796,0,0x0,8
tick,0x7fffe05afeb4,41155018,0,0x0,8
tick,0x7fffe05afeb4,41169828,0,0x0,8
tick,0x7fffe05afeb4,41185816,0,0x0,8
tick,0x7fffe05afeb4,41201745,0,0x0,8
tick,0x7fffe05afeb4,41217736,0,0x0,8
tick,0x7fffe05afeb4,41232836,0,0x0,8
tick,0x7fffe05afeb4,41248813,0,0x0,8
tick,0x7fffe05afeb4,41264736,0,0x0,8
tick,0x7fffe05afeb4,41279792,0,0x0,8
tick,0x7fffe05afeb4,41295724,0,0x0,8
tick,0x7fffe05afeb4,41311770,0,0x0,8
tick,0x7fffe05afeb4,41327734,0,0x0,8
tick,0x7fffe05afeb4,41343747,0,0x0,8
tick,0x7fffe05afeb4,41359832,0,0x0,8
tick,0x7fffe05afeb4,41375742,0,0x0,8
tick,0x7fffe05afeb4,41391749,0,0x0,8
tick,0x7fffe05afeb4,41407739,0,0x0,8
tick,0x7fffe05afeb4,41423730,0,0x0,8
tick,0x7fffe05afeb4,41439835,0,0x0,8
tick,0x7fffe05afeb4,41454809,0,0x0,8
tick,0x7fffe05afeb4,41470840,0,0x0,8
tick,0x7fffe05afeb4,41486812,0,0x0,8
tick,0x7fffe05afeb4,41502751,0,0x0,8
tick,0x7fffe05afeb4,41519162,0,0x0,8
tick,0x7fffe05afeb4,41534753,0,0x0,8
tick,0x7fffe05afeb4,41550728,0,0x0,8
tick,0x7fffe05afeb4,41566731,0,0x0,8
tick,0x7fffe05afeb4,41582814,0,0x0,8
tick,0x7fffe05afeb4,41598851,0,0x0,8
tick,0x7fffe05afeb4,41614849,0,0x0,8
tick,0x7fffe05afeb4,41630733,0,0x0,8
tick,0x7fffe05afeb4,41645766,0,0x0,8
tick,0x7fffe05afeb4,41661731,0,0x0,8
tick,0x7fffe05afeb4,41677805,0,0x0,8
tick,0x7fffe05afeb4,41693835,0,0x0,8
tick,0x7fffe05afeb4,41709758,0,0x0,8
tick,0x7fffe05afeb4,41725788,0,0x0,8
tick,0x7fffe05afeb4,41740814,0,0x0,8
tick,0x7fffe05afeb4,41756770,0,0x0,8
tick,0x7fffe05afeb4,41771728,0,0x0,8
tick,0x7fffe05afeb4,41787739,0,0x0,8
tick,0x7fffe05afeb4,41803759,0,0x0,8
tick,0x7fffe05afeb4,41819748,0,0x0,8
tick,0x7fffe05afeb4,41835896,0,0x0,8
tick,0x7fffe05afeb4,41851768,0,0x0,8
tick,0x7fffe05afeb4,41867743,0,0x0,8
tick,0x7fffe05afeb4,41882774,0,0x0,8
tick,0x7fffe05afeb4,41898750,0,0x0,8
tick,0x7fffe05afeb4,41915572,0,0x0,8
tick,0x7fffe05afeb4,41930738,0,0x0,8
tick,0x7fffe05afeb4,41946213,0,0x0,8
tick,0x7fffe05afeb4,41960771,0,0x0,8
tick,0x7fffe05afeb4,41976873,0,0x0,8
tick,0x7fffe05afeb4,41991781,0,0x0,8
tick,0x7fffe05afeb4,42007883,0,0x0,8
tick,0x7fffe05afeb4,42023725,0,0x0,8
tick,0x7fffe05afeb4,42039979,0,0x0,8
tick,0x7fffe05afeb4,42055723,0,0x0,8
tick,0x7fffe05afeb4,42071730,0,0x0,8
tick,0x7fffe05afeb4,42086779,0,0x0,8
tick,0x7fffe05afeb4,42103052,0,0x0,8
tick,0x7fffe05afeb4,42118960,0,0x0,8
tick,0x7fffe05afeb4,42134803,0,0x0,8
tick,0x7fffe05afeb4,42149834,0,0x0,8
tick,0x7fffe05afeb4,42165858,0,0x0,8
tick,0x7fffe05afeb4,42181811,0,0x0,8
tick,0x7fffe05afeb4,42197756,0,0x0,8
tick,0x7fffe05afeb4,42213792,0,0x0,8
tick,0x7fffe05afeb4,42229801,0,0x0,8
tick,0x7fffe05afeb4,42245773,0,0x0,8
tick,0x7fffe05afeb4,42261735,0,0x0,8
tick,0x7fffe05afeb4,42276810,0,0x0,8
tick,0x7fffe05afeb4,42292744,0,0x0,8
tick,0x7fffe05afeb4,42307748,0,0x0,8
tick,0x7fffe05afeb4,42323743,0,0x0,8
tick,0x7fffe05afeb4,42339773,0,0x0,8
tick,0x7fffe05afeb4,42355809,0,0x0,8
tick,0x7fffe05afeb4,42371820,0,0x0,8
tick,0x7fffe05afeb4,42387747,0,0x0,8
tick,0x7fffe05afeb4,42403731,0,0x0,8
tick,0x7fffe05afeb4,42420047,0,0x0,8
tick,0x7fffe05afeb4,42435734,0,0x0,8
tick,0x7fffe05afeb4,42451760,0,0x0,8
tick,0x7fffe05afeb4,42468081,0,0x0,8
tick,0x7fffe05afeb4,42485811,0,0x0,8
tick,0x7fffe05afeb4,42499869,0,0x0,8
tick,0x7fffe05afeb4,42515834,0,0x0,8
tick,0x7fffe05afeb4,42530741,0,0x0,8
tick,0x7fffe05afeb4,42545747,0,0x0,8
tick,0x7fffe05afeb4,42561741,0,0x0,8
tick,0x7fffe05afeb4,42577885,0,0x0,8
tick,0x7fffe05afeb4,42593814,0,0x0,8
tick,0x7fffe05afeb4,42609910,0,0x0,8
tick,0x7fffe05afeb4,42625802,0,0x0,8
tick,0x7fffe05afeb4,42642562,0,0x0,8
tick,0x7fffe05afeb4,42657844,0,0x0,8
tick,0x7fffe05afeb4,42673791,0,0x0,8
tick,0x7fffe05afeb4,42689782,0,0x0,8
tick,0x7fffe05afeb4,42705811,0,0x0,8
tick,0x7fffe05afeb4,42721808,0,0x0,8
tick,0x7fffe05afeb4,42737841,0,0x0,8
tick,0x7fffe05afeb4,42753779,0,0x0,8
tick,0x7fffe05afeb4,42768824,0,0x0,8
tick,0x7fffe05afeb4,42784916,0,0x0,8
tick,0x7fffe05afeb4,42800789,0,0x0,8
tick,0x7fffe05afeb4,42816733,0,0x0,8
tick,0x7fffe05afeb4,42832728,0,0x0,8
tick,0x7fffe05afeb4,42848737,0,0x0,8
tick,0x7fffe05afeb4,42864764,0,0x0,8
tick,0x7fffe05afeb4,42879768,0,0x0,8
tick,0x7fffe05afeb4,42895729,0,0x0,8
tick,0x7fffe05afeb4,42912040,0,0x0,8
tick,0x7fffe05afeb4,42926839,0,0x0,8
tick,0x7fffe05afeb4,42942825,0,0x0,8
tick,0x7fffe05afeb4,42958740,0,0x0,8
tick,0x7fffe05afeb4,42973828,0,0x0,8
tick,0x7fffe05afeb4,42989764,0,0x0,8
tick,0x7fffe05afeb4,43005737,0,0x0,8
tick,0x7fffe05afeb4,43021869,0,0x0,8
tick,0x7fffe05afeb4,43037882,0,0x0,8
tick,0x7fffe05afeb4,43053738,0,0x0,8
tick,0x7fffe05afeb4,43069856,0,0x0,8
tick,0x7fffe05afeb4,43085743,0,0x0,8
tick,0x7fffe05afeb4,43101843,0,0x0,8
tick,0x7fffe05afeb4,43116739,0,0x0,8
tick,0x7fffe05afeb4,43131769,0,0x0,8
tick,0x7fffe05afeb4,43147827,0,0x0,8
tick,0x7fffe05afeb4,43163805,0,0x0,8
tick,0x7fffe05afeb4,43179748,0,0x0,8
tick,0x7fffe05afeb4,43194733,0,0x0,8
tick,0x7fffe05afeb4,43210846,0,0x0,8
tick,0x7fffe05afeb4,43226778,0,0x0,8
tick,0x7fffe05afeb4,43242756,0,0x0,8
tick,0x7fffe05afeb4,43258994,0,0x0,8
tick,0x7fffe05afeb4,43274837,0,0x0,8
tick,0x7fffe05afeb4,43290820,0,0x0,8
tick,0x7fffe05afeb4,43306820,0,0x0,8
tick,0x7fffe05afeb4,43322735,0,0x0,8
tick,0x7fffe05afeb4,43338894,0,0x0,8
tick,0x7fffe05afeb4,43355021,0,0x0,8
tick,0x7fffe05afeb4,43370805,0,0x0,8
tick,0x7fffe05afeb4,43386818,0,0x0,8
tick,0x7fffe05afeb4,43402744,0,0x0,8
tick,0x7fffe05afeb4,43417826,0,0x0,8
tick,0x7fffe05afeb4,43433746,0,0x0,8
tick,0x7fffe05afeb4,43449788,0,0x0,8
tick,0x7fffe05afeb4,43465753,0,0x0,8
tick,0x7fffe05afeb4,43481821,0,0x0,8
tick,0x7fffe05afeb4,43497924,0,0x0,8
tick,0x7fffe05afeb4,43513853,0,0x0,8
tick,0x7fffe05afeb4,43529850,0,0x0,8
tick,0x7fffe05afeb4,43545788,0,0x0,8
tick,0x7fffe05afeb4,43561749,0,0x0,8
tick,0x7fffe05afeb4,43576749,0,0x0,8
tick,0x7fffe05afeb4,43592740,0,0x0,8
tick,0x7fffe05afeb4,43608749,0,0x0,8
tick,0x7fffe05afeb4,43624735,0,0x0,8
tick,0x7fffe05afeb4,43639842,0,0x0,8
tick,0x7fffe05afeb4,43655734,0,0x0,8
tick,0x7fffe05afeb4,43671744,0,0x0,8
tick,0x7fffe05afeb4,43687759,0,0x0,8
tick,0x7fffe05afeb4,43703753,0,0x0,8
tick,0x7fffe05afeb4,43719748,0,0x0,8
tick,0x7fffe05afeb4,43735733,0,0x0,8
tick,0x7fffe05afeb4,43751744,0,0x0,8
tick,0x7fffe05afeb4,43767745,0,0x0,8
tick,0x7fffe05afeb4,43783739,0,0x0,8
tick,0x7fffe05afeb4,43799738,0,0x0,8
tick,0x7fffe05afeb4,43815759,0,0x0,8
tick,0x7fffe05afeb4,43831739,0,0x0,8
tick,0x7fffe05afeb4,43847797,0,0x0,8
tick,0x7fffe05afeb4,43863736,0,0x0,8
tick,0x7fffe05afeb4,43879769,0,0x0,8
tick,0x7fffe05afeb4,43895725,0,0x0,8
tick,0x7fffe05afeb4,43910762,0,0x0,8
tick,0x7fffe05afeb4,43926730,0,0x0,8
tick,0x7fffe05afeb4,43942807,0,0x0,8
tick,0x7fffe05afeb4,43958735,0,0x0,8
tick,0x7fffe05afeb4,43974832,0,0x0,8
tick,0x7fffe05afeb4,43990726,0,0x0,8
tick,0x7fffe05afeb4,44006832,0,0x0,8
tick,0x7fffe05afeb4,44022905,0,0x0,8
tick,0x7fffe05afeb4,44038765,0,0x0,8
tick,0x7fffe05afeb4,44053794,0,0x0,8
tick,0x7fffe05afeb4,44069841,0,0x0,8
tick,0x7fffe05afeb4,44085809,0,0x0,8
tick,0x7fffe05afeb4,44101734,0,0x0,8
tick,0x7fffe05afeb4,44116838,0,0x0,8
tick,0x7fffe05afeb4,44133104,0,0x0,8
tick,0x7fffe05afeb4,44148749,0,0x0,8
tick,0x7fffe05afeb4,44165024,0,0x0,8
tick,0x7fffe05afeb4,44179790,0,0x0,8
tick,0x7fffe05afeb4,44195742,0,0x0,8
tick,0x7fffe05afeb4,44211727,0,0x0,8
tick,0x7fffe05afeb4,44228081,0,0x0,8
tick,0x7fffe05afeb4,44243860,0,0x0,8
tick,0x7fffe05afeb4,44258885,0,0x0,8
tick,0x7fffe05afeb4,44273729,0,0x0,8
tick,0x7fffe05afeb4,44289803,0,0x0,8
tick,0x7fffe05afeb4,44305808,0,0x0,8
tick,0x7fffe05afeb4,44322194,0,0x0,8
tick,0x7fffe05afeb4,44337830,0,0x0,8
tick,0x7fffe05afeb4,44353800,0,0x0,8
tick,0x7fffe05afeb4,44369761,0,0x0,8
tick,0x7fffe05afeb4,44385729,0,0x0,8
tick,0x7fffe05afeb4,44401812,0,0x0,8
tick,0x7fffe05afeb4,44416820,0,0x0,8
tick,0x7fffe05afeb4,44432805,0,0x0,8
tick,0x7fffe05afeb4,44448740,0,0x0,8
tick,0x7fffe05afeb4,44464846,0,0x0,8
tick,0x7fffe05afeb4,44480721,0,0x0,8
tick,0x7fffe05afeb4,44495903,0,0x0,8
tick,0x7fffe05afeb4,44511830,0,0x0,8
tick,0x7fffe05afeb4,44527794,0,0x0,8
tick,0x7fffe05afeb4,44543794,0,0x0,8
tick,0x7fffe05afeb4,44559743,0,0x0,8
tick,0x7fffe05afeb4,44576175,0,0x0,8
tick,0x7fffe05afeb4,44591749,0,0x0,8
tick,0x7fffe05afeb4,44607739,0,0x0,8
tick,0x7fffe05afeb4,44623726,0,0x0,8
tick,0x7fffe05afeb4,44639762,0,0x0,8
tick,0x7fffe05afeb4,44654805,0,0x0,8
tick,0x7fffe05afeb4,44670786,0,0x0,8
tick,0x7fffe05afeb4,44686827,0,0x0,8
tick,0x7fffe05afeb4,44702738,0,0x0,8
tick,0x7fffe05afeb4,44718736,0,0x0,8
tick,0x7fffe05afeb4,44735334,0,0x0,8
tick,0x7fffe05afeb4,44749834,0,0x0,8
tick,0x7fffe05afeb4,44765871,0,0x0,8
tick,0x7fffe05afeb4,44781817,0,0x0,8
tick,0x7fffe05afeb4,44797826,0,0x0,8
tick,0x7fffe05afeb4,44813769,0,0x0,8
tick,0x7fffe05afeb4,44829775,0,0x0,8
tick,0x7fffe05afeb4,44845850,0,0x0,8
tick,0x7fffe05afeb4,44861884,0,0x0,8
tick,0x7fffe05afeb4,44876771,0,0x0,8
tick,0x7fffe05afeb4,44892817,0,0x0,8
tick,0x7fffe05afeb4,44908836,0,0x0,8
tick,0x7fffe05afeb4,44924782,0,0x0,8
tick,0x7fffe05afeb4,44940742,0,0x0,8
tick,0x7fffe05afeb4,44956748,0,0x0,8
tick,0x7fffe05afeb4,44972814,0,0x0,8
tick,0x7fffe05afeb4,44987955,0,0x0,8
tick,0x7fffe05afeb4,45003770,0,0x0,8
tick,0x7fffe05afeb4,45019808,0,0x0,8
tick,0x7fffe05afeb4,45035815,0,0x0,8
tick,0x7fffe05afeb4,45051790,0,0x0,8
tick,0x7fffe05afeb4,45067740,0,0x0,8
tick,0x7fffe05afeb4,45083803,0,0x0,8
tick,0x7fffe05afeb4,45099752,0,0x0,8
tick,0x7fffe05afeb4,45115818,0,0x0,8
tick,0x7fffe05afeb4,45131734,0,0x0,8
tick,0x7fffe05afeb4,45147849,0,0x0,8
tick,0x7fffe05afeb4,45163718,0,0x0,8
tick,0x7fffe05afeb4,45178745,0,0x0,8
tick,0x7fffe05afeb4,45194829,0,0x0,8
tick,0x7fffe05afeb4,45210829,0,0x0,8
tick,0x7fffe05afeb4,45229855,0,0x0,8
tick,0x7fffe05afeb4,45242864,0,0x0,8
tick,0x7fffe05afeb4,45258866,0,0x0,8
tick,0x7fffe05afeb4,45273732,0,0x0,8
tick,0x7fffe05afeb4,45288864,0,0x0,8
tick,0x7fffe05afeb4,45304803,0,0x0,8
tick,0x7fffe05afeb4,45319823,0,0x0,8
tick,0x7fffe05afeb4,45334821,0,0x0,8
tick,0x7fffe05afeb4,45349988,0,0x0,8
tick,0x7fffe05afeb4,45365832,0,0x0,8
tick,0x7fffe05afeb4,45381734,0,0x0,8
tick,0x7fffe05afeb4,45397752,0,0x0,8
tick,0x7fffe05afeb4,45413826,0,0x0,8
tick,0x7fffe05afeb4,45429767,0,0x0,8
tick,0x7fffe05afeb4,45447475,0,0x0,8
tick,0x7fffe05afeb4,45461972,0,0x0,8
tick,0x7fffe05afeb4,45478076,0,0x0,8
tick,0x7fffe05afeb4,45492744,0,0x0,8
tick,0x7fffe05afeb4,45507736,0,0x0,8
tick,0x7fffe05afeb4,45523756,0,0x0,8
tick,0x7fffe05afeb4,45539976,0,0x0,8
tick,0x7fffe05afeb4,45555748,0,0x0,8
tick,0x7fffe05afeb4,45572244,0,0x0,8
tick,0x7fffe05afeb4,45586887,0,0x0,8
tick,0x7fffe05afeb4,45602745,0,0x0,8
tick,0x7fffe05afeb4,45618730,0,0x0,8
tick,0x7fffe05afeb4,45634750,0,0x0,8
tick,0x7fffe05afeb4,45650837,0,0x0,8
tick,0x7fffe05afeb4,45666760,0,0x0,8
tick,0x7fffe05afeb4,45682820,0,0x0,8
tick,0x7fffe05afeb4,45698772,0,0x0,8
tick,0x7fffe05afeb4,45713741,0,0x0,8
tick,0x7fffe05afeb4,45729737,0,0x0,8
tick,0x7fffe05afeb4,45745815,0,0x0,8
tick,0x7fffe05afeb4,45761738,0,0x0,8
tick,0x7fffe05afeb4,45777757,0,0x0,8
tick,0x7fffe05afeb4,45793889,0,0x0,8
tick,0x7fffe05afeb4,45809817,0,0x0,8
tick,0x7fffe05afeb4,45825725,0,0x0,8
tick,0x7fffe05afeb4,45841859,0,0x0,8
tick,0x7fffe05afeb4,45856816,0,0x0,8
tick,0x7fffe05afeb4,45872890,0,0x0,8
tick,0x7fffe05afeb4,45891670,0,0x0,8
tick,0x7fffe05afeb4,45904874,0,0x0,8
tick,0x7fffe05afeb4,45920801,0,0x0,8
tick,0x7fffe05afeb4,45936730,0,0x0,8
tick,0x7fffe05afeb4,45952745,0,0x0,8
tick,0x7fffe05afeb4,45968833,0,0x0,8
tick,0x7fffe05afeb4,45984825,0,0x0,8
tick,0x7fffe05afeb4,46000861,0,0x0,8
tick,0x7fffe05afeb4,46016745,0,0x0,8
tick,0x7fffe05afeb4,46032843,0,0x0,8
tick,0x7fffe05afeb4,46047775,0,0x0,8
tick,0x7fffe05afeb4,46063732,0,0x0,8
tick,0x7fffe05afeb4,46078816,0,0x0,8
tick,0x7fffe05afeb4,46094842,0,0x0,8
tick,0x7fffe05afeb4,46110747,0,0x0,8
tick,0x7fffe05afeb4,46126762,0,0x0,8
tick,0x7fffe05afeb4,46142747,0,0x0,8
tick,0x7fffe05afeb4,46158768,0,0x0,8
tick,0x7fffe05afeb4,46174736,0,0x0,8
tick,0x7fffe05afeb4,46190762,0,0x0,8
tick,0x7fffe05afeb4,46206804,0,0x0,8
tick,0x7fffe05afeb4,46222736,0,0x0,8
tick,0x7fffe05afeb4,46238847,0,0x0,8
tick,0x7fffe05afeb4,46253731,0,0x0,8
tick,0x7fffe05afeb4,46269824,0,0x0,8
tick,0x7fffe05afeb4,46285739,0,0x0,8
tick,0x7fffe05afeb4,46301766,0,0x0,8
tick,0x7fffe05afeb4,46317824,0,0x0,8
tick,0x7fffe05afeb4,46333747,0,0x0,8
tick,0x7fffe05afeb4,46350023,0,0x0,8
tick,0x7fffe05afeb4,46365778,0,0x0,8
tick,0x7fffe05afeb4,46381730,0,0x0,8
tick,0x7fffe05afeb4,46397725,0,0x0,8
tick,0x7fffe05afeb4,46413749,0,0x0,8
tick,0x7fffe05afeb4,46429868,0,0x0,8
tick,0x7fffe05afeb4,46446064,0,0x0,8
tick,0x7fffe05afeb4,46461822,0,0x0,8
tick,0x7fffe05afeb4,46477739,0,0x0,8
tick,0x7fffe05afeb4,46493823,0,0x0,8
tick,0x7fffe05afeb4,46509765,0,0x0,8
tick,0x7fffe05afeb4,46525720,0,0x0,8
tick,0x7fffe05afeb4,46541730,0,0x0,8
tick,0x7fffe05afeb4,46556817,0,0x0,8
tick,0x7fffe05afeb4,46572748,0,0x0,8
tick,0x7fffe05afeb4,46588737,0,0x0,8
tick,0x7fffe05afeb4,46604735,0,0x0,8
tick,0x7fffe05afeb4,46619763,0,0x0,8
tick,0x7fffe05afeb4,46634739,0,0x0,8
tick,0x7fffe05afeb4,46650773,0,0x0,8
tick,0x7fffe05afeb4,46666827,0,0x0,8
tick,0x7fffe05afeb4,46682841,0,0x0,8
tick,0x7fffe05afeb4,46697730,0,0x0,8
tick,0x7fffe05afeb4,46713725,0,0x0,8
tick,0x7fffe05afeb4,46729757,0,0x0,8
tick,0x7fffe05afeb4,46745727,0,0x0,8
tick,0x7fffe05afeb4,46761746,0,0x0,8
tick,0x7fffe05afeb4,46777820,0,0x0,8
tick,0x7fffe05afeb4,46793764,0,0x0,8
tick,0x7fffe05afeb4,46809872,0,0x0,8
tick,0x7fffe05afeb4,46825741,0,0x0,8
tick,0x7fffe05afeb4,46841849,0,0x0,8
tick,0x7fffe05afeb4,46856750,0,0x0,8
tick,0x7fffe05afeb4,46872730,0,0x0,8
tick,0x7fffe05afeb4,46888727,0,0x0,8
tick,0x7fffe05afeb4,46904818,0,0x0,8
tick,0x7fffe05afeb4,46920777,0,0x0,8
tick,0x7fffe05afeb4,46936825,0,0x0,8
tick,0x7fffe05afeb4,46952737,0,0x0,8
tick,0x7fffe05afeb4,46968819,0,0x0,8
tick,0x7fffe05afeb4,46984740,0,0x0,8
tick,0x7fffe05afeb4,47000740,0,0x0,8
tick,0x7fffe05afeb4,47016750,0,0x0,8
tick,0x7fffe05afeb4,47032863,0,0x0,8
tick,0x7fffe05afeb4,47047738,0,0x0,8
tick,0x7fffe05afeb4,47062811,0,0x0,8
tick,0x7fffe05afeb4,47078857,0,0x0,8
tick,0x7fffe05afeb4,47094731,0,0x0,8
tick,0x7fffe05afeb4,47110742,0,0x0,8
tick,0x7fffe05afeb4,47126801,0,0x0,8
tick,0x7fffe05afeb4,47142737,0,0x0,8
tick,0x7fffe05afeb4,47158884,0,0x0,8
tick,0x7fffe05afeb4,47174844,0,0x0,8
tick,0x7fffe05afeb4,47190820,0,0x0,8
tick,0x7fffe05afeb4,47206819,0,0x0,8
tick,0x7fffe05afeb4,47222738,0,0x0,8
tick,0x7fffe05afeb4,47237753,0,0x0,8
tick,0x7fffe05afeb4,47253727,0,0x0,8
tick,0x7fffe05afeb4,47269836,0,0x0,8
tick,0x7fffe05afeb4,47285817,0,0x0,8
tick,0x7fffe05afeb4,47301820,0,0x0,8
tick,0x7fffe05afeb4,47316748,0,0x0,8
tick,0x7fffe05afeb4,47332744,0,0x0,8
tick,0x7fffe05afeb4,47348738,0,0x0,8
tick,0x7fffe05afeb4,47364844,0,0x0,8
tick,0x7fffe05afeb4,47379766,0,0x0,8
tick,0x7fffe05afeb4,47395733,0,0x0,8
tick,0x7fffe05afeb4,47411748,0,0x0,8
tick,0x7fffe05afeb4,47427745,0,0x0,8
tick,0x7fffe05afeb4,47443746,0,0x0,8
tick,0x7fffe05afeb4,47459793,0,0x0,8
tick,0x7fffe05afeb4,47475742,0,0x0,8
tick,0x7fffe05afeb4,47491739,0,0x0,8
tick,0x7fffe05afeb4,47507749,0,0x0,8
tick,0x7fffe05afeb4,47523743,0,0x0,8
tick,0x7fffe05afeb4,47538819,0,0x0,8
tick,0x7fffe05afeb4,47554823,0,0x0,8
tick,0x7fffe05afeb4,47570814,0,0x0,8
tick,0x7fffe05afeb4,47586747,0,0x0,8
tick,0x7fffe05afeb4,47602759,0,0x0,8
tick,0x7fffe05afeb4,47618835,0,0x0,8
tick,0x7fffe05afeb4,47634764,0,0x0,8
tick,0x7fffe05afeb4,47649774,0,0x0,8
tick,0x7fffe05afeb4,47665742,0,0x0,8
tick,0x7fffe05afeb4,47681852,0,0x0,8
tick,0x7fffe05afeb4,47697733,0,0x0,8
tick,0x7fffe05afeb4,47712730,0,0x0,8
tick,0x7fffe05afeb4,47728736,0,0x0,8
tick,0x7fffe05afeb4,47744820,0,0x0,8
tick,0x7fffe05afeb4,47760757,0,0x0,8
tick,0x7fffe05afeb4,47776816,0,0x0,8
tick,0x7fffe05afeb4,47792747,0,0x0,8
tick,0x7fffe05afeb4,47808795,0,0x0,8
tick,0x7fffe05afeb4,47824770,0,0x0,8
tick,0x7fffe05afeb4,47840745,0,0x0,8
tick,0x7fffe05afeb4,47856740,0,0x0,8
tick,0x7fffe05afeb4,47871726,0,0x0,8
tick,0x7fffe05afeb4,47887722,0,0x0,8
tick,0x7fffe05afeb4,47903864,0,0x0,8
tick,0x7fffe05afeb4,47919766,0,0x0,8
tick,0x7fffe05afeb4,47936036,0,0x0,8
tick,0x7fffe05afeb4,47951901,0,0x0,8
tick,0x7fffe05afeb4,47966802,0,0x0,8
tick,0x7fffe05afeb4,47982873,0,0x0,8
tick,0x7fffe05afeb4,47997920,0,0x0,8
tick,0x7fffe05afeb4,48013840,0,0x0,8
tick,0x7fffe05afeb4,48030053,0,0x0,8
tick,0x7fffe05afeb4,48045861,0,0x0,8
tick,0x7fffe05afeb4,48061875,0,0x0,8
tick,0x7fffe05afeb4,48077844,0,0x0,8
tick,0x7fffe05afeb4,48093853,0,0x0,8
tick,0x7fffe05afeb4,48109862,0,0x0,8
tick,0x7fffe05afeb4,48126172,0,0x0,8
tick,0x7fffe05afeb4,48141734,0,0x0,8
tick,0x7fffe05afeb4,48157875,0,0x0,8
tick,0x7fffe05afeb4,48173856,0,0x0,8
tick,0x7fffe05afeb4,48188977,0,0x0,8
tick,0x7fffe05afeb4,48204735,0,0x0,8
tick,0x7fffe05afeb4,48220868,0,0x0,8
tick,0x7fffe05afeb4,48236845,0,0x0,8
tick,0x7fffe05afeb4,48252919,0,0x0,8
tick,0x7fffe05afeb4,48268851,0,0x0,8
tick,0x7fffe05afeb4,48284809,0,0x0,8
tick,0x7fffe05afeb4,48300724,0,0x0,8
tick,0x7fffe05afeb4,48316850,0,0x0,8
tick,0x7fffe05afeb4,48331849,0,0x0,8
tick,0x7fffe05afeb4,48347945,0,0x0,8
tick,0x7fffe05afeb4,48363752,0,0x0,8
tick,0x7fffe05afeb4,48379967,0,0x0,8
tick,0x7fffe05afeb4,48395751,0,0x0,8
tick,0x7fffe05afeb4,48411810,0,0x0,8
tick,0x7fffe05afeb4,48427723,0,0x0,8
tick,0x7fffe05afeb4,48442809,0,0x0,8
tick,0x7fffe05afeb4,48458890,0,0x0,8
tick,0x7fffe05afeb4,48474863,0,0x0,8
tick,0x7fffe05afeb4,48490747,0,0x0,8
tick,0x7fffe05afeb4,48506867,0,0x0,8
tick,0x7fffe05afeb4,48522807,0,0x0,8
tick,0x7fffe05afeb4,48538843,0,0x0,8
tick,0x7fffe05afeb4,48554729,0,0x0,8
tick,0x7fffe05afeb4,48570902,0,0x0,8
tick,0x7fffe05afeb4,48585891,0,0x0,8
tick,0x7fffe05afeb4,48601923,0,0x0,8
tick,0x7fffe05afeb4,48617827,0,0x0,8
tick,0x7fffe05afeb4,48634256,0,0x0,8
tick,0x7fffe05afeb4,48649747,0,0x0,8
tick,0x7fffe05afeb4,48665989,0,0x0,8
tick,0x7fffe05afeb4,48681856,0,0x0,8
tick,0x7fffe05afeb4,48697863,0,0x0,8
tick,0x7fffe05afeb4,48713812,0,0x0,8
tick,0x7fffe05afeb4,48730407,0,0x0,8
tick,0x7fffe05afeb4,48745816,0,0x0,8
tick,0x7fffe05afeb4,48761889,0,0x0,8
tick,0x7fffe05afeb4,48776746,0,0x0,8
tick,0x7fffe05afeb4,48792766,0,0x0,8
tick,0x7fffe05afeb4,48808820,0,0x0,8
tick,0x7fffe05afeb4,48824819,0,0x0,8
tick,0x7fffe05afeb4,48840838,0,0x0,8
tick,0x7fffe05afeb4,48856798,0,0x0,8
tick,0x7fffe05afeb4,48871728,0,0x0,8
tick,0x7fffe05afeb4,48887826,0,0x0,8
tick,0x7fffe05afeb4,48902734,0,0x0,8
tick,0x7fffe05afeb4,48918747,0,0x0,8
tick,0x7fffe05afeb4,48934822,0,0x0,8
tick,0x7fffe05afeb4,48950841,0,0x0,8
tick,0x7fffe05afeb4,48966802,0,0x0,8
tick,0x7fffe05afeb4,48982876,0,0x0,8
tick,0x7fffe05afeb4,48998792,0,0x0,8
tick,0x7fffe05afeb4,49014757,0,0x0,8
tick,0x7fffe05afeb4,49030746,0,0x0,8
tick,0x7fffe05afeb4,49045801,0,0x0,8
tick,0x7fffe05afeb4,49061811,0,0x0,8
tick,0x7fffe05afeb4,49077853,0,0x0,8
tick,0x7fffe05afeb4,49093988,0,0x0,8
tick,0x7fffe05afeb4,49111427,0,0x0,8
tick,0x7fffe05afeb4,49125773,0,0x0,8
tick,0x7fffe05afeb4,49141747,0,0x0,8
tick,0x7fffe05afeb4,49156763,0,0x0,8
tick,0x7fffe05afeb4,49172827,0,0x0,8
tick,0x7fffe05afeb4,49188848,0,0x0,8
tick,0x7fffe05afeb4,49204814,0,0x0,8
tick,0x7fffe05afeb4,49220774,0,0x0,8
tick,0x7fffe05afeb4,49236880,0,0x0,8
tick,0x7fffe05afeb4,49252735,0,0x0,8
tick,0x7fffe05afeb4,49268826,0,0x0,8
tick,0x7fffe05afeb4,49284740,0,0x0,8
tick,0x7fffe05afeb4,49300805,0,0x0,8
tick,0x7fffe05afeb4,49316741,0,0x0,8
tick,0x7fffe05afeb4,49332773,0,0x0,8
tick,0x7fffe05afeb4,49348774,0,0x0,8
tick,0x7fffe05afeb4,49364744,0,0x0,8
tick,0x7fffe05afeb4,49379775,0,0x0,8
tick,0x7fffe05afeb4,49394796,0,0x0,8
tick,0x7fffe05afeb4,49410821,0,0x0,8
tick,0x7fffe05afeb4,49426814,0,0x0,8
tick,0x7fffe05afeb4,49442733,0,0x0,8
tick,0x7fffe05afeb4,49458749,0,0x0,8
tick,0x7fffe05afeb4,49474832,0,0x0,8
tick,0x7fffe05afeb4,49490783,0,0x0,8
tick,0x7fffe05afeb4,49506770,0,0x0,8
tick,0x7fffe05afeb4,49522819,0,0x0,8
tick,0x7fffe05afeb4,49538762,0,0x0,8
tick,0x7fffe05afeb4,49554867,0,0x0,8
tick,0x7fffe05afeb4,49570836,0,0x0,8
tick,0x7fffe05afeb4,49585745,0,0x0,8
tick,0x7fffe05afeb4,49601758,0,0x0,8
tick,0x7fffe05afeb4,49616729,0,0x0,8
tick,0x7fffe05afeb4,49631735,0,0x0,8
tick,0x7fffe05afeb4,49647745,0,0x0,8
tick,0x7fffe05afeb4,49663737,0,0x0,8
tick,0x7fffe05afeb4,49678813,0,0x0,8
tick,0x7fffe05afeb4,49694840,0,0x0,8
tick,0x7fffe05afeb4,49709752,0,0x0,8
tick,0x7fffe05afeb4,49725829,0,0x0,8
tick,0x7fffe05afeb4,49741910,0,0x0,8
tick,0x7fffe05afeb4,49757742,0,0x0,8
tick,0x7fffe05afeb4,49773834,0,0x0,8
tick,0x7fffe05afeb4,49788743,0,0x0,8
tick,0x7fffe05afeb4,49804809,0,0x0,8
tick,0x7fffe05afeb4,49820996,0,0x0,8
tick,0x7fffe05afeb4,49836833,0,0x0,8
tick,0x7fffe05afeb4,49852901,0,0x0,8
tick,0x7fffe05afeb4,49868820,0,0x0,8
tick,0x7fffe05afeb4,49884736,0,0x0,8
tick,0x7fffe05afeb4,49901897,0,0x0,8
tick,0x7fffe05afeb4,49916868,0,0x0,8
tick,0x7fffe05afeb4,49932829,0,0x0,8
tick,0x7fffe05afeb4,49947727,0,0x0,8
tick,0x7fffe05afeb4,49963726,0,0x0,8
tick,0x7fffe05afeb4,49978833,0,0x0,8
tick,0x7fffe05afeb4,49994792,0,0x0,8
tick,0x7fffe05afeb4,50010770,0,0x0,8
tick,0x7fffe05afeb4,50026760,0,0x0,8
tick,0x7fffe05afeb4,50042905,0,0x0,8
tick,0x7fffe05afeb4,50057825,0,0x0,8
tick,0x7fffe05afeb4,50073814,0,0x0,8
tick,0x7fffe05afeb4,50089827,0,0x0,8
tick,0x7fffe05afeb4,50105788,0,0x0,8
tick,0x7fffe05afeb4,50121782,0,0x0,8
tick,0x7fffe05afeb4,50137746,0,0x0,8
tick,0x7fffe05afeb4,50153995,0,0x0,8
tick,0x7fffe05afeb4,50169839,0,0x0,8
tick,0x7fffe05afeb4,50185808,0,0x0,8
tick,0x7fffe05afeb4,50202839,0,0x0,8
tick,0x7fffe05afeb4,50216822,0,0x0,8
tick,0x7fffe05afeb4,50232845,0,0x0,8
tick,0x7fffe05afeb4,50248820,0,0x0,8
tick,0x7fffe05afeb4,50264806,0,0x0,8
tick,0x7fffe05afeb4,50279781,0,0x0,8
tick,0x7fffe05afeb4,50295768,0,0x0,8
tick,0x7fffe05afeb4,50311827,0,0x0,8
tick,0x7fffe05afeb4,50329797,0,0x0,8
tick,0x7fffe05afeb4,50343744,0,0x0,8
tick,0x7fffe05afeb4,50359898,0,0x0,8
tick,0x7fffe05afeb4,50375731,0,0x0,8
tick,0x7fffe05afeb4,50391736,0,0x0,8
tick,0x7fffe05afeb4,50407742,0,0x0,8
tick,0x7fffe05afeb4,50423756,0,0x0,8
tick,0x7fffe05afeb4,50439924,0,0x0,8
tick,0x7fffe05afeb4,50455840,0,0x0,8
tick,0x7fffe05afeb4,50471757,0,0x0,8
tick,0x7fffe05afeb4,50487723,0,0x0,8
tick,0x7fffe05afeb4,50503729,0,0x0,8
tick,0x7fffe05afeb4,50519757,0,0x0,8
tick,0x7fffe05afeb4,50535757,0,0x0,8
tick,0x7fffe05afeb4,50551783,0,0x0,8
tick,0x7fffe05afeb4,50567800,0,0x0,8
tick,0x7fffe05afeb4,50583830,0,0x0,8
tick,0x7fffe05afeb4,50599767,0,0x0,8
tick,0x7fffe05afeb4,50615036,0,0x0,8
tick,0x7fffe05afeb4,50630829,0,0x0,8
tick,0x7fffe05afeb4,50646795,0,0x0,8
tick,0x7fffe05afeb4,50662789,0,0x0,8
tick,0x7fffe05afeb4,50678737,0,0x0,8
tick,0x7fffe05afeb4,50694898,0,0x0,8
tick,0x7fffe05afeb4,50709883,0,0x0,8
tick,0x7fffe05afeb4,50725807,0,0x0,8
tick,0x7fffe05afeb4,50740753,0,0x0,8
tick,0x7fffe05afeb4,50756761,0,0x0,8
tick,0x7fffe05afeb4,50772802,0,0x0,8
tick,0x7fffe05afeb4,50788752,0,0x0,8
tick,0x7fffe05afeb4,50804742,0,0x0,8
tick,0x7fffe05afeb4,50819754,0,0x0,8
tick,0x7fffe05afeb4,50834788,0,0x0,8
tick,0x7fffe05afeb4,50850763,0,0x0,8
tick,0x7fffe05afeb4,50866953,0,0x0,8
tick,0x7fffe05afeb4,50881790,0,0x0,8
tick,0x7fffe05afeb4,50897725,0,0x0,8
tick,0x7fffe05afeb4,50913730,0,0x0,8
tick,0x7fffe05afeb4,50928760,0,0x0,8
tick,0x7fffe05afeb4,50944736,0,0x0,8
tick,0x7fffe05afeb4,50960769,0,0x0,8
tick,0x7fffe05afeb4,50976774,0,0x0,8
tick,0x7fffe05afeb4,50992839,0,0x0,8
tick,0x7fffe05afeb4,51008936,0,0x0,8
tick,0x7fffe05afeb4,51024725,0,0x0,8
tick,0x7fffe05afeb4,51041206,0,0x0,8
tick,0x7fffe05afeb4,51056883,0,0x0,8
tick,0x7fffe05afeb4,51072850,0,0x0,8
tick,0x7fffe05afeb4,51088746,0,0x0,8
tick,0x7fffe05afeb4,51104935,0,0x0,8
tick,0x7fffe05afeb4,51120755,0,0x0,8
tick,0x7fffe05afeb4,51136781,0,0x0,8
tick,0x7fffe05afeb4,51152877,0,0x0,8
tick,0x7fffe05afeb4,51167807,0,0x0,8
tick,0x7fffe05afeb4,51183742,0,0x0,8
tick,0x7fffe05afeb4,51198773,0,0x0,8
tick,0x7fffe05afeb4,51214862,0,0x0,8
tick,0x7fffe05afeb4,51230735,0,0x0,8
tick,0x7fffe05afeb4,51246918,0,0x0,8
tick,0x7fffe05afeb4,51262798,0,0x0,8
tick,0x7fffe05afeb4,51278794,0,0x0,8
tick,0x7fffe05afeb4,51294916,0,0x0,8
tick,0x7fffe05afeb4,51310731,0,0x0,8
tick,0x7fffe05afeb4,51326754,0,0x0,8
tick,0x7fffe05afeb4,51342755,0,0x0,8
tick,0x7fffe05afeb4,51358844,0,0x0,8
tick,0x7fffe05afeb4,51374761,0,0x0,8
tick,0x7fffe05afeb4,51390811,0,0x0,8
tick,0x7fffe05afeb4,51406736,0,0x0,8
tick,0x7fffe05afeb4,51422827,0,0x0,8
tick,0x7fffe05afeb4,51439195,0,0x0,8
tick,0x7fffe05afeb4,51454814,0,0x0,8
tick,0x7fffe05afeb4,51470747,0,0x0,8
tick,0x7fffe05afeb4,51486746,0,0x0,8
tick,0x7fffe05afeb4,51502727,0,0x0,8
tick,0x7fffe05afeb4,51518733,0,0x0,8
tick,0x7fffe05afeb4,51534755,0,0x0,8
tick,0x7fffe05afeb4,51550842,0,0x0,8
tick,0x7fffe05afeb4,51566768,0,0x0,8
tick,0x7fffe05afeb4,51582849,0,0x0,8
tick,0x7fffe05afeb4,51598752,0,0x0,8
tick,0x7fffe05afeb4,51614811,0,0x0,8
tick,0x7fffe05afeb4,51629759,0,0x0,8
tick,0x7fffe05afeb4,51645816,0,0x0,8
tick,0x7fffe05afeb4,51661826,0,0x0,8
tick,0x7fffe05afeb4,51677749,0,0x0,8
tick,0x7fffe05afeb4,51693747,0,0x0,8
tick,0x7fffe05afeb4,51709762,0,0x0,8
tick,0x7fffe05afeb4,51724752,0,0x0,8
tick,0x7fffe05afeb4,51739748,0,0x0,8
tick,0x7fffe05afeb4,51755744,0,0x0,8
tick,0x7fffe05afeb4,51771740,0,0x0,8
tick,0x7fffe05afeb4,51787735,0,0x0,8
tick,0x7fffe05afeb4,51803756,0,0x0,8
tick,0x7fffe05afeb4,51819767,0,0x0,8
tick,0x7fffe05afeb4,51835747,0,0x0,8
tick,0x7fffe05afeb4,51851740,0,0x0,8
tick,0x7fffe05afeb4,51866821,0,0x0,8
tick,0x7fffe05afeb4,51882886,0,0x0,8
tick,0x7fffe05afeb4,51898818,0,0x0,8
tick,0x7fffe05afeb4,51914737,0,0x0,8
tick,0x7fffe05afeb4,51929853,0,0x0,8
tick,0x7fffe05afeb4,51945731,0,0x0,8
tick,0x7fffe05afeb4,51961815,0,0x0,8
tick,0x7fffe05afeb4,51977757,0,0x0,8
tick,0x7fffe05afeb4,51993835,0,0x0,8
tick,0x7fffe05afeb4,52009771,0,0x0,8
tick,0x7fffe05afeb4,52025815,0,0x0,8
tick,0x7fffe05afeb4,52041747,0,0x0,8
tick,0x7fffe05afeb4,52057730,0,0x0,8
tick,0x7fffe05afeb4,52073810,0,0x0,8
tick,0x7fffe05afeb4,52089804,0,0x0,8
tick,0x7fffe05afeb4,52105752,0,0x0,8
tick,0x7fffe05afeb4,52121837,0,0x0,8
tick,0x7fffe05afeb4,52137813,0,0x0,8
tick,0x7fffe05afeb4,52153896,0,0x0,8
tick,0x7fffe05afeb4,52169852,0,0x0,8
tick,0x7fffe05afeb4,52185819,0,0x0,8
tick,0x7fffe05afeb4,52201804,0,0x0,8
tick,0x7fffe05afeb4,52216930,0,0x0,8
tick,0x7fffe05afeb4,52232822,0,0x0,8
tick,0x7fffe05afeb4,52248758,0,0x0,8
tick,0x7fffe05afeb4,52264732,0,0x0,8
tick,0x7fffe05afeb4,52279741,0,0x0,8
tick,0x7fffe05afeb4,52294811,0,0x0,8
tick,0x7fffe05afeb4,52309812,0,0x0,8
tick,0x7fffe05afeb4,52325741,0,0x0,8
tick,0x7fffe05afeb4,52341733,0,0x0,8
tick,0x7fffe05afeb4,52357737,0,0x0,8
tick,0x7fffe05afeb4,52373806,0,0x0,8
tick,0x7fffe05afeb4,52389743,0,0x0,8
tick,0x7fffe05afeb4,52405726,0,0x0,8
tick,0x7fffe05afeb4,52421829,0,0x0,8
tick,0x7fffe05afeb4,52437995,0,0x0,8
tick,0x7fffe05afeb4,52453740,0,0x0,8
tick,0x7fffe05afeb4,52469773,0,0x0,8
tick,0x7fffe05afeb4,52485816,0,0x0,8
tick,0x7fffe05afeb4,52501780,0,0x0,8
tick,0x7fffe05afeb4,52517729,0,0x0,8
tick,0x7fffe05afeb4,52533795,0,0x0,8
tick,0x7fffe05afeb4,52549858,0,0x0,8
tick,0x7fffe05afeb4,52565753,0,0x0,8
tick,0x7fffe05afeb4,52581855,0,0x0,8
tick,0x7fffe05afeb4,52597736,0,0x0,8
tick,0x7fffe05afeb4,52613767,0,0x0,8
tick,0x7fffe05afeb4,52629777,0,0x0,8
tick,0x7fffe05afeb4,52644737,0,0x0,8
tick,0x7fffe05afeb4,52660887,0,0x0,8
tick,0x7fffe05afeb4,52676749,0,0x0,8
tick,0x7fffe05afeb4,52692820,0,0x0,8
tick,0x7fffe05afeb4,52708744,0,0x0,8
tick,0x7fffe05afeb4,52724831,0,0x0,8
tick,0x7fffe05afeb4,52739781,0,0x0,8
tick,0x7fffe05afeb4,52755720,0,0x0,8
tick,0x7fffe05afeb4,52770743,0,0x0,8
tick,0x7fffe05afeb4,52786828,0,0x0,8
tick,0x7fffe05afeb4,52802750,0,0x0,8
tick,0x7fffe05afeb4,52818832,0,0x0,8
tick,0x7fffe05afeb4,52834733,0,0x0,8
tick,0x7fffe05afeb4,52850777,0,0x0,8
tick,0x7fffe05afeb4,52866738,0,0x0,8
tick,0x7fffe05afeb4,52882752,0,0x0,8
tick,0x7fffe05afeb4,52898823,0,0x0,8
tick,0x7fffe05afeb4,52914742,0,0x0,8
tick,0x7fffe05afeb4,52930745,0,0x0,8
tick,0x7fffe05afeb4,52945821,0,0x0,8
tick,0x7fffe05afeb4,52961805,0,0x0,8
tick,0x7fffe05afeb4,52977763,0,0x0,8
tick,0x7fffe05afeb4,52993756,0,0x0,8
tick,0x7fffe05afeb4,53009789,0,0x0,8
tick,0x7fffe05afeb4,53025814,0,0x0,8
tick,0x7fffe05afeb4,53041812,0,0x0,8
tick,0x7fffe05afeb4,53057816,0,0x0,8
tick,0x7fffe05afeb4,53073815,0,0x0,8
tick,0x7fffe05afeb4,53089813,0,0x0,8
tick,0x7fffe05afeb4,53105751,0,0x0,8
tick,0x7fffe05afeb4,53120749,0,0x0,8
tick,0x7fffe05afeb4,53136799,0,0x0,8
tick,0x7fffe05afeb4,53152754,0,0x0,8
tick,0x7fffe05afeb4,53168776,0,0x0,8
tick,0x7fffe05afeb4,53184959,0,0x0,8
tick,0x7fffe05afeb4,53200738,0,0x0,8
tick,0x7fffe05afeb4,53216720,0,0x0,8
tick,0x7fffe05afeb4,53232781,0,0x0,8
tick,0x7fffe05afeb4,53248809,0,0x0,8
tick,0x7fffe05afeb4,53264812,0,0x0,8
tick,0x7fffe05afeb4,53280722,0,0x0,8
tick,0x7fffe05afeb4,53295727,0,0x0,8
tick,0x7fffe05afeb4,53311738,0,0x0,8
tick,0x7fffe05afeb4,53327739,0,0x0,8
tick,0x7fffe05afeb4,53343729,0,0x0,8
tick,0x7fffe05afeb4,53359850,0,0x0,8
tick,0x7fffe05afeb4,53375747,0,0x0,8
tick,0x7fffe05afeb4,53391741,0,0x0,8
tick,0x7fffe05afeb4,53406750,0,0x0,8
tick,0x7fffe05afeb4,53422809,0,0x0,8
tick,0x7fffe05afeb4,53438797,0,0x0,8
tick,0x7fffe05afeb4,53454778,0,0x0,8
tick,0x7fffe05afeb4,53470731,0,0x0,8
tick,0x7fffe05afeb4,53486816,0,0x0,8
tick,0x7fffe05afeb4,53502802,0,0x0,8
tick,0x7fffe05afeb4,53517842,0,0x0,8
tick,0x7fffe05afeb4,53533815,0,0x0,8
tick,0x7fffe05afeb4,53549749,0,0x0,8
tick,0x7fffe05afeb4,53565743,0,0x0,8
tick,0x7fffe05afeb4,53581734,0,0x0,8
tick,0x7fffe05afeb4,53597827,0,0x0,8
tick,0x7fffe05afeb4,53613819,0,0x0,8
tick,0x7fffe05afeb4,53629792,0,0x0,8
tick,0x7fffe05afeb4,53645754,0,0x0,8
tick,0x7fffe05afeb4,53661759,0,0x0,8
tick,0x7fffe05afeb4,53676730,0,0x0,8
tick,0x7fffe05afeb4,53692746,0,0x0,8
tick,0x7fffe05afeb4,53707740,0,0x0,8
tick,0x7fffe05afeb4,53723741,0,0x0,8
tick,0x7fffe05afeb4,53739771,0,0x0,8
tick,0x7fffe05afeb4,53755739,0,0x0,8
tick,0x7fffe05afeb4,53771742,0,0x0,8
tick,0x7fffe05afeb4,53787734,0,0x0,8
tick,0x7fffe05afeb4,53803735,0,0x0,8
tick,0x7fffe05afeb4,53819754,0,0x0,8
tick,0x7fffe05afeb4,53835742,0,0x0,8
tick,0x7fffe05afeb4,53851745,0,0x0,8
tick,0x7fffe05afeb4,53866818,0,0x0,8
tick,0x7fffe05afeb4,53882823,0,0x0,8
tick,0x7fffe05afeb4,53898733,0,0x0,8
tick,0x7fffe05afeb4,53915030,0,0x0,8
tick,0x7fffe05afeb4,53930740,0,0x0,8
tick,0x7fffe05afeb4,53946117,0,0x0,8
tick,0x7fffe05afeb4,53961820,0,0x0,8
tick,0x7fffe05afeb4,53977998,0,0x0,8
tick,0x7fffe05afeb4,53993909,0,0x0,8
tick,0x7fffe05afeb4,54009773,0,0x0,8
tick,0x7fffe05afeb4,54025740,0,0x0,8
tick,0x7fffe05afeb4,54041831,0,0x0,8
tick,0x7fffe05afeb4,54057870,0,0x0,8
tick,0x7fffe05afeb4,54073732,0,0x0,8
tick,0x7fffe05afeb4,54089806,0,0x0,8
tick,0x7fffe05afeb4,54105775,0,0x0,8
tick,0x7fffe05afeb4,54121735,0,0x0,8
tick,0x7fffe05afeb4,54137771,0,0x0,8
tick,0x7fffe05afeb4,54153892,0,0x0,8
tick,0x7fffe05afeb4,54169807,0,0x0,8
tick,0x7fffe05afeb4,54185924,0,0x0,8
tick,0x7fffe05afeb4,54201812,0,0x0,8
tick,0x7fffe05afeb4,54217865,0,0x0,8
tick,0x7fffe05afeb4,54233737,0,0x0,8
tick,0x7fffe05afeb4,54249854,0,0x0,8
tick,0x7fffe05afeb4,54265808,0,0x0,8
tick,0x7fffe05afeb4,54281727,0,0x0,8
tick,0x7fffe05afeb4,54297803,0,0x0,8
tick,0x7fffe05afeb4,54313814,0,0x0,8
tick,0x7fffe05afeb4,54329925,0,0x0,8
tick,0x7fffe05afeb4,54345749,0,0x0,8
tick,0x7fffe05afeb4,54361791,0,0x0,8
tick,0x7fffe05afeb4,54377837,0,0x0,8
tick,0x7fffe05afeb4,54394003,0,0x0,8
tick,0x7fffe05afeb4,54409747,0,0x0,8
tick,0x7fffe05afeb4,54428440,0,0x0,8
tick,0x7fffe05afeb4,54441776,0,0x0,8
tick,0x7fffe05afeb4,54457725,0,0x0,8
tick,0x7fffe05afeb4,54473862,0,0x0,8
tick,0x7fffe05afeb4,54489793,0,0x0,8
tick,0x7fffe05afeb4,54504815,0,0x0,8
tick,0x7fffe05afeb4,54520808,0,0x0,8
tick,0x7fffe05afeb4,54536744,0,0x0,8
tick,0x7fffe05afeb4,54552819,0,0x0,8
tick,0x7fffe05afeb4,54568738,0,0x0,8
tick,0x7fffe05afeb4,54584741,0,0x0,8
tick,0x7fffe05afeb4,54600727,0,0x0,8
tick,0x7fffe05afeb4,54616821,0,0x0,8
tick,0x7fffe05afeb4,54632805,0,0x0,8
tick,0x7fffe05afeb4,54647764,0,0x0,8
tick,0x7fffe05afeb4,54663777,0,0x0,8
tick,0x7fffe05afeb4,54678757,0,0x0,8
tick,0x7fffe05afeb4,54694743,0,0x0,8
tick,0x7fffe05afeb4,54710764,0,0x0,8
tick,0x7fffe05afeb4,54726743,0,0x0,8
tick,0x7fffe05afeb4,54742746,0,0x0,8
tick,0x7fffe05afeb4,54758750,0,0x0,8
tick,0x7fffe05afeb4,54774756,0,0x0,8
tick,0x7fffe05afeb4,54790756,0,0x0,8
tick,0x7fffe05afeb4,54806771,0,0x0,8
tick,0x7fffe05afeb4,54822738,0,0x0,8
tick,0x7fffe05afeb4,54837819,0,0x0,8
tick,0x7fffe05afeb4,54853750,0,0x0,8
tick,0x7fffe05afeb4,54869864,0,0x0,8
tick,0x7fffe05afeb4,54885750,0,0x0,8
tick,0x7fffe05afeb4,54901787,0,0x0,8
tick,0x7fffe05afeb4,54916742,0,0x0,8
tick,0x7fffe05afeb4,54932772,0,0x0,8
tick,0x7fffe05afeb4,54948778,0,0x0,8
tick,0x7fffe05afeb4,54964739,0,0x0,8
tick,0x7fffe05afeb4,54979765,0,0x0,8
tick,0x7fffe05afeb4,54995755,0,0x0,8
tick,0x7fffe05afeb4,55011730,0,0x0,8
tick,0x7fffe05afeb4,55026729,0,0x0,8
tick,0x7fffe05afeb4,55042735,0,0x0,8
tick,0x7fffe05afeb4,55057865,0,0x0,8
tick,0x7fffe05afeb4,55073830,0,0x0,8
tick,0x7fffe05afeb4,55089840,0,0x0,8
tick,0x7fffe05afeb4,55105824,0,0x0,8
tick,0x7fffe05afeb4,55121809,0,0x0,8
tick,0x7fffe05afeb4,55137752,0,0x0,8
tick,0x7fffe05afeb4,55153837,0,0x0,8
tick,0x7fffe05afeb4,55169802,0,0x0,8
tick,0x7fffe05afeb4,55185819,0,0x0,8
tick,0x7fffe05afeb4,55201813,0,0x0,8
tick,0x7fffe05afeb4,55217821,0,0x0,8
tick,0x7fffe05afeb4,55233838,0,0x0,8
tick,0x7fffe05afeb4,55249803,0,0x0,8
tick,0x7fffe05afeb4,55265730,0,0x0,8
tick,0x7fffe05afeb4,55280769,0,0x0,8
tick,0x7fffe05afeb4,55296858,0,0x0,8
tick,0x7fffe05afeb4,55312734,0,0x0,8
tick,0x7fffe05afeb4,55328880,0,0x0,8
tick,0x7fffe05afeb4,55344736,0,0x0,8
tick,0x7fffe05afeb4,55360817,0,0x0,8
tick,0x7fffe05afeb4,55376738,0,0x0,8
tick,0x7fffe05afeb4,55392743,0,0x0,8
tick,0x7fffe05afeb4,55408826,0,0x0,8
tick,0x7fffe05afeb4,55424823,0,0x0,8
tick,0x7fffe05afeb4,55440934,0,0x0,8
tick,0x7fffe05afeb4,55456812,0,0x0,8
tick,0x7fffe05afeb4,55472733,0,0x0,8
tick,0x7fffe05afeb4,55488747,0,0x0,8
tick,0x7fffe05afeb4,55504755,0,0x0,8
tick,0x7fffe05afeb4,55520823,0,0x0,8
tick,0x7fffe05afeb4,55536821,0,0x0,8
tick,0x7fffe05afeb4,55552860,0,0x0,8
tick,0x7fffe05afeb4,55568821,0,0x0,8
tick,0x7fffe05afeb4,55584734,0,0x0,8
tick,0x7fffe05afeb4,55600815,0,0x0,8
tick,0x7fffe05afeb4,55616755,0,0x0,8
tick,0x7fffe05afeb4,55632816,0,0x0,8
tick,0x7fffe05afeb4,55648757,0,0x0,8
tick,0x7fffe05afeb4,55665030,0,0x0,8
tick,0x7fffe05afeb4,55679764,0,0x0,8
tick,0x7fffe05afeb4,55695728,0,0x0,8
tick,0x7fffe05afeb4,55711746,0,0x0,8
tick,0x7fffe05afeb4,55726743,0,0x0,8
tick,0x7fffe05afeb4,55742819,0,0x0,8
tick,0x7fffe05afeb4,55758765,0,0x0,8
tick,0x7fffe05afeb4,55774841,0,0x0,8
tick,0x7fffe05afeb4,55789774,0,0x0,8
tick,0x7fffe05afeb4,55805800,0,0x0,8
tick,0x7fffe05afeb4,55821738,0,0x0,8
tick,0x7fffe05afeb4,55837818,0,0x0,8
tick,0x7fffe05afeb4,55853728,0,0x0,8
tick,0x7fffe05afeb4,55868751,0,0x0,8
tick,0x7fffe05afeb4,55883749,0,0x0,8
tick,0x7fffe05afeb4,55899748,0,0x0,8
tick,0x7fffe05afeb4,55915735,0,0x0,8
tick,0x7fffe05afeb4,55931762,0,0x0,8
tick,0x7fffe05afeb4,55947755,0,0x0,8
tick,0x7fffe05afeb4,55963731,0,0x0,8
tick,0x7fffe05afeb4,55979759,0,0x0,8
tick,0x7fffe05afeb4,55995761,0,0x0,8
tick,0x7fffe05afeb4,56011724,0,0x0,8
tick,0x7fffe05afeb4,56026739,0,0x0,8
tick,0x7fffe05afeb4,56042737,0,0x0,8
tick,0x7fffe05afeb4,56058738,0,0x0,8
tick,0x7fffe05afeb4,56073824,0,0x0,8
tick,0x7fffe05afeb4,56089908,0,0x0,8
tick,0x7fffe05afeb4,56106121,0,0x0,8
tick,0x7fffe05afeb4,56121851,0,0x0,8
tick,0x7fffe05afeb4,56137846,0,0x0,8
tick,0x7fffe05afeb4,56152878,0,0x0,8
tick,0x7fffe05afeb4,56169002,0,0x0,8
tick,0x7fffe05afeb4,56184783,0,0x0,8
tick,0x7fffe05afeb4,56199850,0,0x0,8
tick,0x7fffe05afeb4,56214855,0,0x0,8
tick,0x7fffe05afeb4,56230978,0,0x0,8
tick,0x7fffe05afeb4,56245910,0,0x0,8
tick,0x7fffe05afeb4,56262107,0,0x0,8
tick,0x7fffe05afeb4,56277851,0,0x0,8
tick,0x7fffe05afeb4,56293842,0,0x0,8
tick,0x7fffe05afeb4,56309859,0,0x0,8
tick,0x7fffe05afeb4,56329789,0,0x0,8
tick,0x7fffe05afeb4,56342010,0,0x0,8
tick,0x7fffe05afeb4,56359924,0,0x0,8
tick,0x7fffe05afeb4,56373935,0,0x0,8
tick,0x7fffe05afeb4,56395051,0,0x0,8
tick,0x7fffe05afeb4,56404745,0,0x0,8
tick,0x7fffe05afeb4,56425815,0,0x0,8
tick,0x7fffe05afeb4,56436818,0,0x0,8
tick,0x7fffe05afeb4,56452922,0,0x0,8
tick,0x7fffe05afeb4,56468836,0,0x0,8
tick,0x7fffe05afeb4,56485742,0,0x0,8
tick,0x7fffe05afeb4,56500896,0,0x0,8
tick,0x7fffe05afeb4,56518260,0,0x0,8
tick,0x7fffe05afeb4,56531850,0,0x0,8
tick,0x7fffe05afeb4,56549872,0,0x0,8
tick,0x7fffe05afeb4,56563814,0,0x0,8
tick,0x7fffe05afeb4,56579982,0,0x0,8
tick,0x7fffe05afeb4,56595850,0,0x0,8
tick,0x7fffe05afeb4,56612152,0,0x0,8
tick,0x7fffe05afeb4,56626887,0,0x0,8
tick,0x7fffe05afeb4,56644323,0,0x0,8
tick,0x7fffe05afeb4,56658971,0,0x0,8
tick,0x7fffe05afeb4,56675072,0,0x0,8
tick,0x7fffe05afeb4,56690875,0,0x0,8
tick,0x7fffe05afeb4,56706944,0,0x0,8
tick,0x7fffe05afeb4,56721894,0,0x0,8
tick,0x7fffe05afeb4,56738153,0,0x0,8
tick,0x7fffe05afeb4,56753916,0,0x0,8
tick,0x7fffe05afeb4,56770439,0,0x0,8
tick,0x7fffe05afeb4,56785816,0,0x0,8
tick,0x7fffe05afeb4,56802130,0,0x0,8
tick,0x7fffe05afeb4,56817884,0,0x0,8
tick,0x7fffe05afeb4,56834289,0,0x0,8
tick,0x7fffe05afeb4,56849925,0,0x0,8
tick,0x7fffe05afeb4,56865919,0,0x0,8
tick,0x7fffe05afeb4,56881807,0,0x0,8
tick,0x7fffe05afeb4,56896820,0,0x0,8
tick,0x7fffe05afeb4,56911888,0,0x0,8
tick,0x7fffe05afeb4,56927801,0,0x0,8
tick,0x7fffe05afeb4,56942909,0,0x0,8
tick,0x7fffe05afeb4,56958851,0,0x0,8
tick,0x7fffe05afeb4,56974883,0,0x0,8
tick,0x7fffe05afeb4,56990099,0,0x0,8
tick,0x7fffe05afeb4,57005815,0,0x0,8
tick,0x7fffe05afeb4,57021910,0,0x0,8
tick,0x7fffe05afeb4,57037907,0,0x0,8
tick,0x7fffe05afeb4,57054013,0,0x0,8
tick,0x7fffe05afeb4,57069896,0,0x0,8
tick,0x7fffe05afeb4,57085025,0,0x0,8
tick,0x7fffe05afeb4,57100779,0,0x0,8
tick,0x7fffe05afeb4,57115820,0,0x0,8
tick,0x7fffe05afeb4,57131819,0,0x0,8
tick,0x7fffe05afeb4,57147744,0,0x0,8
tick,0x7fffe05afeb4,57163740,0,0x0,8
tick,0x7fffe05afeb4,57179841,0,0x0,8
tick,0x7fffe05afeb4,57196058,0,0x0,8
tick,0x7fffe05afeb4,57211731,0,0x0,8
tick,0x7fffe05afeb4,57226730,0,0x0,8
tick,0x7fffe05afeb4,57241744,0,0x0,8
tick,0x7fffe05afeb4,57256802,0,0x0,8
tick,0x7fffe05afeb4,57272830,0,0x0,8
tick,0x7fffe05afeb4,57288819,0,0x0,8
tick,0x7fffe05afeb4,57304783,0,0x0,8
tick,0x7fffe05afeb4,57320737,0,0x0,8
tick,0x7fffe05afeb4,57336792,0,0x0,8
tick,0x7fffe05afeb4,57352831,0,0x0,8
tick,0x7fffe05afeb4,57368830,0,0x0,8
tick,0x7fffe05afeb4,57384947,0,0x0,8
tick,0x7fffe05afeb4,57400821,0,0x0,8
tick,0x7fffe05afeb4,57416750,0,0x0,8
tick,0x7fffe05afeb4,57432726,0,0x0,8
tick,0x7fffe05afeb4,57448754,0,0x0,8
tick,0x7fffe05afeb4,57464816,0,0x0,8
tick,0x7fffe05afeb4,57479808,0,0x0,8
tick,0x7fffe05afeb4,57495727,0,0x0,8
tick,0x7fffe05afeb4,57511739,0,0x0,8
tick,0x7fffe05afeb4,57526758,0,0x0,8
tick,0x7fffe05afeb4,57542745,0,0x0,8
tick,0x7fffe05afeb4,57558730,0,0x0,8
tick,0x7fffe05afeb4,57574773,0,0x0,8
tick,0x7fffe05afeb4,57590816,0,0x0,8
tick,0x7fffe05afeb4,57605730,0,0x0,8
tick,0x7fffe05afeb4,57621797,0,0x0,8
tick,0x7fffe05afeb4,57637902,0,0x0,8
tick,0x7fffe05afeb4,57652808,0,0x0,8
tick,0x7fffe05afeb4,57668748,0,0x0,8
tick,0x7fffe05afeb4,57684812,0,0x0,8
tick,0x7fffe05afeb4,57700837,0,0x0,8
tick,0x7fffe05afeb4,57716735,0,0x0,8
tick,0x7fffe05afeb4,57732815,0,0x0,8
tick,0x7fffe05afeb4,57748814,0,0x0,8
tick,0x7fffe05afeb4,57764806,0,0x0,8
tick,0x7fffe05afeb4,57780721,0,0x0,8
tick,0x7fffe05afeb4,57795725,0,0x0,8
tick,0x7fffe05afeb4,57810736,0,0x0,8
tick,0x7fffe05afeb4,57826817,0,0x0,8
tick,0x7fffe05afeb4,57842824,0,0x0,8
tick,0x7fffe05afeb4,57858837,0,0x0,8
tick,0x7fffe05afeb4,57874824,0,0x0,8
tick,0x7fffe05afeb4,57890782,0,0x0,8
tick,0x7fffe05afeb4,57906744,0,0x0,8
tick,0x7fffe05afeb4,57922807,0,0x0,8
tick,0x7fffe05afeb4,57938794,0,0x0,8
tick,0x7fffe05afeb4,57954802,0,0x0,8
tick,0x7fffe05afeb4,57970742,0,0x0,8
tick,0x7fffe05afeb4,57986808,0,0x0,8
tick,0x7fffe05afeb4,58002816,0,0x0,8
tick,0x7fffe05afeb4,58018733,0,0x0,8
tick,0x7fffe05afeb4,58033745,0,0x0,8
tick,0x7fffe05afeb4,58049827,0,0x0,8
tick,0x7fffe05afeb4,58065773,0,0x0,8
tick,0x7fffe05afeb4,58081806,0,0x0,8
tick,0x7fffe05afeb4,58097767,0,0x0,8
tick,0x7fffe05afeb4,58113800,0,0x0,8
tick,0x7fffe05afeb4,58128740,0,0x0,8
tick,0x7fffe05afeb4,58144734,0,0x0,8
tick,0x7fffe05afeb4,58159806,0,0x0,8
tick,0x7fffe05afeb4,58175744,0,0x0,8
tick,0x7fffe05afeb4,58191878,0,0x0,8
tick,0x7fffe05afeb4,58207727,0,0x0,8
tick,0x7fffe05afeb4,58223741,0,0x0,8
tick,0x7fffe05afeb4,58239749,0,0x0,8
tick,0x7fffe05afeb4,58255739,0,0x0,8
tick,0x7fffe05afeb4,58271755,0,0x0,8
tick,0x7fffe05afeb4,58286812,0,0x0,8
tick,0x7fffe05afeb4,58302747,0,0x0,8
tick,0x7fffe05afeb4,58318727,0,0x0,8
tick,0x7fffe05afeb4,58334792,0,0x0,8
tick,0x7fffe05afeb4,58350776,0,0x0,8
tick,0x7fffe05afeb4,58365850,0,0x0,8
tick,0x7fffe05afeb4,58381734,0,0x0,8
tick,0x7fffe05afeb4,58396766,0,0x0,8
tick,0x7fffe05afeb4,58411987,0,0x0,8
tick,0x7fffe05afeb4,58427826,0,0x0,8
tick,0x7fffe05afeb4,58443730,0,0x0,8
tick,0x7fffe05afeb4,58459768,0,0x0,8
tick,0x7fffe05afeb4,58475757,0,0x0,8
tick,0x7fffe05afeb4,58491760,0,0x0,8
tick,0x7fffe05afeb4,58507730,0,0x0,8
tick,0x7fffe05afeb4,58522768,0,0x0,8
tick,0x7fffe05afeb4,58538827,0,0x0,8
tick,0x7fffe05afeb4,58554811,0,0x0,8
tick,0x7fffe05afeb4,58570840,0,0x0,8
tick,0x7fffe05afeb4,58586799,0,0x0,8
tick,0x7fffe05afeb4,58603612,0,0x0,8
tick,0x7fffe05afeb4,58618865,0,0x0,8
tick,0x7fffe05afeb4,58635056,0,0x0,8
tick,0x7fffe05afeb4,58650746,0,0x0,8
tick,0x7fffe05afeb4,58666745,0,0x0,8
tick,0x7fffe05afeb4,58682829,0,0x0,8
tick,0x7fffe05afeb4,58698824,0,0x0,8
tick,0x7fffe05afeb4,58714734,0,0x0,8
tick,0x7fffe05afeb4,58729779,0,0x0,8
tick,0x7fffe05afeb4,58745828,0,0x0,8
tick,0x7fffe05afeb4,58761725,0,0x0,8
tick,0x7fffe05afeb4,58776808,0,0x0,8
tick,0x7fffe05afeb4,58792729,0,0x0,8
tick,0x7fffe05afeb4,58808783,0,0x0,8
tick,0x7fffe05afeb4,58824731,0,0x0,8
tick,0x7fffe05afeb4,58840771,0,0x0,8
tick,0x7fffe05afeb4,58856803,0,0x0,8
tick,0x7fffe05afeb4,58871939,0,0x0,8
tick,0x7fffe05afeb4,58886780,0,0x0,8
tick,0x7fffe05afeb4,58902806,0,0x0,8
tick,0x7fffe05afeb4,58918744,0,0x0,8
tick,0x7fffe05afeb4,58934742,0,0x0,8
tick,0x7fffe05afeb4,58949758,0,0x0,8
tick,0x7fffe05afeb4,58965836,0,0x0,8
tick,0x7fffe05afeb4,58980936,0,0x0,8
tick,0x7fffe05afeb4,58996783,0,0x0,8
tick,0x7fffe05afeb4,59012911,0,0x0,8
tick,0x7fffe05afeb4,59028765,0,0x0,8
tick,0x7fffe05afeb4,59044725,0,0x0,8
tick,0x7fffe05afeb4,59060740,0,0x0,8
tick,0x7fffe05afeb4,59075830,0,0x0,8
tick,0x7fffe05afeb4,59091734,0,0x0,8
tick,0x7fffe05afeb4,59107723,0,0x0,8
tick,0x7fffe05afeb4,59123720,0,0x0,8
tick,0x7fffe05afeb4,59139753,0,0x0,8
tick,0x7fffe05afeb4,59155804,0,0x0,8
tick,0x7fffe05afeb4,59171735,0,0x0,8
tick,0x7fffe05afeb4,59187740,0,0x0,8
tick,0x7fffe05afeb4,59203804,0,0x0,8
tick,0x7fffe05afeb4,59219747,0,0x0,8
tick,0x7fffe05afeb4,59234804,0,0x0,8
tick,0x7fffe05afeb4,59250761,0,0x0,8
tick,0x7fffe05afeb4,59266734,0,0x0,8
tick,0x7fffe05afeb4,59282753,0,0x0,8
tick,0x7fffe05afeb4,59297860,0,0x0,8
tick,0x7fffe05afeb4,59313787,0,0x0,8
tick,0x7fffe05afeb4,59329850,0,0x0,8
tick,0x7fffe05afeb4,59345807,0,0x0,8
tick,0x7fffe05afeb4,59361812,0,0x0,8
tick,0x7fffe05afeb4,59377824,0,0x0,8
tick,0x7fffe05afeb4,59393731,0,0x0,8
tick,0x7fffe05afeb4,59409887,0,0x0,8
tick,0x7fffe05afeb4,59425814,0,0x0,8
tick,0x7fffe05afeb4,59441743,0,0x0,8
tick,0x7fffe05afeb4,59457807,0,0x0,8
tick,0x7fffe05afeb4,59473832,0,0x0,8
tick,0x7fffe05afeb4,59489867,0,0x0,8
tick,0x7fffe05afeb4,59505782,0,0x0,8
tick,0x7fffe05afeb4,59521751,0,0x0,8
tick,0x7fffe05afeb4,59536863,0,0x0,8
tick,0x7fffe05afeb4,59551733,0,0x0,8
tick,0x7fffe05afeb4,59566745,0,0x0,8
tick,0x7fffe05afeb4,59582762,0,0x0,8
tick,0x7fffe05afeb4,59598739,0,0x0,8
tick,0x7fffe05afeb4,59614743,0,0x0,8
tick,0x7fffe05afeb4,59630766,0,0x0,8
tick,0x7fffe05afeb4,59645818,0,0x0,8
tick,0x7fffe05afeb4,59661743,0,0x0,8
tick,0x7fffe05afeb4,59677747,0,0x0,8
tick,0x7fffe05afeb4,59693824,0,0x0,8
tick,0x7fffe05afeb4,59709807,0,0x0,8
tick,0x7fffe05afeb4,59725772,0,0x0,8
tick,0x7fffe05afeb4,59741752,0,0x0,8
tick,0x7fffe05afeb4,59757918,0,0x0,8
tick,0x7fffe05afeb4,59772796,0,0x0,8
tick,0x7fffe05afeb4,59788859,0,0x0,8
tick,0x7fffe05afeb4,59804748,0,0x0,8
tick,0x7fffe05afeb4,59820748,0,0x0,8
tick,0x7fffe05afeb4,59836736,0,0x0,8
tick,0x7fffe05afeb4,59853037,0,0x0,8
tick,0x7fffe05afeb4,59868802,0,0x0,8
tick,0x7fffe05afeb4,59884740,0,0x0,8
tick,0x7fffe05afeb4,59900727,0,0x0,8
tick,0x7fffe05afeb4,59915749,0,0x0,8
tick,0x7fffe05afeb4,59931742,0,0x0,8
tick,0x7fffe05afeb4,59947744,0,0x0,8
tick,0x7fffe05afeb4,59963757,0,0x0,8
tick,0x7fffe05afeb4,59978736,0,0x0,8
tick,0x7fffe05afeb4,59994844,0,0x0,8
tick,0x7fffe05afeb4,60010814,0,0x0,8
tick,0x7fffe05afeb4,60026804,0,0x0,8
tick,0x7fffe05afeb4,60042816,0,0x0,8
tick,0x7fffe05afeb4,60058824,0,0x0,8
tick,0x7fffe05afeb4,60074767,0,0x0,8
tick,0x7fffe05afeb4,60090786,0,0x0,8
tick,0x7fffe05afeb4,60106938,0,0x0,8
tick,0x7fffe05afeb4,60122780,0,0x0,8
tick,0x7fffe05afeb4,60138861,0,0x0,8
tick,0x7fffe05afeb4,60154884,0,0x0,8
tick,0x7fffe05afeb4,60170830,0,0x0,8
tick,0x7fffe05afeb4,60186749,0,0x0,8
tick,0x7fffe05afeb4,60202740,0,0x0,8
tick,0x7fffe05afeb4,60218793,0,0x0,8
tick,0x7fffe05afeb4,60234828,0,0x0,8
tick,0x7fffe05afeb4,60250765,0,0x0,8
tick,0x7fffe05afeb4,60266749,0,0x0,8
tick,0x7fffe05afeb4,60282787,0,0x0,8
tick,0x7fffe05afeb4,60298766,0,0x0,8
tick,0x7fffe05afeb4,60314737,0,0x0,8
tick,0x7fffe05afeb4,60330734,0,0x0,8
tick,0x7fffe05afeb4,60345793,0,0x0,8
tick,0x7fffe05afeb4,60361815,0,0x0,8
tick,0x7fffe05afeb4,60377811,0,0x0,8
tick,0x7fffe05afeb4,60393815,0,0x0,8
tick,0x7fffe05afeb4,60409759,0,0x0,8
tick,0x7fffe05afeb4,60424732,0,0x0,8
tick,0x7fffe05afeb4,60440752,0,0x0,8
tick,0x7fffe05afeb4,60456819,0,0x0,8
tick,0x7fffe05afeb4,60472736,0,0x0,8
tick,0x7fffe05afeb4,60488820,0,0x0,8
tick,0x7fffe05afeb4,60504815,0,0x0,8
tick,0x7fffe05afeb4,60520814,0,0x0,8
tick,0x7fffe05afeb4,60536741,0,0x0,8
tick,0x7fffe05afeb4,60552756,0,0x0,8
tick,0x7fffe05afeb4,60568839,0,0x0,8
tick,0x7fffe05afeb4,60584815,0,0x0,8
tick,0x7fffe05afeb4,60600726,0,0x0,8
tick,0x7fffe05afeb4,60616814,0,0x0,8
tick,0x7fffe05afeb4,60632895,0,0x0,8
tick,0x7fffe05afeb4,60648826,0,0x0,8
tick,0x7fffe05afeb4,60663751,0,0x0,8
tick,0x7fffe05afeb4,60679750,0,0x0,8
tick,0x7fffe05afeb4,60695754,0,0x0,8
tick,0x7fffe05afeb4,60711728,0,0x0,8
tick,0x7fffe05afeb4,60726821,0,0x0,8
tick,0x7fffe05afeb4,60742819,0,0x0,8
tick,0x7fffe05afeb4,60758742,0,0x0,8
tick,0x7fffe05afeb4,60774740,0,0x0,8
tick,0x7fffe05afeb4,60790744,0,0x0,8
tick,0x7fffe05afeb4,60806815,0,0x0,8
tick,0x7fffe05afeb4,60822725,0,0x0,8
tick,0x7fffe05afeb4,60838820,0,0x0,8
tick,0x7fffe05afeb4,60854724,0,0x0,8
tick,0x7fffe05afeb4,60870806,0,0x0,8
tick,0x7fffe05afeb4,60886738,0,0x0,8
tick,0x7fffe05afeb4,60902721,0,0x0,8
tick,0x7fffe05afeb4,60918813,0,0x0,8
tick,0x7fffe05afeb4,60934979,0,0x0,8
tick,0x7fffe05afeb4,60950741,0,0x0,8
tick,0x7fffe05afeb4,60966885,0,0x0,8
tick,0x7fffe05afeb4,60982817,0,0x0,8
tick,0x7fffe05afeb4,60997779,0,0x0,8
tick,0x7fffe05afeb4,61013749,0,0x0,8
tick,0x7fffe05afeb4,61029746,0,0x0,8
tick,0x7fffe05afeb4,61045828,0,0x0,8
tick,0x7fffe05afeb4,61061815,0,0x0,8
tick,0x7fffe05afeb4,61077883,0,0x0,8
tick,0x7fffe05afeb4,61093777,0,0x0,8
tick,0x7fffe05afeb4,61109840,0,0x0,8
tick,0x7fffe05afeb4,61125731,0,0x0,8
tick,0x7fffe05afeb4,61141727,0,0x0,8
tick,0x7fffe05afeb4,61157739,0,0x0,8
tick,0x7fffe05afeb4,61173822,0,0x0,8
tick,0x7fffe05afeb4,61189798,0,0x0,8
tick,0x7fffe05afeb4,61205820,0,0x0,8
tick,0x7fffe05afeb4,61221901,0,0x0,8
tick,0x7fffe05afeb4,61237807,0,0x0,8
tick,0x7fffe05afeb4,61253735,0,0x0,8
tick,0x7fffe05afeb4,61269776,0,0x0,8
tick,0x7fffe05afeb4,61285781,0,0x0,8
tick,0x7fffe05afeb4,61301886,0,0x0,8
tick,0x7fffe05afeb4,61317826,0,0x0,8
tick,0x7fffe05afeb4,61333750,0,0x0,8
tick,0x7fffe05afeb4,61349804,0,0x0,8
tick,0x7fffe05afeb4,61365751,0,0x0,8
tick,0x7fffe05afeb4,61381739,0,0x0,8
tick,0x7fffe05afeb4,61397806,0,0x0,8
tick,0x7fffe05afeb4,61413820,0,0x0,8
tick,0x7fffe05afeb4,61429843,0,0x0,8
tick,0x7fffe05afeb4,61445763,0,0x0,8
tick,0x7fffe05afeb4,61460808,0,0x0,8
tick,0x7fffe05afeb4,61476746,0,0x0,8
tick,0x7fffe05afeb4,61492761,0,0x0,8
tick,0x7fffe05afeb4,61508762,0,0x0,8
tick,0x7fffe05afeb4,61524881,0,0x0,8
tick,0x7fffe05afeb4,61540740,0,0x0,8
tick,0x7fffe05afeb4,61556815,0,0x0,8
tick,0x7fffe05afeb4,61571753,0,0x0,8
tick,0x7fffe05afeb4,61586726,0,0x0,8
tick,0x7fffe05afeb4,61602743,0,0x0,8
tick,0x7fffe05afeb4,61618735,0,0x0,8
tick,0x7fffe05afeb4,61633892,0,0x0,8
tick,0x7fffe05afeb4,61649839,0,0x0,8
tick,0x7fffe05afeb4,61665766,0,0x0,8
tick,0x7fffe05afeb4,61681822,0,0x0,8
tick,0x7fffe05afeb4,61697745,0,0x0,8
tick,0x7fffe05afeb4,61713748,0,0x0,8
tick,0x7fffe05afeb4,61729769,0,0x0,8
tick,0x7fffe05afeb4,61745822,0,0x0,8
tick,0x7fffe05afeb4,61760737,0,0x0,8
tick,0x7fffe05afeb4,61776818,0,0x0,8
tick,0x7fffe05afeb4,61792739,0,0x0,8
tick,0x7fffe05afeb4,61808750,0,0x0,8
tick,0x7fffe05afeb4,61824749,0,0x0,8
tick,0x7fffe05afeb4,61840743,0,0x0,8
tick,0x7fffe05afeb4,61856841,0,0x0,8
tick,0x7fffe05afeb4,61872734,0,0x0,8
tick,0x7fffe05afeb4,61888811,0,0x0,8
tick,0x7fffe05afeb4,61904809,0,0x0,8
tick,0x7fffe05afeb4,61920746,0,0x0,8
tick,0x7fffe05afeb4,61936818,0,0x0,8
tick,0x7fffe05afeb4,61952733,0,0x0,8
tick,0x7fffe05afeb4,61968779,0,0x0,8
tick,0x7fffe05afeb4,61984810,0,0x0,8
tick,0x7fffe05afeb4,62000815,0,0x0,8
tick,0x7fffe05afeb4,62016730,0,0x0,8
tick,0x7fffe05afeb4,62032841,0,0x0,8
tick,0x7fffe05afeb4,62047830,0,0x0,8
tick,0x7fffe05afeb4,62063792,0,0x0,8
tick,0x7fffe05afeb4,62079843,0,0x0,8
tick,0x7fffe05afeb4,62095738,0,0x0,8
tick,0x7fffe05afeb4,62111723,0,0x0,8
tick,0x7fffe05afeb4,62127719,0,0x0,8
tick,0x7fffe05afeb4,62143731,0,0x0,8
tick,0x7fffe05afeb4,62159767,0,0x0,8
tick,0x7fffe05afeb4,62175726,0,0x0,8
tick,0x7fffe05afeb4,62191746,0,0x0,8
tick,0x7fffe05afeb4,62207739,0,0x0,8
tick,0x7fffe05afeb4,62223766,0,0x0,8
tick,0x7fffe05afeb4,62238815,0,0x0,8
tick,0x7fffe05afeb4,62254737,0,0x0,8
tick,0x7fffe05afeb4,62270740,0,0x0,8
tick,0x7fffe05afeb4,62286773,0,0x0,8
tick,0x7fffe05afeb4,62302764,0,0x0,8
tick,0x7fffe05afeb4,62317791,0,0x0,8
tick,0x7fffe05afeb4,62333764,0,0x0,8
tick,0x7fffe05afeb4,62349824,0,0x0,8
tick,0x7fffe05afeb4,62365763,0,0x0,8
tick,0x7fffe05afeb4,62381895,0,0x0,8
tick,0x7fffe05afeb4,62397827,0,0x0,8
tick,0x7fffe05afeb4,62413755,0,0x0,8
tick,0x7fffe05afeb4,62428758,0,0x0,8
tick,0x7fffe05afeb4,62444833,0,0x0,8
tick,0x7fffe05afeb4,62460828,0,0x0,8
tick,0x7fffe05afeb4,62476738,0,0x0,8
tick,0x7fffe05afeb4,62492818,0,0x0,8
tick,0x7fffe05afeb4,62508745,0,0x0,8
tick,0x7fffe05afeb4,62524823,0,0x0,8
tick,0x7fffe05afeb4,62539881,0,0x0,8
tick,0x7fffe05afeb4,62555733,0,0x0,8
tick,0x7fffe05afeb4,62570732,0,0x0,8
tick,0x7fffe05afeb4,62586808,0,0x0,8
tick,0x7fffe05afeb4,62602727,0,0x0,8
tick,0x7fffe05afeb4,62618737,0,0x0,8
tick,0x7fffe05afeb4,62634735,0,0x0,8
tick,0x7fffe05afeb4,62650755,0,0x0,8
tick,0x7fffe05afeb4,62666741,0,0x0,8
tick,0x7fffe05afeb4,62682741,0,0x0,8
tick,0x7fffe05afeb4,62698741,0,0x0,8
tick,0x7fffe05afeb4,62714753,0,0x0,8
tick,0x7fffe05afeb4,62730743,0,0x0,8
tick,0x7fffe05afeb4,62745832,0,0x0,8
tick,0x7fffe05afeb4,62761736,0,0x0,8
tick,0x7fffe05afeb4,62777738,0,0x0,8
tick,0x7fffe05afeb4,62793743,0,0x0,8
tick,0x7fffe05afeb4,62809815,0,0x0,8
tick,0x7fffe05afeb4,62825732,0,0x0,8
tick,0x7fffe05afeb4,62841771,0,0x0,8
tick,0x7fffe05afeb4,62857822,0,0x0,8
tick,0x7fffe05afeb4,62873730,0,0x0,8
tick,0x7fffe05afeb4,62889749,0,0x0,8
tick,0x7fffe05afeb4,62905808,0,0x0,8
tick,0x7fffe05afeb4,62921812,0,0x0,8
tick,0x7fffe05afeb4,62937828,0,0x0,8
tick,0x7fffe05afeb4,62953749,0,0x0,8
tick,0x7fffe05afeb4,62968860,0,0x0,8
tick,0x7fffe05afeb4,62984741,0,0x0,8
tick,0x7fffe05afeb4,63000747,0,0x0,8
tick,0x7fffe05afeb4,63016751,0,0x0,8
tick,0x7fffe05afeb4,63032811,0,0x0,8
tick,0x7fffe05afeb4,63047755,0,0x0,8
tick,0x7fffe05afeb4,63063724,0,0x0,8
tick,0x7fffe05afeb4,63079898,0,0x0,8
tick,0x7fffe05afeb4,63094756,0,0x0,8
tick,0x7fffe05afeb4,63109763,0,0x0,8
tick,0x7fffe05afeb4,63125730,0,0x0,8
tick,0x7fffe05afeb4,63141732,0,0x0,8
tick,0x7fffe05afeb4,63156829,0,0x0,8
tick,0x7fffe05afeb4,63172816,0,0x0,8
tick,0x7fffe05afeb4,63188779,0,0x0,8
tick,0x7fffe05afeb4,63204823,0,0x0,8
tick,0x7fffe05afeb4,63220773,0,0x0,8
tick,0x7fffe05afeb4,63236770,0,0x0,8
tick,0x7fffe05afeb4,63252878,0,0x0,8
tick,0x7fffe05afeb4,63268807,0,0x0,8
tick,0x7fffe05afeb4,63284751,0,0x0,8
tick,0x7fffe05afeb4,63300993,0,0x0,8
tick,0x7fffe05afeb4,63316838,0,0x0,8
tick,0x7fffe05afeb4,63332789,0,0x0,8
tick,0x7fffe05afeb4,63348729,0,0x0,8
tick,0x7fffe05afeb4,63364754,0,0x0,8
tick,0x7fffe05afeb4,63379803,0,0x0,8
tick,0x7fffe05afeb4,63395741,0,0x0,8
tick,0x7fffe05afeb4,63411734,0,0x0,8
tick,0x7fffe05afeb4,63427724,0,0x0,8
tick,0x7fffe05afeb4,63442779,0,0x0,8
tick,0x7fffe05afeb4,63457740,0,0x0,8
tick,0x7fffe05afeb4,63473746,0,0x0,8
tick,0x7fffe05afeb4,63489756,0,0x0,8
tick,0x7fffe05afeb4,63504740,0,0x0,8
tick,0x7fffe05afeb4,63520758,0,0x0,8
tick,0x7fffe05afeb4,63536823,0,0x0,8
tick,0x7fffe05afeb4,63552748,0,0x0,8
tick,0x7fffe05afeb4,63568771,0,0x0,8
tick,0x7fffe05afeb4,63583752,0,0x0,8
tick,0x7fffe05afeb4,63599762,0,0x0,8
tick,0x7fffe05afeb4,63615733,0,0x0,8
tick,0x7fffe05afeb4,63631745,0,0x0,8
tick,0x7fffe05afeb4,63647735,0,0x0,8
tick,0x7fffe05afeb4,63663762,0,0x0,8
tick,0x7fffe05afeb4,63679766,0,0x0,8
tick,0x7fffe05afeb4,63695745,0,0x0,8
tick,0x7fffe05afeb4,63711756,0,0x0,8
tick,0x7fffe05afeb4,63727745,0,0x0,8
tick,0x7fffe05afeb4,63743750,0,0x0,8
tick,0x7fffe05afeb4,63759784,0,0x0,8
tick,0x7fffe05afeb4,63775732,0,0x0,8
tick,0x7fffe05afeb4,63791737,0,0x0,8
tick,0x7fffe05afeb4,63807728,0,0x0,8
tick,0x7fffe05afeb4,63823749,0,0x0,8
tick,0x7fffe05afeb4,63839774,0,0x0,8
tick,0x7fffe05afeb4,63855765,0,0x0,8
tick,0x7fffe05afeb4,63871731,0,0x0,8
tick,0x7fffe05afeb4,63886804,0,0x0,8
tick,0x7fffe05afeb4,63902817,0,0x0,8
tick,0x7fffe05afeb4,63917892,0,0x0,8
tick,0x7fffe05afeb4,63933793,0,0x0,8
tick,0x7fffe05afeb4,63949781,0,0x0,8
tick,0x7fffe05afeb4,63965860,0,0x0,8
tick,0x7fffe05afeb4,63981941,0,0x0,8
tick,0x7fffe05afeb4,63997724,0,0x0,8
tick,0x7fffe05afeb4,64013811,0,0x0,8
tick,0x7fffe05afeb4,64029847,0,0x0,8
tick,0x7fffe05afeb4,64045748,0,0x0,8
tick,0x7fffe05afeb4,64061739,0,0x0,8
tick,0x7fffe05afeb4,64077732,0,0x0,8
tick,0x7fffe05afeb4,64093828,0,0x0,8
tick,0x7fffe05afeb4,64109838,0,0x0,8
tick,0x7fffe05afeb4,64125761,0,0x0,8
tick,0x7fffe05afeb4,64141736,0,0x0,8
tick,0x7fffe05afeb4,64156845,0,0x0,8
tick,0x7fffe05afeb4,64172794,0,0x0,8
tick,0x7fffe05afeb4,64187763,0,0x0,8
tick,0x7fffe05afeb4,64203758,0,0x0,8
tick,0x7fffe05afeb4,64219776,0,0x0,8
tick,0x7fffe05afeb4,64234831,0,0x0,8
tick,0x7fffe05afeb4,64250836,0,0x0,8
tick,0x7fffe05afeb4,64266761,0,0x0,8
tick,0x7fffe05afeb4,64282772,0,0x0,8
tick,0x7fffe05afeb4,64298758,0,0x0,8
tick,0x7fffe05afeb4,64314743,0,0x0,8
tick,0x7fffe05afeb4,64330749,0,0x0,8
tick,0x7fffe05afeb4,64345818,0,0x0,8
tick,0x7fffe05afeb4,64361805,0,0x0,8
tick,0x7fffe05afeb4,64377811,0,0x0,8
tick,0x7fffe05afeb4,64393732,0,0x0,8
tick,0x7fffe05afeb4,64409816,0,0x0,8
tick,0x7fffe05afeb4,64425727,0,0x0,8
tick,0x7fffe05afeb4,64441824,0,0x0,8
tick,0x7fffe05afeb4,64456735,0,0x0,8
tick,0x7fffe05afeb4,64472739,0,0x0,8
tick,0x7fffe05afeb4,64488744,0,0x0,8
tick,0x7fffe05afeb4,64504765,0,0x0,8
tick,0x7fffe05afeb4,64520863,0,0x0,8
tick,0x7fffe05afeb4,64536735,0,0x0,8
tick,0x7fffe05afeb4,64552781,0,0x0,8
tick,0x7fffe05afeb4,64568771,0,0x0,8
tick,0x7fffe05afeb4,64584770,0,0x0,8
tick,0x7fffe05afeb4,64600763,0,0x0,8
tick,0x7fffe05afeb4,64616746,0,0x0,8
tick,0x7fffe05afeb4,64632792,0,0x0,8
tick,0x7fffe05afeb4,64648747,0,0x0,8
tick,0x7fffe05afeb4,64664752,0,0x0,8
tick,0x7fffe05afeb4,64680753,0,0x0,8
tick,0x7fffe05afeb4,64695738,0,0x0,8
tick,0x7fffe05afeb4,64711725,0,0x0,8
tick,0x7fffe05afeb4,64726825,0,0x0,8
tick,0x7fffe05afeb4,64742762,0,0x0,8
tick,0x7fffe05afeb4,64758930,0,0x0,8
tick,0x7fffe05afeb4,64774848,0,0x0,8
tick,0x7fffe05afeb4,64790731,0,0x0,8
tick,0x7fffe05afeb4,64806811,0,0x0,8
tick,0x7fffe05afeb4,64822808,0,0x0,8
tick,0x7fffe05afeb4,64838826,0,0x0,8
tick,0x7fffe05afeb4,64854739,0,0x0,8
tick,0x7fffe05afeb4,64870819,0,0x0,8
tick,0x7fffe05afeb4,64886738,0,0x0,8
tick,0x7fffe05afeb4,64902727,0,0x0,8
tick,0x7fffe05afeb4,64918749,0,0x0,8
tick,0x7fffe05afeb4,64934948,0,0x0,8
tick,0x7fffe05afeb4,64950731,0,0x0,8
tick,0x7fffe05afeb4,64966835,0,0x0,8
tick,0x7fffe05afeb4,64982820,0,0x0,8
tick,0x7fffe05afeb4,64998747,0,0x0,8
tick,0x7fffe05afeb4,65014803,0,0x0,8
tick,0x7fffe05afeb4,65030767,0,0x0,8
tick,0x7fffe05afeb4,65045812,0,0x0,8
tick,0x7fffe05afeb4,65061854,0,0x0,8
tick,0x7fffe05afeb4,65077876,0,0x0,8
tick,0x7fffe05afeb4,65093816,0,0x0,8
tick,0x7fffe05afeb4,65109794,0,0x0,8
tick,0x7fffe05afeb4,65125729,0,0x0,8
tick,0x7fffe05afeb4,65141726,0,0x0,8
tick,0x7fffe05afeb4,65157820,0,0x0,8
tick,0x7fffe05afeb4,65173826,0,0x0,8
tick,0x7fffe05afeb4,65189869,0,0x0,8
tick,0x7fffe05afeb4,65205819,0,0x0,8
tick,0x7fffe05afeb4,65221774,0,0x0,8
tick,0x7fffe05afeb4,65237742,0,0x0,8
tick,0x7fffe05afeb4,65253763,0,0x0,8
tick,0x7fffe05afeb4,65269932,0,0x0,8
tick,0x7fffe05afeb4,65285735,0,0x0,8
tick,0x7fffe05afeb4,65301816,0,0x0,8
tick,0x7fffe05afeb4,65316834,0,0x0,8
tick,0x7fffe05afeb4,65332811,0,0x0,8
tick,0x7fffe05afeb4,65348749,0,0x0,8
tick,0x7fffe05afeb4,65364772,0,0x0,8
tick,0x7fffe05afeb4,65379771,0,0x0,8
tick,0x7fffe05afeb4,65395741,0,0x0,8
tick,0x7fffe05afeb4,65411739,0,0x0,8
tick,0x7fffe05afeb4,65426725,0,0x0,8
tick,0x7fffe05afeb4,65441755,0,0x0,8
tick,0x7fffe05afeb4,65457743,0,0x0,8
tick,0x7fffe05afeb4,65473818,0,0x0,8
tick,0x7fffe05afeb4,65489834,0,0x0,8
tick,0x7fffe05afeb4,65504749,0,0x0,8
tick,0x7fffe05afeb4,65520751,0,0x0,8
tick,0x7fffe05afeb4,65536898,0,0x0,8
tick,0x7fffe05afeb4,65552761,0,0x0,8
tick,0x7fffe05afeb4,65567745,0,0x0,8
tick,0x7fffe05afeb4,65583756,0,0x0,8
tick,0x7fffe05afeb4,65599828,0,0x0,8
tick,0x7fffe05afeb4,65615748,0,0x0,8
tick,0x7fffe05afeb4,65631771,0,0x0,8
tick,0x7fffe05afeb4,65647760,0,0x0,8
tick,0x7fffe05afeb4,65662728,0,0x0,8
tick,0x7fffe05afeb4,65678735,0,0x0,8
tick,0x7fffe05afeb4,65693778,0,0x0,8
tick,0x7fffe05afeb4,65709863,0,0x0,8
tick,0x7fffe05afeb4,65725746,0,0x0,8
tick,0x7fffe05afeb4,65741763,0,0x0,8
tick,0x7fffe05afeb4,65757750,0,0x0,8
tick,0x7fffe05afeb4,65773727,0,0x0,8
tick,0x7fffe05afeb4,65790121,0,0x0,8
tick,0x7fffe05afeb4,65804717,0,0x0,8
tick,0x7fffe05afeb4,65820760,0,0x0,8
tick,0x7fffe05afeb4,65836753,0,0x0,8
tick,0x7fffe05afeb4,65853278,0,0x0,8
tick,0x7fffe05afeb4,65867767,0,0x0,8
tick,0x7fffe05afeb4,65883757,0,0x0,8
tick,0x7fffe05afeb4,65899753,0,0x0,8
tick,0x7fffe05afeb4,65915861,0,0x0,8
tick,0x7fffe05afeb4,65931758,0,0x0,8
tick,0x7fffe05afeb4,65947755,0,0x0,8
tick,0x7fffe05afeb4,65963732,0,0x0,8
tick,0x7fffe05afeb4,65979862,0,0x0,8
tick,0x7fffe05afeb4,65995750,0,0x0,8
tick,0x7fffe05afeb4,66010732,0,0x0,8
tick,0x7fffe05afeb4,66025830,0,0x0,8
tick,0x7fffe05afeb4,66041739,0,0x0,8
tick,0x7fffe05afeb4,66056782,0,0x0,8
tick,0x7fffe05afeb4,66072785,0,0x0,8
tick,0x7fffe05afeb4,66088928,0,0x0,8
tick,0x7fffe05afeb4,66103770,0,0x0,8
tick,0x7fffe05afeb4,66119776,0,0x0,8
tick,0x7fffe05afeb4,66134994,0,0x0,8
tick,0x7fffe05afeb4,66150711,0,0x0,8
tick,0x7fffe05afeb4,66165884,0,0x0,8
tick,0x7fffe05afeb4,66181831,0,0x0,8
tick,0x7fffe05afeb4,66197741,0,0x0,8
tick,0x7fffe05afeb4,66213775,0,0x0,8
tick,0x7fffe05afeb4,66229876,0,0x0,8
tick,0x7fffe05afeb4,66245794,0,0x0,8
tick,0x7fffe05afeb4,66261763,0,0x0,8
tick,0x7fffe05afeb4,66276839,0,0x0,8
tick,0x7fffe05afeb4,66292886,0,0x0,8
tick,0x7fffe05afeb4,66308820,0,0x0,8
tick,0x7fffe05afeb4,66324768,0,0x0,8
tick,0x7fffe05afeb4,66340753,0,0x0,8
tick,0x7fffe05afeb4,66355727,0,0x0,8
tick,0x7fffe05afeb4,66371742,0,0x0,8
tick,0x7fffe05afeb4,66387766,0,0x0,8
tick,0x7fffe05afeb4,66403761,0,0x0,8
tick,0x7fffe05afeb4,66419785,0,0x0,8
tick,0x7fffe05afeb4,66435810,0,0x0,8
tick,0x7fffe05afeb4,66451871,0,0x0,8
tick,0x7fffe05afeb4,66467749,0,0x0,8
tick,0x7fffe05afeb4,66483741,0,0x0,8
tick,0x7fffe05afeb4,66499746,0,0x0,8
tick,0x7fffe05afeb4,66515748,0,0x0,8
tick,0x7fffe05afeb4,66531742,0,0x0,8
tick,0x7fffe05afeb4,66547752,0,0x0,8
tick,0x7fffe05afeb4,66563749,0,0x0,8
tick,0x7fffe05afeb4,66578755,0,0x0,8
tick,0x7fffe05afeb4,66594747,0,0x0,8
tick,0x7fffe05afeb4,66612021,0,0x0,8
tick,0x7fffe05afeb4,66626744,0,0x0,8
tick,0x7fffe05afeb4,66641871,0,0x0,8
tick,0x7fffe05afeb4,66656763,0,0x0,8
tick,0x7fffe05afeb4,66672753,0,0x0,8
tick,0x7fffe05afeb4,66688776,0,0x0,8
tick,0x7fffe05afeb4,66704858,0,0x0,8
tick,0x7fffe05afeb4,66720802,0,0x0,8
tick,0x7fffe05afeb4,66736738,0,0x0,8
tick,0x7fffe05afeb4,66752785,0,0x0,8
tick,0x7fffe05afeb4,66768745,0,0x0,8
tick,0x7fffe05afeb4,66784834,0,0x0,8
tick,0x7fffe05afeb4,66800760,0,0x0,8
tick,0x7fffe05afeb4,66816724,0,0x0,8
tick,0x7fffe05afeb4,66831744,0,0x0,8
tick,0x7fffe05afeb4,66846801,0,0x0,8
tick,0x7fffe05afeb4,66862753,0,0x0,8
tick,0x7fffe05afeb4,66878729,0,0x0,8
tick,0x7fffe05afeb4,66894820,0,0x0,8
tick,0x7fffe05afeb4,66910733,0,0x0,8
tick,0x7fffe05afeb4,66926867,0,0x0,8
tick,0x7fffe05afeb4,66942738,0,0x0,8
tick,0x7fffe05afeb4,66958836,0,0x0,8
tick,0x7fffe05afeb4,66974734,0,0x0,8
tick,0x7fffe05afeb4,66990773,0,0x0,8
tick,0x7fffe05afeb4,67005809,0,0x0,8
tick,0x7fffe05afeb4,67021750,0,0x0,8
tick,0x7fffe05afeb4,67036805,0,0x0,8
tick,0x7fffe05afeb4,67052739,0,0x0,8
tick,0x7fffe05afeb4,67068870,0,0x0,8
tick,0x7fffe05afeb4,67084785,0,0x0,8
tick,0x7fffe05afeb4,67100729,0,0x0,8
tick,0x7fffe05afeb4,67116776,0,0x0,8
tick,0x7fffe05afeb4,67132784,0,0x0,8
tick,0x7fffe05afeb4,67148838,0,0x0,8
tick,0x7fffe05afeb4,67164905,0,0x0,8
tick,0x7fffe05afeb4,67179803,0,0x0,8
tick,0x7fffe05afeb4,67194743,0,0x0,8
tick,0x7fffe05afeb4,67210750,0,0x0,8
tick,0x7fffe05afeb4,67225761,0,0x0,8
tick,0x7fffe05afeb4,67241820,0,0x0,8
tick,0x7fffe05afeb4,67257817,0,0x0,8
tick,0x7fffe05afeb4,67273732,0,0x0,8
tick,0x7fffe05afeb4,67290932,0,0x0,8
tick,0x7fffe05afeb4,67305736,0,0x0,8
tick,0x7fffe05afeb4,67321168,0,0x0,8
tick,0x7fffe05afeb4,67336769,0,0x0,8
tick,0x7fffe05afeb4,67353583,0,0x0,8
tick,0x7fffe05afeb4,67367751,0,0x0,8
tick,0x7fffe05afeb4,67383912,0,0x0,8
tick,0x7fffe05afeb4,67399797,0,0x0,8
tick,0x7fffe05afeb4,67415887,0,0x0,8
tick,0x7fffe05afeb4,67430825,0,0x0,8
tick,0x7fffe05afeb4,67446987,0,0x0,8
tick,0x7fffe05afeb4,67462827,0,0x0,8
tick,0x7fffe05afeb4,67478795,0,0x0,8
tick,0x7fffe05afeb4,67494782,0,0x0,8
tick,0x7fffe05afeb4,67510758,0,0x0,8
tick,0x7fffe05afeb4,67526790,0,0x0,8
tick,0x7fffe05afeb4,67542810,0,0x0,8
tick,0x7fffe05afeb4,67558830,0,0x0,8
tick,0x7fffe05afeb4,67574738,0,0x0,8
tick,0x7fffe05afeb4,67590775,0,0x0,8
tick,0x7fffe05afeb4,67606997,0,0x0,8
tick,0x7fffe05afeb4,67621747,0,0x0,8
tick,0x7fffe05afeb4,67637732,0,0x0,8
tick,0x7fffe05afeb4,67653836,0,0x0,8
tick,0x7fffe05afeb4,67669891,0,0x0,8
tick,0x7fffe05afeb4,67685751,0,0x0,8
tick,0x7fffe05afeb4,67701817,0,0x0,8
tick,0x7fffe05afeb4,67717823,0,0x0,8
tick,0x7fffe05afeb4,67733745,0,0x0,8
tick,0x7fffe05afeb4,67749744,0,0x0,8
tick,0x7fffe05afeb4,67765823,0,0x0,8
tick,0x7fffe05afeb4,67781769,0,0x0,8
tick,0x7fffe05afeb4,67797733,0,0x0,8
tick,0x7fffe05afeb4,67813729,0,0x0,8
tick,0x7fffe05afeb4,67829860,0,0x0,8
tick,0x7fffe05afeb4,67845823,0,0x0,8
tick,0x7fffe05afeb4,67861876,0,0x0,8
tick,0x7fffe05afeb4,67877785,0,0x0,8
tick,0x7fffe05afeb4,67893869,0,0x0,8
tick,0x7fffe05afeb4,67909752,0,0x0,8
tick,0x7fffe05afeb4,67925805,0,0x0,8
tick,0x7fffe05afeb4,67941735,0,0x0,8
tick,0x7fffe05afeb4,67957809,0,0x0,8
tick,0x7fffe05afeb4,67973744,0,0x0,8
tick,0x7fffe05afeb4,67989753,0,0x0,8
tick,0x7fffe05afeb4,68005810,0,0x0,8
tick,0x7fffe05afeb4,68021738,0,0x0,8
tick,0x7fffe05afeb4,68037812,0,0x0,8
tick,0x7fffe05afeb4,68053725,0,0x0,8
tick,0x7fffe05afeb4,68069910,0,0x0,8
tick,0x7fffe05afeb4,68085768,0,0x0,8
tick,0x7fffe05afeb4,68101733,0,0x0,8
tick,0x7fffe05afeb4,68117932,0,0x0,8
tick,0x7fffe05afeb4,68133887,0,0x0,8
tick,0x7fffe05afeb4,68149812,0,0x0,8
tick,0x7fffe05afeb4,68164975,0,0x0,8
tick,0x7fffe05afeb4,68179963,0,0x0,8
tick,0x7fffe05afeb4,68194744,0,0x0,8
tick,0x7fffe05afeb4,68210726,0,0x0,8
tick,0x7fffe05afeb4,68226834,0,0x0,8
tick,0x7fffe05afeb4,68242824,0,0x0,8
tick,0x7fffe05afeb4,68258806,0,0x0,8
tick,0x7fffe05afeb4,68274822,0,0x0,8
tick,0x7fffe05afeb4,68290750,0,0x0,8
tick,0x7fffe05afeb4,68305731,0,0x0,8
tick,0x7fffe05afeb4,68321725,0,0x0,8
tick,0x7fffe05afeb4,68336758,0,0x0,8
tick,0x7fffe05afeb4,68351741,0,0x0,8
tick,0x7fffe05afeb4,68366827,0,0x0,8
tick,0x7fffe05afeb4,68381812,0,0x0,8
tick,0x7fffe05afeb4,68397912,0,0x0,8
tick,0x7fffe05afeb4,68413779,0,0x0,8
tick,0x7fffe05afeb4,68429740,0,0x0,8
tick,0x7fffe05afeb4,68445875,0,0x0,8
tick,0x7fffe05afeb4,68461811,0,0x0,8
tick,0x7fffe05afeb4,68476831,0,0x0,8
tick,0x7fffe05afeb4,68492818,0,0x0,8
tick,0x7fffe05afeb4,68507756,0,0x0,8
tick,0x7fffe05afeb4,68523729,0,0x0,8
tick,0x7fffe05afeb4,68539934,0,0x0,8
tick,0x7fffe05afeb4,68555739,0,0x0,8
tick,0x7fffe05afeb4,68571756,0,0x0,8
tick,0x7fffe05afeb4,68587738,0,0x0,8
tick,0x7fffe05afeb4,68603854,0,0x0,8
tick,0x7fffe05afeb4,68619802,0,0x0,8
tick,0x7fffe05afeb4,68634756,0,0x0,8
tick,0x7fffe05afeb4,68650738,0,0x0,8
tick,0x7fffe05afeb4,68666747,0,0x0,8
tick,0x7fffe05afeb4,68682789,0,0x0,8
tick,0x7fffe05afeb4,68698809,0,0x0,8
tick,0x7fffe05afeb4,68714785,0,0x0,8
tick,0x7fffe05afeb4,68730766,0,0x0,8
tick,0x7fffe05afeb4,68745803,0,0x0,8
tick,0x7fffe05afeb4,68760742,0,0x0,8
tick,0x7fffe05afeb4,68776733,0,0x0,8
tick,0x7fffe05afeb4,68792747,0,0x0,8
tick,0x7fffe05afeb4,68808735,0,0x0,8
tick,0x7fffe05afeb4,68824755,0,0x0,8
tick,0x7fffe05afeb4,68840755,0,0x0,8
tick,0x7fffe05afeb4,68856812,0,0x0,8
tick,0x7fffe05afeb4,68872891,0,0x0,8
tick,0x7fffe05afeb4,68888737,0,0x0,8
tick,0x7fffe05afeb4,68904721,0,0x0,8
tick,0x7fffe05afeb4,68920734,0,0x0,8
tick,0x7fffe05afeb4,68936728,0,0x0,8
tick,0x7fffe05afeb4,68952720,0,0x0,8
tick,0x7fffe05afeb4,68968814,0,0x0,8
tick,0x7fffe05afeb4,68984815,0,0x0,8
tick,0x7fffe05afeb4,69000750,0,0x0,8
tick,0x7fffe05afeb4,69016732,0,0x0,8
tick,0x7fffe05afeb4,69032781,0,0x0,8
tick,0x7fffe05afeb4,69047744,0,0x0,8
tick,0x7fffe05afeb4,69063742,0,0x0,8
tick,0x7fffe05afeb4,69079792,0,0x0,8
tick,0x7fffe05afeb4,69094752,0,0x0,8
tick,0x7fffe05afeb4,69110733,0,0x0,8
tick,0x7fffe05afeb4,69126756,0,0x0,8
tick,0x7fffe05afeb4,69142750,0,0x0,8
tick,0x7fffe05afeb4,69158773,0,0x0,8
tick,0x7fffe05afeb4,69174767,0,0x0,8
tick,0x7fffe05afeb4,69190742,0,0x0,8
tick,0x7fffe05afeb4,69206736,0,0x0,8
tick,0x7fffe05afeb4,69221788,0,0x0,8
tick,0x7fffe05afeb4,69236737,0,0x0,8
tick,0x7fffe05afeb4,69252798,0,0x0,8
tick,0x7fffe05afeb4,69268811,0,0x0,8
tick,0x7fffe05afeb4,69284759,0,0x0,8
tick,0x7fffe05afeb4,69300773,0,0x0,8
tick,0x7fffe05afeb4,69316723,0,0x0,8
tick,0x7fffe05afeb4,69332813,0,0x0,8
tick,0x7fffe05afeb4,69348854,0,0x0,8
tick,0x7fffe05afeb4,69364757,0,0x0,8
tick,0x7fffe05afeb4,69379748,0,0x0,8
tick,0x7fffe05afeb4,69394817,0,0x0,8
tick,0x7fffe05afeb4,69410823,0,0x0,8
tick,0x7fffe05afeb4,69426809,0,0x0,8
tick,0x7fffe05afeb4,69442784,0,0x0,8
tick,0x7fffe05afeb4,69458739,0,0x0,8
tick,0x7fffe05afeb4,69474775,0,0x0,8
tick,0x7fffe05afeb4,69490742,0,0x0,8
tick,0x7fffe05afeb4,69506819,0,0x0,8
tick,0x7fffe05afeb4,69522743,0,0x0,8
tick,0x7fffe05afeb4,69538817,0,0x0,8
tick,0x7fffe05afeb4,69554744,0,0x0,8
tick,0x7fffe05afeb4,69570947,0,0x0,8
tick,0x7fffe05afeb4,69586818,0,0x0,8
tick,0x7fffe05afeb4,69602832,0,0x0,8
tick,0x7fffe05afeb4,69618804,0,0x0,8
tick,0x7fffe05afeb4,69634848,0,0x0,8
tick,0x7fffe05afeb4,69649844,0,0x0,8
tick,0x7fffe05afeb4,69666163,0,0x0,8
tick,0x7fffe05afeb4,69681737,0,0x0,8
tick,0x7fffe05afeb4,69697884,0,0x0,8
tick,0x7fffe05afeb4,69713831,0,0x0,8
tick,0x7fffe05afeb4,69729861,0,0x0,8
tick,0x7fffe05afeb4,69745827,0,0x0,8
tick,0x7fffe05afeb4,69761741,0,0x0,8
tick,0x7fffe05afeb4,69777761,0,0x0,8
tick,0x7fffe05afeb4,69793914,0,0x0,8
tick,0x7fffe05afeb4,69809962,0,0x0,8
tick,0x7fffe05afeb4,69825743,0,0x0,8
tick,0x7fffe05afeb4,69841815,0,0x0,8
tick,0x7fffe05afeb4,69857734,0,0x0,8
tick,0x7fffe05afeb4,69873808,0,0x0,8
tick,0x7fffe05afeb4,69889867,0,0x0,8
tick,0x7fffe05afeb4,69905730,0,0x0,8
tick,0x7fffe05afeb4,69921793,0,0x0,8
tick,0x7fffe05afeb4,69937824,0,0x0,8
tick,0x7fffe05afeb4,69954038,0,0x0,8
tick,0x7fffe05afeb4,69970117,0,0x0,8
tick,0x7fffe05afeb4,69985738,0,0x0,8
tick,0x7fffe05afeb4,70001777,0,0x0,8
tick,0x7fffe05afeb4,70017848,0,0x0,8
tick,0x7fffe05afeb4,70033770,0,0x0,8
tick,0x7fffe05afeb4,70049847,0,0x0,8
tick,0x7fffe05afeb4,70065800,0,0x0,8
tick,0x7fffe05afeb4,70081737,0,0x0,8
tick,0x7fffe05afeb4,70097811,0,0x0,8
tick,0x7fffe05afeb4,70112736,0,0x0,8
tick,0x7fffe05afeb4,70128737,0,0x0,8
tick,0x7fffe05afeb4,70144841,0,0x0,8
tick,0x7fffe05afeb4,70159880,0,0x0,8
tick,0x7fffe05afeb4,70175767,0,0x0,8
tick,0x7fffe05afeb4,70191748,0,0x0,8
tick,0x7fffe05afeb4,70207853,0,0x0,8
tick,0x7fffe05afeb4,70223808,0,0x0,8
tick,0x7fffe05afeb4,70239754,0,0x0,8
tick,0x7fffe05afeb4,70254818,0,0x0,8
tick,0x7fffe05afeb4,70270818,0,0x0,8
tick,0x7fffe05afeb4,70286762,0,0x0,8
tick,0x7fffe05afeb4,70302749,0,0x0,8
tick,0x7fffe05afeb4,70318827,0,0x0,8
tick,0x7fffe05afeb4,70334759,0,0x0,8
tick,0x7fffe05afeb4,70350755,0,0x0,8
tick,0x7fffe05afeb4,70366822,0,0x0,8
tick,0x7fffe05afeb4,70382765,0,0x0,8
tick,0x7fffe05afeb4,70397821,0,0x0,8
tick,0x7fffe05afeb4,70413729,0,0x0,8
tick,0x7fffe05afeb4,70429756,0,0x0,8
tick,0x7fffe05afeb4,70445755,0,0x0,8
tick,0x7fffe05afeb4,70461814,0,0x0,8
tick,0x7fffe05afeb4,70477848,0,0x0,8
tick,0x7fffe05afeb4,70493819,0,0x0,8
tick,0x7fffe05afeb4,70509881,0,0x0,8
tick,0x7fffe05afeb4,70525740,0,0x0,8
tick,0x7fffe05afeb4,70541796,0,0x0,8
tick,0x7fffe05afeb4,70557817,0,0x0,8
tick,0x7fffe05afeb4,70573821,0,0x0,8
tick,0x7fffe05afeb4,70589831,0,0x0,8
tick,0x7fffe05afeb4,70605818,0,0x0,8
tick,0x7fffe05afeb4,70621898,0,0x0,8
tick,0x7fffe05afeb4,70637753,0,0x0,8
tick,0x7fffe05afeb4,70653785,0,0x0,8
tick,0x7fffe05afeb4,70669967,0,0x0,8
tick,0x7fffe05afeb4,70685816,0,0x0,8
tick,0x7fffe05afeb4,70702114,0,0x0,8
tick,0x7fffe05afeb4,70716811,0,0x0,8
tick,0x7fffe05afeb4,70732764,0,0x0,8
tick,0x7fffe05afeb4,70747723,0,0x0,8
tick,0x7fffe05afeb4,70763739,0,0x0,8
tick,0x7fffe05afeb4,70779779,0,0x0,8
tick,0x7fffe05afeb4,70795734,0,0x0,8
tick,0x7fffe05afeb4,70811744,0,0x0,8
tick,0x7fffe05afeb4,70827753,0,0x0,8
tick,0x7fffe05afeb4,70843744,0,0x0,8
tick,0x7fffe05afeb4,70859792,0,0x0,8
tick,0x7fffe05afeb4,70875747,0,0x0,8
tick,0x7fffe05afeb4,70891747,0,0x0,8
tick,0x7fffe05afeb4,70907796,0,0x0,8
tick,0x7fffe05afeb4,70923765,0,0x0,8
tick,0x7fffe05afeb4,70939746,0,0x0,8
tick,0x7fffe05afeb4,70954838,0,0x0,8
tick,0x7fffe05afeb4,70970747,0,0x0,8
tick,0x7fffe05afeb4,70986732,0,0x0,8
tick,0x7fffe05afeb4,71002810,0,0x0,8
tick,0x7fffe05afeb4,71018833,0,0x0,8
tick,0x7fffe05afeb4,71034738,0,0x0,8
tick,0x7fffe05afeb4,71050746,0,0x0,8
tick,0x7fffe05afeb4,71066825,0,0x0,8
tick,0x7fffe05afeb4,71082784,0,0x0,8
tick,0x7fffe05afeb4,71097822,0,0x0,8
tick,0x7fffe05afeb4,71113776,0,0x0,8
tick,0x7fffe05afeb4,71129758,0,0x0,8
tick,0x7fffe05afeb4,71145742,0,0x0,8
tick,0x7fffe05afeb4,71161771,0,0x0,8
tick,0x7fffe05afeb4,71177800,0,0x0,8
tick,0x7fffe05afeb4,71193733,0,0x0,8
tick,0x7fffe05afeb4,71209772,0,0x0,8
tick,0x7fffe05afeb4,71225732,0,0x0,8
tick,0x7fffe05afeb4,71241738,0,0x0,8
tick,0x7fffe05afeb4,71257734,0,0x0,8
tick,0x7fffe05afeb4,71272818,0,0x0,8
tick,0x7fffe05afeb4,71288827,0,0x0,8
tick,0x7fffe05afeb4,71304729,0,0x0,8
tick,0x7fffe05afeb4,71320786,0,0x0,8
tick,0x7fffe05afeb4,71336816,0,0x0,8
tick,0x7fffe05afeb4,71352976,0,0x0,8
tick,0x7fffe05afeb4,71368814,0,0x0,8
tick,0x7fffe05afeb4,71384732,0,0x0,8
tick,0x7fffe05afeb4,71400834,0,0x0,8
tick,0x7fffe05afeb4,71416786,0,0x0,8
tick,0x7fffe05afeb4,71432760,0,0x0,8
tick,0x7fffe05afeb4,71448747,0,0x0,8
tick,0x7fffe05afeb4,71464817,0,0x0,8
tick,0x7fffe05afeb4,71480765,0,0x0,8
tick,0x7fffe05afeb4,71495738,0,0x0,8
tick,0x7fffe05afeb4,71510859,0,0x0,8
tick,0x7fffe05afeb4,71525751,0,0x0,8
tick,0x7fffe05afeb4,71541754,0,0x0,8
tick,0x7fffe05afeb4,71557758,0,0x0,8
tick,0x7fffe05afeb4,71573810,0,0x0,8
tick,0x7fffe05afeb4,71589751,0,0x0,8
tick,0x7fffe05afeb4,71604790,0,0x0,8
tick,0x7fffe05afeb4,71620848,0,0x0,8
tick,0x7fffe05afeb4,71636788,0,0x0,8
tick,0x7fffe05afeb4,71652730,0,0x0,8
tick,0x7fffe05afeb4,71668779,0,0x0,8
tick,0x7fffe05afeb4,71684731,0,0x0,8
tick,0x7fffe05afeb4,71700770,0,0x0,8
tick,0x7fffe05afeb4,71716827,0,0x0,8
tick,0x7fffe05afeb4,71732840,0,0x0,8
tick,0x7fffe05afeb4,71748813,0,0x0,8
tick,0x7fffe05afeb4,71763741,0,0x0,8
tick,0x7fffe05afeb4,71779760,0,0x0,8
tick,0x7fffe05afeb4,71795755,0,0x0,8
tick,0x7fffe05afeb4,71811764,0,0x0,8
tick,0x7fffe05afeb4,71827761,0,0x0,8
tick,0x7fffe05afeb4,71843760,0,0x0,8
tick,0x7fffe05afeb4,71859776,0,0x0,8
tick,0x7fffe05afeb4,71875731,0,0x0,8
tick,0x7fffe05afeb4,71890746,0,0x0,8
tick,0x7fffe05afeb4,71906748,0,0x0,8
tick,0x7fffe05afeb4,71922776,0,0x0,8
tick,0x7fffe05afeb4,71938789,0,0x0,8
tick,0x7fffe05afeb4,71953830,0,0x0,8
tick,0x7fffe05afeb4,71969859,0,0x0,8
tick,0x7fffe05afeb4,71985743,0,0x0,8
tick,0x7fffe05afeb4,72001736,0,0x0,8
tick,0x7fffe05afeb4,72017723,0,0x0,8
tick,0x7fffe05afeb4,72033813,0,0x0,8
tick,0x7fffe05afeb4,72049877,0,0x0,8
tick,0x7fffe05afeb4,72064833,0,0x0,8
tick,0x7fffe05afeb4,72079774,0,0x0,8
tick,0x7fffe05afeb4,72094780,0,0x0,8
tick,0x7fffe05afeb4,72110731,0,0x0,8
tick,0x7fffe05afeb4,72126742,0,0x0,8
tick,0x7fffe05afeb4,72141733,0,0x0,8
tick,0x7fffe05afeb4,72157813,0,0x0,8
tick,0x7fffe05afeb4,72173819,0,0x0,8
tick,0x7fffe05afeb4,72189827,0,0x0,8
tick,0x7fffe05afeb4,72204813,0,0x0,8
tick,0x7fffe05afeb4,72220763,0,0x0,8
tick,0x7fffe05afeb4,72236733,0,0x0,8
tick,0x7fffe05afeb4,72252723,0,0x0,8
tick,0x7fffe05afeb4,72268741,0,0x0,8
tick,0x7fffe05afeb4,72284753,0,0x0,8
tick,0x7fffe05afeb4,72300754,0,0x0,8
tick,0x7fffe05afeb4,72316734,0,0x0,8
tick,0x7fffe05afeb4,72332788,0,0x0,8
tick,0x7fffe05afeb4,72348745,0,0x0,8
tick,0x7fffe05afeb4,72364795,0,0x0,8
tick,0x7fffe05afeb4,72379770,0,0x0,8
tick,0x7fffe05afeb4,72395724,0,0x0,8
tick,0x7fffe05afeb4,72410825,0,0x0,8
tick,0x7fffe05afeb4,72426812,0,0x0,8
tick,0x7fffe05afeb4,72442752,0,0x0,8
tick,0x7fffe05afeb4,72458736,0,0x0,8
tick,0x7fffe05afeb4,72474749,0,0x0,8
tick,0x7fffe05afeb4,72490737,0,0x0,8
tick,0x7fffe05afeb4,72506751,0,0x0,8
tick,0x7fffe05afeb4,72521751,0,0x0,8
tick,0x7fffe05afeb4,72537818,0,0x0,8
tick,0x7fffe05afeb4,72553741,0,0x0,8
tick,0x7fffe05afeb4,72569813,0,0x0,8
tick,0x7fffe05afeb4,72585741,0,0x0,8
tick,0x7fffe05afeb4,72601790,0,0x0,8
tick,0x7fffe05afeb4,72617769,0,0x0,8
tick,0x7fffe05afeb4,72633790,0,0x0,8
tick,0x7fffe05afeb4,72649779,0,0x0,8
tick,0x7fffe05afeb4,72666221,0,0x0,8
tick,0x7fffe05afeb4,72681769,0,0x0,8
tick,0x7fffe05afeb4,72697789,0,0x0,8
tick,0x7fffe05afeb4,72713788,0,0x0,8
tick,0x7fffe05afeb4,72729892,0,0x0,8
tick,0x7fffe05afeb4,72745758,0,0x0,8
tick,0x7fffe05afeb4,72761795,0,0x0,8
tick,0x7fffe05afeb4,72777797,0,0x0,8
tick,0x7fffe05afeb4,72793757,0,0x0,8
tick,0x7fffe05afeb4,72809743,0,0x0,8
tick,0x7fffe05afeb4,72824807,0,0x0,8
tick,0x7fffe05afeb4,72840747,0,0x0,8
tick,0x7fffe05afeb4,72856997,0,0x0,8
tick,0x7fffe05afeb4,72872767,0,0x0,8
tick,0x7fffe05afeb4,72888804,0,0x0,8
tick,0x7fffe05afeb4,72904859,0,0x0,8
tick,0x7fffe05afeb4,72920726,0,0x0,8
tick,0x7fffe05afeb4,72936901,0,0x0,8
tick,0x7fffe05afeb4,72952830,0,0x0,8
tick,0x7fffe05afeb4,72968780,0,0x0,8
tick,0x7fffe05afeb4,72984845,0,0x0,8
tick,0x7fffe05afeb4,73000818,0,0x0,8
tick,0x7fffe05afeb4,73016723,0,0x0,8
tick,0x7fffe05afeb4,73031758,0,0x0,8
tick,0x7fffe05afeb4,73047747,0,0x0,8
tick,0x7fffe05afeb4,73063724,0,0x0,8
tick,0x7fffe05afeb4,73079767,0,0x0,8
tick,0x7fffe05afeb4,73095775,0,0x0,8
tick,0x7fffe05afeb4,73110819,0,0x0,8
tick,0x7fffe05afeb4,73125731,0,0x0,8
tick,0x7fffe05afeb4,73141730,0,0x0,8
tick,0x7fffe05afeb4,73157899,0,0x0,8
tick,0x7fffe05afeb4,73173773,0,0x0,8
tick,0x7fffe05afeb4,73189864,0,0x0,8
tick,0x7fffe05afeb4,73205733,0,0x0,8
tick,0x7fffe05afeb4,73221783,0,0x0,8
tick,0x7fffe05afeb4,73237757,0,0x0,8
tick,0x7fffe05afeb4,73253730,0,0x0,8
tick,0x7fffe05afeb4,73269801,0,0x0,8
tick,0x7fffe05afeb4,73285754,0,0x0,8
tick,0x7fffe05afeb4,73300810,0,0x0,8
tick,0x7fffe05afeb4,73316731,0,0x0,8
tick,0x7fffe05afeb4,73332812,0,0x0,8
tick,0x7fffe05afeb4,73348738,0,0x0,8
tick,0x7fffe05afeb4,73364791,0,0x0,8
tick,0x7fffe05afeb4,73379793,0,0x0,8
tick,0x7fffe05afeb4,73395747,0,0x0,8
tick,0x7fffe05afeb4,73411757,0,0x0,8
tick,0x7fffe05afeb4,73427759,0,0x0,8
tick,0x7fffe05afeb4,73443729,0,0x0,8
tick,0x7fffe05afeb4,73459953,0,0x0,8
tick,0x7fffe05afeb4,73475743,0,0x0,8
tick,0x7fffe05afeb4,73490826,0,0x0,8
tick,0x7fffe05afeb4,73506769,0,0x0,8
tick,0x7fffe05afeb4,73521738,0,0x0,8
tick,0x7fffe05afeb4,73537822,0,0x0,8
tick,0x7fffe05afeb4,73553750,0,0x0,8
tick,0x7fffe05afeb4,73569759,0,0x0,8
tick,0x7fffe05afeb4,73585778,0,0x0,8
tick,0x7fffe05afeb4,73601876,0,0x0,8
tick,0x7fffe05afeb4,73616765,0,0x0,8
tick,0x7fffe05afeb4,73632871,0,0x0,8
tick,0x7fffe05afeb4,73648753,0,0x0,8
tick,0x7fffe05afeb4,73665391,0,0x0,8
tick,0x7fffe05afeb4,73680748,0,0x0,8
tick,0x7fffe05afeb4,73695898,0,0x0,8
tick,0x7fffe05afeb4,73710783,0,0x0,8
tick,0x7fffe05afeb4,73726772,0,0x0,8
tick,0x7fffe05afeb4,73742799,0,0x0,8
tick,0x7fffe05afeb4,73758979,0,0x0,8
tick,0x7fffe05afeb4,73774756,0,0x0,8
tick,0x7fffe05afeb4,73790151,0,0x0,8
tick,0x7fffe05afeb4,73805801,0,0x0,8
tick,0x7fffe05afeb4,73822130,0,0x0,8
tick,0x7fffe05afeb4,73837746,0,0x0,8
tick,0x7fffe05afeb4,73854193,0,0x0,8
tick,0x7fffe05afeb4,73869781,0,0x0,8
tick,0x7fffe05afeb4,73885860,0,0x0,8
tick,0x7fffe05afeb4,73901805,0,0x0,8
tick,0x7fffe05afeb4,73917753,0,0x0,8
tick,0x7fffe05afeb4,73933762,0,0x0,8
tick,0x7fffe05afeb4,73949788,0,0x0,8
tick,0x7fffe05afeb4,73964835,0,0x0,8
tick,0x7fffe05afeb4,73980762,0,0x0,8
tick,0x7fffe05afeb4,73995739,0,0x0,8
tick,0x7fffe05afeb4,74010752,0,0x0,8
tick,0x7fffe05afeb4,74026802,0,0x0,8
tick,0x7fffe05afeb4,74042830,0,0x0,8
tick,0x7fffe05afeb4,74058826,0,0x0,8
tick,0x7fffe05afeb4,74074738,0,0x0,8
tick,0x7fffe05afeb4,74090732,0,0x0,8
tick,0x7fffe05afeb4,74107809,0,0x0,8
tick,0x7fffe05afeb4,74122758,0,0x0,8
tick,0x7fffe05afeb4,74139107,0,0x0,8
tick,0x7fffe05afeb4,74155103,0,0x0,8
tick,0x7fffe05afeb4,74170884,0,0x0,8
tick,0x7fffe05afeb4,74187013,0,0x0,8
tick,0x7fffe05afeb4,74202816,0,0x0,8
tick,0x7fffe05afeb4,74218755,0,0x0,8
tick,0x7fffe05afeb4,74234729,0,0x0,8
tick,0x7fffe05afeb4,74250775,0,0x0,8
tick,0x7fffe05afeb4,74266765,0,0x0,8
tick,0x7fffe05afeb4,74282811,0,0x0,8
tick,0x7fffe05afeb4,74298822,0,0x0,8
tick,0x7fffe05afeb4,74314738,0,0x0,8
tick,0x7fffe05afeb4,74329808,0,0x0,8
tick,0x7fffe05afeb4,74345731,0,0x0,8
tick,0x7fffe05afeb4,74361892,0,0x0,8
tick,0x7fffe05afeb4,74377848,0,0x0,8
tick,0x7fffe05afeb4,74393831,0,0x0,8
tick,0x7fffe05afeb4,74409843,0,0x0,8
tick,0x7fffe05afeb4,74425739,0,0x0,8
tick,0x7fffe05afeb4,74441824,0,0x0,8
tick,0x7fffe05afeb4,74457845,0,0x0,8
tick,0x7fffe05afeb4,74472766,0,0x0,8
tick,0x7fffe05afeb4,74488786,0,0x0,8
tick,0x7fffe05afeb4,74504744,0,0x0,8
tick,0x7fffe05afeb4,74520727,0,0x0,8
tick,0x7fffe05afeb4,74536745,0,0x0,8
tick,0x7fffe05afeb4,74552748,0,0x0,8
tick,0x7fffe05afeb4,74568928,0,0x0,8
tick,0x7fffe05afeb4,74584829,0,0x0,8
tick,0x7fffe05afeb4,74600730,0,0x0,8
tick,0x7fffe05afeb4,74615722,0,0x0,8
tick,0x7fffe05afeb4,74631741,0,0x0,8
tick,0x7fffe05afeb4,74647761,0,0x0,8
tick,0x7fffe05afeb4,74663771,0,0x0,8
tick,0x7fffe05afeb4,74679799,0,0x0,8
tick,0x7fffe05afeb4,74696479,0,0x0,8
tick,0x7fffe05afeb4,74711818,0,0x0,8
tick,0x7fffe05afeb4,74727853,0,0x0,8
tick,0x7fffe05afeb4,74743746,0,0x0,8
tick,0x7fffe05afeb4,74759765,0,0x0,8
tick,0x7fffe05afeb4,74775772,0,0x0,8
tick,0x7fffe05afeb4,74791764,0,0x0,8
tick,0x7fffe05afeb4,74807787,0,0x0,8
tick,0x7fffe05afeb4,74823731,0,0x0,8
tick,0x7fffe05afeb4,74838750,0,0x0,8
tick,0x7fffe05afeb4,74854902,0,0x0,8
tick,0x7fffe05afeb4,74869764,0,0x0,8
tick,0x7fffe05afeb4,74885807,0,0x0,8
tick,0x7fffe05afeb4,74900735,0,0x0,8
tick,0x7fffe05afeb4,74916804,0,0x0,8
tick,0x7fffe05afeb4,74931755,0,0x0,8
tick,0x7fffe05afeb4,74947782,0,0x0,8
tick,0x7fffe05afeb4,74962743,0,0x0,8
tick,0x7fffe05afeb4,74978735,0,0x0,8
tick,0x7fffe05afeb4,74994809,0,0x0,8
tick,0x7fffe05afeb4,75010764,0,0x0,8
tick,0x7fffe05afeb4,75026845,0,0x0,8
tick,0x7fffe05afeb4,75042729,0,0x0,8
tick,0x7fffe05afeb4,75058735,0,0x0,8
tick,0x7fffe05afeb4,75074750,0,0x0,8
tick,0x7fffe05afeb4,75090763,0,0x0,8
tick,0x7fffe05afeb4,75105814,0,0x0,8
tick,0x7fffe05afeb4,75121830,0,0x0,8
tick,0x7fffe05afeb4,75137768,0,0x0,8
tick,0x7fffe05afeb4,75153805,0,0x0,8
tick,0x7fffe05afeb4,75169830,0,0x0,8
tick,0x7fffe05afeb4,75185747,0,0x0,8
tick,0x7fffe05afeb4,75202041,0,0x0,8
tick,0x7fffe05afeb4,75217823,0,0x0,8
tick,0x7fffe05afeb4,75234590,0,0x0,8
tick,0x7fffe05afeb4,75249886,0,0x0,8
tick,0x7fffe05afeb4,75265820,0,0x0,8
tick,0x7fffe05afeb4,75281770,0,0x0,8
tick,0x7fffe05afeb4,75297745,0,0x0,8
tick,0x7fffe05afeb4,75313764,0,0x0,8
tick,0x7fffe05afeb4,75329834,0,0x0,8
tick,0x7fffe05afeb4,75344790,0,0x0,8
tick,0x7fffe05afeb4,75360810,0,0x0,8
tick,0x7fffe05afeb4,75376814,0,0x0,8
tick,0x7fffe05afeb4,75392935,0,0x0,8
tick,0x7fffe05afeb4,75408735,0,0x0,8
tick,0x7fffe05afeb4,75424806,0,0x0,8
tick,0x7fffe05afeb4,75440774,0,0x0,8
tick,0x7fffe05afeb4,75457013,0,0x0,8
tick,0x7fffe05afeb4,75472736,0,0x0,8
tick,0x7fffe05afeb4,75488797,0,0x0,8
tick,0x7fffe05afeb4,75504751,0,0x0,8
tick,0x7fffe05afeb4,75520731,0,0x0,8
tick,0x7fffe05afeb4,75536752,0,0x0,8
tick,0x7fffe05afeb4,75551802,0,0x0,8
tick,0x7fffe05afeb4,75567813,0,0x0,8
tick,0x7fffe05afeb4,75583736,0,0x0,8
tick,0x7fffe05afeb4,75599760,0,0x0,8
tick,0x7fffe05afeb4,75615764,0,0x0,8
tick,0x7fffe05afeb4,75631786,0,0x0,8
tick,0x7fffe05afeb4,75647794,0,0x0,8
tick,0x7fffe05afeb4,75663730,0,0x0,8
tick,0x7fffe05afeb4,75679756,0,0x0,8
tick,0x7fffe05afeb4,75694758,0,0x0,8
tick,0x7fffe05afeb4,75709784,0,0x0,8
tick,0x7fffe05afeb4,75725740,0,0x0,8
tick,0x7fffe05afeb4,75741767,0,0x0,8
tick,0x7fffe05afeb4,75757767,0,0x0,8
tick,0x7fffe05afeb4,75773739,0,0x0,8
tick,0x7fffe05afeb4,75790954,0,0x0,8
tick,0x7fffe05afeb4,75805815,0,0x0,8
tick,0x7fffe05afeb4,75822246,0,0x0,8
tick,0x7fffe05afeb4,75837731,0,0x0,8
tick,0x7fffe05afeb4,75853779,0,0x0,8
tick,0x7fffe05afeb4,75869785,0,0x0,8
tick,0x7fffe05afeb4,75885733,0,0x0,8
tick,0x7fffe05afeb4,75901816,0,0x0,8
tick,0x7fffe05afeb4,75917747,0,0x0,8
tick,0x7fffe05afeb4,75932751,0,0x0,8
tick,0x7fffe05afeb4,75948753,0,0x0,8
tick,0x7fffe05afeb4,75964899,0,0x0,8
tick,0x7fffe05afeb4,75979864,0,0x0,8
tick,0x7fffe05afeb4,75995762,0,0x0,8
tick,0x7fffe05afeb4,76011085,0,0x0,8
tick,0x7fffe05afeb4,76026801,0,0x0,8
tick,0x7fffe05afeb4,76042774,0,0x0,8
tick,0x7fffe05afeb4,76058815,0,0x0,8
tick,0x7fffe05afeb4,76074825,0,0x0,8
tick,0x7fffe05afeb4,76090739,0,0x0,8
tick,0x7fffe05afeb4,76106844,0,0x0,8
tick,0x7fffe05afeb4,76122735,0,0x0,8
tick,0x7fffe05afeb4,76138728,0,0x0,8
tick,0x7fffe05afeb4,76154719,0,0x0,8
tick,0x7fffe05afeb4,76169829,0,0x0,8
tick,0x7fffe05afeb4,76185818,0,0x0,8
tick,0x7fffe05afeb4,76201806,0,0x0,8
tick,0x7fffe05afeb4,76217795,0,0x0,8
tick,0x7fffe05afeb4,76233894,0,0x0,8
tick,0x7fffe05afeb4,76249816,0,0x0,8
tick,0x7fffe05afeb4,76265750,0,0x0,8
tick,0x7fffe05afeb4,76281772,0,0x0,8
tick,0x7fffe05afeb4,76297831,0,0x0,8
tick,0x7fffe05afeb4,76313733,0,0x0,8
tick,0x7fffe05afeb4,76329844,0,0x0,8
tick,0x7fffe05afeb4,76345810,0,0x0,8
tick,0x7fffe05afeb4,76361718,0,0x0,8
tick,0x7fffe05afeb4,76377720,0,0x0,8
tick,0x7fffe05afeb4,76393816,0,0x0,8
tick,0x7fffe05afeb4,76409836,0,0x0,8
tick,0x7fffe05afeb4,76425799,0,0x0,8
tick,0x7fffe05afeb4,76441729,0,0x0,8
tick,0x7fffe05afeb4,76457830,0,0x0,8
tick,0x7fffe05afeb4,76473724,0,0x0,8
tick,0x7fffe05afeb4,76489739,0,0x0,8
tick,0x7fffe05afeb4,76504737,0,0x0,8
tick,0x7fffe05afeb4,76520769,0,0x0,8
tick,0x7fffe05afeb4,76536822,0,0x0,8
tick,0x7fffe05afeb4,76552734,0,0x0,8
tick,0x7fffe05afeb4,76567770,0,0x0,8
tick,0x7fffe05afeb4,76583735,0,0x0,8
tick,0x7fffe05afeb4,76598743,0,0x0,8
tick,0x7fffe05afeb4,76614734,0,0x0,8
tick,0x7fffe05afeb4,76630794,0,0x0,8
tick,0x7fffe05afeb4,76645744,0,0x0,8
tick,0x7fffe05afeb4,76661739,0,0x0,8
tick,0x7fffe05afeb4,76677784,0,0x0,8
tick,0x7fffe05afeb4,76693729,0,0x0,8
tick,0x7fffe05afeb4,76709773,0,0x0,8
tick,0x7fffe05afeb4,76725737,0,0x0,8
tick,0x7fffe05afeb4,76741839,0,0x0,8
tick,0x7fffe05afeb4,76757734,0,0x0,8
tick,0x7fffe05afeb4,76773814,0,0x0,8
tick,0x7fffe05afeb4,76790536,0,0x0,8
tick,0x7fffe05afeb4,76805759,0,0x0,8
tick,0x7fffe05afeb4,76820782,0,0x0,8
tick,0x7fffe05afeb4,76836820,0,0x0,8
tick,0x7fffe05afeb4,76852849,0,0x0,8
tick,0x7fffe05afeb4,76868811,0,0x0,8
tick,0x7fffe05afeb4,76884833,0,0x0,8
tick,0x7fffe05afeb4,76900732,0,0x0,8
tick,0x7fffe05afeb4,76916731,0,0x0,8
tick,0x7fffe05afeb4,76931735,0,0x0,8
tick,0x7fffe05afeb4,76947733,0,0x0,8
tick,0x7fffe05afeb4,76963786,0,0x0,8
tick,0x7fffe05afeb4,76979866,0,0x0,8
tick,0x7fffe05afeb4,76994819,0,0x0,8
tick,0x7fffe05afeb4,77010783,0,0x0,8
tick,0x7fffe05afeb4,77026743,0,0x0,8
tick,0x7fffe05afeb4,77042745,0,0x0,8
tick,0x7fffe05afeb4,77058732,0,0x0,8
tick,0x7fffe05afeb4,77074734,0,0x0,8
tick,0x7fffe05afeb4,77090756,0,0x0,8
tick,0x7fffe05afeb4,77106900,0,0x0,8
tick,0x7fffe05afeb4,77122734,0,0x0,8
tick,0x7fffe05afeb4,77138739,0,0x0,8
tick,0x7fffe05afeb4,77153770,0,0x0,8
tick,0x7fffe05afeb4,77169832,0,0x0,8
tick,0x7fffe05afeb4,77185766,0,0x0,8
tick,0x7fffe05afeb4,77201803,0,0x0,8
tick,0x7fffe05afeb4,77217805,0,0x0,8
tick,0x7fffe05afeb4,77233903,0,0x0,8
tick,0x7fffe05afeb4,77248745,0,0x0,8
tick,0x7fffe05afeb4,77264774,0,0x0,8
tick,0x7fffe05afeb4,77279775,0,0x0,8
tick,0x7fffe05afeb4,77295775,0,0x0,8
tick,0x7fffe05afeb4,77311721,0,0x0,8
tick,0x7fffe05afeb4,77327767,0,0x0,8
tick,0x7fffe05afeb4,77342820,0,0x0,8
tick,0x7fffe05afeb4,77358740,0,0x0,8
tick,0x7fffe05afeb4,77374723,0,0x0,8
tick,0x7fffe05afeb4,77390812,0,0x0,8
tick,0x7fffe05afeb4,77406891,0,0x0,8
tick,0x7fffe05afeb4,77422819,0,0x0,8
tick,0x7fffe05afeb4,77438750,0,0x0,8
tick,0x7fffe05afeb4,77453837,0,0x0,8
tick,0x7fffe05afeb4,77469782,0,0x0,8
tick,0x7fffe05afeb4,77485764,0,0x0,8
tick,0x7fffe05afeb4,77501835,0,0x0,8
tick,0x7fffe05afeb4,77517736,0,0x0,8
tick,0x7fffe05afeb4,77533749,0,0x0,8
tick,0x7fffe05afeb4,77549856,0,0x0,8
tick,0x7fffe05afeb4,77565795,0,0x0,8
tick,0x7fffe05afeb4,77581841,0,0x0,8
tick,0x7fffe05afeb4,77597776,0,0x0,8
tick,0x7fffe05afeb4,77612792,0,0x0,8
tick,0x7fffe05afeb4,77628746,0,0x0,8
tick,0x7fffe05afeb4,77643783,0,0x0,8
tick,0x7fffe05afeb4,77659781,0,0x0,8
tick,0x7fffe05afeb4,77675759,0,0x0,8
tick,0x7fffe05afeb4,77691729,0,0x0,8
tick,0x7fffe05afeb4,77707754,0,0x0,8
tick,0x7fffe05afeb4,77723731,0,0x0,8
tick,0x7fffe05afeb4,77739797,0,0x0,8
tick,0x7fffe05afeb4,77754861,0,0x0,8
tick,0x7fffe05afeb4,77770791,0,0x0,8
tick,0x7fffe05afeb4,77785733,0,0x0,8
tick,0x7fffe05afeb4,77801726,0,0x0,8
tick,0x7fffe05afeb4,77817738,0,0x0,8
tick,0x7fffe05afeb4,77833731,0,0x0,8
tick,0x7fffe05afeb4,77849782,0,0x0,8
tick,0x7fffe05afeb4,77865759,0,0x0,8
tick,0x7fffe05afeb4,77881811,0,0x0,8
tick,0x7fffe05afeb4,77897771,0,0x0,8
tick,0x7fffe05afeb4,77913772,0,0x0,8
tick,0x7fffe05afeb4,77929749,0,0x0,8
tick,0x7fffe05afeb4,77945915,0,0x0,8
tick,0x7fffe05afeb4,77961747,0,0x0,8
tick,0x7fffe05afeb4,77977818,0,0x0,8
tick,0x7fffe05afeb4,77993735,0,0x0,8
tick,0x7fffe05afeb4,78010378,0,0x0,8
tick,0x7fffe05afeb4,78025742,0,0x0,8
tick,0x7fffe05afeb4,78041834,0,0x0,8
tick,0x7fffe05afeb4,78056745,0,0x0,8
tick,0x7fffe05afeb4,78072733,0,0x0,8
tick,0x7fffe05afeb4,78088745,0,0x0,8
tick,0x7fffe05afeb4,78104758,0,0x0,8
tick,0x7fffe05afeb4,78120874,0,0x0,8
tick,0x7fffe05afeb4,78136832,0,0x0,8
tick,0x7fffe05afeb4,78152741,0,0x0,8
tick,0x7fffe05afeb4,78168758,0,0x0,8
tick,0x7fffe05afeb4,78184844,0,0x0,8
tick,0x7fffe05afeb4,78200741,0,0x0,8
tick,0x7fffe05afeb4,78216728,0,0x0,8
tick,0x7fffe05afeb4,78232900,0,0x0,8
tick,0x7fffe05afeb4,78248819,0,0x0,8
tick,0x7fffe05afeb4,78264834,0,0x0,8
tick,0x7fffe05afeb4,78279766,0,0x0,8
tick,0x7fffe05afeb4,78295966,0,0x0,8
tick,0x7fffe05afeb4,78311852,0,0x0,8
tick,0x7fffe05afeb4,78327777,0,0x0,8
tick,0x7fffe05afeb4,78342919,0,0x0,8
tick,0x7fffe05afeb4,78359083,0,0x0,8
tick,0x7fffe05afeb4,78374725,0,0x0,8
tick,0x7fffe05afeb4,78389746,0,0x0,8
tick,0x7fffe05afeb4,78404717,0,0x0,8
tick,0x7fffe05afeb4,78419815,0,0x0,8
tick,0x7fffe05afeb4,78435798,0,0x0,8
tick,0x7fffe05afeb4,78451883,0,0x0,8
tick,0x7fffe05afeb4,78467769,0,0x0,8
tick,0x7fffe05afeb4,78483730,0,0x0,8
tick,0x7fffe05afeb4,78499822,0,0x0,8
tick,0x7fffe05afeb4,78515757,0,0x0,8
tick,0x7fffe05afeb4,78531820,0,0x0,8
tick,0x7fffe05afeb4,78546808,0,0x0,8
tick,0x7fffe05afeb4,78562811,0,0x0,8
tick,0x7fffe05afeb4,78578800,0,0x0,8
tick,0x7fffe05afeb4,78594750,0,0x0,8
tick,0x7fffe05afeb4,78610826,0,0x0,8
tick,0x7fffe05afeb4,78626821,0,0x0,8
tick,0x7fffe05afeb4,78642831,0,0x0,8
tick,0x7fffe05afeb4,78658736,0,0x0,8
tick,0x7fffe05afeb4,78673839,0,0x0,8
tick,0x7fffe05afeb4,78689758,0,0x0,8
tick,0x7fffe05afeb4,78705744,0,0x0,8
tick,0x7fffe05afeb4,78721815,0,0x0,8
tick,0x7fffe05afeb4,78737806,0,0x0,8
tick,0x7fffe05afeb4,78753747,0,0x0,8
tick,0x7fffe05afeb4,78769860,0,0x0,8
tick,0x7fffe05afeb4,78785739,0,0x0,8
tick,0x7fffe05afeb4,78801753,0,0x0,8
tick,0x7fffe05afeb4,78817746,0,0x0,8
tick,0x7fffe05afeb4,78833740,0,0x0,8
tick,0x7fffe05afeb4,78849904,0,0x0,8
tick,0x7fffe05afeb4,78865736,0,0x0,8
tick,0x7fffe05afeb4,78881813,0,0x0,8
tick,0x7fffe05afeb4,78897833,0,0x0,8
tick,0x7fffe05afeb4,78913818,0,0x0,8
tick,0x7fffe05afeb4,78929769,0,0x0,8
tick,0x7fffe05afeb4,78945759,0,0x0,8
tick,0x7fffe05afeb4,78961824,0,0x0,8
tick,0x7fffe05afeb4,78978285,0,0x0,8
tick,0x7fffe05afeb4,78992818,0,0x0,8
tick,0x7fffe05afeb4,79008922,0,0x0,8
tick,0x7fffe05afeb4,79023742,0,0x0,8
tick,0x7fffe05afeb4,79039995,0,0x0,8
tick,0x7fffe05afeb4,79055731,0,0x0,8
tick,0x7fffe05afeb4,79071753,0,0x0,8
tick,0x7fffe05afeb4,79086801,0,0x0,8
tick,0x7fffe05afeb4,79102928,0,0x0,8
tick,0x7fffe05afeb4,79117887,0,0x0,8
tick,0x7fffe05afeb4,79133741,0,0x0,8
tick,0x7fffe05afeb4,79148798,0,0x0,8
tick,0x7fffe05afeb4,79165133,0,0x0,8
tick,0x7fffe05afeb4,79179792,0,0x0,8
tick,0x7fffe05afeb4,79196177,0,0x0,8
tick,0x7fffe05afeb4,79211740,0,0x0,8
tick,0x7fffe05afeb4,79227818,0,0x0,8
tick,0x7fffe05afeb4,79243823,0,0x0,8
tick,0x7fffe05afeb4,79258857,0,0x0,8
tick,0x7fffe05afeb4,79273877,0,0x0,8
tick,0x7fffe05afeb4,79290463,0,0x0,8
tick,0x7fffe05afeb4,79305747,0,0x0,8
tick,0x7fffe05afeb4,79322138,0,0x0,8
tick,0x7fffe05afeb4,79337745,0,0x0,8
tick,0x7fffe05afeb4,79354070,0,0x0,8
tick,0x7fffe05afeb4,79369768,0,0x0,8
tick,0x7fffe05afeb4,79385733,0,0x0,8
tick,0x7fffe05afeb4,79401809,0,0x0,8
tick,0x7fffe05afeb4,79417745,0,0x0,8
tick,0x7fffe05afeb4,79433848,0,0x0,8
tick,0x7fffe05afeb4,79449925,0,0x0,8
tick,0x7fffe05afeb4,79465744,0,0x0,8
tick,0x7fffe05afeb4,79481751,0,0x0,8
tick,0x7fffe05afeb4,79496734,0,0x0,8
tick,0x7fffe05afeb4,79512749,0,0x0,8
tick,0x7fffe05afeb4,79528950,0,0x0,8
tick,0x7fffe05afeb4,79545199,0,0x0,8
tick,0x7fffe05afeb4,79560758,0,0x0,8
tick,0x7fffe05afeb4,79577003,0,0x0,8
tick,0x7fffe05afeb4,79592822,0,0x0,8
tick,0x7fffe05afeb4,79609231,0,0x0,8
tick,0x7fffe05afeb4,79641456,0,0x0,8
tick,0x7fffe05afeb4,79656817,0,0x0,8
tick,0x7fffe05afeb4,79673226,0,0x0,8
tick,0x7fffe05afeb4,79688738,0,0x0,8
tick,0x7fffe05afeb4,79705159,0,0x0,8
tick,0x7fffe05afeb4,79720911,0,0x0,8
tick,0x7fffe05afeb4,79736921,0,0x0,8
tick,0x7fffe05afeb4,79752864,0,0x0,8
tick,0x7fffe05afeb4,79768913,0,0x0,8
tick,0x7fffe05afeb4,79784874,0,0x0,8
tick,0x7fffe05afeb4,79800750,0,0x0,8
tick,0x7fffe05afeb4,79815817,0,0x0,8
tick,0x7fffe05afeb4,79832002,0,0x0,8
tick,0x7fffe05afeb4,79846825,0,0x0,8
tick,0x7fffe05afeb4,79862865,0,0x0,8
tick,0x7fffe05afeb4,79877848,0,0x0,8
tick,0x7fffe05afeb4,79894009,0,0x0,8
tick,0x7fffe05afeb4,79909868,0,0x0,8
tick,0x7fffe05afeb4,79925813,0,0x0,8
tick,0x7fffe05afeb4,79941813,0,0x0,8
tick,0x7fffe05afeb4,79957989,0,0x0,8
tick,0x7fffe05afeb4,79973778,0,0x0,8
tick,0x7fffe05afeb4,79990040,0,0x0,8
tick,0x7fffe05afeb4,80005834,0,0x0,8
tick,0x7fffe05afeb4,80021847,0,0x0,8
tick,0x7fffe05afeb4,80037858,0,0x0,8
tick,0x7fffe05afeb4,80053767,0,0x0,8
tick,0x7fffe05afeb4,80069813,0,0x0,8
tick,0x7fffe05afeb4,80086004,0,0x0,8
tick,0x7fffe05afeb4,80101883,0,0x0,8
tick,0x7fffe05afeb4,80117846,0,0x0,8
tick,0x7fffe05afeb4,80134349,0,0x0,8
tick,0x7fffe05afeb4,80150051,0,0x0,8
tick,0x7fffe05afeb4,80165820,0,0x0,8
tick,0x7fffe05afeb4,80181991,0,0x0,8
tick,0x7fffe05afeb4,80197740,0,0x0,8
tick,0x7fffe05afeb4,80213954,0,0x0,8
tick,0x7fffe05afeb4,80229788,0,0x0,8
tick,0x7fffe05afeb4,80245852,0,0x0,8
tick,0x7fffe05afeb4,80261867,0,0x0,8
tick,0x7fffe05afeb4,80277878,0,0x0,8
tick,0x7fffe05afeb4,80293792,0,0x0,8
tick,0x7fffe05afeb4,80309972,0,0x0,8
tick,0x7fffe05afeb4,80325820,0,0x0,8
tick,0x7fffe05afeb4,80341829,0,0x0,8
tick,0x7fffe05afeb4,80357879,0,0x0,8
tick,0x7fffe05afeb4,80373964,0,0x0,8
tick,0x7fffe05afeb4,80389911,0,0x0,8
tick,0x7fffe05afeb4,80404916,0,0x0,8
tick,0x7fffe05afeb4,80420892,0,0x0,8
tick,0x7fffe05afeb4,80436980,0,0x0,8
tick,0x7fffe05afeb4,80451750,0,0x0,8
tick,0x7fffe05afeb4,80467915,0,0x0,8
tick,0x7fffe05afeb4,80483808,0,0x0,8
tick,0x7fffe05afeb4,80499788,0,0x0,8
tick,0x7fffe05afeb4,80515740,0,0x0,8
tick,0x7fffe05afeb4,80531851,0,0x0,8
tick,0x7fffe05afeb4,80547906,0,0x0,8
tick,0x7fffe05afeb4,80563739,0,0x0,8
tick,0x7fffe05afeb4,80579795,0,0x0,8
tick,0x7fffe05afeb4,80595951,0,0x0,8
tick,0x7fffe05afeb4,80611729,0,0x0,8
tick,0x7fffe05afeb4,80627726,0,0x0,8
tick,0x7fffe05afeb4,80643749,0,0x0,8
tick,0x7fffe05afeb4,80660096,0,0x0,8
tick,0x7fffe05afeb4,80675814,0,0x0,8
tick,0x7fffe05afeb4,80691924,0,0x0,8
tick,0x7fffe05afeb4,80707845,0,0x0,8
tick,0x7fffe05afeb4,80723771,0,0x0,8
tick,0x7fffe05afeb4,80739822,0,0x0,8
tick,0x7fffe05afeb4,80754830,0,0x0,8
tick,0x7fffe05afeb4,80770941,0,0x0,8
tick,0x7fffe05afeb4,80786849,0,0x0,8
tick,0x7fffe05afeb4,80802797,0,0x0,8
tick,0x7fffe05afeb4,80818865,0,0x0,8
tick,0x7fffe05afeb4,80834798,0,0x0,8
tick,0x7fffe05afeb4,80850813,0,0x0,8
tick,0x7fffe05afeb4,80865807,0,0x0,8
tick,0x7fffe05afeb4,80881819,0,0x0,8
tick,0x7fffe05afeb4,80897736,0,0x0,8
tick,0x7fffe05afeb4,80913819,0,0x0,8
tick,0x7fffe05afeb4,80929855,0,0x0,8
tick,0x7fffe05afeb4,80946104,0,0x0,8
tick,0x7fffe05afeb4,80961820,0,0x0,8
tick,0x7fffe05afeb4,80977839,0,0x0,8
tick,0x7fffe05afeb4,80994050,0,0x0,8
tick,0x7fffe05afeb4,81010620,0,0x0,8
tick,0x7fffe05afeb4,81025717,0,0x0,8
tick,0x7fffe05afeb4,81041930,0,0x0,8
tick,0x7fffe05afeb4,81057881,0,0x0,8
tick,0x7fffe05afeb4,81073928,0,0x0,8
tick,0x7fffe05afeb4,81088774,0,0x0,8
tick,0x7fffe05afeb4,81105114,0,0x0,8
tick,0x7fffe05afeb4,81120778,0,0x0,8
tick,0x7fffe05afeb4,81136760,0,0x0,8
tick,0x7fffe05afeb4,81152805,0,0x0,8
tick,0x7fffe05afeb4,81168947,0,0x0,8
tick,0x7fffe05afeb4,81184829,0,0x0,8
tick,0x7fffe05afeb4,81200961,0,0x0,8
tick,0x7fffe05afeb4,81216829,0,0x0,8
tick,0x7fffe05afeb4,81232923,0,0x0,8
tick,0x7fffe05afeb4,81248784,0,0x0,8
tick,0x7fffe05afeb4,81264832,0,0x0,8
tick,0x7fffe05afeb4,81279935,0,0x0,8
tick,0x7fffe05afeb4,81295881,0,0x0,8
tick,0x7fffe05afeb4,81311805,0,0x0,8
tick,0x7fffe05afeb4,81327878,0,0x0,8
tick,0x7fffe05afeb4,81343843,0,0x0,8
tick,0x7fffe05afeb4,81359940,0,0x0,8
tick,0x7fffe05afeb4,81375935,0,0x0,8
tick,0x7fffe05afeb4,81391781,0,0x0,8
tick,0x7fffe05afeb4,81406724,0,0x0,8
tick,0x7fffe05afeb4,81422866,0,0x0,8
tick,0x7fffe05afeb4,81438997,0,0x0,8
tick,0x7fffe05afeb4,81454780,0,0x0,8
tick,0x7fffe05afeb4,81469967,0,0x0,8
tick,0x7fffe05afeb4,81485892,0,0x0,8
tick,0x7fffe05afeb4,81501958,0,0x0,8
tick,0x7fffe05afeb4,81517766,0,0x0,8
tick,0x7fffe05afeb4,81533748,0,0x0,8
tick,0x7fffe05afeb4,81550017,0,0x0,8
tick,0x7fffe05afeb4,81565762,0,0x0,8
tick,0x7fffe05afeb4,81581771,0,0x0,8
tick,0x7fffe05afeb4,81597825,0,0x0,8
tick,0x7fffe05afeb4,81614024,0,0x0,8
tick,0x7fffe05afeb4,81629801,0,0x0,8
tick,0x7fffe05afeb4,81645835,0,0x0,8
tick,0x7fffe05afeb4,81661915,0,0x0,8
tick,0x7fffe05afeb4,81677842,0,0x0,8
tick,0x7fffe05afeb4,81693761,0,0x0,8
tick,0x7fffe05afeb4,81710096,0,0x0,8
tick,0x7fffe05afeb4,81725757,0,0x0,8
tick,0x7fffe05afeb4,81741801,0,0x0,8
tick,0x7fffe05afeb4,81756742,0,0x0,8
tick,0x7fffe05afeb4,81772816,0,0x0,8
tick,0x7fffe05afeb4,81788826,0,0x0,8
tick,0x7fffe05afeb4,81804814,0,0x0,8
tick,0x7fffe05afeb4,81820779,0,0x0,8
tick,0x7fffe05afeb4,81836834,0,0x0,8
tick,0x7fffe05afeb4,81852807,0,0x0,8
tick,0x7fffe05afeb4,81867891,0,0x0,8
tick,0x7fffe05afeb4,81883975,0,0x0,8
tick,0x7fffe05afeb4,81899833,0,0x0,8
tick,0x7fffe05afeb4,81914755,0,0x0,8
tick,0x7fffe05afeb4,81930905,0,0x0,8
tick,0x7fffe05afeb4,81945760,0,0x0,8
tick,0x7fffe05afeb4,81962192,0,0x0,8
tick,0x7fffe05afeb4,81976813,0,0x0,8
tick,0x7fffe05afeb4,81992962,0,0x0,8
tick,0x7fffe05afeb4,82007818,0,0x0,8
tick,0x7fffe05afeb4,82023816,0,0x0,8
tick,0x7fffe05afeb4,82039837,0,0x0,8
tick,0x7fffe05afeb4,82054941,0,0x0,8
tick,0x7fffe05afeb4,82070804,0,0x0,8
tick,0x7fffe05afeb4,82085834,0,0x0,8
tick,0x7fffe05afeb4,82101771,0,0x0,8
tick,0x7fffe05afeb4,82117949,0,0x0,8
tick,0x7fffe05afeb4,82133787,0,0x0,8
tick,0x7fffe05afeb4,82149852,0,0x0,8
tick,0x7fffe05afeb4,82165781,0,0x0,8
tick,0x7fffe05afeb4,82181854,0,0x0,8
tick,0x7fffe05afeb4,82196815,0,0x0,8
tick,0x7fffe05afeb4,82213005,0,0x0,8
tick,0x7fffe05afeb4,82228822,0,0x0,8
tick,0x7fffe05afeb4,82244997,0,0x0,8
tick,0x7fffe05afeb4,82260822,0,0x0,8
tick,0x7fffe05afeb4,82276885,0,0x0,8
tick,0x7fffe05afeb4,82292824,0,0x0,8
tick,0x7fffe05afeb4,82308891,0,0x0,8
tick,0x7fffe05afeb4,82324821,0,0x0,8
tick,0x7fffe05afeb4,82340888,0,0x0,8
tick,0x7fffe05afeb4,82356907,0,0x0,8
tick,0x7fffe05afeb4,82372827,0,0x0,8
tick,0x7fffe05afeb4,82388922,0,0x0,8
tick,0x7fffe05afeb4,82404731,0,0x0,8
tick,0x7fffe05afeb4,82420743,0,0x0,8
tick,0x7fffe05afeb4,82436225,0,0x0,8
tick,0x7fffe05afeb4,82451797,0,0x0,8
tick,0x7fffe05afeb4,82466835,0,0x0,8
tick,0x7fffe05afeb4,82482849,0,0x0,8
tick,0x7fffe05afeb4,82497819,0,0x0,8
tick,0x7fffe05afeb4,82513750,0,0x0,8
tick,0x7fffe05afeb4,82529856,0,0x0,8
tick,0x7fffe05afeb4,82545814,0,0x0,8
tick,0x7fffe05afeb4,82561840,0,0x0,8
tick,0x7fffe05afeb4,82577771,0,0x0,8
tick,0x7fffe05afeb4,82593882,0,0x0,8
tick,0x7fffe05afeb4,82609815,0,0x0,8
tick,0x7fffe05afeb4,82626040,0,0x0,8
tick,0x7fffe05afeb4,82641811,0,0x0,8
tick,0x7fffe05afeb4,82657845,0,0x0,8
tick,0x7fffe05afeb4,82673752,0,0x0,8
tick,0x7fffe05afeb4,82688832,0,0x0,8
tick,0x7fffe05afeb4,82704815,0,0x0,8
tick,0x7fffe05afeb4,82720891,0,0x0,8
tick,0x7fffe05afeb4,82736821,0,0x0,8
tick,0x7fffe05afeb4,82753066,0,0x0,8
tick,0x7fffe05afeb4,82768992,0,0x0,8
tick,0x7fffe05afeb4,82784841,0,0x0,8
tick,0x7fffe05afeb4,82800753,0,0x0,8
tick,0x7fffe05afeb4,82816902,0,0x0,8
tick,0x7fffe05afeb4,82832772,0,0x0,8
tick,0x7fffe05afeb4,82847740,0,0x0,8
tick,0x7fffe05afeb4,82863749,0,0x0,8
tick,0x7fffe05afeb4,82880013,0,0x0,8
tick,0x7fffe05afeb4,82895806,0,0x0,8
tick,0x7fffe05afeb4,82911732,0,0x0,8
tick,0x7fffe05afeb4,82927740,0,0x0,8
tick,0x7fffe05afeb4,82943880,0,0x0,8
tick,0x7fffe05afeb4,82959883,0,0x0,8
tick,0x7fffe05afeb4,82975805,0,0x0,8
tick,0x7fffe05afeb4,82991882,0,0x0,8
tick,0x7fffe05afeb4,83007882,0,0x0,8
tick,0x7fffe05afeb4,83023738,0,0x0,8
tick,0x7fffe05afeb4,83039823,0,0x0,8
tick,0x7fffe05afeb4,83054831,0,0x0,8
tick,0x7fffe05afeb4,83070127,0,0x0,8
tick,0x7fffe05afeb4,83085856,0,0x0,8
tick,0x7fffe05afeb4,83101817,0,0x0,8
tick,0x7fffe05afeb4,83117767,0,0x0,8
tick,0x7fffe05afeb4,83134368,0,0x0,8
tick,0x7fffe05afeb4,83149946,0,0x0,8
tick,0x7fffe05afeb4,83165814,0,0x0,8
tick,0x7fffe05afeb4,83181817,0,0x0,8
tick,0x7fffe05afeb4,83197803,0,0x0,8
tick,0x7fffe05afeb4,83213821,0,0x0,8
tick,0x7fffe05afeb4,83229889,0,0x0,8
tick,0x7fffe05afeb4,83245733,0,0x0,8
tick,0x7fffe05afeb4,83261896,0,0x0,8
tick,0x7fffe05afeb4,83277883,0,0x0,8
tick,0x7fffe05afeb4,83293828,0,0x0,8
tick,0x7fffe05afeb4,83309870,0,0x0,8
tick,0x7fffe05afeb4,83325980,0,0x0,8
tick,0x7fffe05afeb4,83340814,0,0x0,8
tick,0x7fffe05afeb4,83355948,0,0x0,8
tick,0x7fffe05afeb4,83371894,0,0x0,8
tick,0x7fffe05afeb4,83387906,0,0x0,8
tick,0x7fffe05afeb4,83403881,0,0x0,8
tick,0x7fffe05afeb4,83419979,0,0x0,8
tick,0x7fffe05afeb4,83436001,0,0x0,8
tick,0x7fffe05afeb4,83450814,0,0x0,8
tick,0x7fffe05afeb4,83465866,0,0x0,8
tick,0x7fffe05afeb4,83481844,0,0x0,8
tick,0x7fffe05afeb4,83497743,0,0x0,8
tick,0x7fffe05afeb4,83513786,0,0x0,8
tick,0x7fffe05afeb4,83529857,0,0x0,8
tick,0x7fffe05afeb4,83545741,0,0x0,8
tick,0x7fffe05afeb4,83561733,0,0x0,8
tick,0x7fffe05afeb4,83577785,0,0x0,8
tick,0x7fffe05afeb4,83593830,0,0x0,8
tick,0x7fffe05afeb4,83609809,0,0x0,8
tick,0x7fffe05afeb4,83624884,0,0x0,8
tick,0x7fffe05afeb4,83640954,0,0x0,8
tick,0x7fffe05afeb4,83656822,0,0x0,8
tick,0x7fffe05afeb4,83672828,0,0x0,8
tick,0x7fffe05afeb4,83688718,0,0x0,8
tick,0x7fffe05afeb4,83704878,0,0x0,8
tick,0x7fffe05afeb4,83720786,0,0x0,8
tick,0x7fffe05afeb4,83736989,0,0x0,8
tick,0x7fffe05afeb4,83752807,0,0x0,8
tick,0x7fffe05afeb4,83768926,0,0x0,8
tick,0x7fffe05afeb4,83784875,0,0x0,8
tick,0x7fffe05afeb4,83800746,0,0x0,8
tick,0x7fffe05afeb4,83816719,0,0x0,8
tick,0x7fffe05afeb4,83832801,0,0x0,8
tick,0x7fffe05afeb4,83848844,0,0x0,8
tick,0x7fffe05afeb4,83864750,0,0x0,8
tick,0x7fffe05afeb4,83879866,0,0x0,8
tick,0x7fffe05afeb4,83894910,0,0x0,8
tick,0x7fffe05afeb4,83910749,0,0x0,8
tick,0x7fffe05afeb4,83926776,0,0x0,8
tick,0x7fffe05afeb4,83942830,0,0x0,8
tick,0x7fffe05afeb4,83957845,0,0x0,8
tick,0x7fffe05afeb4,83973778,0,0x0,8
tick,0x7fffe05afeb4,83989790,0,0x0,8
tick,0x7fffe05afeb4,84005802,0,0x0,8
tick,0x7fffe05afeb4,84021822,0,0x0,8
tick,0x7fffe05afeb4,84037740,0,0x0,8
tick,0x7fffe05afeb4,84054366,0,0x0,8
tick,0x7fffe05afeb4,84070254,0,0x0,8
tick,0x7fffe05afeb4,84086208,0,0x0,8
tick,0x7fffe05afeb4,84101899,0,0x0,8
tick,0x7fffe05afeb4,84117837,0,0x0,8
tick,0x7fffe05afeb4,84134478,0,0x0,8
tick,0x7fffe05afeb4,84150421,0,0x0,8
tick,0x7fffe05afeb4,84165432,0,0x0,8
tick,0x7fffe05afeb4,84180123,0,0x0,8
tick,0x7fffe05afeb4,84194880,0,0x0,8
tick,0x7fffe05afeb4,84211233,0,0x0,8
tick,0x7fffe05afeb4,84225821,0,0x0,8
tick,0x7fffe05afeb4,84242244,0,0x0,8
tick,0x7fffe05afeb4,84257835,0,0x0,8
tick,0x7fffe05afeb4,84273885,0,0x0,8
tick,0x7fffe05afeb4,84290254,0,0x0,8
tick,0x7fffe05afeb4,84305934,0,0x0,8
tick,0x7fffe05afeb4,84321981,0,0x0,8
tick,0x7fffe05afeb4,84338075,0,0x0,8
tick,0x7fffe05afeb4,84353872,0,0x0,8
tick,0x7fffe05afeb4,84369992,0,0x0,8
tick,0x7fffe05afeb4,84385770,0,0x0,8
tick,0x7fffe05afeb4,84401854,0,0x0,8
tick,0x7fffe05afeb4,84417894,0,0x0,8
tick,0x7fffe05afeb4,84433836,0,0x0,8
tick,0x7fffe05afeb4,84448794,0,0x0,8
tick,0x7fffe05afeb4,84464892,0,0x0,8
tick,0x7fffe05afeb4,84479932,0,0x0,8
tick,0x7fffe05afeb4,84495734,0,0x0,8
tick,0x7fffe05afeb4,84511804,0,0x0,8
tick,0x7fffe05afeb4,84527881,0,0x0,8
tick,0x7fffe05afeb4,84543779,0,0x0,8
tick,0x7fffe05afeb4,84560403,0,0x0,8
tick,0x7fffe05afeb4,84574799,0,0x0,8
tick,0x7fffe05afeb4,84591008,0,0x0,8
tick,0x7fffe05afeb4,84606826,0,0x0,8
tick,0x7fffe05afeb4,84622854,0,0x0,8
tick,0x7fffe05afeb4,84638998,0,0x0,8
tick,0x7fffe05afeb4,84655067,0,0x0,8
tick,0x7fffe05afeb4,84671008,0,0x0,8
tick,0x7fffe05afeb4,84686799,0,0x0,8
tick,0x7fffe05afeb4,84702731,0,0x0,8
tick,0x7fffe05afeb4,84718882,0,0x0,8
tick,0x7fffe05afeb4,84734809,0,0x0,8
tick,0x7fffe05afeb4,84751002,0,0x0,8
tick,0x7fffe05afeb4,84766733,0,0x0,8
tick,0x7fffe05afeb4,84782930,0,0x0,8
tick,0x7fffe05afeb4,84797744,0,0x0,8
tick,0x7fffe05afeb4,84813911,0,0x0,8
tick,0x7fffe05afeb4,84829824,0,0x0,8
tick,0x7fffe05afeb4,84845965,0,0x0,8
tick,0x7fffe05afeb4,84861958,0,0x0,8
tick,0x7fffe05afeb4,84877819,0,0x0,8
tick,0x7fffe05afeb4,84893932,0,0x0,8
tick,0x7fffe05afeb4,84909926,0,0x0,8
tick,0x7fffe05afeb4,84925849,0,0x0,8
tick,0x7fffe05afeb4,84941828,0,0x0,8
tick,0x7fffe05afeb4,84957825,0,0x0,8
tick,0x7fffe05afeb4,84973819,0,0x0,8
tick,0x7fffe05afeb4,84989758,0,0x0,8
tick,0x7fffe05afeb4,85005814,0,0x0,8
tick,0x7fffe05afeb4,85021718,0,0x0,8
tick,0x7fffe05afeb4,85036724,0,0x0,8
tick,0x7fffe05afeb4,85052749,0,0x0,8
tick,0x7fffe05afeb4,85068816,0,0x0,8
tick,0x7fffe05afeb4,85083771,0,0x0,8
tick,0x7fffe05afeb4,85098821,0,0x0,8
tick,0x7fffe05afeb4,85114782,0,0x0,8
tick,0x7fffe05afeb4,85130810,0,0x0,8
tick,0x7fffe05afeb4,85146816,0,0x0,8
tick,0x7fffe05afeb4,85162745,0,0x0,8
tick,0x7fffe05afeb4,85178754,0,0x0,8
tick,0x7fffe05afeb4,85194817,0,0x0,8
tick,0x7fffe05afeb4,85210775,0,0x0,8
tick,0x7fffe05afeb4,85225754,0,0x0,8
tick,0x7fffe05afeb4,85241758,0,0x0,8
tick,0x7fffe05afeb4,85257776,0,0x0,8
tick,0x7fffe05afeb4,85273733,0,0x0,8
tick,0x7fffe05afeb4,85289778,0,0x0,8
tick,0x7fffe05afeb4,85305819,0,0x0,8
tick,0x7fffe05afeb4,85321744,0,0x0,8
tick,0x7fffe05afeb4,85337900,0,0x0,8
tick,0x7fffe05afeb4,85353940,0,0x0,8
tick,0x7fffe05afeb4,85369876,0,0x0,8
tick,0x7fffe05afeb4,85384734,0,0x0,8
tick,0x7fffe05afeb4,85399776,0,0x0,8
tick,0x7fffe05afeb4,85415796,0,0x0,8
tick,0x7fffe05afeb4,85431832,0,0x0,8
tick,0x7fffe05afeb4,85447769,0,0x0,8
tick,0x7fffe05afeb4,85463775,0,0x0,8
tick,0x7fffe05afeb4,85479796,0,0x0,8
tick,0x7fffe05afeb4,85495747,0,0x0,8
tick,0x7fffe05afeb4,85511726,0,0x0,8
tick,0x7fffe05afeb4,85526822,0,0x0,8
tick,0x7fffe05afeb4,85542738,0,0x0,8
tick,0x7fffe05afeb4,85557855,0,0x0,8
tick,0x7fffe05afeb4,85573813,0,0x0,8
tick,0x7fffe05afeb4,85589880,0,0x0,8
tick,0x7fffe05afeb4,85605771,0,0x0,8
tick,0x7fffe05afeb4,85621730,0,0x0,8
tick,0x7fffe05afeb4,85637729,0,0x0,8
tick,0x7fffe05afeb4,85653836,0,0x0,8
tick,0x7fffe05afeb4,85669888,0,0x0,8
tick,0x7fffe05afeb4,85685816,0,0x0,8
tick,0x7fffe05afeb4,85701778,0,0x0,8
tick,0x7fffe05afeb4,85717805,0,0x0,8
tick,0x7fffe05afeb4,85733767,0,0x0,8
tick,0x7fffe05afeb4,85748732,0,0x0,8
tick,0x7fffe05afeb4,85764763,0,0x0,8
tick,0x7fffe05afeb4,85779847,0,0x0,8
tick,0x7fffe05afeb4,85795786,0,0x0,8
tick,0x7fffe05afeb4,85811737,0,0x0,8
tick,0x7fffe05afeb4,85827769,0,0x0,8
tick,0x7fffe05afeb4,85843745,0,0x0,8
tick,0x7fffe05afeb4,85859784,0,0x0,8
tick,0x7fffe05afeb4,85875761,0,0x0,8
tick,0x7fffe05afeb4,85891756,0,0x0,8
tick,0x7fffe05afeb4,85907741,0,0x0,8
tick,0x7fffe05afeb4,85923751,0,0x0,8
tick,0x7fffe05afeb4,85938725,0,0x0,8
tick,0x7fffe05afeb4,85954762,0,0x0,8
tick,0x7fffe05afeb4,85970732,0,0x0,8
tick,0x7fffe05afeb4,85986741,0,0x0,8
tick,0x7fffe05afeb4,86002759,0,0x0,8
tick,0x7fffe05afeb4,86018745,0,0x0,8
tick,0x7fffe05afeb4,86034746,0,0x0,8
tick,0x7fffe05afeb4,86050736,0,0x0,8
tick,0x7fffe05afeb4,86066754,0,0x0,8
tick,0x7fffe05afeb4,86082765,0,0x0,8
tick,0x7fffe05afeb4,86097741,0,0x0,8
tick,0x7fffe05afeb4,86113779,0,0x0,8
tick,0x7fffe05afeb4,86129794,0,0x0,8
tick,0x7fffe05afeb4,86145873,0,0x0,8
tick,0x7fffe05afeb4,86161825,0,0x0,8
tick,0x7fffe05afeb4,86177733,0,0x0,8
tick,0x7fffe05afeb4,86193780,0,0x0,8
tick,0x7fffe05afeb4,86209763,0,0x0,8
tick,0x7fffe05afeb4,86225753,0,0x0,8
tick,0x7fffe05afeb4,86241817,0,0x0,8
tick,0x7fffe05afeb4,86257818,0,0x0,8
tick,0x7fffe05afeb4,86273821,0,0x0,8
tick,0x7fffe05afeb4,86289766,0,0x0,8
tick,0x7fffe05afeb4,86305820,0,0x0,8
tick,0x7fffe05afeb4,86321735,0,0x0,8
tick,0x7fffe05afeb4,86337758,0,0x0,8
tick,0x7fffe05afeb4,86353736,0,0x0,8
tick,0x7fffe05afeb4,86369844,0,0x0,8
tick,0x7fffe05afeb4,86385906,0,0x0,8
tick,0x7fffe05afeb4,86401729,0,0x0,8
tick,0x7fffe05afeb4,86417837,0,0x0,8
tick,0x7fffe05afeb4,86433849,0,0x0,8
tick,0x7fffe05afeb4,86449812,0,0x0,8
tick,0x7fffe05afeb4,86465825,0,0x0,8
tick,0x7fffe05afeb4,86481806,0,0x0,8
tick,0x7fffe05afeb4,86497762,0,0x0,8
tick,0x7fffe05afeb4,86513767,0,0x0,8
tick,0x7fffe05afeb4,86529813,0,0x0,8
tick,0x7fffe05afeb4,86545759,0,0x0,8
tick,0x7fffe05afeb4,86561738,0,0x0,8
tick,0x7fffe05afeb4,86577748,0,0x0,8
tick,0x7fffe05afeb4,86593811,0,0x0,8
tick,0x7fffe05afeb4,86609767,0,0x0,8
tick,0x7fffe05afeb4,86625814,0,0x0,8
tick,0x7fffe05afeb4,86641738,0,0x0,8
tick,0x7fffe05afeb4,86656727,0,0x0,8
tick,0x7fffe05afeb4,86672745,0,0x0,8
tick,0x7fffe05afeb4,86688741,0,0x0,8
tick,0x7fffe05afeb4,86704810,0,0x0,8
tick,0x7fffe05afeb4,86720808,0,0x0,8
tick,0x7fffe05afeb4,86736808,0,0x0,8
tick,0x7fffe05afeb4,86752736,0,0x0,8
tick,0x7fffe05afeb4,86768739,0,0x0,8
tick,0x7fffe05afeb4,86784734,0,0x0,8
tick,0x7fffe05afeb4,86800748,0,0x0,8
tick,0x7fffe05afeb4,86816810,0,0x0,8
tick,0x7fffe05afeb4,86832753,0,0x0,8
tick,0x7fffe05afeb4,86848799,0,0x0,8
tick,0x7fffe05afeb4,86864752,0,0x0,8
tick,0x7fffe05afeb4,86880736,0,0x0,8
tick,0x7fffe05afeb4,86895946,0,0x0,8
tick,0x7fffe05afeb4,86911720,0,0x0,8
tick,0x7fffe05afeb4,86926747,0,0x0,8
tick,0x7fffe05afeb4,86942731,0,0x0,8
tick,0x7fffe05afeb4,86958741,0,0x0,8
tick,0x7fffe05afeb4,86974788,0,0x0,8
tick,0x7fffe05afeb4,86990749,0,0x0,8
tick,0x7fffe05afeb4,87006783,0,0x0,8
tick,0x7fffe05afeb4,87022742,0,0x0,8
tick,0x7fffe05afeb4,87038821,0,0x0,8
tick,0x7fffe05afeb4,87054819,0,0x0,8
tick,0x7fffe05afeb4,87070765,0,0x0,8
tick,0x7fffe05afeb4,87085883,0,0x0,8
tick,0x7fffe05afeb4,87101745,0,0x0,8
tick,0x7fffe05afeb4,87116786,0,0x0,8
tick,0x7fffe05afeb4,87132774,0,0x0,8
tick,0x7fffe05afeb4,87148866,0,0x0,8
tick,0x7fffe05afeb4,87164754,0,0x0,8
tick,0x7fffe05afeb4,87179816,0,0x0,8
tick,0x7fffe05afeb4,87195737,0,0x0,8
tick,0x7fffe05afeb4,87211787,0,0x0,8
tick,0x7fffe05afeb4,87227868,0,0x0,8
tick,0x7fffe05afeb4,87243732,0,0x0,8
tick,0x7fffe05afeb4,87259796,0,0x0,8
tick,0x7fffe05afeb4,87275794,0,0x0,8
tick,0x7fffe05afeb4,87291732,0,0x0,8
tick,0x7fffe05afeb4,87307789,0,0x0,8
tick,0x7fffe05afeb4,87323781,0,0x0,8
tick,0x7fffe05afeb4,87339781,0,0x0,8
tick,0x7fffe05afeb4,87355739,0,0x0,8
tick,0x7fffe05afeb4,87371729,0,0x0,8
tick,0x7fffe05afeb4,87387747,0,0x0,8
tick,0x7fffe05afeb4,87403831,0,0x0,8
tick,0x7fffe05afeb4,87418814,0,0x0,8
tick,0x7fffe05afeb4,87435066,0,0x0,8
tick,0x7fffe05afeb4,87450754,0,0x0,8
tick,0x7fffe05afeb4,87466738,0,0x0,8
tick,0x7fffe05afeb4,87482743,0,0x0,8
tick,0x7fffe05afeb4,87498739,0,0x0,8
tick,0x7fffe05afeb4,87514805,0,0x0,8
tick,0x7fffe05afeb4,87530732,0,0x0,8
tick,0x7fffe05afeb4,87545733,0,0x0,8
tick,0x7fffe05afeb4,87561822,0,0x0,8
tick,0x7fffe05afeb4,87577736,0,0x0,8
tick,0x7fffe05afeb4,87593728,0,0x0,8
tick,0x7fffe05afeb4,87609796,0,0x0,8
tick,0x7fffe05afeb4,87625819,0,0x0,8
tick,0x7fffe05afeb4,87641735,0,0x0,8
tick,0x7fffe05afeb4,87657745,0,0x0,8
tick,0x7fffe05afeb4,87673900,0,0x0,8
tick,0x7fffe05afeb4,87689761,0,0x0,8
tick,0x7fffe05afeb4,87705814,0,0x0,8
tick,0x7fffe05afeb4,87721732,0,0x0,8
tick,0x7fffe05afeb4,87737813,0,0x0,8
tick,0x7fffe05afeb4,87753738,0,0x0,8
tick,0x7fffe05afeb4,87769876,0,0x0,8
tick,0x7fffe05afeb4,87785824,0,0x0,8
tick,0x7fffe05afeb4,87801776,0,0x0,8
tick,0x7fffe05afeb4,87816735,0,0x0,8
tick,0x7fffe05afeb4,87832730,0,0x0,8
tick,0x7fffe05afeb4,87848758,0,0x0,8
tick,0x7fffe05afeb4,87864813,0,0x0,8
tick,0x7fffe05afeb4,87880740,0,0x0,8
tick,0x7fffe05afeb4,87895790,0,0x0,8
tick,0x7fffe05afeb4,87911809,0,0x0,8
tick,0x7fffe05afeb4,87926744,0,0x0,8
tick,0x7fffe05afeb4,87942755,0,0x0,8
tick,0x7fffe05afeb4,87958748,0,0x0,8
tick,0x7fffe05afeb4,87974733,0,0x0,8
tick,0x7fffe05afeb4,87989765,0,0x0,8
tick,0x7fffe05afeb4,88005834,0,0x0,8
tick,0x7fffe05afeb4,88021740,0,0x0,8
tick,0x7fffe05afeb4,88037731,0,0x0,8
tick,0x7fffe05afeb4,88053765,0,0x0,8
tick,0x7fffe05afeb4,88069838,0,0x0,8
tick,0x7fffe05afeb4,88085859,0,0x0,8
tick,0x7fffe05afeb4,88100740,0,0x0,8
tick,0x7fffe05afeb4,88116818,0,0x0,8
tick,0x7fffe05afeb4,88131735,0,0x0,8
tick,0x7fffe05afeb4,88147785,0,0x0,8
tick,0x7fffe05afeb4,88163796,0,0x0,8
tick,0x7fffe05afeb4,88179827,0,0x0,8
tick,0x7fffe05afeb4,88195803,0,0x0,8
tick,0x7fffe05afeb4,88211794,0,0x0,8
tick,0x7fffe05afeb4,88227768,0,0x0,8
tick,0x7fffe05afeb4,88243755,0,0x0,8
tick,0x7fffe05afeb4,88258853,0,0x0,8
tick,0x7fffe05afeb4,88273817,0,0x0,8
tick,0x7fffe05afeb4,88296054,0,0x0,8
tick,0x7fffe05afeb4,88304926,0,0x0,8
tick,0x7fffe05afeb4,88323811,0,0x0,8
tick,0x7fffe05afeb4,88336756,0,0x0,8
tick,0x7fffe05afeb4,88361073,0,0x0,8
tick,0x7fffe05afeb4,88370982,0,0x0,8
tick,0x7fffe05afeb4,88385149,0,0x0,8
tick,0x7fffe05afeb4,88400784,0,0x0,8
tick,0x7fffe05afeb4,88416430,0,0x0,8
tick,0x7fffe05afeb4,88431726,0,0x0,8
tick,0x7fffe05afeb4,88448066,0,0x0,8
tick,0x7fffe05afeb4,88463802,0,0x0,8
tick,0x7fffe05afeb4,88479941,0,0x0,8
tick,0x7fffe05afeb4,88494761,0,0x0,8
tick,0x7fffe05afeb4,88510922,0,0x0,8
tick,0x7fffe05afeb4,88526731,0,0x0,8
tick,0x7fffe05afeb4,88542780,0,0x0,8
tick,0x7fffe05afeb4,88557742,0,0x0,8
tick,0x7fffe05afeb4,88573975,0,0x0,8
tick,0x7fffe05afeb4,88589751,0,0x0,8
tick,0x7fffe05afeb4,88605765,0,0x0,8
tick,0x7fffe05afeb4,88621738,0,0x0,8
tick,0x7fffe05afeb4,88637061,0,0x0,8
tick,0x7fffe05afeb4,88652811,0,0x0,8
tick,0x7fffe05afeb4,88668861,0,0x0,8
tick,0x7fffe05afeb4,88683782,0,0x0,8
tick,0x7fffe05afeb4,88699862,0,0x0,8
tick,0x7fffe05afeb4,88714741,0,0x0,8
tick,0x7fffe05afeb4,88731122,0,0x0,8
tick,0x7fffe05afeb4,88745807,0,0x0,8
tick,0x7fffe05afeb4,88761835,0,0x0,8
tick,0x7fffe05afeb4,88777837,0,0x0,8
tick,0x7fffe05afeb4,88793804,0,0x0,8
tick,0x7fffe05afeb4,88809790,0,0x0,8
tick,0x7fffe05afeb4,88825742,0,0x0,8
tick,0x7fffe05afeb4,88841730,0,0x0,8
tick,0x7fffe05afeb4,88856745,0,0x0,8
tick,0x7fffe05afeb4,88872738,0,0x0,8
tick,0x7fffe05afeb4,88888800,0,0x0,8
tick,0x7fffe05afeb4,88904810,0,0x0,8
tick,0x7fffe05afeb4,88920717,0,0x0,8
tick,0x7fffe05afeb4,88936731,0,0x0,8
tick,0x7fffe05afeb4,88952790,0,0x0,8
tick,0x7fffe05afeb4,88968751,0,0x0,8
tick,0x7fffe05afeb4,88983736,0,0x0,8
tick,0x7fffe05afeb4,88999930,0,0x0,8
tick,0x7fffe05afeb4,89015787,0,0x0,8
tick,0x7fffe05afeb4,89031730,0,0x0,8
tick,0x7fffe05afeb4,89047745,0,0x0,8
tick,0x7fffe05afeb4,89063733,0,0x0,8
tick,0x7fffe05afeb4,89079812,0,0x0,8
tick,0x7fffe05afeb4,89095740,0,0x0,8
tick,0x7fffe05afeb4,89111798,0,0x0,8
tick,0x7fffe05afeb4,89127737,0,0x0,8
tick,0x7fffe05afeb4,89143730,0,0x0,8
tick,0x7fffe05afeb4,89158908,0,0x0,8
tick,0x7fffe05afeb4,89174817,0,0x0,8
tick,0x7fffe05afeb4,89190821,0,0x0,8
tick,0x7fffe05afeb4,89206732,0,0x0,8
tick,0x7fffe05afeb4,89222887,0,0x0,8
tick,0x7fffe05afeb4,89238802,0,0x0,8
tick,0x7fffe05afeb4,89254727,0,0x0,8
tick,0x7fffe05afeb4,89270733,0,0x0,8
tick,0x7fffe05afeb4,89286816,0,0x0,8
tick,0x7fffe05afeb4,89302807,0,0x0,8
tick,0x7fffe05afeb4,89318726,0,0x0,8
tick,0x7fffe05afeb4,89333841,0,0x0,8
tick,0x7fffe05afeb4,89349801,0,0x0,8
tick,0x7fffe05afeb4,89365789,0,0x0,8
tick,0x7fffe05afeb4,89381746,0,0x0,8
tick,0x7fffe05afeb4,89397735,0,0x0,8
tick,0x7fffe05afeb4,89413807,0,0x0,8
tick,0x7fffe05afeb4,89429872,0,0x0,8
tick,0x7fffe05afeb4,89445774,0,0x0,8
tick,0x7fffe05afeb4,89461850,0,0x0,8
tick,0x7fffe05afeb4,89477829,0,0x0,8
tick,0x7fffe05afeb4,89493733,0,0x0,8
tick,0x7fffe05afeb4,89509924,0,0x0,8
tick,0x7fffe05afeb4,89525816,0,0x0,8
tick,0x7fffe05afeb4,89541731,0,0x0,8
tick,0x7fffe05afeb4,89556817,0,0x0,8
tick,0x7fffe05afeb4,89572826,0,0x0,8
tick,0x7fffe05afeb4,89588806,0,0x0,8
tick,0x7fffe05afeb4,89604743,0,0x0,8
tick,0x7fffe05afeb4,89620751,0,0x0,8
tick,0x7fffe05afeb4,89636732,0,0x0,8
tick,0x7fffe05afeb4,89652838,0,0x0,8
tick,0x7fffe05afeb4,89668851,0,0x0,8
tick,0x7fffe05afeb4,89684832,0,0x0,8
tick,0x7fffe05afeb4,89699826,0,0x0,8
tick,0x7fffe05afeb4,89715726,0,0x0,8
tick,0x7fffe05afeb4,89732026,0,0x0,8
tick,0x7fffe05afeb4,89747728,0,0x0,8
tick,0x7fffe05afeb4,89763745,0,0x0,8
tick,0x7fffe05afeb4,89780058,0,0x0,8
tick,0x7fffe05afeb4,89795802,0,0x0,8
tick,0x7fffe05afeb4,89811787,0,0x0,8
tick,0x7fffe05afeb4,89827751,0,0x0,8
tick,0x7fffe05afeb4,89843755,0,0x0,8
tick,0x7fffe05afeb4,89859783,0,0x0,8
tick,0x7fffe05afeb4,89875738,0,0x0,8
tick,0x7fffe05afeb4,89891743,0,0x0,8
tick,0x7fffe05afeb4,89906798,0,0x0,8
tick,0x7fffe05afeb4,89922739,0,0x0,8
tick,0x7fffe05afeb4,89938754,0,0x0,8
tick,0x7fffe05afeb4,89953751,0,0x0,8
tick,0x7fffe05afeb4,89969781,0,0x0,8
tick,0x7fffe05afeb4,89985733,0,0x0,8
tick,0x7fffe05afeb4,90001784,0,0x0,8
tick,0x7fffe05afeb4,90016731,0,0x0,8
tick,0x7fffe05afeb4,90032823,0,0x0,8
tick,0x7fffe05afeb4,90047803,0,0x0,8
tick,0x7fffe05afeb4,90063727,0,0x0,8
tick,0x7fffe05afeb4,90079781,0,0x0,8
tick,0x7fffe05afeb4,90094749,0,0x0,8
tick,0x7fffe05afeb4,90110753,0,0x0,8
tick,0x7fffe05afeb4,90126739,0,0x0,8
tick,0x7fffe05afeb4,90142726,0,0x0,8
tick,0x7fffe05afeb4,90158879,0,0x0,8
tick,0x7fffe05afeb4,90174738,0,0x0,8
tick,0x7fffe05afeb4,90189831,0,0x0,8
tick,0x7fffe05afeb4,90205742,0,0x0,8
tick,0x7fffe05afeb4,90221742,0,0x0,8
tick,0x7fffe05afeb4,90237745,0,0x0,8
tick,0x7fffe05afeb4,90253807,0,0x0,8
tick,0x7fffe05afeb4,90269755,0,0x0,8
tick,0x7fffe05afeb4,90285738,0,0x0,8
tick,0x7fffe05afeb4,90301732,0,0x0,8
tick,0x7fffe05afeb4,90317748,0,0x0,8
tick,0x7fffe05afeb4,90333778,0,0x0,8
tick,0x7fffe05afeb4,90349785,0,0x0,8
tick,0x7fffe05afeb4,90364789,0,0x0,8
tick,0x7fffe05afeb4,90380758,0,0x0,8
tick,0x7fffe05afeb4,90396750,0,0x0,8
tick,0x7fffe05afeb4,90412750,0,0x0,8
tick,0x7fffe05afeb4,90428770,0,0x0,8
tick,0x7fffe05afeb4,90444806,0,0x0,8
tick,0x7fffe05afeb4,90460755,0,0x0,8
tick,0x7fffe05afeb4,90476762,0,0x0,8
tick,0x7fffe05afeb4,90492769,0,0x0,8
tick,0x7fffe05afeb4,90507742,0,0x0,8
tick,0x7fffe05afeb4,90523768,0,0x0,8
tick,0x7fffe05afeb4,90539746,0,0x0,8
tick,0x7fffe05afeb4,90555762,0,0x0,8
tick,0x7fffe05afeb4,90571783,0,0x0,8
tick,0x7fffe05afeb4,90587754,0,0x0,8
tick,0x7fffe05afeb4,90603747,0,0x0,8
tick,0x7fffe05afeb4,90619779,0,0x0,8
tick,0x7fffe05afeb4,90635742,0,0x0,8
tick,0x7fffe05afeb4,90651753,0,0x0,8
tick,0x7fffe05afeb4,90666766,0,0x0,8
tick,0x7fffe05afeb4,90682735,0,0x0,8
tick,0x7fffe05afeb4,90698739,0,0x0,8
tick,0x7fffe05afeb4,90714757,0,0x0,8
tick,0x7fffe05afeb4,90730739,0,0x0,8
tick,0x7fffe05afeb4,90745743,0,0x0,8
tick,0x7fffe05afeb4,90761731,0,0x0,8
tick,0x7fffe05afeb4,90777823,0,0x0,8
tick,0x7fffe05afeb4,90793787,0,0x0,8
tick,0x7fffe05afeb4,90809775,0,0x0,8
tick,0x7fffe05afeb4,90825831,0,0x0,8
tick,0x7fffe05afeb4,90841732,0,0x0,8
tick,0x7fffe05afeb4,90857732,0,0x0,8
tick,0x7fffe05afeb4,90873746,0,0x0,8
tick,0x7fffe05afeb4,90889774,0,0x0,8
tick,0x7fffe05afeb4,90905826,0,0x0,8
tick,0x7fffe05afeb4,90921739,0,0x0,8
tick,0x7fffe05afeb4,90937822,0,0x0,8
tick,0x7fffe05afeb4,90953755,0,0x0,8
tick,0x7fffe05afeb4,90969798,0,0x0,8
tick,0x7fffe05afeb4,90985750,0,0x0,8
tick,0x7fffe05afeb4,91000754,0,0x0,8
tick,0x7fffe05afeb4,91016729,0,0x0,8
tick,0x7fffe05afeb4,91032782,0,0x0,8
tick,0x7fffe05afeb4,91047740,0,0x0,8
tick,0x7fffe05afeb4,91063739,0,0x0,8
tick,0x7fffe05afeb4,91079789,0,0x0,8
tick,0x7fffe05afeb4,91095757,0,0x0,8
tick,0x7fffe05afeb4,91111740,0,0x0,8
tick,0x7fffe05afeb4,91127788,0,0x0,8
tick,0x7fffe05afeb4,91143832,0,0x0,8
tick,0x7fffe05afeb4,91158932,0,0x0,8
tick,0x7fffe05afeb4,91173866,0,0x0,8
tick,0x7fffe05afeb4,91189828,0,0x0,8
tick,0x7fffe05afeb4,91205725,0,0x0,8
tick,0x7fffe05afeb4,91221746,0,0x0,8
tick,0x7fffe05afeb4,91237800,0,0x0,8
tick,0x7fffe05afeb4,91253808,0,0x0,8
tick,0x7fffe05afeb4,91269832,0,0x0,8
tick,0x7fffe05afeb4,91285813,0,0x0,8
tick,0x7fffe05afeb4,91301812,0,0x0,8
tick,0x7fffe05afeb4,91316747,0,0x0,8
tick,0x7fffe05afeb4,91332757,0,0x0,8
tick,0x7fffe05afeb4,91347753,0,0x0,8
tick,0x7fffe05afeb4,91363827,0,0x0,8
tick,0x7fffe05afeb4,91379764,0,0x0,8
tick,0x7fffe05afeb4,91394762,0,0x0,8
tick,0x7fffe05afeb4,91410737,0,0x0,8
tick,0x7fffe05afeb4,91426748,0,0x0,8
tick,0x7fffe05afeb4,91442781,0,0x0,8
tick,0x7fffe05afeb4,91458737,0,0x0,8
tick,0x7fffe05afeb4,91474806,0,0x0,8
tick,0x7fffe05afeb4,91490777,0,0x0,8
tick,0x7fffe05afeb4,91506776,0,0x0,8
tick,0x7fffe05afeb4,91522775,0,0x0,8
tick,0x7fffe05afeb4,91538822,0,0x0,8
tick,0x7fffe05afeb4,91554753,0,0x0,8
tick,0x7fffe05afeb4,91570753,0,0x0,8
tick,0x7fffe05afeb4,91586795,0,0x0,8
tick,0x7fffe05afeb4,91602743,0,0x0,8
tick,0x7fffe05afeb4,91618745,0,0x0,8
tick,0x7fffe05afeb4,91633809,0,0x0,8
tick,0x7fffe05afeb4,91649850,0,0x0,8
tick,0x7fffe05afeb4,91665762,0,0x0,8
tick,0x7fffe05afeb4,91681732,0,0x0,8
tick,0x7fffe05afeb4,91697742,0,0x0,8
tick,0x7fffe05afeb4,91713804,0,0x0,8
tick,0x7fffe05afeb4,91729857,0,0x0,8
tick,0x7fffe05afeb4,91745801,0,0x0,8
tick,0x7fffe05afeb4,91761806,0,0x0,8
tick,0x7fffe05afeb4,91777784,0,0x0,8
tick,0x7fffe05afeb4,91793770,0,0x0,8
tick,0x7fffe05afeb4,91808803,0,0x0,8
tick,0x7fffe05afeb4,91824820,0,0x0,8
tick,0x7fffe05afeb4,91840825,0,0x0,8
tick,0x7fffe05afeb4,91856986,0,0x0,8
tick,0x7fffe05afeb4,91872727,0,0x0,8
tick,0x7fffe05afeb4,91888935,0,0x0,8
tick,0x7fffe05afeb4,91904734,0,0x0,8
tick,0x7fffe05afeb4,91920725,0,0x0,8
tick,0x7fffe05afeb4,91936756,0,0x0,8
tick,0x7fffe05afeb4,91952741,0,0x0,8
tick,0x7fffe05afeb4,91968839,0,0x0,8
tick,0x7fffe05afeb4,91983757,0,0x0,8
tick,0x7fffe05afeb4,91999791,0,0x0,8
tick,0x7fffe05afeb4,92015727,0,0x0,8
tick,0x7fffe05afeb4,92030753,0,0x0,8
tick,0x7fffe05afeb4,92045735,0,0x0,8
tick,0x7fffe05afeb4,92061820,0,0x0,8
tick,0x7fffe05afeb4,92077824,0,0x0,8
tick,0x7fffe05afeb4,92093846,0,0x0,8
tick,0x7fffe05afeb4,92109850,0,0x0,8
tick,0x7fffe05afeb4,92125729,0,0x0,8
tick,0x7fffe05afeb4,92141787,0,0x0,8
tick,0x7fffe05afeb4,92157765,0,0x0,8
tick,0x7fffe05afeb4,92173834,0,0x0,8
tick,0x7fffe05afeb4,92188782,0,0x0,8
tick,0x7fffe05afeb4,92204816,0,0x0,8
tick,0x7fffe05afeb4,92220812,0,0x0,8
tick,0x7fffe05afeb4,92236727,0,0x0,8
tick,0x7fffe05afeb4,92252729,0,0x0,8
tick,0x7fffe05afeb4,92268766,0,0x0,8
tick,0x7fffe05afeb4,92284847,0,0x0,8
tick,0x7fffe05afeb4,92300826,0,0x0,8
tick,0x7fffe05afeb4,92316829,0,0x0,8
tick,0x7fffe05afeb4,92332875,0,0x0,8
tick,0x7fffe05afeb4,92347724,0,0x0,8
tick,0x7fffe05afeb4,92363929,0,0x0,8
tick,0x7fffe05afeb4,92379750,0,0x0,8
tick,0x7fffe05afeb4,92395736,0,0x0,8
tick,0x7fffe05afeb4,92411745,0,0x0,8
tick,0x7fffe05afeb4,92427744,0,0x0,8
tick,0x7fffe05afeb4,92443773,0,0x0,8
tick,0x7fffe05afeb4,92459770,0,0x0,8
tick,0x7fffe05afeb4,92475724,0,0x0,8
tick,0x7fffe05afeb4,92491809,0,0x0,8
tick,0x7fffe05afeb4,92507757,0,0x0,8
tick,0x7fffe05afeb4,92523791,0,0x0,8
tick,0x7fffe05afeb4,92539803,0,0x0,8
tick,0x7fffe05afeb4,92555754,0,0x0,8
tick,0x7fffe05afeb4,92571741,0,0x0,8
tick,0x7fffe05afeb4,92587807,0,0x0,8
tick,0x7fffe05afeb4,92603829,0,0x0,8
tick,0x7fffe05afeb4,92619765,0,0x0,8
tick,0x7fffe05afeb4,92635752,0,0x0,8
tick,0x7fffe05afeb4,92651792,0,0x0,8
tick,0x7fffe05afeb4,92667746,0,0x0,8
tick,0x7fffe05afeb4,92683734,0,0x0,8
tick,0x7fffe05afeb4,92699760,0,0x0,8
tick,0x7fffe05afeb4,92715803,0,0x0,8
tick,0x7fffe05afeb4,92731832,0,0x0,8
tick,0x7fffe05afeb4,92747729,0,0x0,8
tick,0x7fffe05afeb4,92763819,0,0x0,8
tick,0x7fffe05afeb4,92780313,0,0x0,8
tick,0x7fffe05afeb4,92794756,0,0x0,8
tick,0x7fffe05afeb4,92810821,0,0x0,8
tick,0x7fffe05afeb4,92826791,0,0x0,8
tick,0x7fffe05afeb4,92842817,0,0x0,8
tick,0x7fffe05afeb4,92858917,0,0x0,8
tick,0x7fffe05afeb4,92875739,0,0x0,8
tick,0x7fffe05afeb4,92891017,0,0x0,8
tick,0x7fffe05afeb4,92906736,0,0x0,8
tick,0x7fffe05afeb4,92922754,0,0x0,8
tick,0x7fffe05afeb4,92937737,0,0x0,8
tick,0x7fffe05afeb4,92953867,0,0x0,8
tick,0x7fffe05afeb4,92969799,0,0x0,8
tick,0x7fffe05afeb4,92985766,0,0x0,8
tick,0x7fffe05afeb4,93001733,0,0x0,8
tick,0x7fffe05afeb4,93016732,0,0x0,8
tick,0x7fffe05afeb4,93032818,0,0x0,8
tick,0x7fffe05afeb4,93047756,0,0x0,8
tick,0x7fffe05afeb4,93063730,0,0x0,8
tick,0x7fffe05afeb4,93079838,0,0x0,8
tick,0x7fffe05afeb4,93095755,0,0x0,8
tick,0x7fffe05afeb4,93111777,0,0x0,8
tick,0x7fffe05afeb4,93127733,0,0x0,8
tick,0x7fffe05afeb4,93143731,0,0x0,8
tick,0x7fffe05afeb4,93159885,0,0x0,8
tick,0x7fffe05afeb4,93175801,0,0x0,8
tick,0x7fffe05afeb4,93190757,0,0x0,8
tick,0x7fffe05afeb4,93206951,0,0x0,8
tick,0x7fffe05afeb4,93222741,0,0x0,8
tick,0x7fffe05afeb4,93237739,0,0x0,8
tick,0x7fffe05afeb4,93253828,0,0x0,8
tick,0x7fffe05afeb4,93269852,0,0x0,8
tick,0x7fffe05afeb4,93285825,0,0x0,8
tick,0x7fffe05afeb4,93301821,0,0x0,8
tick,0x7fffe05afeb4,93316739,0,0x0,8
tick,0x7fffe05afeb4,93332794,0,0x0,8
tick,0x7fffe05afeb4,93348740,0,0x0,8
tick,0x7fffe05afeb4,93364764,0,0x0,8
tick,0x7fffe05afeb4,93379853,0,0x0,8
tick,0x7fffe05afeb4,93395766,0,0x0,8
tick,0x7fffe05afeb4,93411802,0,0x0,8
tick,0x7fffe05afeb4,93427771,0,0x0,8
tick,0x7fffe05afeb4,93443781,0,0x0,8
tick,0x7fffe05afeb4,93459799,0,0x0,8
tick,0x7fffe05afeb4,93475780,0,0x0,8
tick,0x7fffe05afeb4,93491810,0,0x0,8
tick,0x7fffe05afeb4,93506820,0,0x0,8
tick,0x7fffe05afeb4,93522811,0,0x0,8
tick,0x7fffe05afeb4,93538738,0,0x0,8
tick,0x7fffe05afeb4,93554809,0,0x0,8
tick,0x7fffe05afeb4,93570820,0,0x0,8
tick,0x7fffe05afeb4,93586818,0,0x0,8
tick,0x7fffe05afeb4,93602766,0,0x0,8
tick,0x7fffe05afeb4,93618815,0,0x0,8
tick,0x7fffe05afeb4,93634741,0,0x0,8
tick,0x7fffe05afeb4,93650820,0,0x0,8
tick,0x7fffe05afeb4,93666739,0,0x0,8
tick,0x7fffe05afeb4,93682724,0,0x0,8
tick,0x7fffe05afeb4,93698736,0,0x0,8
tick,0x7fffe05afeb4,93714824,0,0x0,8
tick,0x7fffe05afeb4,93730766,0,0x0,8
tick,0x7fffe05afeb4,93746744,0,0x0,8
tick,0x7fffe05afeb4,93762769,0,0x0,8
tick,0x7fffe05afeb4,93778857,0,0x0,8
tick,0x7fffe05afeb4,93794735,0,0x0,8
tick,0x7fffe05afeb4,93809773,0,0x0,8
tick,0x7fffe05afeb4,93825831,0,0x0,8
tick,0x7fffe05afeb4,93841829,0,0x0,8
tick,0x7fffe05afeb4,93857907,0,0x0,8
tick,0x7fffe05afeb4,93873890,0,0x0,8
tick,0x7fffe05afeb4,93890399,0,0x0,8
tick,0x7fffe05afeb4,93905787,0,0x0,8
tick,0x7fffe05afeb4,93921823,0,0x0,8
tick,0x7fffe05afeb4,93937858,0,0x0,8
tick,0x7fffe05afeb4,93953850,0,0x0,8
tick,0x7fffe05afeb4,93968828,0,0x0,8
tick,0x7fffe05afeb4,93984911,0,0x0,8
tick,0x7fffe05afeb4,94000869,0,0x0,8
tick,0x7fffe05afeb4,94017148,0,0x0,8
tick,0x7fffe05afeb4,94032731,0,0x0,8
tick,0x7fffe05afeb4,94047977,0,0x0,8
tick,0x7fffe05afeb4,94063785,0,0x0,8
tick,0x7fffe05afeb4,94079091,0,0x0,8
tick,0x7fffe05afeb4,94093838,0,0x0,8
tick,0x7fffe05afeb4,94109891,0,0x0,8
tick,0x7fffe05afeb4,94124866,0,0x0,8
tick,0x7fffe05afeb4,94139805,0,0x0,8
tick,0x7fffe05afeb4,94155752,0,0x0,8
tick,0x7fffe05afeb4,94172130,0,0x0,8
tick,0x7fffe05afeb4,94187821,0,0x0,8
tick,0x7fffe05afeb4,94203763,0,0x0,8
tick,0x7fffe05afeb4,94219925,0,0x0,8
tick,0x7fffe05afeb4,94235951,0,0x0,8
tick,0x7fffe05afeb4,94251874,0,0x0,8
tick,0x7fffe05afeb4,94268035,0,0x0,8
tick,0x7fffe05afeb4,94330039,0,0x0,8
tick,0x7fffe05afeb4,94332026,0,0x0,8
tick,0x7fffe05afeb4,94348406,0,0x0,8
tick,0x7fffe05afeb4,94364084,0,0x0,8
tick,0x7fffe05afeb4,94380041,0,0x0,8
tick,0x7fffe05afeb4,94395902,0,0x0,8
tick,0x7fffe05afeb4,94411885,0,0x0,8
tick,0x7fffe05afeb4,94426770,0,0x0,8
tick,0x7fffe05afeb4,94442927,0,0x0,8
tick,0x7fffe05afeb4,94458936,0,0x0,8
tick,0x7fffe05afeb4,94474822,0,0x0,8
tick,0x7fffe05afeb4,94490740,0,0x0,8
tick,0x7fffe05afeb4,94507055,0,0x0,8
tick,0x7fffe05afeb4,94521821,0,0x0,8
tick,0x7fffe05afeb4,94537854,0,0x0,8
tick,0x7fffe05afeb4,94553772,0,0x0,8
tick,0x7fffe05afeb4,94570444,0,0x0,8
tick,0x7fffe05afeb4,94585754,0,0x0,8
tick,0x7fffe05afeb4,94600784,0,0x0,8
tick,0x7fffe05afeb4,94616813,0,0x0,8
tick,0x7fffe05afeb4,94632915,0,0x0,8
tick,0x7fffe05afeb4,94648773,0,0x0,8
tick,0x7fffe05afeb4,94665036,0,0x0,8
tick,0x7fffe05afeb4,94680728,0,0x0,8
tick,0x7fffe05afeb4,94696116,0,0x0,8
tick,0x7fffe05afeb4,94711809,0,0x0,8
tick,0x7fffe05afeb4,94726747,0,0x0,8
tick,0x7fffe05afeb4,94742735,0,0x0,8
tick,0x7fffe05afeb4,94758817,0,0x0,8
tick,0x7fffe05afeb4,94773758,0,0x0,8
tick,0x7fffe05afeb4,94789908,0,0x0,8
tick,0x7fffe05afeb4,94805808,0,0x0,8
tick,0x7fffe05afeb4,94821918,0,0x0,8
tick,0x7fffe05afeb4,94837837,0,0x0,8
tick,0x7fffe05afeb4,94859408,0,0x0,8
tick,0x7fffe05afeb4,94871310,0,0x0,8
tick,0x7fffe05afeb4,94886817,0,0x0,8
tick,0x7fffe05afeb4,94900896,0,0x0,8
tick,0x7fffe05afeb4,94916730,0,0x0,8
tick,0x7fffe05afeb4,94932750,0,0x0,8
tick,0x7fffe05afeb4,94947775,0,0x0,8
tick,0x7fffe05afeb4,94963822,0,0x0,8
tick,0x7fffe05afeb4,94979765,0,0x0,8
tick,0x7fffe05afeb4,94995738,0,0x0,8
tick,0x7fffe05afeb4,95011797,0,0x0,8
tick,0x7fffe05afeb4,95027807,0,0x0,8
tick,0x7fffe05afeb4,95043790,0,0x0,8
tick,0x7fffe05afeb4,95059872,0,0x0,8
tick,0x7fffe05afeb4,95076034,0,0x0,8
tick,0x7fffe05afeb4,95091837,0,0x0,8
tick,0x7fffe05afeb4,95169055,0,0x0,8
tick,0x7fffe05afeb4,95193207,0,0x0,8
tick,0x7fffe05afeb4,95210649,0,0x0,8
tick,0x7fffe05afeb4,95220680,0,0x0,8
tick,0x7fffe05afeb4,95234882,0,0x0,8
tick,0x7fffe05afeb4,95250795,0,0x0,8
tick,0x7fffe05afeb4,95265949,0,0x0,8
tick,0x7fffe05afeb4,95281729,0,0x0,8
tick,0x7fffe05afeb4,95297733,0,0x0,8
tick,0x7fffe05afeb4,95313801,0,0x0,8
tick,0x7fffe05afeb4,95330484,0,0x0,8
tick,0x7fffe05afeb4,95345846,0,0x0,8
tick,0x7fffe05afeb4,95361944,0,0x0,8
tick,0x7fffe05afeb4,95377816,0,0x0,8
tick,0x7fffe05afeb4,95393812,0,0x0,8
tick,0x7fffe05afeb4,95409931,0,0x0,8
tick,0x7fffe05afeb4,95425839,0,0x0,8
tick,0x7fffe05afeb4,95441863,0,0x0,8
tick,0x7fffe05afeb4,95457812,0,0x0,8
tick,0x7fffe05afeb4,95473813,0,0x0,8
tick,0x7fffe05afeb4,95489845,0,0x0,8
tick,0x7fffe05afeb4,95505819,0,0x0,8
tick,0x7fffe05afeb4,95521806,0,0x0,8
tick,0x7fffe05afeb4,95538009,0,0x0,8
tick,0x7fffe05afeb4,95553877,0,0x0,8
tick,0x7fffe05afeb4,95568919,0,0x0,8
tick,0x7fffe05afeb4,95584839,0,0x0,8
tick,0x7fffe05afeb4,95600769,0,0x0,8
tick,0x7fffe05afeb4,95615898,0,0x0,8
tick,0x7fffe05afeb4,95631807,0,0x0,8
tick,0x7fffe05afeb4,95647741,0,0x0,8
tick,0x7fffe05afeb4,95662817,0,0x0,8
tick,0x7fffe05afeb4,95677832,0,0x0,8
tick,0x7fffe05afeb4,95693876,0,0x0,8
tick,0x7fffe05afeb4,95709848,0,0x0,8
tick,0x7fffe05afeb4,95725735,0,0x0,8
tick,0x7fffe05afeb4,95741874,0,0x0,8
tick,0x7fffe05afeb4,95757847,0,0x0,8
tick,0x7fffe05afeb4,95773934,0,0x0,8
tick,0x7fffe05afeb4,95790513,0,0x0,8
tick,0x7fffe05afeb4,95805811,0,0x0,8
tick,0x7fffe05afeb4,95821810,0,0x0,8
tick,0x7fffe05afeb4,95837898,0,0x0,8
tick,0x7fffe05afeb4,95853532,0,0x0,8
tick,0x7fffe05afeb4,95868920,0,0x0,8
tick,0x7fffe05afeb4,95884883,0,0x0,8
tick,0x7fffe05afeb4,95900751,0,0x0,8
tick,0x7fffe05afeb4,95916740,0,0x0,8
tick,0x7fffe05afeb4,95932791,0,0x0,8
tick,0x7fffe05afeb4,95948813,0,0x0,8
tick,0x7fffe05afeb4,95964736,0,0x0,8
tick,0x7fffe05afeb4,95979788,0,0x0,8
tick,0x7fffe05afeb4,95995928,0,0x0,8
tick,0x7fffe05afeb4,96011802,0,0x0,8
tick,0x7fffe05afeb4,96027000,0,0x0,8
tick,0x7fffe05afeb4,96042779,0,0x0,8
tick,0x7fffe05afeb4,96058748,0,0x0,8
tick,0x7fffe05afeb4,96074820,0,0x0,8
tick,0x7fffe05afeb4,96090866,0,0x0,8
tick,0x7fffe05afeb4,96106865,0,0x0,8
tick,0x7fffe05afeb4,96122730,0,0x0,8
tick,0x7fffe05afeb4,96137874,0,0x0,8
tick,0x7fffe05afeb4,96153852,0,0x0,8
tick,0x7fffe05afeb4,96169852,0,0x0,8
tick,0x7fffe05afeb4,96184929,0,0x0,8
tick,0x7fffe05afeb4,96200802,0,0x0,8
tick,0x7fffe05afeb4,96216810,0,0x0,8
tick,0x7fffe05afeb4,96232866,0,0x0,8
tick,0x7fffe05afeb4,96247729,0,0x0,8
tick,0x7fffe05afeb4,96263773,0,0x0,8
tick,0x7fffe05afeb4,96278923,0,0x0,8
tick,0x7fffe05afeb4,96294733,0,0x0,8
tick,0x7fffe05afeb4,96310715,0,0x0,8
tick,0x7fffe05afeb4,96327013,0,0x0,8
tick,0x7fffe05afeb4,96342843,0,0x0,8
tick,0x7fffe05afeb4,96358811,0,0x0,8
tick,0x7fffe05afeb4,96374828,0,0x0,8
tick,0x7fffe05afeb4,96389869,0,0x0,8
tick,0x7fffe05afeb4,96405734,0,0x0,8
tick,0x7fffe05afeb4,96421830,0,0x0,8
tick,0x7fffe05afeb4,96437808,0,0x0,8
tick,0x7fffe05afeb4,96453853,0,0x0,8
tick,0x7fffe05afeb4,96469965,0,0x0,8
tick,0x7fffe05afeb4,96485785,0,0x0,8
tick,0x7fffe05afeb4,96501725,0,0x0,8
tick,0x7fffe05afeb4,96516822,0,0x0,8
tick,0x7fffe05afeb4,96532899,0,0x0,8
tick,0x7fffe05afeb4,96547950,0,0x0,8
tick,0x7fffe05afeb4,96563739,0,0x0,8
tick,0x7fffe05afeb4,96579904,0,0x0,8
tick,0x7fffe05afeb4,96595893,0,0x0,8
tick,0x7fffe05afeb4,96611724,0,0x0,8
tick,0x7fffe05afeb4,96627747,0,0x0,8
tick,0x7fffe05afeb4,96643828,0,0x0,8
tick,0x7fffe05afeb4,96660087,0,0x0,8
tick,0x7fffe05afeb4,96675724,0,0x0,8
tick,0x7fffe05afeb4,96691744,0,0x0,8
tick,0x7fffe05afeb4,96707892,0,0x0,8
tick,0x7fffe05afeb4,96723830,0,0x0,8
tick,0x7fffe05afeb4,96739764,0,0x0,8
tick,0x7fffe05afeb4,96755807,0,0x0,8
tick,0x7fffe05afeb4,96771881,0,0x0,8
tick,0x7fffe05afeb4,96787830,0,0x0,8
tick,0x7fffe05afeb4,96803736,0,0x0,8
tick,0x7fffe05afeb4,96819899,0,0x0,8
tick,0x7fffe05afeb4,96835825,0,0x0,8
tick,0x7fffe05afeb4,96851745,0,0x0,8
tick,0x7fffe05afeb4,96867843,0,0x0,8
tick,0x7fffe05afeb4,96883960,0,0x0,8
tick,0x7fffe05afeb4,96899856,0,0x0,8
tick,0x7fffe05afeb4,96916737,0,0x0,8
tick,0x7fffe05afeb4,96932115,0,0x0,8
tick,0x7fffe05afeb4,96947781,0,0x0,8
tick,0x7fffe05afeb4,96962743,0,0x0,8
tick,0x7fffe05afeb4,96978746,0,0x0,8
tick,0x7fffe05afeb4,96994856,0,0x0,8
tick,0x7fffe05afeb4,97010861,0,0x0,8
tick,0x7fffe05afeb4,97026750,0,0x0,8
tick,0x7fffe05afeb4,97042808,0,0x0,8
tick,0x7fffe05afeb4,97058749,0,0x0,8
tick,0x7fffe05afeb4,97074769,0,0x0,8
tick,0x7fffe05afeb4,97090827,0,0x0,8
tick,0x7fffe05afeb4,97106811,0,0x0,8
tick,0x7fffe05afeb4,97122744,0,0x0,8
tick,0x7fffe05afeb4,97138833,0,0x0,8
tick,0x7fffe05afeb4,97154930,0,0x0,8
tick,0x7fffe05afeb4,97170808,0,0x0,8
tick,0x7fffe05afeb4,97186730,0,0x0,8
tick,0x7fffe05afeb4,97202784,0,0x0,8
tick,0x7fffe05afeb4,97218794,0,0x0,8
tick,0x7fffe05afeb4,97234937,0,0x0,8
tick,0x7fffe05afeb4,97250814,0,0x0,8
tick,0x7fffe05afeb4,97265863,0,0x0,8
tick,0x7fffe05afeb4,97281785,0,0x0,8
tick,0x7fffe05afeb4,97297730,0,0x0,8
tick,0x7fffe05afeb4,97313712,0,0x0,8
tick,0x7fffe05afeb4,97330167,0,0x0,8
tick,0x7fffe05afeb4,97345851,0,0x0,8
tick,0x7fffe05afeb4,97361776,0,0x0,8
tick,0x7fffe05afeb4,97376832,0,0x0,8
tick,0x7fffe05afeb4,97392903,0,0x0,8
tick,0x7fffe05afeb4,97408751,0,0x0,8
tick,0x7fffe05afeb4,97424999,0,0x0,8
tick,0x7fffe05afeb4,97441074,0,0x0,8
tick,0x7fffe05afeb4,97456802,0,0x0,8
tick,0x7fffe05afeb4,97472888,0,0x0,8
tick,0x7fffe05afeb4,97488821,0,0x0,8
tick,0x7fffe05afeb4,97504764,0,0x0,8
tick,0x7fffe05afeb4,97520802,0,0x0,8
tick,0x7fffe05afeb4,97536838,0,0x0,8
tick,0x7fffe05afeb4,97552972,0,0x0,8
tick,0x7fffe05afeb4,97568812,0,0x0,8
tick,0x7fffe05afeb4,97584784,0,0x0,8
tick,0x7fffe05afeb4,97600821,0,0x0,8
tick,0x7fffe05afeb4,97616766,0,0x0,8
tick,0x7fffe05afeb4,97632720,0,0x0,8
tick,0x7fffe05afeb4,97648793,0,0x0,8
tick,0x7fffe05afeb4,97665393,0,0x0,8
tick,0x7fffe05afeb4,97680733,0,0x0,8
tick,0x7fffe05afeb4,97696027,0,0x0,8
tick,0x7fffe05afeb4,97711923,0,0x0,8
tick,0x7fffe05afeb4,97726924,0,0x0,8
tick,0x7fffe05afeb4,97742746,0,0x0,8
tick,0x7fffe05afeb4,97757734,0,0x0,8
tick,0x7fffe05afeb4,97773914,0,0x0,8
tick,0x7fffe05afeb4,97789888,0,0x0,8
tick,0x7fffe05afeb4,97805861,0,0x0,8
tick,0x7fffe05afeb4,97821879,0,0x0,8
tick,0x7fffe05afeb4,97837751,0,0x0,8
tick,0x7fffe05afeb4,97853769,0,0x0,8
tick,0x7fffe05afeb4,97870109,0,0x0,8
tick,0x7fffe05afeb4,97885787,0,0x0,8
tick,0x7fffe05afeb4,97901962,0,0x0,8
tick,0x7fffe05afeb4,97916862,0,0x0,8
tick,0x7fffe05afeb4,97932944,0,0x0,8
tick,0x7fffe05afeb4,97948823,0,0x0,8
tick,0x7fffe05afeb4,97964768,0,0x0,8
tick,0x7fffe05afeb4,97979817,0,0x0,8
tick,0x7fffe05afeb4,97996012,0,0x0,8
tick,0x7fffe05afeb4,98011739,0,0x0,8
tick,0x7fffe05afeb4,98027844,0,0x0,8
tick,0x7fffe05afeb4,98043862,0,0x0,8
tick,0x7fffe05afeb4,98059920,0,0x0,8
tick,0x7fffe05afeb4,98075745,0,0x0,8
tick,0x7fffe05afeb4,98091860,0,0x0,8
tick,0x7fffe05afeb4,98107771,0,0x0,8
tick,0x7fffe05afeb4,98123819,0,0x0,8
tick,0x7fffe05afeb4,98139952,0,0x0,8
tick,0x7fffe05afeb4,98155943,0,0x0,8
tick,0x7fffe05afeb4,98171875,0,0x0,8
tick,0x7fffe05afeb4,98187879,0,0x0,8
tick,0x7fffe05afeb4,98203740,0,0x0,8
tick,0x7fffe05afeb4,98219823,0,0x0,8
tick,0x7fffe05afeb4,98235833,0,0x0,8
tick,0x7fffe05afeb4,98251762,0,0x0,8
tick,0x7fffe05afeb4,98267970,0,0x0,8
tick,0x7fffe05afeb4,98283938,0,0x0,8
tick,0x7fffe05afeb4,98299897,0,0x0,8
tick,0x7fffe05afeb4,98314816,0,0x0,8
tick,0x7fffe05afeb4,98330793,0,0x0,8
tick,0x7fffe05afeb4,98345749,0,0x0,8
tick,0x7fffe05afeb4,98361976,0,0x0,8
tick,0x7fffe05afeb4,98376988,0,0x0,8
tick,0x7fffe05afeb4,98392805,0,0x0,8
tick,0x7fffe05afeb4,98408800,0,0x0,8
tick,0x7fffe05afeb4,98424838,0,0x0,8
tick,0x7fffe05afeb4,98440907,0,0x0,8
tick,0x7fffe05afeb4,98456719,0,0x0,8
tick,0x7fffe05afeb4,98472826,0,0x0,8
tick,0x7fffe05afeb4,98488875,0,0x0,8
tick,0x7fffe05afeb4,98503748,0,0x0,8
tick,0x7fffe05afeb4,98519824,0,0x0,8
tick,0x7fffe05afeb4,98534952,0,0x0,8
tick,0x7fffe05afeb4,98550806,0,0x0,8
tick,0x7fffe05afeb4,98565942,0,0x0,8
tick,0x7fffe05afeb4,98581747,0,0x0,8
tick,0x7fffe05afeb4,98597740,0,0x0,8
tick,0x7fffe05afeb4,98613851,0,0x0,8
tick,0x7fffe05afeb4,98629925,0,0x0,8
tick,0x7fffe05afeb4,98645804,0,0x0,8
tick,0x7fffe05afeb4,98661988,0,0x0,8
tick,0x7fffe05afeb4,98676831,0,0x0,8
tick,0x7fffe05afeb4,98692750,0,0x0,8
tick,0x7fffe05afeb4,98708751,0,0x0,8
tick,0x7fffe05afeb4,98724779,0,0x0,8
tick,0x7fffe05afeb4,98740791,0,0x0,8
tick,0x7fffe05afeb4,98756822,0,0x0,8
tick,0x7fffe05afeb4,98772844,0,0x0,8
tick,0x7fffe05afeb4,98788845,0,0x0,8
tick,0x7fffe05afeb4,98804762,0,0x0,8
tick,0x7fffe05afeb4,98820956,0,0x0,8
tick,0x7fffe05afeb4,98835826,0,0x0,8
tick,0x7fffe05afeb4,98851813,0,0x0,8
tick,0x7fffe05afeb4,98867849,0,0x0,8
tick,0x7fffe05afeb4,98884753,0,0x0,8
tick,0x7fffe05afeb4,98899747,0,0x0,8
tick,0x7fffe05afeb4,98915851,0,0x0,8
tick,0x7fffe05afeb4,98931856,0,0x0,8
tick,0x7fffe05afeb4,98947793,0,0x0,8
tick,0x7fffe05afeb4,98962811,0,0x0,8
tick,0x7fffe05afeb4,98979202,0,0x0,8
tick,0x7fffe05afeb4,98993888,0,0x0,8
tick,0x7fffe05afeb4,99009785,0,0x0,8
tick,0x7fffe05afeb4,99025813,0,0x0,8
tick,0x7fffe05afeb4,99041769,0,0x0,8
tick,0x7fffe05afeb4,99057767,0,0x0,8
tick,0x7fffe05afeb4,99073844,0,0x0,8
tick,0x7fffe05afeb4,99089782,0,0x0,8
tick,0x7fffe05afeb4,99105871,0,0x0,8
tick,0x7fffe05afeb4,99121811,0,0x0,8
tick,0x7fffe05afeb4,99137743,0,0x0,8
tick,0x7fffe05afeb4,99153745,0,0x0,8
tick,0x7fffe05afeb4,99170055,0,0x0,8
tick,0x7fffe05afeb4,99185930,0,0x0,8
tick,0x7fffe05afeb4,99201735,0,0x0,8
tick,0x7fffe05afeb4,99217813,0,0x0,8
tick,0x7fffe05afeb4,99233808,0,0x0,8
tick,0x7fffe05afeb4,99249882,0,0x0,8
tick,0x7fffe05afeb4,99265806,0,0x0,8
tick,0x7fffe05afeb4,99281729,0,0x0,8
tick,0x7fffe05afeb4,99297728,0,0x0,8
tick,0x7fffe05afeb4,99313926,0,0x0,8
tick,0x7fffe05afeb4,99329909,0,0x0,8
tick,0x7fffe05afeb4,99345737,0,0x0,8
tick,0x7fffe05afeb4,99361839,0,0x0,8
tick,0x7fffe05afeb4,99377822,0,0x0,8
tick,0x7fffe05afeb4,99393932,0,0x0,8
tick,0x7fffe05afeb4,99409743,0,0x0,8
tick,0x7fffe05afeb4,99426092,0,0x0,8
tick,0x7fffe05afeb4,99441950,0,0x0,8
tick,0x7fffe05afeb4,99456732,0,0x0,8
tick,0x7fffe05afeb4,99472763,0,0x0,8
tick,0x7fffe05afeb4,99488801,0,0x0,8
tick,0x7fffe05afeb4,99504804,0,0x0,8
tick,0x7fffe05afeb4,99520726,0,0x0,8
tick,0x7fffe05afeb4,99536847,0,0x0,8
tick,0x7fffe05afeb4,99552742,0,0x0,8
tick,0x7fffe05afeb4,99568031,0,0x0,8
tick,0x7fffe05afeb4,99583841,0,0x0,8
tick,0x7fffe05afeb4,99599813,0,0x0,8
tick,0x7fffe05afeb4,99615881,0,0x0,8
tick,0x7fffe05afeb4,99631789,0,0x0,8
tick,0x7fffe05afeb4,99647808,0,0x0,8
tick,0x7fffe05afeb4,99663755,0,0x0,8
tick,0x7fffe05afeb4,99679894,0,0x0,8
tick,0x7fffe05afeb4,99696162,0,0x0,8
tick,0x7fffe05afeb4,99711817,0,0x0,8
tick,0x7fffe05afeb4,99728112,0,0x0,8
tick,0x7fffe05afeb4,99743774,0,0x0,8
tick,0x7fffe05afeb4,99760359,0,0x0,8
tick,0x7fffe05afeb4,99775911,0,0x0,8
tick,0x7fffe05afeb4,99791850,0,0x0,8
tick,0x7fffe05afeb4,99807804,0,0x0,8
tick,0x7fffe05afeb4,99823843,0,0x0,8
tick,0x7fffe05afeb4,99839855,0,0x0,8
tick,0x7fffe05afeb4,99854722,0,0x0,8
tick,0x7fffe05afeb4,99869906,0,0x0,8
tick,0x7fffe05afeb4,99885795,0,0x0,8
tick,0x7fffe05afeb4,99901961,0,0x0,8
tick,0x7fffe05afeb4,99917808,0,0x0,8
tick,0x7fffe05afeb4,99933887,0,0x0,8
tick,0x7fffe05afeb4,99949944,0,0x0,8
tick,0x7fffe05afeb4,99965780,0,0x0,8
tick,0x7fffe05afeb4,99981946,0,0x0,8
tick,0x7fffe05afeb4,99997731,0,0x0,8
tick,0x7fffe05afeb4,100013862,0,0x0,8
tick,0x7fffe05afeb4,100029801,0,0x0,8
tick,0x7fffe05afeb4,100044759,0,0x0,8
tick,0x7fffe05afeb4,100059852,0,0x0,8
tick,0x7fffe05afeb4,100075768,0,0x0,8
tick,0x7fffe05afeb4,100091937,0,0x0,8
tick,0x7fffe05afeb4,100107751,0,0x0,8
tick,0x7fffe05afeb4,100123810,0,0x0,8
tick,0x7fffe05afeb4,100139915,0,0x0,8
tick,0x7fffe05afeb4,100155855,0,0x0,8
tick,0x7fffe05afeb4,100171829,0,0x0,8
tick,0x7fffe05afeb4,100187892,0,0x0,8
tick,0x7fffe05afeb4,100203925,0,0x0,8
tick,0x7fffe05afeb4,100219850,0,0x0,8
tick,0x7fffe05afeb4,100235795,0,0x0,8
tick,0x7fffe05afeb4,100251835,0,0x0,8
tick,0x7fffe05afeb4,100267871,0,0x0,8
tick,0x7fffe05afeb4,100283959,0,0x0,8
tick,0x7fffe05afeb4,100299869,0,0x0,8
tick,0x7fffe05afeb4,100315768,0,0x0,8
tick,0x7fffe05afeb4,100331883,0,0x0,8
tick,0x7fffe05afeb4,100347830,0,0x0,8
tick,0x7fffe05afeb4,100363826,0,0x0,8
tick,0x7fffe05afeb4,100379848,0,0x0,8
tick,0x7fffe05afeb4,100395819,0,0x0,8
tick,0x7fffe05afeb4,100411943,0,0x0,8
tick,0x7fffe05afeb4,100427844,0,0x0,8
tick,0x7fffe05afeb4,100443771,0,0x0,8
tick,0x7fffe05afeb4,100458818,0,0x0,8
tick,0x7fffe05afeb4,100474834,0,0x0,8
tick,0x7fffe05afeb4,100490761,0,0x0,8
tick,0x7fffe05afeb4,100506823,0,0x0,8
tick,0x7fffe05afeb4,100522736,0,0x0,8
tick,0x7fffe05afeb4,100538867,0,0x0,8
tick,0x7fffe05afeb4,100554724,0,0x0,8
tick,0x7fffe05afeb4,100571232,0,0x0,8
tick,0x7fffe05afeb4,100585883,0,0x0,8
tick,0x7fffe05afeb4,100601900,0,0x0,8
tick,0x7fffe05afeb4,100617834,0,0x0,8
tick,0x7fffe05afeb4,100633859,0,0x0,8
tick,0x7fffe05afeb4,100649924,0,0x0,8
tick,0x7fffe05afeb4,100665970,0,0x0,8
tick,0x7fffe05afeb4,100681821,0,0x0,8
tick,0x7fffe05afeb4,100697804,0,0x0,8
tick,0x7fffe05afeb4,100713817,0,0x0,8
tick,0x7fffe05afeb4,100729948,0,0x0,8
tick,0x7fffe05afeb4,100745821,0,0x0,8
tick,0x7fffe05afeb4,100761812,0,0x0,8
tick,0x7fffe05afeb4,100777798,0,0x0,8
tick,0x7fffe05afeb4,100793878,0,0x0,8
tick,0x7fffe05afeb4,100808807,0,0x0,8
tick,0x7fffe05afeb4,100824739,0,0x0,8
tick,0x7fffe05afeb4,100840777,0,0x0,8
tick,0x7fffe05afeb4,100856788,0,0x0,8
tick,0x7fffe05afeb4,100872783,0,0x0,8
tick,0x7fffe05afeb4,100888850,0,0x0,8
tick,0x7fffe05afeb4,100904811,0,0x0,8
tick,0x7fffe05afeb4,100920997,0,0x0,8
tick,0x7fffe05afeb4,100936893,0,0x0,8
tick,0x7fffe05afeb4,100952849,0,0x0,8
tick,0x7fffe05afeb4,100968830,0,0x0,8
tick,0x7fffe05afeb4,100983935,0,0x0,8
tick,0x7fffe05afeb4,100999812,0,0x0,8
tick,0x7fffe05afeb4,101015744,0,0x0,8
tick,0x7fffe05afeb4,101031916,0,0x0,8
tick,0x7fffe05afeb4,101047884,0,0x0,8
tick,0x7fffe05afeb4,101063737,0,0x0,8
tick,0x7fffe05afeb4,101078821,0,0x0,8
tick,0x7fffe05afeb4,101094887,0,0x0,8
tick,0x7fffe05afeb4,101110852,0,0x0,8
tick,0x7fffe05afeb4,101126715,0,0x0,8
tick,0x7fffe05afeb4,101142831,0,0x0,8
tick,0x7fffe05afeb4,101158802,0,0x0,8
tick,0x7fffe05afeb4,101174828,0,0x0,8
tick,0x7fffe05afeb4,101190870,0,0x0,8
tick,0x7fffe05afeb4,101206854,0,0x0,8
tick,0x7fffe05afeb4,101222751,0,0x0,8
tick,0x7fffe05afeb4,101238788,0,0x0,8
tick,0x7fffe05afeb4,101254758,0,0x0,8
tick,0x7fffe05afeb4,101270873,0,0x0,8
tick,0x7fffe05afeb4,101286798,0,0x0,8
tick,0x7fffe05afeb4,101302903,0,0x0,8
tick,0x7fffe05afeb4,101318849,0,0x0,8
tick,0x7fffe05afeb4,101334916,0,0x0,8
tick,0x7fffe05afeb4,101350781,0,0x0,8
tick,0x7fffe05afeb4,101365811,0,0x0,8
tick,0x7fffe05afeb4,101381822,0,0x0,8
tick,0x7fffe05afeb4,101396743,0,0x0,8
tick,0x7fffe05afeb4,101412829,0,0x0,8
tick,0x7fffe05afeb4,101429060,0,0x0,8
tick,0x7fffe05afeb4,101444815,0,0x0,8
tick,0x7fffe05afeb4,101460782,0,0x0,8
tick,0x7fffe05afeb4,101476810,0,0x0,8
tick,0x7fffe05afeb4,101492805,0,0x0,8
tick,0x7fffe05afeb4,101508942,0,0x0,8
tick,0x7fffe05afeb4,101524939,0,0x0,8
tick,0x7fffe05afeb4,101541663,0,0x0,8
tick,0x7fffe05afeb4,101556837,0,0x0,8
tick,0x7fffe05afeb4,101572947,0,0x0,8
tick,0x7fffe05afeb4,101587733,0,0x0,8
tick,0x7fffe05afeb4,101603964,0,0x0,8
tick,0x7fffe05afeb4,101644938,0,0x0,8
tick,0x7fffe05afeb4,101653036,0,0x0,8
tick,0x7fffe05afeb4,101668083,0,0x0,8
tick,0x7fffe05afeb4,101683841,0,0x0,8
tick,0x7fffe05afeb4,101699895,0,0x0,8
tick,0x7fffe05afeb4,101715809,0,0x0,8
tick,0x7fffe05afeb4,101732067,0,0x0,8
tick,0x7fffe05afeb4,101747743,0,0x0,8
tick,0x7fffe05afeb4,101763868,0,0x0,8
tick,0x7fffe05afeb4,101779754,0,0x0,8
tick,0x7fffe05afeb4,101794814,0,0x0,8
tick,0x7fffe05afeb4,101810756,0,0x0,8
tick,0x7fffe05afeb4,101825873,0,0x0,8
tick,0x7fffe05afeb4,101841742,0,0x0,8
tick,0x7fffe05afeb4,101857977,0,0x0,8
tick,0x7fffe05afeb4,101873788,0,0x0,8
tick,0x7fffe05afeb4,101889852,0,0x0,8
tick,0x7fffe05afeb4,101904817,0,0x0,8
tick,0x7fffe05afeb4,101920894,0,0x0,8
tick,0x7fffe05afeb4,101937071,0,0x0,8
tick,0x7fffe05afeb4,101953027,0,0x0,8
tick,0x7fffe05afeb4,101968886,0,0x0,8
tick,0x7fffe05afeb4,101985061,0,0x0,8
tick,0x7fffe05afeb4,102000762,0,0x0,8
tick,0x7fffe05afeb4,102016100,0,0x0,8
tick,0x7fffe05afeb4,102030853,0,0x0,8
tick,0x7fffe05afeb4,102045924,0,0x0,8
tick,0x7fffe05afeb4,102061826,0,0x0,8
tick,0x7fffe05afeb4,102077954,0,0x0,8
tick,0x7fffe05afeb4,102093822,0,0x0,8
tick,0x7fffe05afeb4,102109833,0,0x0,8
tick,0x7fffe05afeb4,102125795,0,0x0,8
tick,0x7fffe05afeb4,102141737,0,0x0,8
tick,0x7fffe05afeb4,102157817,0,0x0,8
tick,0x7fffe05afeb4,102173919,0,0x0,8
tick,0x7fffe05afeb4,102190085,0,0x0,8
tick,0x7fffe05afeb4,102205834,0,0x0,8
tick,0x7fffe05afeb4,102221718,0,0x0,8
tick,0x7fffe05afeb4,102236846,0,0x0,8
tick,0x7fffe05afeb4,102252731,0,0x0,8
tick,0x7fffe05afeb4,102268975,0,0x0,8
tick,0x7fffe05afeb4,102284828,0,0x0,8
tick,0x7fffe05afeb4,102300818,0,0x0,8
tick,0x7fffe05afeb4,102315836,0,0x0,8
tick,0x7fffe05afeb4,102331894,0,0x0,8
tick,0x7fffe05afeb4,102346751,0,0x0,8
tick,0x7fffe05afeb4,102362896,0,0x0,8
tick,0x7fffe05afeb4,102378748,0,0x0,8
tick,0x7fffe05afeb4,102394772,0,0x0,8
tick,0x7fffe05afeb4,102410746,0,0x0,8
tick,0x7fffe05afeb4,102426878,0,0x0,8
tick,0x7fffe05afeb4,102442880,0,0x0,8
tick,0x7fffe05afeb4,102458941,0,0x0,8
tick,0x7fffe05afeb4,102474802,0,0x0,8
tick,0x7fffe05afeb4,102490836,0,0x0,8
tick,0x7fffe05afeb4,102506815,0,0x0,8
tick,0x7fffe05afeb4,102522777,0,0x0,8
tick,0x7fffe05afeb4,102538787,0,0x0,8
tick,0x7fffe05afeb4,102554777,0,0x0,8
tick,0x7fffe05afeb4,102571089,0,0x0,8
tick,0x7fffe05afeb4,102585869,0,0x0,8
tick,0x7fffe05afeb4,102601827,0,0x0,8
tick,0x7fffe05afeb4,102617819,0,0x0,8
tick,0x7fffe05afeb4,102634207,0,0x0,8
tick,0x7fffe05afeb4,102649860,0,0x0,8
tick,0x7fffe05afeb4,102665828,0,0x0,8
tick,0x7fffe05afeb4,102681755,0,0x0,8
tick,0x7fffe05afeb4,102697732,0,0x0,8
tick,0x7fffe05afeb4,102713821,0,0x0,8
tick,0x7fffe05afeb4,102729853,0,0x0,8
tick,0x7fffe05afeb4,102745825,0,0x0,8
tick,0x7fffe05afeb4,102761832,0,0x0,8
tick,0x7fffe05afeb4,102777763,0,0x0,8
tick,0x7fffe05afeb4,102793730,0,0x0,8
tick,0x7fffe05afeb4,102809957,0,0x0,8
tick,0x7fffe05afeb4,102825745,0,0x0,8
tick,0x7fffe05afeb4,102841831,0,0x0,8
tick,0x7fffe05afeb4,102856739,0,0x0,8
tick,0x7fffe05afeb4,102872739,0,0x0,8
tick,0x7fffe05afeb4,102888779,0,0x0,8
tick,0x7fffe05afeb4,102904742,0,0x0,8
tick,0x7fffe05afeb4,102920746,0,0x0,8
tick,0x7fffe05afeb4,102936839,0,0x0,8
tick,0x7fffe05afeb4,102952744,0,0x0,8
tick,0x7fffe05afeb4,102968804,0,0x0,8
tick,0x7fffe05afeb4,102984869,0,0x0,8
tick,0x7fffe05afeb4,103000746,0,0x0,8
tick,0x7fffe05afeb4,103016732,0,0x0,8
tick,0x7fffe05afeb4,103032750,0,0x0,8
tick,0x7fffe05afeb4,103047820,0,0x0,8
tick,0x7fffe05afeb4,103063747,0,0x0,8
tick,0x7fffe05afeb4,103079883,0,0x0,8
tick,0x7fffe05afeb4,103095813,0,0x0,8
tick,0x7fffe05afeb4,103111800,0,0x0,8
tick,0x7fffe05afeb4,103127735,0,0x0,8
tick,0x7fffe05afeb4,103143741,0,0x0,8
tick,0x7fffe05afeb4,103159823,0,0x0,8
tick,0x7fffe05afeb4,103175864,0,0x0,8
tick,0x7fffe05afeb4,103191835,0,0x0,8
tick,0x7fffe05afeb4,103207747,0,0x0,8
tick,0x7fffe05afeb4,103223826,0,0x0,8
tick,0x7fffe05afeb4,103239783,0,0x0,8
tick,0x7fffe05afeb4,103255737,0,0x0,8
tick,0x7fffe05afeb4,103271804,0,0x0,8
tick,0x7fffe05afeb4,103287752,0,0x0,8
tick,0x7fffe05afeb4,103303757,0,0x0,8
tick,0x7fffe05afeb4,103320386,0,0x0,8
tick,0x7fffe05afeb4,103335811,0,0x0,8
tick,0x7fffe05afeb4,103351741,0,0x0,8
tick,0x7fffe05afeb4,103367783,0,0x0,8
tick,0x7fffe05afeb4,103384011,0,0x0,8
tick,0x7fffe05afeb4,103399844,0,0x0,8
tick,0x7fffe05afeb4,103415851,0,0x0,8
tick,0x7fffe05afeb4,103431765,0,0x0,8
tick,0x7fffe05afeb4,103447775,0,0x0,8
tick,0x7fffe05afeb4,103463744,0,0x0,8
tick,0x7fffe05afeb4,103479783,0,0x0,8
tick,0x7fffe05afeb4,103495909,0,0x0,8
tick,0x7fffe05afeb4,103511754,0,0x0,8
tick,0x7fffe05afeb4,103527882,0,0x0,8
tick,0x7fffe05afeb4,103543755,0,0x0,8
tick,0x7fffe05afeb4,103559809,0,0x0,8
tick,0x7fffe05afeb4,103575873,0,0x0,8
tick,0x7fffe05afeb4,103591771,0,0x0,8
tick,0x7fffe05afeb4,103607829,0,0x0,8
tick,0x7fffe05afeb4,103623825,0,0x0,8
tick,0x7fffe05afeb4,103639898,0,0x0,8
tick,0x7fffe05afeb4,103655813,0,0x0,8
tick,0x7fffe05afeb4,103671815,0,0x0,8
tick,0x7fffe05afeb4,103687793,0,0x0,8
tick,0x7fffe05afeb4,103703732,0,0x0,8
tick,0x7fffe05afeb4,103719782,0,0x0,8
tick,0x7fffe05afeb4,103735807,0,0x0,8
tick,0x7fffe05afeb4,103751898,0,0x0,8
tick,0x7fffe05afeb4,103767821,0,0x0,8
tick,0x7fffe05afeb4,103783820,0,0x0,8
tick,0x7fffe05afeb4,103799775,0,0x0,8
tick,0x7fffe05afeb4,103815738,0,0x0,8
tick,0x7fffe05afeb4,103831835,0,0x0,8
tick,0x7fffe05afeb4,103847746,0,0x0,8
tick,0x7fffe05afeb4,103863826,0,0x0,8
tick,0x7fffe05afeb4,103879834,0,0x0,8
tick,0x7fffe05afeb4,103895820,0,0x0,8
tick,0x7fffe05afeb4,103911791,0,0x0,8
tick,0x7fffe05afeb4,103927766,0,0x0,8
tick,0x7fffe05afeb4,103943789,0,0x0,8
tick,0x7fffe05afeb4,103962393,0,0x0,8
tick,0x7fffe05afeb4,103975769,0,0x0,8
tick,0x7fffe05afeb4,103991827,0,0x0,8
tick,0x7fffe05afeb4,104007819,0,0x0,8
tick,0x7fffe05afeb4,104023811,0,0x0,8
tick,0x7fffe05afeb4,104039759,0,0x0,8
tick,0x7fffe05afeb4,104055749,0,0x0,8
tick,0x7fffe05afeb4,104071754,0,0x0,8
tick,0x7fffe05afeb4,104087812,0,0x0,8
tick,0x7fffe05afeb4,104103745,0,0x0,8
tick,0x7fffe05afeb4,104119852,0,0x0,8
tick,0x7fffe05afeb4,104135765,0,0x0,8
tick,0x7fffe05afeb4,104151816,0,0x0,8
tick,0x7fffe05afeb4,104167756,0,0x0,8
tick,0x7fffe05afeb4,104183775,0,0x0,8
tick,0x7fffe05afeb4,104199889,0,0x0,8
tick,0x7fffe05afeb4,104215862,0,0x0,8
tick,0x7fffe05afeb4,104230792,0,0x0,8
tick,0x7fffe05afeb4,104245828,0,0x0,8
tick,0x7fffe05afeb4,104261867,0,0x0,8
tick,0x7fffe05afeb4,104276754,0,0x0,8
tick,0x7fffe05afeb4,104291741,0,0x0,8
tick,0x7fffe05afeb4,104307836,0,0x0,8
tick,0x7fffe05afeb4,104323825,0,0x0,8
tick,0x7fffe05afeb4,104339836,0,0x0,8
tick,0x7fffe05afeb4,104355749,0,0x0,8
tick,0x7fffe05afeb4,104371753,0,0x0,8
tick,0x7fffe05afeb4,104387745,0,0x0,8
tick,0x7fffe05afeb4,104403769,0,0x0,8
tick,0x7fffe05afeb4,104419794,0,0x0,8
tick,0x7fffe05afeb4,104435837,0,0x0,8
tick,0x7fffe05afeb4,104451810,0,0x0,8
tick,0x7fffe05afeb4,104467750,0,0x0,8
tick,0x7fffe05afeb4,104483777,0,0x0,8
tick,0x7fffe05afeb4,104499831,0,0x0,8
tick,0x7fffe05afeb4,104515738,0,0x0,8
tick,0x7fffe05afeb4,104531854,0,0x0,8
tick,0x7fffe05afeb4,104547737,0,0x0,8
tick,0x7fffe05afeb4,104563742,0,0x0,8
tick,0x7fffe05afeb4,104579845,0,0x0,8
tick,0x7fffe05afeb4,104595836,0,0x0,8
tick,0x7fffe05afeb4,104611786,0,0x0,8
tick,0x7fffe05afeb4,104627783,0,0x0,8
tick,0x7fffe05afeb4,104643818,0,0x0,8
tick,0x7fffe05afeb4,104659770,0,0x0,8
tick,0x7fffe05afeb4,104675785,0,0x0,8
tick,0x7fffe05afeb4,104691743,0,0x0,8
tick,0x7fffe05afeb4,104706860,0,0x0,8
tick,0x7fffe05afeb4,104722746,0,0x0,8
tick,0x7fffe05afeb4,104738791,0,0x0,8
tick,0x7fffe05afeb4,104753742,0,0x0,8
tick,0x7fffe05afeb4,104769841,0,0x0,8
tick,0x7fffe05afeb4,104785747,0,0x0,8
tick,0x7fffe05afeb4,104801846,0,0x0,8
tick,0x7fffe05afeb4,104817737,0,0x0,8
tick,0x7fffe05afeb4,104833736,0,0x0,8
tick,0x7fffe05afeb4,104849787,0,0x0,8
tick,0x7fffe05afeb4,104865753,0,0x0,8
tick,0x7fffe05afeb4,104881722,0,0x0,8
tick,0x7fffe05afeb4,104897759,0,0x0,8
tick,0x7fffe05afeb4,104913753,0,0x0,8
tick,0x7fffe05afeb4,104929786,0,0x0,8
tick,0x7fffe05afeb4,104945736,0,0x0,8
tick,0x7fffe05afeb4,104961743,0,0x0,8
tick,0x7fffe05afeb4,104976780,0,0x0,8
tick,0x7fffe05afeb4,104992731,0,0x0,8
tick,0x7fffe05afeb4,105008981,0,0x0,8
tick,0x7fffe05afeb4,105024724,0,0x0,8
tick,0x7fffe05afeb4,105040834,0,0x0,8
tick,0x7fffe05afeb4,105056802,0,0x0,8
tick,0x7fffe05afeb4,105072745,0,0x0,8
tick,0x7fffe05afeb4,105088816,0,0x0,8
tick,0x7fffe05afeb4,105104740,0,0x0,8
tick,0x7fffe05afeb4,105120740,0,0x0,8
tick,0x7fffe05afeb4,105136742,0,0x0,8
tick,0x7fffe05afeb4,105152782,0,0x0,8
tick,0x7fffe05afeb4,105168818,0,0x0,8
tick,0x7fffe05afeb4,105184757,0,0x0,8
tick,0x7fffe05afeb4,105199810,0,0x0,8
tick,0x7fffe05afeb4,105214770,0,0x0,8
tick,0x7fffe05afeb4,105230734,0,0x0,8
tick,0x7fffe05afeb4,105245784,0,0x0,8
tick,0x7fffe05afeb4,105260736,0,0x0,8
tick,0x7fffe05afeb4,105276819,0,0x0,8
tick,0x7fffe05afeb4,105291822,0,0x0,8
tick,0x7fffe05afeb4,105307817,0,0x0,8
tick,0x7fffe05afeb4,105323820,0,0x0,8
tick,0x7fffe05afeb4,105338733,0,0x0,8
tick,0x7fffe05afeb4,105353756,0,0x0,8
tick,0x7fffe05afeb4,105369859,0,0x0,8
tick,0x7fffe05afeb4,105385739,0,0x0,8
tick,0x7fffe05afeb4,105401824,0,0x0,8
tick,0x7fffe05afeb4,105417821,0,0x0,8
tick,0x7fffe05afeb4,105433802,0,0x0,8
tick,0x7fffe05afeb4,105449776,0,0x0,8
tick,0x7fffe05afeb4,105465726,0,0x0,8
tick,0x7fffe05afeb4,105481773,0,0x0,8
tick,0x7fffe05afeb4,105496789,0,0x0,8
tick,0x7fffe05afeb4,105512781,0,0x0,8
tick,0x7fffe05afeb4,105528967,0,0x0,8
tick,0x7fffe05afeb4,105544832,0,0x0,8
tick,0x7fffe05afeb4,105560789,0,0x0,8
tick,0x7fffe05afeb4,105576947,0,0x0,8
tick,0x7fffe05afeb4,105592828,0,0x0,8
tick,0x7fffe05afeb4,105609028,0,0x0,8
tick,0x7fffe05afeb4,105624725,0,0x0,8
tick,0x7fffe05afeb4,105640842,0,0x0,8
tick,0x7fffe05afeb4,105656812,0,0x0,8
tick,0x7fffe05afeb4,105672919,0,0x0,8
tick,0x7fffe05afeb4,105688738,0,0x0,8
tick,0x7fffe05afeb4,105704847,0,0x0,8
tick,0x7fffe05afeb4,105720726,0,0x0,8
tick,0x7fffe05afeb4,105736914,0,0x0,8
tick,0x7fffe05afeb4,105752741,0,0x0,8
tick,0x7fffe05afeb4,105768858,0,0x0,8
tick,0x7fffe05afeb4,105784734,0,0x0,8
tick,0x7fffe05afeb4,105800809,0,0x0,8
tick,0x7fffe05afeb4,105816742,0,0x0,8
tick,0x7fffe05afeb4,105832779,0,0x0,8
tick,0x7fffe05afeb4,105848922,0,0x0,8
tick,0x7fffe05afeb4,105864943,0,0x0,8
tick,0x7fffe05afeb4,105879922,0,0x0,8
tick,0x7fffe05afeb4,105895830,0,0x0,8
tick,0x7fffe05afeb4,105911729,0,0x0,8
tick,0x7fffe05afeb4,105926885,0,0x0,8
tick,0x7fffe05afeb4,105942778,0,0x0,8
tick,0x7fffe05afeb4,105958796,0,0x0,8
tick,0x7fffe05afeb4,105974838,0,0x0,8
tick,0x7fffe05afeb4,105990891,0,0x0,8
tick,0x7fffe05afeb4,106006832,0,0x0,8
tick,0x7fffe05afeb4,106022770,0,0x0,8
tick,0x7fffe05afeb4,106038779,0,0x0,8
tick,0x7fffe05afeb4,106054806,0,0x0,8
tick,0x7fffe05afeb4,106071206,0,0x0,8
tick,0x7fffe05afeb4,106087013,0,0x0,8
tick,0x7fffe05afeb4,106103087,0,0x0,8
tick,0x7fffe05afeb4,106118846,0,0x0,8
tick,0x7fffe05afeb4,106135085,0,0x0,8
tick,0x7fffe05afeb4,106150847,0,0x0,8
tick,0x7fffe05afeb4,106166784,0,0x0,8
tick,0x7fffe05afeb4,106182897,0,0x0,8
tick,0x7fffe05afeb4,106198826,0,0x0,8
tick,0x7fffe05afeb4,106214817,0,0x0,8
tick,0x7fffe05afeb4,106230821,0,0x0,8
tick,0x7fffe05afeb4,106245846,0,0x0,8
tick,0x7fffe05afeb4,106261736,0,0x0,8
tick,0x7fffe05afeb4,106276804,0,0x0,8
tick,0x7fffe05afeb4,106292870,0,0x0,8
tick,0x7fffe05afeb4,106308022,0,0x0,8
tick,0x7fffe05afeb4,106323922,0,0x0,8
tick,0x7fffe05afeb4,106338818,0,0x0,8
tick,0x7fffe05afeb4,106354154,0,0x0,8
tick,0x7fffe05afeb4,106370010,0,0x0,8
tick,0x7fffe05afeb4,106385775,0,0x0,8
tick,0x7fffe05afeb4,106401745,0,0x0,8
tick,0x7fffe05afeb4,106417759,0,0x0,8
tick,0x7fffe05afeb4,106433828,0,0x0,8
tick,0x7fffe05afeb4,106449761,0,0x0,8
tick,0x7fffe05afeb4,106465877,0,0x0,8
tick,0x7fffe05afeb4,106481754,0,0x0,8
tick,0x7fffe05afeb4,106497793,0,0x0,8
tick,0x7fffe05afeb4,106513764,0,0x0,8
tick,0x7fffe05afeb4,106530520,0,0x0,8
tick,0x7fffe05afeb4,106545729,0,0x0,8
tick,0x7fffe05afeb4,106561823,0,0x0,8
tick,0x7fffe05afeb4,106577780,0,0x0,8
tick,0x7fffe05afeb4,106594015,0,0x0,8
tick,0x7fffe05afeb4,106609840,0,0x0,8
tick,0x7fffe05afeb4,106625831,0,0x0,8
tick,0x7fffe05afeb4,106641914,0,0x0,8
tick,0x7fffe05afeb4,106657958,0,0x0,8
tick,0x7fffe05afeb4,106673734,0,0x0,8
tick,0x7fffe05afeb4,106689943,0,0x0,8
tick,0x7fffe05afeb4,106705745,0,0x0,8
tick,0x7fffe05afeb4,106721852,0,0x0,8
tick,0x7fffe05afeb4,106737786,0,0x0,8
tick,0x7fffe05afeb4,106753967,0,0x0,8
tick,0x7fffe05afeb4,106769761,0,0x0,8
tick,0x7fffe05afeb4,106785778,0,0x0,8
tick,0x7fffe05afeb4,106801739,0,0x0,8
tick,0x7fffe05afeb4,106817903,0,0x0,8
tick,0x7fffe05afeb4,106834726,0,0x0,8
tick,0x7fffe05afeb4,106849849,0,0x0,8
tick,0x7fffe05afeb4,106864865,0,0x0,8
tick,0x7fffe05afeb4,106879943,0,0x0,8
tick,0x7fffe05afeb4,106895819,0,0x0,8
tick,0x7fffe05afeb4,106911742,0,0x0,8
tick,0x7fffe05afeb4,106926846,0,0x0,8
tick,0x7fffe05afeb4,106942894,0,0x0,8
tick,0x7fffe05afeb4,106958740,0,0x0,8
tick,0x7fffe05afeb4,106974867,0,0x0,8
tick,0x7fffe05afeb4,106990737,0,0x0,8
tick,0x7fffe05afeb4,107006899,0,0x0,8
tick,0x7fffe05afeb4,107022784,0,0x0,8
tick,0x7fffe05afeb4,107038935,0,0x0,8
tick,0x7fffe05afeb4,107054804,0,0x0,8
tick,0x7fffe05afeb4,107071108,0,0x0,8
tick,0x7fffe05afeb4,107089968,0,0x0,8
tick,0x7fffe05afeb4,107102043,0,0x0,8
tick,0x7fffe05afeb4,107117814,0,0x0,8
tick,0x7fffe05afeb4,107135296,0,0x0,8
tick,0x7fffe05afeb4,107149921,0,0x0,8
tick,0x7fffe05afeb4,107166318,0,0x0,8
tick,0x7fffe05afeb4,107181888,0,0x0,8
tick,0x7fffe05afeb4,107197888,0,0x0,8
tick,0x7fffe05afeb4,107212828,0,0x0,8
tick,0x7fffe05afeb4,107228976,0,0x0,8
tick,0x7fffe05afeb4,107244753,0,0x0,8
tick,0x7fffe05afeb4,107260843,0,0x0,8
tick,0x7fffe05afeb4,107276901,0,0x0,8
tick,0x7fffe05afeb4,107292811,0,0x0,8
tick,0x7fffe05afeb4,107307791,0,0x0,8
tick,0x7fffe05afeb4,107323886,0,0x0,8
tick,0x7fffe05afeb4,107339773,0,0x0,8
tick,0x7fffe05afeb4,107355913,0,0x0,8
tick,0x7fffe05afeb4,107370871,0,0x0,8
tick,0x7fffe05afeb4,107386905,0,0x0,8
tick,0x7fffe05afeb4,107402776,0,0x0,8
tick,0x7fffe05afeb4,107418808,0,0x0,8
tick,0x7fffe05afeb4,107434820,0,0x0,8
tick,0x7fffe05afeb4,107450885,0,0x0,8
tick,0x7fffe05afeb4,107466746,0,0x0,8
tick,0x7fffe05afeb4,107482907,0,0x0,8
tick,0x7fffe05afeb4,107498719,0,0x0,8
tick,0x7fffe05afeb4,107513848,0,0x0,8
tick,0x7fffe05afeb4,107530039,0,0x0,8
tick,0x7fffe05afeb4,107545893,0,0x0,8
tick,0x7fffe05afeb4,107561799,0,0x0,8
tick,0x7fffe05afeb4,107577925,0,0x0,8
tick,0x7fffe05afeb4,107593813,0,0x0,8
tick,0x7fffe05afeb4,107610100,0,0x0,8
tick,0x7fffe05afeb4,107625785,0,0x0,8
tick,0x7fffe05afeb4,107641847,0,0x0,8
tick,0x7fffe05afeb4,107657726,0,0x0,8
tick,0x7fffe05afeb4,107672976,0,0x0,8
tick,0x7fffe05afeb4,107688751,0,0x0,8
tick,0x7fffe05afeb4,107704833,0,0x0,8
tick,0x7fffe05afeb4,107720824,0,0x0,8
tick,0x7fffe05afeb4,107736875,0,0x0,8
tick,0x7fffe05afeb4,107752744,0,0x0,8
tick,0x7fffe05afeb4,107768872,0,0x0,8
tick,0x7fffe05afeb4,107784806,0,0x0,8
tick,0x7fffe05afeb4,107800726,0,0x0,8
tick,0x7fffe05afeb4,107816875,0,0x0,8
tick,0x7fffe05afeb4,107832895,0,0x0,8
tick,0x7fffe05afeb4,107848806,0,0x0,8
tick,0x7fffe05afeb4,107863897,0,0x0,8
tick,0x7fffe05afeb4,107879770,0,0x0,8
tick,0x7fffe05afeb4,107895899,0,0x0,8
tick,0x7fffe05afeb4,107911807,0,0x0,8
tick,0x7fffe05afeb4,107926928,0,0x0,8
tick,0x7fffe05afeb4,107942801,0,0x0,8
tick,0x7fffe05afeb4,107958883,0,0x0,8
tick,0x7fffe05afeb4,107974757,0,0x0,8
tick,0x7fffe05afeb4,107990827,0,0x0,8
tick,0x7fffe05afeb4,108006781,0,0x0,8
tick,0x7fffe05afeb4,108022795,0,0x0,8
tick,0x7fffe05afeb4,108037876,0,0x0,8
tick,0x7fffe05afeb4,108053746,0,0x0,8
tick,0x7fffe05afeb4,108068885,0,0x0,8
tick,0x7fffe05afeb4,108084904,0,0x0,8
tick,0x7fffe05afeb4,108100724,0,0x0,8
tick,0x7fffe05afeb4,108116910,0,0x0,8
tick,0x7fffe05afeb4,108132739,0,0x0,8
tick,0x7fffe05afeb4,108148963,0,0x0,8
tick,0x7fffe05afeb4,108164764,0,0x0,8
tick,0x7fffe05afeb4,108179951,0,0x0,8
tick,0x7fffe05afeb4,108196072,0,0x0,8
tick,0x7fffe05afeb4,108211825,0,0x0,8
tick,0x7fffe05afeb4,108227947,0,0x0,8
tick,0x7fffe05afeb4,108243878,0,0x0,8
tick,0x7fffe05afeb4,108259790,0,0x0,8
tick,0x7fffe05afeb4,108275908,0,0x0,8
tick,0x7fffe05afeb4,108291811,0,0x0,8
tick,0x7fffe05afeb4,108308090,0,0x0,8
tick,0x7fffe05afeb4,108322735,0,0x0,8
tick,0x7fffe05afeb4,108337880,0,0x0,8
tick,0x7fffe05afeb4,108354136,0,0x0,8
tick,0x7fffe05afeb4,108369908,0,0x0,8
tick,0x7fffe05afeb4,108385748,0,0x0,8
tick,0x7fffe05afeb4,108401908,0,0x0,8
tick,0x7fffe05afeb4,108417738,0,0x0,8
tick,0x7fffe05afeb4,108433776,0,0x0,8
tick,0x7fffe05afeb4,108449789,0,0x0,8
tick,0x7fffe05afeb4,108466050,0,0x0,8
tick,0x7fffe05afeb4,108481743,0,0x0,8
tick,0x7fffe05afeb4,108497811,0,0x0,8
tick,0x7fffe05afeb4,108513783,0,0x0,8
tick,0x7fffe05afeb4,108530037,0,0x0,8
tick,0x7fffe05afeb4,108545794,0,0x0,8
tick,0x7fffe05afeb4,108561805,0,0x0,8
tick,0x7fffe05afeb4,108577746,0,0x0,8
tick,0x7fffe05afeb4,108593918,0,0x0,8
tick,0x7fffe05afeb4,108609814,0,0x0,8
tick,0x7fffe05afeb4,108625036,0,0x0,8
tick,0x7fffe05afeb4,108640828,0,0x0,8
tick,0x7fffe05afeb4,108656840,0,0x0,8
tick,0x7fffe05afeb4,108672774,0,0x0,8
tick,0x7fffe05afeb4,108688782,0,0x0,8
tick,0x7fffe05afeb4,108704832,0,0x0,8
tick,0x7fffe05afeb4,108720927,0,0x0,8
tick,0x7fffe05afeb4,108736915,0,0x0,8
tick,0x7fffe05afeb4,108752963,0,0x0,8
tick,0x7fffe05afeb4,108768854,0,0x0,8
tick,0x7fffe05afeb4,108784819,0,0x0,8
tick,0x7fffe05afeb4,108800732,0,0x0,8
tick,0x7fffe05afeb4,108816820,0,0x0,8
tick,0x7fffe05afeb4,108832779,0,0x0,8
tick,0x7fffe05afeb4,108847905,0,0x0,8
tick,0x7fffe05afeb4,108863821,0,0x0,8
tick,0x7fffe05afeb4,108879886,0,0x0,8
tick,0x7fffe05afeb4,108895729,0,0x0,8
tick,0x7fffe05afeb4,108911919,0,0x0,8
tick,0x7fffe05afeb4,108927747,0,0x0,8
tick,0x7fffe05afeb4,108943916,0,0x0,8
tick,0x7fffe05afeb4,108959929,0,0x0,8
tick,0x7fffe05afeb4,108976065,0,0x0,8
tick,0x7fffe05afeb4,108991732,0,0x0,8
tick,0x7fffe05afeb4,109007754,0,0x0,8
tick,0x7fffe05afeb4,109023804,0,0x0,8
tick,0x7fffe05afeb4,109039015,0,0x0,8
tick,0x7fffe05afeb4,109054920,0,0x0,8
tick,0x7fffe05afeb4,109071281,0,0x0,8
tick,0x7fffe05afeb4,109086845,0,0x0,8
tick,0x7fffe05afeb4,109103268,0,0x0,8
tick,0x7fffe05afeb4,109118731,0,0x0,8
tick,0x7fffe05afeb4,109135401,0,0x0,8
tick,0x7fffe05afeb4,109150735,0,0x0,8
tick,0x7fffe05afeb4,109166810,0,0x0,8
tick,0x7fffe05afeb4,109182806,0,0x0,8
tick,0x7fffe05afeb4,109197925,0,0x0,8
tick,0x7fffe05afeb4,109213792,0,0x0,8
tick,0x7fffe05afeb4,109229845,0,0x0,8
tick,0x7fffe05afeb4,109245904,0,0x0,8
tick,0x7fffe05afeb4,109261918,0,0x0,8
tick,0x7fffe05afeb4,109277838,0,0x0,8
tick,0x7fffe05afeb4,109293901,0,0x0,8
tick,0x7fffe05afeb4,109310130,0,0x0,8
tick,0x7fffe05afeb4,109325994,0,0x0,8
tick,0x7fffe05afeb4,109341726,0,0x0,8
tick,0x7fffe05afeb4,109357866,0,0x0,8
tick,0x7fffe05afeb4,109373843,0,0x0,8
tick,0x7fffe05afeb4,109389864,0,0x0,8
tick,0x7fffe05afeb4,109405807,0,0x0,8
tick,0x7fffe05afeb4,109421941,0,0x0,8
tick,0x7fffe05afeb4,109437928,0,0x0,8
tick,0x7fffe05afeb4,109453826,0,0x0,8
tick,0x7fffe05afeb4,109469819,0,0x0,8
tick,0x7fffe05afeb4,109485919,0,0x0,8
tick,0x7fffe05afeb4,109501809,0,0x0,8
tick,0x7fffe05afeb4,109516759,0,0x0,8
tick,0x7fffe05afeb4,109532942,0,0x0,8
tick,0x7fffe05afeb4,109548864,0,0x0,8
tick,0x7fffe05afeb4,109564949,0,0x0,8
tick,0x7fffe05afeb4,109580006,0,0x0,8
tick,0x7fffe05afeb4,109595780,0,0x0,8
tick,0x7fffe05afeb4,109611888,0,0x0,8
tick,0x7fffe05afeb4,109627928,0,0x0,8
tick,0x7fffe05afeb4,109644015,0,0x0,8
tick,0x7fffe05afeb4,109659814,0,0x0,8
tick,0x7fffe05afeb4,109675919,0,0x0,8
tick,0x7fffe05afeb4,109691852,0,0x0,8
tick,0x7fffe05afeb4,109706819,0,0x0,8
tick,0x7fffe05afeb4,109722733,0,0x0,8
tick,0x7fffe05afeb4,109738815,0,0x0,8
tick,0x7fffe05afeb4,109754984,0,0x0,8
tick,0x7fffe05afeb4,109769890,0,0x0,8
tick,0x7fffe05afeb4,109785753,0,0x0,8
tick,0x7fffe05afeb4,109801801,0,0x0,8
tick,0x7fffe05afeb4,109816738,0,0x0,8
tick,0x7fffe05afeb4,109832784,0,0x0,8
tick,0x7fffe05afeb4,109848847,0,0x0,8
tick,0x7fffe05afeb4,109864876,0,0x0,8
tick,0x7fffe05afeb4,109879900,0,0x0,8
tick,0x7fffe05afeb4,109895825,0,0x0,8
tick,0x7fffe05afeb4,109911742,0,0x0,8
tick,0x7fffe05afeb4,109928049,0,0x0,8
tick,0x7fffe05afeb4,109943878,0,0x0,8
tick,0x7fffe05afeb4,109959868,0,0x0,8
tick,0x7fffe05afeb4,109974899,0,0x0,8
tick,0x7fffe05afeb4,109990880,0,0x0,8
tick,0x7fffe05afeb4,110006808,0,0x0,8
tick,0x7fffe05afeb4,110022801,0,0x0,8
tick,0x7fffe05afeb4,110038800,0,0x0,8
tick,0x7fffe05afeb4,110054914,0,0x0,8
tick,0x7fffe05afeb4,110071423,0,0x0,8
tick,0x7fffe05afeb4,110086984,0,0x0,8
tick,0x7fffe05afeb4,110103262,0,0x0,8
tick,0x7fffe05afeb4,110118927,0,0x0,8
tick,0x7fffe05afeb4,110135361,0,0x0,8
tick,0x7fffe05afeb4,110150952,0,0x0,8
tick,0x7fffe05afeb4,110166885,0,0x0,8
tick,0x7fffe05afeb4,110182990,0,0x0,8
tick,0x7fffe05afeb4,110197873,0,0x0,8
tick,0x7fffe05afeb4,110213790,0,0x0,8
tick,0x7fffe05afeb4,110229788,0,0x0,8
tick,0x7fffe05afeb4,110245812,0,0x0,8
tick,0x7fffe05afeb4,110261734,0,0x0,8
tick,0x7fffe05afeb4,110276936,0,0x0,8
tick,0x7fffe05afeb4,110292803,0,0x0,8
tick,0x7fffe05afeb4,110309090,0,0x0,8
tick,0x7fffe05afeb4,110324773,0,0x0,8
tick,0x7fffe05afeb4,110339931,0,0x0,8
tick,0x7fffe05afeb4,110355789,0,0x0,8
tick,0x7fffe05afeb4,110371888,0,0x0,8
tick,0x7fffe05afeb4,110387760,0,0x0,8
tick,0x7fffe05afeb4,110403838,0,0x0,8
tick,0x7fffe05afeb4,110419964,0,0x0,8
tick,0x7fffe05afeb4,110435883,0,0x0,8
tick,0x7fffe05afeb4,110451735,0,0x0,8
tick,0x7fffe05afeb4,110466800,0,0x0,8
tick,0x7fffe05afeb4,110482790,0,0x0,8
tick,0x7fffe05afeb4,110498875,0,0x0,8
tick,0x7fffe05afeb4,110514809,0,0x0,8
tick,0x7fffe05afeb4,110531027,0,0x0,8
tick,0x7fffe05afeb4,110546813,0,0x0,8
tick,0x7fffe05afeb4,110562832,0,0x0,8
tick,0x7fffe05afeb4,110578774,0,0x0,8
tick,0x7fffe05afeb4,110594819,0,0x0,8
tick,0x7fffe05afeb4,110610835,0,0x0,8
tick,0x7fffe05afeb4,110626924,0,0x0,8
tick,0x7fffe05afeb4,110642959,0,0x0,8
tick,0x7fffe05afeb4,110658864,0,0x0,8
tick,0x7fffe05afeb4,110673774,0,0x0,8
tick,0x7fffe05afeb4,110689905,0,0x0,8
tick,0x7fffe05afeb4,110705731,0,0x0,8
tick,0x7fffe05afeb4,110721819,0,0x0,8
tick,0x7fffe05afeb4,110737745,0,0x0,8
tick,0x7fffe05afeb4,110752886,0,0x0,8
tick,0x7fffe05afeb4,110768836,0,0x0,8
tick,0x7fffe05afeb4,110784867,0,0x0,8
tick,0x7fffe05afeb4,110800727,0,0x0,8
tick,0x7fffe05afeb4,110816862,0,0x0,8
tick,0x7fffe05afeb4,110832741,0,0x0,8
tick,0x7fffe05afeb4,110848916,0,0x0,8
tick,0x7fffe05afeb4,110864824,0,0x0,8
tick,0x7fffe05afeb4,110880915,0,0x0,8
tick,0x7fffe05afeb4,110895809,0,0x0,8
tick,0x7fffe05afeb4,110911775,0,0x0,8
tick,0x7fffe05afeb4,110927800,0,0x0,8
tick,0x7fffe05afeb4,110943849,0,0x0,8
tick,0x7fffe05afeb4,110959831,0,0x0,8
tick,0x7fffe05afeb4,110975947,0,0x0,8
tick,0x7fffe05afeb4,110991831,0,0x0,8
tick,0x7fffe05afeb4,111006893,0,0x0,8
tick,0x7fffe05afeb4,111022741,0,0x0,8
tick,0x7fffe05afeb4,111038832,0,0x0,8
tick,0x7fffe05afeb4,111054730,0,0x0,8
tick,0x7fffe05afeb4,111071381,0,0x0,8
tick,0x7fffe05afeb4,111086853,0,0x0,8
tick,0x7fffe05afeb4,111102982,0,0x0,8
tick,0x7fffe05afeb4,111117819,0,0x0,8
tick,0x7fffe05afeb4,111132914,0,0x0,8
tick,0x7fffe05afeb4,111148834,0,0x0,8
tick,0x7fffe05afeb4,111165616,0,0x0,8
tick,0x7fffe05afeb4,111179914,0,0x0,8
tick,0x7fffe05afeb4,111194992,0,0x0,8
tick,0x7fffe05afeb4,111210844,0,0x0,8
tick,0x7fffe05afeb4,111226833,0,0x0,8
tick,0x7fffe05afeb4,111242788,0,0x0,8
tick,0x7fffe05afeb4,111259161,0,0x0,8
tick,0x7fffe05afeb4,111274811,0,0x0,8
tick,0x7fffe05afeb4,111290816,0,0x0,8
tick,0x7fffe05afeb4,111306894,0,0x0,8
tick,0x7fffe05afeb4,111322872,0,0x0,8
tick,0x7fffe05afeb4,111338906,0,0x0,8
tick,0x7fffe05afeb4,111354988,0,0x0,8
tick,0x7fffe05afeb4,111370827,0,0x0,8
tick,0x7fffe05afeb4,111386881,0,0x0,8
tick,0x7fffe05afeb4,111402849,0,0x0,8
tick,0x7fffe05afeb4,111418894,0,0x0,8
tick,0x7fffe05afeb4,111434830,0,0x0,8
tick,0x7fffe05afeb4,111450935,0,0x0,8
tick,0x7fffe05afeb4,111466842,0,0x0,8
tick,0x7fffe05afeb4,111482779,0,0x0,8
tick,0x7fffe05afeb4,111497736,0,0x0,8
tick,0x7fffe05afeb4,111513908,0,0x0,8
tick,0x7fffe05afeb4,111530049,0,0x0,8
tick,0x7fffe05afeb4,111545866,0,0x0,8
tick,0x7fffe05afeb4,111561734,0,0x0,8
tick,0x7fffe05afeb4,111577341,0,0x0,8
tick,0x7fffe05afeb4,111592858,0,0x0,8
tick,0x7fffe05afeb4,111608798,0,0x0,8
tick,0x7fffe05afeb4,111624883,0,0x0,8
tick,0x7fffe05afeb4,111641000,0,0x0,8
tick,0x7fffe05afeb4,111656831,0,0x0,8
tick,0x7fffe05afeb4,111672973,0,0x0,8
tick,0x7fffe05afeb4,111688744,0,0x0,8
tick,0x7fffe05afeb4,111707383,0,0x0,8
tick,0x7fffe05afeb4,111720804,0,0x0,8
tick,0x7fffe05afeb4,111736966,0,0x0,8
tick,0x7fffe05afeb4,111751886,0,0x0,8
tick,0x7fffe05afeb4,111766841,0,0x0,8
tick,0x7fffe05afeb4,111782822,0,0x0,8
tick,0x7fffe05afeb4,111798784,0,0x0,8
tick,0x7fffe05afeb4,111814837,0,0x0,8
tick,0x7fffe05afeb4,111829939,0,0x0,8
tick,0x7fffe05afeb4,111845815,0,0x0,8
tick,0x7fffe05afeb4,111865225,0,0x0,8
tick,0x7fffe05afeb4,111876827,0,0x0,8
tick,0x7fffe05afeb4,111892852,0,0x0,8
tick,0x7fffe05afeb4,111908732,0,0x0,8
tick,0x7fffe05afeb4,111924736,0,0x0,8
tick,0x7fffe05afeb4,111939898,0,0x0,8
tick,0x7fffe05afeb4,111955870,0,0x0,8
tick,0x7fffe05afeb4,111971887,0,0x0,8
tick,0x7fffe05afeb4,111987928,0,0x0,8
tick,0x7fffe05afeb4,112003738,0,0x0,8
tick,0x7fffe05afeb4,112019821,0,0x0,8
tick,0x7fffe05afeb4,112035741,0,0x0,8
tick,0x7fffe05afeb4,112051853,0,0x0,8
tick,0x7fffe05afeb4,112067869,0,0x0,8
tick,0x7fffe05afeb4,112083277,0,0x0,8
tick,0x7fffe05afeb4,112098896,0,0x0,8
tick,0x7fffe05afeb4,112114868,0,0x0,8
tick,0x7fffe05afeb4,112130827,0,0x0,8
tick,0x7fffe05afeb4,112146954,0,0x0,8
tick,0x7fffe05afeb4,112161724,0,0x0,8
tick,0x7fffe05afeb4,112177956,0,0x0,8
tick,0x7fffe05afeb4,112193893,0,0x0,8
tick,0x7fffe05afeb4,112210018,0,0x0,8
tick,0x7fffe05afeb4,112225736,0,0x0,8
tick,0x7fffe05afeb4,112241817,0,0x0,8
tick,0x7fffe05afeb4,112257809,0,0x0,8
tick,0x7fffe05afeb4,112273945,0,0x0,8
tick,0x7fffe05afeb4,112289814,0,0x0,8
tick,0x7fffe05afeb4,112305982,0,0x0,8
tick,0x7fffe05afeb4,112321778,0,0x0,8
tick,0x7fffe05afeb4,112337933,0,0x0,8
tick,0x7fffe05afeb4,112353953,0,0x0,8
tick,0x7fffe05afeb4,112369832,0,0x0,8
tick,0x7fffe05afeb4,112385728,0,0x0,8
tick,0x7fffe05afeb4,112401908,0,0x0,8
tick,0x7fffe05afeb4,112417874,0,0x0,8
tick,0x7fffe05afeb4,112433742,0,0x0,8
tick,0x7fffe05afeb4,112449861,0,0x0,8
tick,0x7fffe05afeb4,112465878,0,0x0,8
tick,0x7fffe05afeb4,112481774,0,0x0,8
tick,0x7fffe05afeb4,112497805,0,0x0,8
tick,0x7fffe05afeb4,112513806,0,0x0,8
tick,0x7fffe05afeb4,112530111,0,0x0,8
tick,0x7fffe05afeb4,112545838,0,0x0,8
tick,0x7fffe05afeb4,112561898,0,0x0,8
tick,0x7fffe05afeb4,112577793,0,0x0,8
tick,0x7fffe05afeb4,112593834,0,0x0,8
tick,0x7fffe05afeb4,112609909,0,0x0,8
tick,0x7fffe05afeb4,112625952,0,0x0,8
tick,0x7fffe05afeb4,112641775,0,0x0,8
tick,0x7fffe05afeb4,112656823,0,0x0,8
tick,0x7fffe05afeb4,112672906,0,0x0,8
tick,0x7fffe05afeb4,112687904,0,0x0,8
tick,0x7fffe05afeb4,112703742,0,0x0,8
tick,0x7fffe05afeb4,112719896,0,0x0,8
tick,0x7fffe05afeb4,112735784,0,0x0,8
tick,0x7fffe05afeb4,112751878,0,0x0,8
tick,0x7fffe05afeb4,112766766,0,0x0,8
tick,0x7fffe05afeb4,112782924,0,0x0,8
tick,0x7fffe05afeb4,112797898,0,0x0,8
tick,0x7fffe05afeb4,112813730,0,0x0,8
tick,0x7fffe05afeb4,112829780,0,0x0,8
tick,0x7fffe05afeb4,112845904,0,0x0,8
tick,0x7fffe05afeb4,112861742,0,0x0,8
tick,0x7fffe05afeb4,112877048,0,0x0,8
tick,0x7fffe05afeb4,112892838,0,0x0,8
tick,0x7fffe05afeb4,112908837,0,0x0,8
tick,0x7fffe05afeb4,112923745,0,0x0,8
tick,0x7fffe05afeb4,112939820,0,0x0,8
tick,0x7fffe05afeb4,112954730,0,0x0,8
tick,0x7fffe05afeb4,112971028,0,0x0,8
tick,0x7fffe05afeb4,112986884,0,0x0,8
tick,0x7fffe05afeb4,113002876,0,0x0,8
tick,0x7fffe05afeb4,113018814,0,0x0,8
tick,0x7fffe05afeb4,113034827,0,0x0,8
tick,0x7fffe05afeb4,113050719,0,0x0,8
tick,0x7fffe05afeb4,113066829,0,0x0,8
tick,0x7fffe05afeb4,113082761,0,0x0,8
tick,0x7fffe05afeb4,113097952,0,0x0,8
tick,0x7fffe05afeb4,113112733,0,0x0,8
tick,0x7fffe05afeb4,113128967,0,0x0,8
tick,0x7fffe05afeb4,113144866,0,0x0,8
tick,0x7fffe05afeb4,113159927,0,0x0,8
tick,0x7fffe05afeb4,113175738,0,0x0,8
tick,0x7fffe05afeb4,113192048,0,0x0,8
tick,0x7fffe05afeb4,113207803,0,0x0,8
tick,0x7fffe05afeb4,113223891,0,0x0,8
tick,0x7fffe05afeb4,113239903,0,0x0,8
tick,0x7fffe05afeb4,113255788,0,0x0,8
tick,0x7fffe05afeb4,113270754,0,0x0,8
tick,0x7fffe05afeb4,113286856,0,0x0,8
tick,0x7fffe05afeb4,113302860,0,0x0,8
tick,0x7fffe05afeb4,113318819,0,0x0,8
tick,0x7fffe05afeb4,113334826,0,0x0,8
tick,0x7fffe05afeb4,113350892,0,0x0,8
tick,0x7fffe05afeb4,113366775,0,0x0,8
tick,0x7fffe05afeb4,113382822,0,0x0,8
tick,0x7fffe05afeb4,113398752,0,0x0,8
tick,0x7fffe05afeb4,113414978,0,0x0,8
tick,0x7fffe05afeb4,113430769,0,0x0,8
tick,0x7fffe05afeb4,113445817,0,0x0,8
tick,0x7fffe05afeb4,113461819,0,0x0,8
tick,0x7fffe05afeb4,113476800,0,0x0,8
tick,0x7fffe05afeb4,113492765,0,0x0,8
tick,0x7fffe05afeb4,113508775,0,0x0,8
tick,0x7fffe05afeb4,113524855,0,0x0,8
tick,0x7fffe05afeb4,113540795,0,0x0,8
tick,0x7fffe05afeb4,113556813,0,0x0,8
tick,0x7fffe05afeb4,113572744,0,0x0,8
tick,0x7fffe05afeb4,113587822,0,0x0,8
tick,0x7fffe05afeb4,113603893,0,0x0,8
tick,0x7fffe05afeb4,113619758,0,0x0,8
tick,0x7fffe05afeb4,113635801,0,0x0,8
tick,0x7fffe05afeb4,113651810,0,0x0,8
tick,0x7fffe05afeb4,113667823,0,0x0,8
tick,0x7fffe05afeb4,113683885,0,0x0,8
tick,0x7fffe05afeb4,113699757,0,0x0,8
tick,0x7fffe05afeb4,113715746,0,0x0,8
tick,0x7fffe05afeb4,113731923,0,0x0,8
tick,0x7fffe05afeb4,113746840,0,0x0,8
tick,0x7fffe05afeb4,113762745,0,0x0,8
tick,0x7fffe05afeb4,113777745,0,0x0,8
tick,0x7fffe05afeb4,113793757,0,0x0,8
tick,0x7fffe05afeb4,113809830,0,0x0,8
tick,0x7fffe05afeb4,113825733,0,0x0,8
tick,0x7fffe05afeb4,113842032,0,0x0,8
tick,0x7fffe05afeb4,113857744,0,0x0,8
tick,0x7fffe05afeb4,113873744,0,0x0,8
tick,0x7fffe05afeb4,113888824,0,0x0,8
tick,0x7fffe05afeb4,113904752,0,0x0,8
tick,0x7fffe05afeb4,113920815,0,0x0,8
tick,0x7fffe05afeb4,113936727,0,0x0,8
tick,0x7fffe05afeb4,113952744,0,0x0,8
tick,0x7fffe05afeb4,113968829,0,0x0,8
tick,0x7fffe05afeb4,113984777,0,0x0,8
tick,0x7fffe05afeb4,114000727,0,0x0,8
tick,0x7fffe05afeb4,114016743,0,0x0,8
tick,0x7fffe05afeb4,114032726,0,0x0,8
tick,0x7fffe05afeb4,114047765,0,0x0,8
tick,0x7fffe05afeb4,114062735,0,0x0,8
tick,0x7fffe05afeb4,114078783,0,0x0,8
tick,0x7fffe05afeb4,114094898,0,0x0,8
tick,0x7fffe05afeb4,114110736,0,0x0,8
tick,0x7fffe05afeb4,114126806,0,0x0,8
tick,0x7fffe05afeb4,114142813,0,0x0,8
tick,0x7fffe05afeb4,114158808,0,0x0,8
tick,0x7fffe05afeb4,114174730,0,0x0,8
tick,0x7fffe05afeb4,114190791,0,0x0,8
tick,0x7fffe05afeb4,114206821,0,0x0,8
tick,0x7fffe05afeb4,114222805,0,0x0,8
tick,0x7fffe05afeb4,114237800,0,0x0,8
tick,0x7fffe05afeb4,114252722,0,0x0,8
tick,0x7fffe05afeb4,114268819,0,0x0,8
tick,0x7fffe05afeb4,114284762,0,0x0,8
tick,0x7fffe05afeb4,114300760,0,0x0,8
tick,0x7fffe05afeb4,114316776,0,0x0,8
tick,0x7fffe05afeb4,114332828,0,0x0,8
tick,0x7fffe05afeb4,114348827,0,0x0,8
tick,0x7fffe05afeb4,114363835,0,0x0,8
tick,0x7fffe05afeb4,114379797,0,0x0,8
tick,0x7fffe05afeb4,114395752,0,0x0,8
tick,0x7fffe05afeb4,114411839,0,0x0,8
tick,0x7fffe05afeb4,114427755,0,0x0,8
tick,0x7fffe05afeb4,114443749,0,0x0,8
tick,0x7fffe05afeb4,114458827,0,0x0,8
tick,0x7fffe05afeb4,114474817,0,0x0,8
tick,0x7fffe05afeb4,114490731,0,0x0,8
tick,0x7fffe05afeb4,114506756,0,0x0,8
tick,0x7fffe05afeb4,114522947,0,0x0,8
tick,0x7fffe05afeb4,114538825,0,0x0,8
tick,0x7fffe05afeb4,114554838,0,0x0,8
tick,0x7fffe05afeb4,114570832,0,0x0,8
tick,0x7fffe05afeb4,114586734,0,0x0,8
tick,0x7fffe05afeb4,114601728,0,0x0,8
tick,0x7fffe05afeb4,114616740,0,0x0,8
tick,0x7fffe05afeb4,114632763,0,0x0,8
tick,0x7fffe05afeb4,114647772,0,0x0,8
tick,0x7fffe05afeb4,114663771,0,0x0,8
tick,0x7fffe05afeb4,114679778,0,0x0,8
tick,0x7fffe05afeb4,114694772,0,0x0,8
tick,0x7fffe05afeb4,114710783,0,0x0,8
tick,0x7fffe05afeb4,114725780,0,0x0,8
tick,0x7fffe05afeb4,114742019,0,0x0,8
tick,0x7fffe05afeb4,114758048,0,0x0,8
tick,0x7fffe05afeb4,114773739,0,0x0,8
tick,0x7fffe05afeb4,114788736,0,0x0,8
tick,0x7fffe05afeb4,114803784,0,0x0,8
tick,0x7fffe05afeb4,114819902,0,0x0,8
tick,0x7fffe05afeb4,114835850,0,0x0,8
tick,0x7fffe05afeb4,114851752,0,0x0,8
tick,0x7fffe05afeb4,114866744,0,0x0,8
tick,0x7fffe05afeb4,114882733,0,0x0,8
tick,0x7fffe05afeb4,114898810,0,0x0,8
tick,0x7fffe05afeb4,114915395,0,0x0,8
tick,0x7fffe05afeb4,114930749,0,0x0,8
tick,0x7fffe05afeb4,114946446,0,0x0,8
tick,0x7fffe05afeb4,114961753,0,0x0,8
tick,0x7fffe05afeb4,114978223,0,0x0,8
tick,0x7fffe05afeb4,114993743,0,0x0,8
tick,0x7fffe05afeb4,115009926,0,0x0,8
tick,0x7fffe05afeb4,115025815,0,0x0,8
tick,0x7fffe05afeb4,115041743,0,0x0,8
tick,0x7fffe05afeb4,115057831,0,0x0,8
tick,0x7fffe05afeb4,115073881,0,0x0,8
tick,0x7fffe05afeb4,115089790,0,0x0,8
tick,0x7fffe05afeb4,115105759,0,0x0,8
tick,0x7fffe05afeb4,115121809,0,0x0,8
tick,0x7fffe05afeb4,115137754,0,0x0,8
tick,0x7fffe05afeb4,115153875,0,0x0,8
tick,0x7fffe05afeb4,115172062,0,0x0,8
tick,0x7fffe05afeb4,115184899,0,0x0,8
tick,0x7fffe05afeb4,115201337,0,0x0,8
tick,0x7fffe05afeb4,115216958,0,0x0,8
tick,0x7fffe05afeb4,115234242,0,0x0,8
tick,0x7fffe05afeb4,115248935,0,0x0,8
tick,0x7fffe05afeb4,115264838,0,0x0,8
tick,0x7fffe05afeb4,115280865,0,0x0,8
tick,0x7fffe05afeb4,115296776,0,0x0,8
tick,0x7fffe05afeb4,115312909,0,0x0,8
tick,0x7fffe05afeb4,115328911,0,0x0,8
tick,0x7fffe05afeb4,115343838,0,0x0,8
tick,0x7fffe05afeb4,115359804,0,0x0,8
tick,0x7fffe05afeb4,115375971,0,0x0,8
tick,0x7fffe05afeb4,115391831,0,0x0,8
tick,0x7fffe05afeb4,115407843,0,0x0,8
tick,0x7fffe05afeb4,115423808,0,0x0,8
tick,0x7fffe05afeb4,115440109,0,0x0,8
tick,0x7fffe05afeb4,115455737,0,0x0,8
tick,0x7fffe05afeb4,115471951,0,0x0,8
tick,0x7fffe05afeb4,115487743,0,0x0,8
tick,0x7fffe05afeb4,115504090,0,0x0,8
tick,0x7fffe05afeb4,115518839,0,0x0,8
tick,0x7fffe05afeb4,115534851,0,0x0,8
tick,0x7fffe05afeb4,115550914,0,0x0,8
tick,0x7fffe05afeb4,115565867,0,0x0,8
tick,0x7fffe05afeb4,115581796,0,0x0,8
tick,0x7fffe05afeb4,115597930,0,0x0,8
tick,0x7fffe05afeb4,115613810,0,0x0,8
tick,0x7fffe05afeb4,115629940,0,0x0,8
tick,0x7fffe05afeb4,115646113,0,0x0,8
tick,0x7fffe05afeb4,115662224,0,0x0,8
tick,0x7fffe05afeb4,115677803,0,0x0,8
tick,0x7fffe05afeb4,115693794,0,0x0,8
tick,0x7fffe05afeb4,115709886,0,0x0,8
tick,0x7fffe05afeb4,115725131,0,0x0,8
tick,0x7fffe05afeb4,115740724,0,0x0,8
tick,0x7fffe05afeb4,115755905,0,0x0,8
tick,0x7fffe05afeb4,115771826,0,0x0,8
tick,0x7fffe05afeb4,115787793,0,0x0,8
tick,0x7fffe05afeb4,115803831,0,0x0,8
tick,0x7fffe05afeb4,115819964,0,0x0,8
tick,0x7fffe05afeb4,115835876,0,0x0,8
tick,0x7fffe05afeb4,115851855,0,0x0,8
tick,0x7fffe05afeb4,115867791,0,0x0,8
tick,0x7fffe05afeb4,115884164,0,0x0,8
tick,0x7fffe05afeb4,115898828,0,0x0,8
tick,0x7fffe05afeb4,115915325,0,0x0,8
tick,0x7fffe05afeb4,115930780,0,0x0,8
tick,0x7fffe05afeb4,115948604,0,0x0,8
tick,0x7fffe05afeb4,115962751,0,0x0,8
tick,0x7fffe05afeb4,115979114,0,0x0,8
tick,0x7fffe05afeb4,115994902,0,0x0,8
tick,0x7fffe05afeb4,116010804,0,0x0,8
tick,0x7fffe05afeb4,116025824,0,0x0,8
tick,0x7fffe05afeb4,116041236,0,0x0,8
tick,0x7fffe05afeb4,116056839,0,0x0,8
tick,0x7fffe05afeb4,116072824,0,0x0,8
tick,0x7fffe05afeb4,116088857,0,0x0,8
tick,0x7fffe05afeb4,116104925,0,0x0,8
tick,0x7fffe05afeb4,116120730,0,0x0,8
tick,0x7fffe05afeb4,116136902,0,0x0,8
tick,0x7fffe05afeb4,116152773,0,0x0,8
tick,0x7fffe05afeb4,116167920,0,0x0,8
tick,0x7fffe05afeb4,116182757,0,0x0,8
tick,0x7fffe05afeb4,116198052,0,0x0,8
tick,0x7fffe05afeb4,116213725,0,0x0,8
tick,0x7fffe05afeb4,116230347,0,0x0,8
tick,0x7fffe05afeb4,116245896,0,0x0,8
tick,0x7fffe05afeb4,116261840,0,0x0,8
tick,0x7fffe05afeb4,116277846,0,0x0,8
tick,0x7fffe05afeb4,116293852,0,0x0,8
tick,0x7fffe05afeb4,116309794,0,0x0,8
tick,0x7fffe05afeb4,116325802,0,0x0,8
tick,0x7fffe05afeb4,116341953,0,0x0,8
tick,0x7fffe05afeb4,116357901,0,0x0,8
tick,0x7fffe05afeb4,116373806,0,0x0,8
tick,0x7fffe05afeb4,116390069,0,0x0,8
tick,0x7fffe05afeb4,116405730,0,0x0,8
tick,0x7fffe05afeb4,116421785,0,0x0,8
tick,0x7fffe05afeb4,116437736,0,0x0,8
tick,0x7fffe05afeb4,116453836,0,0x0,8
tick,0x7fffe05afeb4,116469899,0,0x0,8
tick,0x7fffe05afeb4,116485819,0,0x0,8
tick,0x7fffe05afeb4,116501989,0,0x0,8
tick,0x7fffe05afeb4,116517855,0,0x0,8
tick,0x7fffe05afeb4,116533947,0,0x0,8
tick,0x7fffe05afeb4,116549932,0,0x0,8
tick,0x7fffe05afeb4,116564821,0,0x0,8
tick,0x7fffe05afeb4,116580086,0,0x0,8
tick,0x7fffe05afeb4,116595761,0,0x0,8
tick,0x7fffe05afeb4,116611861,0,0x0,8
tick,0x7fffe05afeb4,116627752,0,0x0,8
tick,0x7fffe05afeb4,116643894,0,0x0,8
tick,0x7fffe05afeb4,116659797,0,0x0,8
tick,0x7fffe05afeb4,116674909,0,0x0,8
tick,0x7fffe05afeb4,116690809,0,0x0,8
tick,0x7fffe05afeb4,116706947,0,0x0,8
tick,0x7fffe05afeb4,116722843,0,0x0,8
tick,0x7fffe05afeb4,116738911,0,0x0,8
tick,0x7fffe05afeb4,116754836,0,0x0,8
tick,0x7fffe05afeb4,116770894,0,0x0,8
tick,0x7fffe05afeb4,116786726,0,0x0,8
tick,0x7fffe05afeb4,116802753,0,0x0,8
tick,0x7fffe05afeb4,116818825,0,0x0,8
tick,0x7fffe05afeb4,116835023,0,0x0,8
tick,0x7fffe05afeb4,116850729,0,0x0,8
tick,0x7fffe05afeb4,116865845,0,0x0,8
tick,0x7fffe05afeb4,116881815,0,0x0,8
tick,0x7fffe05afeb4,116897933,0,0x0,8
tick,0x7fffe05afeb4,116913810,0,0x0,8
tick,0x7fffe05afeb4,116930032,0,0x0,8
tick,0x7fffe05afeb4,116946121,0,0x0,8
tick,0x7fffe05afeb4,116961800,0,0x0,8
tick,0x7fffe05afeb4,116976746,0,0x0,8
tick,0x7fffe05afeb4,116992873,0,0x0,8
tick,0x7fffe05afeb4,117008987,0,0x0,8
tick,0x7fffe05afeb4,117024977,0,0x0,8
tick,0x7fffe05afeb4,117040780,0,0x0,8
tick,0x7fffe05afeb4,117056944,0,0x0,8
tick,0x7fffe05afeb4,117072734,0,0x0,8
tick,0x7fffe05afeb4,117088880,0,0x0,8
tick,0x7fffe05afeb4,117104741,0,0x0,8
tick,0x7fffe05afeb4,117120948,0,0x0,8
tick,0x7fffe05afeb4,117135985,0,0x0,8
tick,0x7fffe05afeb4,117151914,0,0x0,8
tick,0x7fffe05afeb4,117167868,0,0x0,8
tick,0x7fffe05afeb4,117182957,0,0x0,8
tick,0x7fffe05afeb4,117198956,0,0x0,8
tick,0x7fffe05afeb4,117214888,0,0x0,8
tick,0x7fffe05afeb4,117230781,0,0x0,8
tick,0x7fffe05afeb4,117246108,0,0x0,8
tick,0x7fffe05afeb4,117261837,0,0x0,8
tick,0x7fffe05afeb4,117276972,0,0x0,8
tick,0x7fffe05afeb4,117291746,0,0x0,8
tick,0x7fffe05afeb4,117307787,0,0x0,8
tick,0x7fffe05afeb4,117323734,0,0x0,8
tick,0x7fffe05afeb4,117338950,0,0x0,8
tick,0x7fffe05afeb4,117354851,0,0x0,8
tick,0x7fffe05afeb4,117370797,0,0x0,8
tick,0x7fffe05afeb4,117386798,0,0x0,8
tick,0x7fffe05afeb4,117402804,0,0x0,8
tick,0x7fffe05afeb4,117418735,0,0x0,8
tick,0x7fffe05afeb4,117433902,0,0x0,8
tick,0x7fffe05afeb4,117449843,0,0x0,8
tick,0x7fffe05afeb4,117465919,0,0x0,8
tick,0x7fffe05afeb4,117481962,0,0x0,8
tick,0x7fffe05afeb4,117497821,0,0x0,8
tick,0x7fffe05afeb4,117513740,0,0x0,8
tick,0x7fffe05afeb4,117530032,0,0x0,8
tick,0x7fffe05afeb4,117544800,0,0x0,8
tick,0x7fffe05afeb4,117560771,0,0x0,8
tick,0x7fffe05afeb4,117576739,0,0x0,8
tick,0x7fffe05afeb4,117592993,0,0x0,8
tick,0x7fffe05afeb4,117607874,0,0x0,8
tick,0x7fffe05afeb4,117623782,0,0x0,8
tick,0x7fffe05afeb4,117639773,0,0x0,8
tick,0x7fffe05afeb4,117654806,0,0x0,8
tick,0x7fffe05afeb4,117670827,0,0x0,8
tick,0x7fffe05afeb4,117686841,0,0x0,8
tick,0x7fffe05afeb4,117702827,0,0x0,8
tick,0x7fffe05afeb4,117719002,0,0x0,8
tick,0x7fffe05afeb4,117734940,0,0x0,8
tick,0x7fffe05afeb4,117750859,0,0x0,8
tick,0x7fffe05afeb4,117765774,0,0x0,8
tick,0x7fffe05afeb4,117781971,0,0x0,8
tick,0x7fffe05afeb4,117797804,0,0x0,8
tick,0x7fffe05afeb4,117813738,0,0x0,8
tick,0x7fffe05afeb4,117829885,0,0x0,8
tick,0x7fffe05afeb4,117845801,0,0x0,8
tick,0x7fffe05afeb4,117861788,0,0x0,8
tick,0x7fffe05afeb4,117877730,0,0x0,8
tick,0x7fffe05afeb4,117893822,0,0x0,8
tick,0x7fffe05afeb4,117909751,0,0x0,8
tick,0x7fffe05afeb4,117925802,0,0x0,8
tick,0x7fffe05afeb4,117941834,0,0x0,8
tick,0x7fffe05afeb4,117957811,0,0x0,8
tick,0x7fffe05afeb4,117973736,0,0x0,8
tick,0x7fffe05afeb4,117989764,0,0x0,8
tick,0x7fffe05afeb4,118005815,0,0x0,8
tick,0x7fffe05afeb4,118021776,0,0x0,8
tick,0x7fffe05afeb4,118037730,0,0x0,8
tick,0x7fffe05afeb4,118053808,0,0x0,8
tick,0x7fffe05afeb4,118069842,0,0x0,8
tick,0x7fffe05afeb4,118085764,0,0x0,8
tick,0x7fffe05afeb4,118101777,0,0x0,8
tick,0x7fffe05afeb4,118116743,0,0x0,8
tick,0x7fffe05afeb4,118131954,0,0x0,8
tick,0x7fffe05afeb4,118147746,0,0x0,8
tick,0x7fffe05afeb4,118163838,0,0x0,8
tick,0x7fffe05afeb4,118180062,0,0x0,8
tick,0x7fffe05afeb4,118196855,0,0x0,8
tick,0x7fffe05afeb4,118211775,0,0x0,8
tick,0x7fffe05afeb4,118228559,0,0x0,8
tick,0x7fffe05afeb4,118243825,0,0x0,8
tick,0x7fffe05afeb4,118259929,0,0x0,8
tick,0x7fffe05afeb4,118274851,0,0x0,8
tick,0x7fffe05afeb4,118291174,0,0x0,8
tick,0x7fffe05afeb4,118306724,0,0x0,8
tick,0x7fffe05afeb4,118322937,0,0x0,8
tick,0x7fffe05afeb4,118338831,0,0x0,8
tick,0x7fffe05afeb4,118354874,0,0x0,8
tick,0x7fffe05afeb4,118370821,0,0x0,8
tick,0x7fffe05afeb4,118386838,0,0x0,8
tick,0x7fffe05afeb4,118402800,0,0x0,8
tick,0x7fffe05afeb4,118418808,0,0x0,8
tick,0x7fffe05afeb4,118434845,0,0x0,8
tick,0x7fffe05afeb4,118450802,0,0x0,8
tick,0x7fffe05afeb4,118466826,0,0x0,8
tick,0x7fffe05afeb4,118482829,0,0x0,8
tick,0x7fffe05afeb4,118498835,0,0x0,8
tick,0x7fffe05afeb4,118514801,0,0x0,8
tick,0x7fffe05afeb4,118530740,0,0x0,8
tick,0x7fffe05afeb4,118545755,0,0x0,8
tick,0x7fffe05afeb4,118561815,0,0x0,8
tick,0x7fffe05afeb4,118577816,0,0x0,8
tick,0x7fffe05afeb4,118593743,0,0x0,8
tick,0x7fffe05afeb4,118609882,0,0x0,8
tick,0x7fffe05afeb4,118625801,0,0x0,8
tick,0x7fffe05afeb4,118641796,0,0x0,8
tick,0x7fffe05afeb4,118657885,0,0x0,8
tick,0x7fffe05afeb4,118677256,0,0x0,8
tick,0x7fffe05afeb4,118689934,0,0x0,8
tick,0x7fffe05afeb4,118705820,0,0x0,8
tick,0x7fffe05afeb4,118721768,0,0x0,8
tick,0x7fffe05afeb4,118737812,0,0x0,8
tick,0x7fffe05afeb4,118753771,0,0x0,8
tick,0x7fffe05afeb4,118769862,0,0x0,8
tick,0x7fffe05afeb4,118785767,0,0x0,8
tick,0x7fffe05afeb4,118801756,0,0x0,8
tick,0x7fffe05afeb4,118816986,0,0x0,8
tick,0x7fffe05afeb4,118832742,0,0x0,8
tick,0x7fffe05afeb4,118848811,0,0x0,8
tick,0x7fffe05afeb4,118864811,0,0x0,8
tick,0x7fffe05afeb4,118879862,0,0x0,8
tick,0x7fffe05afeb4,118894817,0,0x0,8
tick,0x7fffe05afeb4,118910855,0,0x0,8
tick,0x7fffe05afeb4,118925761,0,0x0,8
tick,0x7fffe05afeb4,118941741,0,0x0,8
tick,0x7fffe05afeb4,118956814,0,0x0,8
tick,0x7fffe05afeb4,118972841,0,0x0,8
tick,0x7fffe05afeb4,118988810,0,0x0,8
tick,0x7fffe05afeb4,119004814,0,0x0,8
tick,0x7fffe05afeb4,119020732,0,0x0,8
tick,0x7fffe05afeb4,119036764,0,0x0,8
tick,0x7fffe05afeb4,119052740,0,0x0,8
tick,0x7fffe05afeb4,119068751,0,0x0,8
tick,0x7fffe05afeb4,119084783,0,0x0,8
tick,0x7fffe05afeb4,119100748,0,0x0,8
tick,0x7fffe05afeb4,119116773,0,0x0,8
tick,0x7fffe05afeb4,119132735,0,0x0,8
tick,0x7fffe05afeb4,119148861,0,0x0,8
tick,0x7fffe05afeb4,119163747,0,0x0,8
tick,0x7fffe05afeb4,119178758,0,0x0,8
tick,0x7fffe05afeb4,119194762,0,0x0,8
tick,0x7fffe05afeb4,119210855,0,0x0,8
tick,0x7fffe05afeb4,119226827,0,0x0,8
tick,0x7fffe05afeb4,119242751,0,0x0,8
tick,0x7fffe05afeb4,119257756,0,0x0,8
tick,0x7fffe05afeb4,119273821,0,0x0,8
tick,0x7fffe05afeb4,119289782,0,0x0,8
tick,0x7fffe05afeb4,119305738,0,0x0,8
tick,0x7fffe05afeb4,119321738,0,0x0,8
tick,0x7fffe05afeb4,119336813,0,0x0,8
tick,0x7fffe05afeb4,119352752,0,0x0,8
tick,0x7fffe05afeb4,119368840,0,0x0,8
tick,0x7fffe05afeb4,119384851,0,0x0,8
tick,0x7fffe05afeb4,119400725,0,0x0,8
tick,0x7fffe05afeb4,119416717,0,0x0,8
tick,0x7fffe05afeb4,119432833,0,0x0,8
tick,0x7fffe05afeb4,119448810,0,0x0,8
tick,0x7fffe05afeb4,119464818,0,0x0,8
tick,0x7fffe05afeb4,119480813,0,0x0,8
tick,0x7fffe05afeb4,119495805,0,0x0,8
tick,0x7fffe05afeb4,119511742,0,0x0,8
tick,0x7fffe05afeb4,119527747,0,0x0,8
tick,0x7fffe05afeb4,119543745,0,0x0,8
tick,0x7fffe05afeb4,119559882,0,0x0,8
tick,0x7fffe05afeb4,119575748,0,0x0,8
tick,0x7fffe05afeb4,119591825,0,0x0,8
tick,0x7fffe05afeb4,119607748,0,0x0,8
tick,0x7fffe05afeb4,119623895,0,0x0,8
tick,0x7fffe05afeb4,119639838,0,0x0,8
tick,0x7fffe05afeb4,119655782,0,0x0,8
tick,0x7fffe05afeb4,119671810,0,0x0,8
tick,0x7fffe05afeb4,119687742,0,0x0,8
tick,0x7fffe05afeb4,119703750,0,0x0,8
tick,0x7fffe05afeb4,119719823,0,0x0,8
tick,0x7fffe05afeb4,119735771,0,0x0,8
tick,0x7fffe05afeb4,119751837,0,0x0,8
tick,0x7fffe05afeb4,119767738,0,0x0,8
tick,0x7fffe05afeb4,119783899,0,0x0,8
tick,0x7fffe05afeb4,119799797,0,0x0,8
tick,0x7fffe05afeb4,119815822,0,0x0,8
tick,0x7fffe05afeb4,119831742,0,0x0,8
tick,0x7fffe05afeb4,119846738,0,0x0,8
tick,0x7fffe05afeb4,119862722,0,0x0,8
tick,0x7fffe05afeb4,119878850,0,0x0,8
tick,0x7fffe05afeb4,119894830,0,0x0,8
tick,0x7fffe05afeb4,119910815,0,0x0,8
tick,0x7fffe05afeb4,119926828,0,0x0,8
tick,0x7fffe05afeb4,119942793,0,0x0,8
tick,0x7fffe05afeb4,119958759,0,0x0,8
tick,0x7fffe05afeb4,119974825,0,0x0,8
tick,0x7fffe05afeb4,119990778,0,0x0,8
tick,0x7fffe05afeb4,120006823,0,0x0,8
tick,0x7fffe05afeb4,120022724,0,0x0,8
tick,0x7fffe05afeb4,120038897,0,0x0,8
tick,0x7fffe05afeb4,120054744,0,0x0,8
tick,0x7fffe05afeb4,120069761,0,0x0,8
tick,0x7fffe05afeb4,120085806,0,0x0,8
tick,0x7fffe05afeb4,120101820,0,0x0,8
tick,0x7fffe05afeb4,120117807,0,0x0,8
tick,0x7fffe05afeb4,120134387,0,0x0,8
tick,0x7fffe05afeb4,120150022,0,0x0,8
tick,0x7fffe05afeb4,120165901,0,0x0,8
tick,0x7fffe05afeb4,120180739,0,0x0,8
tick,0x7fffe05afeb4,120197103,0,0x0,8
tick,0x7fffe05afeb4,120212818,0,0x0,8
tick,0x7fffe05afeb4,120230458,0,0x0,8
tick,0x7fffe05afeb4,120242826,0,0x0,8
tick,0x7fffe05afeb4,120258939,0,0x0,8
tick,0x7fffe05afeb4,120274736,0,0x0,8
tick,0x7fffe05afeb4,120290854,0,0x0,8
tick,0x7fffe05afeb4,120306774,0,0x0,8
tick,0x7fffe05afeb4,120322797,0,0x0,8
tick,0x7fffe05afeb4,120338781,0,0x0,8
tick,0x7fffe05afeb4,120356288,0,0x0,8
tick,0x7fffe05afeb4,120369933,0,0x0,8
tick,0x7fffe05afeb4,120385733,0,0x0,8
tick,0x7fffe05afeb4,120401766,0,0x0,8
tick,0x7fffe05afeb4,120416742,0,0x0,8
tick,0x7fffe05afeb4,120432811,0,0x0,8
tick,0x7fffe05afeb4,120448839,0,0x0,8
tick,0x7fffe05afeb4,120463887,0,0x0,8
tick,0x7fffe05afeb4,120480048,0,0x0,8
tick,0x7fffe05afeb4,120495756,0,0x0,8
tick,0x7fffe05afeb4,120511746,0,0x0,8
tick,0x7fffe05afeb4,120527825,0,0x0,8
tick,0x7fffe05afeb4,120543741,0,0x0,8
tick,0x7fffe05afeb4,120559830,0,0x0,8
tick,0x7fffe05afeb4,120575915,0,0x0,8
tick,0x7fffe05afeb4,120592421,0,0x0,8
tick,0x7fffe05afeb4,120607750,0,0x0,8
tick,0x7fffe05afeb4,120623731,0,0x0,8
tick,0x7fffe05afeb4,120639849,0,0x0,8
tick,0x7fffe05afeb4,120655830,0,0x0,8
tick,0x7fffe05afeb4,120671821,0,0x0,8
tick,0x7fffe05afeb4,120687831,0,0x0,8
tick,0x7fffe05afeb4,120703836,0,0x0,8
tick,0x7fffe05afeb4,120719768,0,0x0,8
tick,0x7fffe05afeb4,120735760,0,0x0,8
tick,0x7fffe05afeb4,120751777,0,0x0,8
tick,0x7fffe05afeb4,120766767,0,0x0,8
tick,0x7fffe05afeb4,120782793,0,0x0,8
tick,0x7fffe05afeb4,120797738,0,0x0,8
tick,0x7fffe05afeb4,120813856,0,0x0,8
tick,0x7fffe05afeb4,120829795,0,0x0,8
tick,0x7fffe05afeb4,120845750,0,0x0,8
tick,0x7fffe05afeb4,120861739,0,0x0,8
tick,0x7fffe05afeb4,120877736,0,0x0,8
tick,0x7fffe05afeb4,120892824,0,0x0,8
tick,0x7fffe05afeb4,120908851,0,0x0,8
tick,0x7fffe05afeb4,120924886,0,0x0,8
tick,0x7fffe05afeb4,120940757,0,0x0,8
tick,0x7fffe05afeb4,120956784,0,0x0,8
tick,0x7fffe05afeb4,120972733,0,0x0,8
tick,0x7fffe05afeb4,120987919,0,0x0,8
tick,0x7fffe05afeb4,121003761,0,0x0,8
tick,0x7fffe05afeb4,121018813,0,0x0,8
tick,0x7fffe05afeb4,121034760,0,0x0,8
tick,0x7fffe05afeb4,121050950,0,0x0,8
tick,0x7fffe05afeb4,121066918,0,0x0,8
tick,0x7fffe05afeb4,121082852,0,0x0,8
tick,0x7fffe05afeb4,121097837,0,0x0,8
tick,0x7fffe05afeb4,121113733,0,0x0,8
tick,0x7fffe05afeb4,121128922,0,0x0,8
tick,0x7fffe05afeb4,121144826,0,0x0,8
tick,0x7fffe05afeb4,121159830,0,0x0,8
tick,0x7fffe05afeb4,121175803,0,0x0,8
tick,0x7fffe05afeb4,121191735,0,0x0,8
tick,0x7fffe05afeb4,121206811,0,0x0,8
tick,0x7fffe05afeb4,121222842,0,0x0,8
tick,0x7fffe05afeb4,121238811,0,0x0,8
tick,0x7fffe05afeb4,121254751,0,0x0,8
tick,0x7fffe05afeb4,121270728,0,0x0,8
tick,0x7fffe05afeb4,121286812,0,0x0,8
tick,0x7fffe05afeb4,121302749,0,0x0,8
tick,0x7fffe05afeb4,121318818,0,0x0,8
tick,0x7fffe05afeb4,121334751,0,0x0,8
tick,0x7fffe05afeb4,121350789,0,0x0,8
tick,0x7fffe05afeb4,121366758,0,0x0,8
tick,0x7fffe05afeb4,121382737,0,0x0,8
tick,0x7fffe05afeb4,121398817,0,0x0,8
tick,0x7fffe05afeb4,121414861,0,0x0,8
tick,0x7fffe05afeb4,121429764,0,0x0,8
tick,0x7fffe05afeb4,121445826,0,0x0,8
tick,0x7fffe05afeb4,121461741,0,0x0,8
tick,0x7fffe05afeb4,121477822,0,0x0,8
tick,0x7fffe05afeb4,121493735,0,0x0,8
tick,0x7fffe05afeb4,121509751,0,0x0,8
tick,0x7fffe05afeb4,121525744,0,0x0,8
tick,0x7fffe05afeb4,121541748,0,0x0,8
tick,0x7fffe05afeb4,121557753,0,0x0,8
tick,0x7fffe05afeb4,121573828,0,0x0,8
tick,0x7fffe05afeb4,121589795,0,0x0,8
tick,0x7fffe05afeb4,121605880,0,0x0,8
tick,0x7fffe05afeb4,121621823,0,0x0,8
tick,0x7fffe05afeb4,121637753,0,0x0,8
tick,0x7fffe05afeb4,121653858,0,0x0,8
tick,0x7fffe05afeb4,121669734,0,0x0,8
tick,0x7fffe05afeb4,121685737,0,0x0,8
tick,0x7fffe05afeb4,121701843,0,0x0,8
tick,0x7fffe05afeb4,121717732,0,0x0,8
tick,0x7fffe05afeb4,121732736,0,0x0,8
tick,0x7fffe05afeb4,121748808,0,0x0,8
tick,0x7fffe05afeb4,121764805,0,0x0,8
tick,0x7fffe05afeb4,121780766,0,0x0,8
tick,0x7fffe05afeb4,121796811,0,0x0,8
tick,0x7fffe05afeb4,121812854,0,0x0,8
tick,0x7fffe05afeb4,121832618,0,0x0,8
tick,0x7fffe05afeb4,121843778,0,0x0,8
tick,0x7fffe05afeb4,121859863,0,0x0,8
tick,0x7fffe05afeb4,121875802,0,0x0,8
tick,0x7fffe05afeb4,121891786,0,0x0,8
tick,0x7fffe05afeb4,121907821,0,0x0,8
tick,0x7fffe05afeb4,121923880,0,0x0,8
tick,0x7fffe05afeb4,121939739,0,0x0,8
tick,0x7fffe05afeb4,121955769,0,0x0,8
tick,0x7fffe05afeb4,121971880,0,0x0,8
tick,0x7fffe05afeb4,121987833,0,0x0,8
tick,0x7fffe05afeb4,122003824,0,0x0,8
tick,0x7fffe05afeb4,122019831,0,0x0,8
tick,0x7fffe05afeb4,122035836,0,0x0,8
tick,0x7fffe05afeb4,122051736,0,0x0,8
tick,0x7fffe05afeb4,122066753,0,0x0,8
tick,0x7fffe05afeb4,122082840,0,0x0,8
tick,0x7fffe05afeb4,122098767,0,0x0,8
tick,0x7fffe05afeb4,122114823,0,0x0,8
tick,0x7fffe05afeb4,122130773,0,0x0,8
tick,0x7fffe05afeb4,122145814,0,0x0,8
tick,0x7fffe05afeb4,122161772,0,0x0,8
tick,0x7fffe05afeb4,122177749,0,0x0,8
tick,0x7fffe05afeb4,122193812,0,0x0,8
tick,0x7fffe05afeb4,122209801,0,0x0,8
tick,0x7fffe05afeb4,122224772,0,0x0,8
tick,0x7fffe05afeb4,122240760,0,0x0,8
tick,0x7fffe05afeb4,122256813,0,0x0,8
tick,0x7fffe05afeb4,122272765,0,0x0,8
tick,0x7fffe05afeb4,122288750,0,0x0,8
tick,0x7fffe05afeb4,122304740,0,0x0,8
tick,0x7fffe05afeb4,122320742,0,0x0,8
tick,0x7fffe05afeb4,122336830,0,0x0,8
tick,0x7fffe05afeb4,122352905,0,0x0,8
tick,0x7fffe05afeb4,122368741,0,0x0,8
tick,0x7fffe05afeb4,122384746,0,0x0,8
tick,0x7fffe05afeb4,122400742,0,0x0,8
tick,0x7fffe05afeb4,122416741,0,0x0,8
tick,0x7fffe05afeb4,122432832,0,0x0,8
tick,0x7fffe05afeb4,122448735,0,0x0,8
tick,0x7fffe05afeb4,122464827,0,0x0,8
tick,0x7fffe05afeb4,122480747,0,0x0,8
tick,0x7fffe05afeb4,122495817,0,0x0,8
tick,0x7fffe05afeb4,122511737,0,0x0,8
tick,0x7fffe05afeb4,122526736,0,0x0,8
tick,0x7fffe05afeb4,122542821,0,0x0,8
tick,0x7fffe05afeb4,122558805,0,0x0,8
tick,0x7fffe05afeb4,122574736,0,0x0,8
tick,0x7fffe05afeb4,122590819,0,0x0,8
tick,0x7fffe05afeb4,122606802,0,0x0,8
tick,0x7fffe05afeb4,122622747,0,0x0,8
tick,0x7fffe05afeb4,122638739,0,0x0,8
tick,0x7fffe05afeb4,122654835,0,0x0,8
tick,0x7fffe05afeb4,122670862,0,0x0,8
tick,0x7fffe05afeb4,122685824,0,0x0,8
tick,0x7fffe05afeb4,122701830,0,0x0,8
tick,0x7fffe05afeb4,122716818,0,0x0,8
tick,0x7fffe05afeb4,122732776,0,0x0,8
tick,0x7fffe05afeb4,122748743,0,0x0,8
tick,0x7fffe05afeb4,122764784,0,0x0,8
tick,0x7fffe05afeb4,122780724,0,0x0,8
tick,0x7fffe05afeb4,122795855,0,0x0,8
tick,0x7fffe05afeb4,122811827,0,0x0,8
tick,0x7fffe05afeb4,122827824,0,0x0,8
tick,0x7fffe05afeb4,122843749,0,0x0,8
tick,0x7fffe05afeb4,122859754,0,0x0,8
tick,0x7fffe05afeb4,122875739,0,0x0,8
tick,0x7fffe05afeb4,122891784,0,0x0,8
tick,0x7fffe05afeb4,122907819,0,0x0,8
tick,0x7fffe05afeb4,122923900,0,0x0,8
tick,0x7fffe05afeb4,122939889,0,0x0,8
tick,0x7fffe05afeb4,122955848,0,0x0,8
tick,0x7fffe05afeb4,122971736,0,0x0,8
tick,0x7fffe05afeb4,122987737,0,0x0,8
tick,0x7fffe05afeb4,123002778,0,0x0,8
tick,0x7fffe05afeb4,123017814,0,0x0,8
tick,0x7fffe05afeb4,123033840,0,0x0,8
tick,0x7fffe05afeb4,123049829,0,0x0,8
tick,0x7fffe05afeb4,123065747,0,0x0,8
tick,0x7fffe05afeb4,123081779,0,0x0,8
tick,0x7fffe05afeb4,123096844,0,0x0,8
tick,0x7fffe05afeb4,123112820,0,0x0,8
tick,0x7fffe05afeb4,123127757,0,0x0,8
tick,0x7fffe05afeb4,123143899,0,0x0,8
tick,0x7fffe05afeb4,123160180,0,0x0,8
tick,0x7fffe05afeb4,123176184,0,0x0,8
tick,0x7fffe05afeb4,123191959,0,0x0,8
tick,0x7fffe05afeb4,123207736,0,0x0,8
tick,0x7fffe05afeb4,123224301,0,0x0,8
tick,0x7fffe05afeb4,123239975,0,0x0,8
tick,0x7fffe05afeb4,123255928,0,0x0,8
tick,0x7fffe05afeb4,123271747,0,0x0,8
tick,0x7fffe05afeb4,123287907,0,0x0,8
tick,0x7fffe05afeb4,123303777,0,0x0,8
tick,0x7fffe05afeb4,123319834,0,0x0,8
tick,0x7fffe05afeb4,123335890,0,0x0,8
tick,0x7fffe05afeb4,123351820,0,0x0,8
tick,0x7fffe05afeb4,123366757,0,0x0,8
tick,0x7fffe05afeb4,123382877,0,0x0,8
tick,0x7fffe05afeb4,123398979,0,0x0,8
tick,0x7fffe05afeb4,123414900,0,0x0,8
tick,0x7fffe05afeb4,123431737,0,0x0,8
tick,0x7fffe05afeb4,123446836,0,0x0,8
tick,0x7fffe05afeb4,123462762,0,0x0,8
tick,0x7fffe05afeb4,123478814,0,0x0,8
tick,0x7fffe05afeb4,123494749,0,0x0,8
tick,0x7fffe05afeb4,123513890,0,0x0,8
tick,0x7fffe05afeb4,123526834,0,0x0,8
tick,0x7fffe05afeb4,123542747,0,0x0,8
tick,0x7fffe05afeb4,123558861,0,0x0,8
tick,0x7fffe05afeb4,123574824,0,0x0,8
tick,0x7fffe05afeb4,123590913,0,0x0,8
tick,0x7fffe05afeb4,123605815,0,0x0,8
tick,0x7fffe05afeb4,123621759,0,0x0,8
tick,0x7fffe05afeb4,123637879,0,0x0,8
tick,0x7fffe05afeb4,123653930,0,0x0,8
tick,0x7fffe05afeb4,123670176,0,0x0,8
tick,0x7fffe05afeb4,123686478,0,0x0,8
tick,0x7fffe05afeb4,123701777,0,0x0,8
tick,0x7fffe05afeb4,123718721,0,0x0,8
tick,0x7fffe05afeb4,123732880,0,0x0,8
tick,0x7fffe05afeb4,123747730,0,0x0,8
tick,0x7fffe05afeb4,123763789,0,0x0,8
tick,0x7fffe05afeb4,123779840,0,0x0,8
tick,0x7fffe05afeb4,123795745,0,0x0,8
tick,0x7fffe05afeb4,123810862,0,0x0,8
tick,0x7fffe05afeb4,123826796,0,0x0,8
tick,0x7fffe05afeb4,123841737,0,0x0,8
tick,0x7fffe05afeb4,123857805,0,0x0,8
tick,0x7fffe05afeb4,123873815,0,0x0,8
tick,0x7fffe05afeb4,123889756,0,0x0,8
tick,0x7fffe05afeb4,123905764,0,0x0,8
tick,0x7fffe05afeb4,123921896,0,0x0,8
tick,0x7fffe05afeb4,123937761,0,0x0,8
tick,0x7fffe05afeb4,123953955,0,0x0,8
tick,0x7fffe05afeb4,123969879,0,0x0,8
tick,0x7fffe05afeb4,123986068,0,0x0,8
tick,0x7fffe05afeb4,124001930,0,0x0,8
tick,0x7fffe05afeb4,124016786,0,0x0,8
tick,0x7fffe05afeb4,124032763,0,0x0,8
tick,0x7fffe05afeb4,124047738,0,0x0,8
tick,0x7fffe05afeb4,124062913,0,0x0,8
tick,0x7fffe05afeb4,124078837,0,0x0,8
tick,0x7fffe05afeb4,124094787,0,0x0,8
tick,0x7fffe05afeb4,124110763,0,0x0,8
tick,0x7fffe05afeb4,124126908,0,0x0,8
tick,0x7fffe05afeb4,124142812,0,0x0,8
tick,0x7fffe05afeb4,124158803,0,0x0,8
tick,0x7fffe05afeb4,124174736,0,0x0,8
tick,0x7fffe05afeb4,124190743,0,0x0,8
tick,0x7fffe05afeb4,124206949,0,0x0,8
tick,0x7fffe05afeb4,124222776,0,0x0,8
tick,0x7fffe05afeb4,124238958,0,0x0,8
tick,0x7fffe05afeb4,124254832,0,0x0,8
tick,0x7fffe05afeb4,124269814,0,0x0,8
tick,0x7fffe05afeb4,124285749,0,0x0,8
tick,0x7fffe05afeb4,124302678,0,0x0,8
tick,0x7fffe05afeb4,124317013,0,0x0,8
tick,0x7fffe05afeb4,124332768,0,0x0,8
tick,0x7fffe05afeb4,124348775,0,0x0,8
tick,0x7fffe05afeb4,124364806,0,0x0,8
tick,0x7fffe05afeb4,124380912,0,0x0,8
tick,0x7fffe05afeb4,124396739,0,0x0,8
tick,0x7fffe05afeb4,124412738,0,0x0,8
tick,0x7fffe05afeb4,124428742,0,0x0,8
tick,0x7fffe05afeb4,124445035,0,0x0,8
tick,0x7fffe05afeb4,124461075,0,0x0,8
tick,0x7fffe05afeb4,124475904,0,0x0,8
tick,0x7fffe05afeb4,124490749,0,0x0,8
tick,0x7fffe05afeb4,124506801,0,0x0,8
tick,0x7fffe05afeb4,124522778,0,0x0,8
tick,0x7fffe05afeb4,124538734,0,0x0,8
tick,0x7fffe05afeb4,124554827,0,0x0,8
tick,0x7fffe05afeb4,124572364,0,0x0,8
tick,0x7fffe05afeb4,124586902,0,0x0,8
tick,0x7fffe05afeb4,124603156,0,0x0,8
tick,0x7fffe05afeb4,124619380,0,0x0,8
tick,0x7fffe05afeb4,124635812,0,0x0,8
tick,0x7fffe05afeb4,124650938,0,0x0,8
tick,0x7fffe05afeb4,124666822,0,0x0,8
tick,0x7fffe05afeb4,124682803,0,0x0,8
tick,0x7fffe05afeb4,124698793,0,0x0,8
tick,0x7fffe05afeb4,124714801,0,0x0,8
tick,0x7fffe05afeb4,124730254,0,0x0,8
tick,0x7fffe05afeb4,124745814,0,0x0,8
tick,0x7fffe05afeb4,124761769,0,0x0,8
tick,0x7fffe05afeb4,124777079,0,0x0,8
tick,0x7fffe05afeb4,124792798,0,0x0,8
tick,0x7fffe05afeb4,124808924,0,0x0,8
tick,0x7fffe05afeb4,124824908,0,0x0,8
tick,0x7fffe05afeb4,124840761,0,0x0,8
tick,0x7fffe05afeb4,124857693,0,0x0,8
tick,0x7fffe05afeb4,124873038,0,0x0,8
tick,0x7fffe05afeb4,124888048,0,0x0,8
tick,0x7fffe05afeb4,124903792,0,0x0,8
tick,0x7fffe05afeb4,124920436,0,0x0,8
tick,0x7fffe05afeb4,124935996,0,0x0,8
tick,0x7fffe05afeb4,124952217,0,0x0,8
tick,0x7fffe05afeb4,124966833,0,0x0,8
tick,0x7fffe05afeb4,124983302,0,0x0,8
tick,0x7fffe05afeb4,124998769,0,0x0,8
tick,0x7fffe05afeb4,125014749,0,0x0,8
tick,0x7fffe05afeb4,125030837,0,0x0,8
tick,0x7fffe05afeb4,125046743,0,0x0,8
tick,0x7fffe05afeb4,125062759,0,0x0,8
tick,0x7fffe05afeb4,125078887,0,0x0,8
tick,0x7fffe05afeb4,125094844,0,0x0,8
tick,0x7fffe05afeb4,125110805,0,0x0,8
tick,0x7fffe05afeb4,125126748,0,0x0,8
tick,0x7fffe05afeb4,125141757,0,0x0,8
tick,0x7fffe05afeb4,125157801,0,0x0,8
tick,0x7fffe05afeb4,125173738,0,0x0,8
tick,0x7fffe05afeb4,125188838,0,0x0,8
tick,0x7fffe05afeb4,125204786,0,0x0,8
tick,0x7fffe05afeb4,125220777,0,0x0,8
tick,0x7fffe05afeb4,125235807,0,0x0,8
tick,0x7fffe05afeb4,125250754,0,0x0,8
tick,0x7fffe05afeb4,125266738,0,0x0,8
tick,0x7fffe05afeb4,125282751,0,0x0,8
tick,0x7fffe05afeb4,125298974,0,0x0,8
tick,0x7fffe05afeb4,125314742,0,0x0,8
tick,0x7fffe05afeb4,125330731,0,0x0,8
tick,0x7fffe05afeb4,125345735,0,0x0,8
tick,0x7fffe05afeb4,125361830,0,0x0,8
tick,0x7fffe05afeb4,125377823,0,0x0,8
tick,0x7fffe05afeb4,125393751,0,0x0,8
tick,0x7fffe05afeb4,125409872,0,0x0,8
tick,0x7fffe05afeb4,125425744,0,0x0,8
tick,0x7fffe05afeb4,125440773,0,0x0,8
tick,0x7fffe05afeb4,125456748,0,0x0,8
tick,0x7fffe05afeb4,125472813,0,0x0,8
tick,0x7fffe05afeb4,125488723,0,0x0,8
tick,0x7fffe05afeb4,125504752,0,0x0,8
tick,0x7fffe05afeb4,125520991,0,0x0,8
tick,0x7fffe05afeb4,125536836,0,0x0,8
tick,0x7fffe05afeb4,125552936,0,0x0,8
tick,0x7fffe05afeb4,125567884,0,0x0,8
tick,0x7fffe05afeb4,125585756,0,0x0,8
tick,0x7fffe05afeb4,125599844,0,0x0,8
tick,0x7fffe05afeb4,125615766,0,0x0,8
tick,0x7fffe05afeb4,125631776,0,0x0,8
tick,0x7fffe05afeb4,125647771,0,0x0,8
tick,0x7fffe05afeb4,125662754,0,0x0,8
tick,0x7fffe05afeb4,125677751,0,0x0,8
tick,0x7fffe05afeb4,125693771,0,0x0,8
tick,0x7fffe05afeb4,125709786,0,0x0,8
tick,0x7fffe05afeb4,125725728,0,0x0,8
tick,0x7fffe05afeb4,125741903,0,0x0,8
tick,0x7fffe05afeb4,125756778,0,0x0,8
tick,0x7fffe05afeb4,125771753,0,0x0,8
tick,0x7fffe05afeb4,125787752,0,0x0,8
tick,0x7fffe05afeb4,125803758,0,0x0,8
tick,0x7fffe05afeb4,125819808,0,0x0,8
tick,0x7fffe05afeb4,125835891,0,0x0,8
tick,0x7fffe05afeb4,125852009,0,0x0,8
tick,0x7fffe05afeb4,125866753,0,0x0,8
tick,0x7fffe05afeb4,125882909,0,0x0,8
tick,0x7fffe05afeb4,125898757,0,0x0,8
tick,0x7fffe05afeb4,125916612,0,0x0,8
tick,0x7fffe05afeb4,125931007,0,0x0,8
tick,0x7fffe05afeb4,125945986,0,0x0,8
tick,0x7fffe05afeb4,125961736,0,0x0,8
tick,0x7fffe05afeb4,125977115,0,0x0,8
tick,0x7fffe05afeb4,125992908,0,0x0,8
tick,0x7fffe05afeb4,126008828,0,0x0,8
tick,0x7fffe05afeb4,126024748,0,0x0,8
tick,0x7fffe05afeb4,126041685,0,0x0,8
tick,0x7fffe05afeb4,126056764,0,0x0,8
tick,0x7fffe05afeb4,126072773,0,0x0,8
tick,0x7fffe05afeb4,126089083,0,0x0,8
tick,0x7fffe05afeb4,126104734,0,0x0,8
tick,0x7fffe05afeb4,126120796,0,0x0,8
tick,0x7fffe05afeb4,126137874,0,0x0,8
tick,0x7fffe05afeb4,126151739,0,0x0,8
tick,0x7fffe05afeb4,126167736,0,0x0,8
tick,0x7fffe05afeb4,126183757,0,0x0,8
tick,0x7fffe05afeb4,126199783,0,0x0,8
tick,0x7fffe05afeb4,126215757,0,0x0,8
tick,0x7fffe05afeb4,126231774,0,0x0,8
tick,0x7fffe05afeb4,126247853,0,0x0,8
tick,0x7fffe05afeb4,126263945,0,0x0,8
tick,0x7fffe05afeb4,126279907,0,0x0,8
tick,0x7fffe05afeb4,126295827,0,0x0,8
tick,0x7fffe05afeb4,126311902,0,0x0,8
tick,0x7fffe05afeb4,126326778,0,0x0,8
tick,0x7fffe05afeb4,126342742,0,0x0,8
tick,0x7fffe05afeb4,126357901,0,0x0,8
tick,0x7fffe05afeb4,126373746,0,0x0,8
tick,0x7fffe05afeb4,126389839,0,0x0,8
tick,0x7fffe05afeb4,126405805,0,0x0,8
tick,0x7fffe05afeb4,126421803,0,0x0,8
tick,0x7fffe05afeb4,126437841,0,0x0,8
tick,0x7fffe05afeb4,126453726,0,0x0,8
tick,0x7fffe05afeb4,126469787,0,0x0,8
tick,0x7fffe05afeb4,126485775,0,0x0,8
tick,0x7fffe05afeb4,126501758,0,0x0,8
tick,0x7fffe05afeb4,126516794,0,0x0,8
tick,0x7fffe05afeb4,126532754,0,0x0,8
tick,0x7fffe05afeb4,126548731,0,0x0,8
tick,0x7fffe05afeb4,126564798,0,0x0,8
tick,0x7fffe05afeb4,126580476,0,0x0,8
tick,0x7fffe05afeb4,126595843,0,0x0,8
tick,0x7fffe05afeb4,126613023,0,0x0,8
tick,0x7fffe05afeb4,126626733,0,0x0,8
tick,0x7fffe05afeb4,126642840,0,0x0,8
tick,0x7fffe05afeb4,126658953,0,0x0,8
tick,0x7fffe05afeb4,126674737,0,0x0,8
tick,0x7fffe05afeb4,126690901,0,0x0,8
tick,0x7fffe05afeb4,126706050,0,0x0,8
tick,0x7fffe05afeb4,126721821,0,0x0,8
tick,0x7fffe05afeb4,126737886,0,0x0,8
tick,0x7fffe05afeb4,126753747,0,0x0,8
tick,0x7fffe05afeb4,126769898,0,0x0,8
tick,0x7fffe05afeb4,126785831,0,0x0,8
tick,0x7fffe05afeb4,126801812,0,0x0,8
tick,0x7fffe05afeb4,126818013,0,0x0,8
tick,0x7fffe05afeb4,126834000,0,0x0,8
tick,0x7fffe05afeb4,126849931,0,0x0,8
tick,0x7fffe05afeb4,126865752,0,0x0,8
tick,0x7fffe05afeb4,126881756,0,0x0,8
tick,0x7fffe05afeb4,126897824,0,0x0,8
tick,0x7fffe05afeb4,126913873,0,0x0,8
tick,0x7fffe05afeb4,126929954,0,0x0,8
tick,0x7fffe05afeb4,126945772,0,0x0,8
tick,0x7fffe05afeb4,126961740,0,0x0,8
tick,0x7fffe05afeb4,126978154,0,0x0,8
tick,0x7fffe05afeb4,126993855,0,0x0,8
tick,0x7fffe05afeb4,127009801,0,0x0,8
tick,0x7fffe05afeb4,127025898,0,0x0,8
tick,0x7fffe05afeb4,127041730,0,0x0,8
tick,0x7fffe05afeb4,127056823,0,0x0,8
tick,0x7fffe05afeb4,127072742,0,0x0,8
tick,0x7fffe05afeb4,127088851,0,0x0,8
tick,0x7fffe05afeb4,127104784,0,0x0,8
tick,0x7fffe05afeb4,127120730,0,0x0,8
tick,0x7fffe05afeb4,127136815,0,0x0,8
tick,0x7fffe05afeb4,127152747,0,0x0,8
tick,0x7fffe05afeb4,127168767,0,0x0,8
tick,0x7fffe05afeb4,127184743,0,0x0,8
tick,0x7fffe05afeb4,127200875,0,0x0,8
tick,0x7fffe05afeb4,127216736,0,0x0,8
tick,0x7fffe05afeb4,127232770,0,0x0,8
tick,0x7fffe05afeb4,127249544,0,0x0,8
tick,0x7fffe05afeb4,127264742,0,0x0,8
tick,0x7fffe05afeb4,127280764,0,0x0,8
tick,0x7fffe05afeb4,127295753,0,0x0,8
tick,0x7fffe05afeb4,127311738,0,0x0,8
tick,0x7fffe05afeb4,127327750,0,0x0,8
tick,0x7fffe05afeb4,127343823,0,0x0,8
tick,0x7fffe05afeb4,127358879,0,0x0,8
tick,0x7fffe05afeb4,127374761,0,0x0,8
tick,0x7fffe05afeb4,127390757,0,0x0,8
tick,0x7fffe05afeb4,127406972,0,0x0,8
tick,0x7fffe05afeb4,127423126,0,0x0,8
tick,0x7fffe05afeb4,127438769,0,0x0,8
tick,0x7fffe05afeb4,127454732,0,0x0,8
tick,0x7fffe05afeb4,127470838,0,0x0,8
tick,0x7fffe05afeb4,127487084,0,0x0,8
tick,0x7fffe05afeb4,127502874,0,0x0,8
tick,0x7fffe05afeb4,127518790,0,0x0,8
tick,0x7fffe05afeb4,127534857,0,0x0,8
tick,0x7fffe05afeb4,127550772,0,0x0,8
tick,0x7fffe05afeb4,127575243,0,0x0,8
tick,0x7fffe05afeb4,127582852,0,0x0,8
tick,0x7fffe05afeb4,127597914,0,0x0,8
tick,0x7fffe05afeb4,127614942,0,0x0,8
tick,0x7fffe05afeb4,127629759,0,0x0,8
tick,0x7fffe05afeb4,127646054,0,0x0,8
tick,0x7fffe05afeb4,127661830,0,0x0,8
tick,0x7fffe05afeb4,127678054,0,0x0,8
tick,0x7fffe05afeb4,127692856,0,0x0,8
tick,0x7fffe05afeb4,127709148,0,0x0,8
tick,0x7fffe05afeb4,127724838,0,0x0,8
tick,0x7fffe05afeb4,127739791,0,0x0,8
tick,0x7fffe05afeb4,127755741,0,0x0,8
tick,0x7fffe05afeb4,127771736,0,0x0,8
tick,0x7fffe05afeb4,127787723,0,0x0,8
tick,0x7fffe05afeb4,127803761,0,0x0,8
tick,0x7fffe05afeb4,127819809,0,0x0,8
tick,0x7fffe05afeb4,127834751,0,0x0,8
tick,0x7fffe05afeb4,127855198,0,0x0,8
tick,0x7fffe05afeb4,127866818,0,0x0,8
tick,0x7fffe05afeb4,127883250,0,0x0,8
tick,0x7fffe05afeb4,127898830,0,0x0,8
tick,0x7fffe05afeb4,127914841,0,0x0,8
tick,0x7fffe05afeb4,127930731,0,0x0,8
tick,0x7fffe05afeb4,127946791,0,0x0,8
tick,0x7fffe05afeb4,127962890,0,0x0,8
tick,0x7fffe05afeb4,127978145,0,0x0,8
tick,0x7fffe05afeb4,127992765,0,0x0,8
tick,0x7fffe05afeb4,128008816,0,0x0,8
tick,0x7fffe05afeb4,128024841,0,0x0,8
tick,0x7fffe05afeb4,128040736,0,0x0,8
tick,0x7fffe05afeb4,128056823,0,0x0,8
tick,0x7fffe05afeb4,128071739,0,0x0,8
tick,0x7fffe05afeb4,128087862,0,0x0,8
tick,0x7fffe05afeb4,128103800,0,0x0,8
tick,0x7fffe05afeb4,128119803,0,0x0,8
tick,0x7fffe05afeb4,128135865,0,0x0,8
tick,0x7fffe05afeb4,128151753,0,0x0,8
tick,0x7fffe05afeb4,128167768,0,0x0,8
tick,0x7fffe05afeb4,128183925,0,0x0,8
tick,0x7fffe05afeb4,128199776,0,0x0,8
tick,0x7fffe05afeb4,128215748,0,0x0,8
tick,0x7fffe05afeb4,128231911,0,0x0,8
tick,0x7fffe05afeb4,128247922,0,0x0,8
tick,0x7fffe05afeb4,128263737,0,0x0,8
tick,0x7fffe05afeb4,128279960,0,0x0,8
tick,0x7fffe05afeb4,128295753,0,0x0,8
tick,0x7fffe05afeb4,128311839,0,0x0,8
tick,0x7fffe05afeb4,128328079,0,0x0,8
tick,0x7fffe05afeb4,128343843,0,0x0,8
tick,0x7fffe05afeb4,128359919,0,0x0,8
tick,0x7fffe05afeb4,128376311,0,0x0,8
tick,0x7fffe05afeb4,128391982,0,0x0,8
tick,0x7fffe05afeb4,128407135,0,0x0,8
tick,0x7fffe05afeb4,128421803,0,0x0,8
tick,0x7fffe05afeb4,128437973,0,0x0,8
tick,0x7fffe05afeb4,128453985,0,0x0,8
tick,0x7fffe05afeb4,128470041,0,0x0,8
tick,0x7fffe05afeb4,128484759,0,0x0,8
tick,0x7fffe05afeb4,128501313,0,0x0,8
tick,0x7fffe05afeb4,128516852,0,0x0,8
tick,0x7fffe05afeb4,128533165,0,0x0,8
tick,0x7fffe05afeb4,128548873,0,0x0,8
tick,0x7fffe05afeb4,128564991,0,0x0,8
tick,0x7fffe05afeb4,128581126,0,0x0,8
tick,0x7fffe05afeb4,128595968,0,0x0,8
tick,0x7fffe05afeb4,128615158,0,0x0,8
tick,0x7fffe05afeb4,128628163,0,0x0,8
tick,0x7fffe05afeb4,128643978,0,0x0,8
tick,0x7fffe05afeb4,128660394,0,0x0,8
tick,0x7fffe05afeb4,128677157,0,0x0,8
tick,0x7fffe05afeb4,128692992,0,0x0,8
tick,0x7fffe05afeb4,128708363,0,0x0,8
tick,0x7fffe05afeb4,128723262,0,0x0,8
tick,0x7fffe05afeb4,128738884,0,0x0,8
tick,0x7fffe05afeb4,128755181,0,0x0,8
tick,0x7fffe05afeb4,128770181,0,0x0,8
tick,0x7fffe05afeb4,128786097,0,0x0,8
tick,0x7fffe05afeb4,128801784,0,0x0,8
tick,0x7fffe05afeb4,128816845,0,0x0,8
tick,0x7fffe05afeb4,128832949,0,0x0,8
tick,0x7fffe05afeb4,128849016,0,0x0,8
tick,0x7fffe05afeb4,128865079,0,0x0,8
tick,0x7fffe05afeb4,128881282,0,0x0,8
tick,0x7fffe05afeb4,128895824,0,0x0,8
tick,0x7fffe05afeb4,128912685,0,0x0,8
tick,0x7fffe05afeb4,128927947,0,0x0,8
tick,0x7fffe05afeb4,128944304,0,0x0,8
tick,0x7fffe05afeb4,128958859,0,0x0,8
tick,0x7fffe05afeb4,128974858,0,0x0,8
tick,0x7fffe05afeb4,128990858,0,0x0,8
tick,0x7fffe05afeb4,129007097,0,0x0,8
tick,0x7fffe05afeb4,129022944,0,0x0,8
tick,0x7fffe05afeb4,129038910,0,0x0,8
tick,0x7fffe05afeb4,129054749,0,0x0,8
tick,0x7fffe05afeb4,129071235,0,0x0,8
tick,0x7fffe05afeb4,129086215,0,0x0,8
tick,0x7fffe05afeb4,129101922,0,0x0,8
tick,0x7fffe05afeb4,129117904,0,0x0,8
tick,0x7fffe05afeb4,129136038,0,0x0,8
tick,0x7fffe05afeb4,129149946,0,0x0,8
tick,0x7fffe05afeb4,129167200,0,0x0,8
tick,0x7fffe05afeb4,129182346,0,0x0,8
tick,0x7fffe05afeb4,129197112,0,0x0,8
tick,0x7fffe05afeb4,129211756,0,0x0,8
tick,0x7fffe05afeb4,129228057,0,0x0,8
tick,0x7fffe05afeb4,129243886,0,0x0,8
tick,0x7fffe05afeb4,129261238,0,0x0,8
tick,0x7fffe05afeb4,129277039,0,0x0,8
tick,0x7fffe05afeb4,129291260,0,0x0,8
tick,0x7fffe05afeb4,129307102,0,0x0,8
tick,0x7fffe05afeb4,129323053,0,0x0,8
tick,0x7fffe05afeb4,129339117,0,0x0,8
tick,0x7fffe05afeb4,129355009,0,0x0,8
tick,0x7fffe05afeb4,129370899,0,0x0,8
tick,0x7fffe05afeb4,129387229,0,0x0,8
tick,0x7fffe05afeb4,129402925,0,0x0,8
tick,0x7fffe05afeb4,129419031,0,0x0,8
tick,0x7fffe05afeb4,129433878,0,0x0,8
tick,0x7fffe05afeb4,129448974,0,0x0,8
tick,0x7fffe05afeb4,129463807,0,0x0,8
tick,0x7fffe05afeb4,129481740,0,0x0,8
tick,0x7fffe05afeb4,129495923,0,0x0,8
tick,0x7fffe05afeb4,129511939,0,0x0,8
tick,0x7fffe05afeb4,129527907,0,0x0,8
tick,0x7fffe05afeb4,129544969,0,0x0,8
tick,0x7fffe05afeb4,129559892,0,0x0,8
tick,0x7fffe05afeb4,129580705,0,0x0,8
tick,0x7fffe05afeb4,129590829,0,0x0,8
tick,0x7fffe05afeb4,129607124,0,0x0,8
tick,0x7fffe05afeb4,129623050,0,0x0,8
tick,0x7fffe05afeb4,129638782,0,0x0,8
tick,0x7fffe05afeb4,129653809,0,0x0,8
tick,0x7fffe05afeb4,129670808,0,0x0,8
tick,0x7fffe05afeb4,129685856,0,0x0,8
tick,0x7fffe05afeb4,129702125,0,0x0,8
tick,0x7fffe05afeb4,129717964,0,0x0,8
tick,0x7fffe05afeb4,129733915,0,0x0,8
tick,0x7fffe05afeb4,129749808,0,0x0,8
tick,0x7fffe05afeb4,129765843,0,0x0,8
tick,0x7fffe05afeb4,129781948,0,0x0,8
tick,0x7fffe05afeb4,129799596,0,0x0,8
tick,0x7fffe05afeb4,129813743,0,0x0,8
tick,0x7fffe05afeb4,129829905,0,0x0,8
tick,0x7fffe05afeb4,129845990,0,0x0,8
tick,0x7fffe05afeb4,129861775,0,0x0,8
tick,0x7fffe05afeb4,129877928,0,0x0,8
tick,0x7fffe05afeb4,129893897,0,0x0,8
tick,0x7fffe05afeb4,129910360,0,0x0,8
tick,0x7fffe05afeb4,129925453,0,0x0,8
tick,0x7fffe05afeb4,129940951,0,0x0,8
tick,0x7fffe05afeb4,129957264,0,0x0,8
tick,0x7fffe05afeb4,129972124,0,0x0,8
tick,0x7fffe05afeb4,129987215,0,0x0,8
tick,0x7fffe05afeb4,130003946,0,0x0,8
tick,0x7fffe05afeb4,130018959,0,0x0,8
tick,0x7fffe05afeb4,130034995,0,0x0,8
tick,0x7fffe05afeb4,130051008,0,0x0,8
tick,0x7fffe05afeb4,130066909,0,0x0,8
tick,0x7fffe05afeb4,130083431,0,0x0,8
tick,0x7fffe05afeb4,130097852,0,0x0,8
tick,0x7fffe05afeb4,130113918,0,0x0,8
tick,0x7fffe05afeb4,130129921,0,0x0,8
tick,0x7fffe05afeb4,130145942,0,0x0,8
tick,0x7fffe05afeb4,130161893,0,0x0,8
tick,0x7fffe05afeb4,130178317,0,0x0,8
tick,0x7fffe05afeb4,130194278,0,0x0,8
tick,0x7fffe05afeb4,130210694,0,0x0,8
tick,0x7fffe05afeb4,130228214,0,0x0,8
tick,0x7fffe05afeb4,130242273,0,0x0,8
tick,0x7fffe05afeb4,130256880,0,0x0,8
tick,0x7fffe05afeb4,130272969,0,0x0,8
tick,0x7fffe05afeb4,130288419,0,0x0,8
tick,0x7fffe05afeb4,130304356,0,0x0,8
tick,0x7fffe05afeb4,130319999,0,0x0,8
tick,0x7fffe05afeb4,130338366,0,0x0,8
tick,0x7fffe05afeb4,130352201,0,0x0,8
tick,0x7fffe05afeb4,130368763,0,0x0,8
tick,0x7fffe05afeb4,130387768,0,0x0,8
tick,0x7fffe05afeb4,130400678,0,0x0,8
tick,0x7fffe05afeb4,130416283,0,0x0,8
tick,0x7fffe05afeb4,130432034,0,0x0,8
tick,0x7fffe05afeb4,130447909,0,0x0,8
tick,0x7fffe05afeb4,130463877,0,0x0,8
tick,0x7fffe05afeb4,130479829,0,0x0,8
tick,0x7fffe05afeb4,130495888,0,0x0,8
tick,0x7fffe05afeb4,130511732,0,0x0,8
tick,0x7fffe05afeb4,130527194,0,0x0,8
tick,0x7fffe05afeb4,130541855,0,0x0,8
tick,0x7fffe05afeb4,130557817,0,0x0,8
tick,0x7fffe05afeb4,130577680,0,0x0,8
tick,0x7fffe05afeb4,130588877,0,0x0,8
tick,0x7fffe05afeb4,130605479,0,0x0,8
tick,0x7fffe05afeb4,130621092,0,0x0,8
tick,0x7fffe05afeb4,130637618,0,0x0,8
tick,0x7fffe05afeb4,130652844,0,0x0,8
tick,0x7fffe05afeb4,130668071,0,0x0,8
tick,0x7fffe05afeb4,130683907,0,0x0,8
tick,0x7fffe05afeb4,130700029,0,0x0,8
tick,0x7fffe05afeb4,130715850,0,0x0,8
tick,0x7fffe05afeb4,130731882,0,0x0,8
tick,0x7fffe05afeb4,130746821,0,0x0,8
tick,0x7fffe05afeb4,130762777,0,0x0,8
tick,0x7fffe05afeb4,130779820,0,0x0,8
tick,0x7fffe05afeb4,130794970,0,0x0,8
tick,0x7fffe05afeb4,130810952,0,0x0,8
tick,0x7fffe05afeb4,130826801,0,0x0,8
tick,0x7fffe05afeb4,130843284,0,0x0,8
tick,0x7fffe05afeb4,130862071,0,0x0,8
tick,0x7fffe05afeb4,130875389,0,0x0,8
tick,0x7fffe05afeb4,130891433,0,0x0,8
tick,0x7fffe05afeb4,130907032,0,0x0,8
tick,0x7fffe05afeb4,130922730,0,0x0,8
tick,0x7fffe05afeb4,130938050,0,0x0,8
tick,0x7fffe05afeb4,130953894,0,0x0,8
tick,0x7fffe05afeb4,130970572,0,0x0,8
tick,0x7fffe05afeb4,130985763,0,0x0,8
tick,0x7fffe05afeb4,131001956,0,0x0,8
tick,0x7fffe05afeb4,131017912,0,0x0,8
tick,0x7fffe05afeb4,131034024,0,0x0,8
tick,0x7fffe05afeb4,131048928,0,0x0,8
tick,0x7fffe05afeb4,131065279,0,0x0,8
tick,0x7fffe05afeb4,131080366,0,0x0,8
tick,0x7fffe05afeb4,131096239,0,0x0,8
tick,0x7fffe05afeb4,131112063,0,0x0,8
tick,0x7fffe05afeb4,131127859,0,0x0,8
tick,0x7fffe05afeb4,131144034,0,0x0,8
tick,0x7fffe05afeb4,131160357,0,0x0,8
tick,0x7fffe05afeb4,131176638,0,0x0,8
tick,0x7fffe05afeb4,131191871,0,0x0,8
tick,0x7fffe05afeb4,131208094,0,0x0,8
tick,0x7fffe05afeb4,131224070,0,0x0,8
tick,0x7fffe05afeb4,131239853,0,0x0,8
tick,0x7fffe05afeb4,131256087,0,0x0,8
tick,0x7fffe05afeb4,131271908,0,0x0,8
tick,0x7fffe05afeb4,131287970,0,0x0,8
tick,0x7fffe05afeb4,131303743,0,0x0,8
tick,0x7fffe05afeb4,131319921,0,0x0,8
tick,0x7fffe05afeb4,131336056,0,0x0,8
tick,0x7fffe05afeb4,131353611,0,0x0,8
tick,0x7fffe05afeb4,131368625,0,0x0,8
tick,0x7fffe05afeb4,131385961,0,0x0,8
tick,0x7fffe05afeb4,131397881,0,0x0,8
tick,0x7fffe05afeb4,131414148,0,0x0,8
tick,0x7fffe05afeb4,131429844,0,0x0,8
tick,0x7fffe05afeb4,131446078,0,0x0,8
tick,0x7fffe05afeb4,131461768,0,0x0,8
tick,0x7fffe05afeb4,131478102,0,0x0,8
tick,0x7fffe05afeb4,131492726,0,0x0,8
tick,0x7fffe05afeb4,131509189,0,0x0,8
tick,0x7fffe05afeb4,131524900,0,0x0,8
tick,0x7fffe05afeb4,131540675,0,0x0,8
tick,0x7fffe05afeb4,131558103,0,0x0,8
tick,0x7fffe05afeb4,131577619,0,0x0,8
tick,0x7fffe05afeb4,131586863,0,0x0,8
tick,0x7fffe05afeb4,131604136,0,0x0,8
tick,0x7fffe05afeb4,131617905,0,0x0,8
tick,0x7fffe05afeb4,131634613,0,0x0,8
tick,0x7fffe05afeb4,131650183,0,0x0,8
tick,0x7fffe05afeb4,131667667,0,0x0,8
tick,0x7fffe05afeb4,131681856,0,0x0,8
tick,0x7fffe05afeb4,131697998,0,0x0,8
tick,0x7fffe05afeb4,131713755,0,0x0,8
tick,0x7fffe05afeb4,131729909,0,0x0,8
tick,0x7fffe05afeb4,131745758,0,0x0,8
tick,0x7fffe05afeb4,131761760,0,0x0,8
tick,0x7fffe05afeb4,131777877,0,0x0,8
tick,0x7fffe05afeb4,131793943,0,0x0,8
tick,0x7fffe05afeb4,131809770,0,0x0,8
tick,0x7fffe05afeb4,131825821,0,0x0,8
tick,0x7fffe05afeb4,131841737,0,0x0,8
tick,0x7fffe05afeb4,131857866,0,0x0,8
tick,0x7fffe05afeb4,131873938,0,0x0,8
tick,0x7fffe05afeb4,131889843,0,0x0,8
tick,0x7fffe05afeb4,131905843,0,0x0,8
tick,0x7fffe05afeb4,131921882,0,0x0,8
tick,0x7fffe05afeb4,131937084,0,0x0,8
tick,0x7fffe05afeb4,131952944,0,0x0,8
tick,0x7fffe05afeb4,131968111,0,0x0,8
tick,0x7fffe05afeb4,131984120,0,0x0,8
tick,0x7fffe05afeb4,132001843,0,0x0,8
tick,0x7fffe05afeb4,132015869,0,0x0,8
tick,0x7fffe05afeb4,132032230,0,0x0,8
tick,0x7fffe05afeb4,132047140,0,0x0,8
tick,0x7fffe05afeb4,132063041,0,0x0,8
tick,0x7fffe05afeb4,132078937,0,0x0,8
tick,0x7fffe05afeb4,132094996,0,0x0,8
tick,0x7fffe05afeb4,132110978,0,0x0,8
tick,0x7fffe05afeb4,132126902,0,0x0,8
tick,0x7fffe05afeb4,132142978,0,0x0,8
tick,0x7fffe05afeb4,132159041,0,0x0,8
tick,0x7fffe05afeb4,132175551,0,0x0,8
tick,0x7fffe05afeb4,132190757,0,0x0,8
tick,0x7fffe05afeb4,132206809,0,0x0,8
tick,0x7fffe05afeb4,132222955,0,0x0,8
tick,0x7fffe05afeb4,132238921,0,0x0,8
tick,0x7fffe05afeb4,132254892,0,0x0,8
tick,0x7fffe05afeb4,132271159,0,0x0,8
tick,0x7fffe05afeb4,132285781,0,0x0,8
tick,0x7fffe05afeb4,132302226,0,0x0,8
tick,0x7fffe05afeb4,132317756,0,0x0,8
tick,0x7fffe05afeb4,132334141,0,0x0,8
tick,0x7fffe05afeb4,132349978,0,0x0,8
tick,0x7fffe05afeb4,132366406,0,0x0,8
tick,0x7fffe05afeb4,132382519,0,0x0,8
tick,0x7fffe05afeb4,132397862,0,0x0,8
tick,0x7fffe05afeb4,132414142,0,0x0,8
tick,0x7fffe05afeb4,132430313,0,0x0,8
tick,0x7fffe05afeb4,132445123,0,0x0,8
tick,0x7fffe05afeb4,132461950,0,0x0,8
tick,0x7fffe05afeb4,132476767,0,0x0,8
tick,0x7fffe05afeb4,132493210,0,0x0,8
tick,0x7fffe05afeb4,132510684,0,0x0,8
tick,0x7fffe05afeb4,132523985,0,0x0,8
tick,0x7fffe05afeb4,132540015,0,0x0,8
tick,0x7fffe05afeb4,132557670,0,0x0,8
tick,0x7fffe05afeb4,132580558,0,0x0,8
tick,0x7fffe05afeb4,132587132,0,0x0,8
tick,0x7fffe05afeb4,132602008,0,0x0,8
tick,0x7fffe05afeb4,132617867,0,0x0,8
tick,0x7fffe05afeb4,132636665,0,0x0,8
tick,0x7fffe05afeb4,132649954,0,0x0,8
tick,0x7fffe05afeb4,132667349,0,0x0,8
tick,0x7fffe05afeb4,132682285,0,0x0,8
tick,0x7fffe05afeb4,132696312,0,0x0,8
tick,0x7fffe05afeb4,132711429,0,0x0,8
tick,0x7fffe05afeb4,132726831,0,0x0,8
tick,0x7fffe05afeb4,132743450,0,0x0,8
tick,0x7fffe05afeb4,132757864,0,0x0,8
tick,0x7fffe05afeb4,132775265,0,0x0,8
tick,0x7fffe05afeb4,132788891,0,0x0,8
tick,0x7fffe05afeb4,132805126,0,0x0,8
tick,0x7fffe05afeb4,132821332,0,0x0,8
tick,0x7fffe05afeb4,132837150,0,0x0,8
tick,0x7fffe05afeb4,132852887,0,0x0,8
tick,0x7fffe05afeb4,132868109,0,0x0,8
tick,0x7fffe05afeb4,132884181,0,0x0,8
tick,0x7fffe05afeb4,132900031,0,0x0,8
tick,0x7fffe05afeb4,132914841,0,0x0,8
tick,0x7fffe05afeb4,132930934,0,0x0,8
tick,0x7fffe05afeb4,132946149,0,0x0,8
tick,0x7fffe05afeb4,132962078,0,0x0,8
tick,0x7fffe05afeb4,132977886,0,0x0,8
tick,0x7fffe05afeb4,132993881,0,0x0,8
tick,0x7fffe05afeb4,133010440,0,0x0,8
tick,0x7fffe05afeb4,133025975,0,0x0,8
tick,0x7fffe05afeb4,133041811,0,0x0,8
tick,0x7fffe05afeb4,133058164,0,0x0,8
tick,0x7fffe05afeb4,133073799,0,0x0,8
tick,0x7fffe05afeb4,133088865,0,0x0,8
tick,0x7fffe05afeb4,133103772,0,0x0,8
tick,0x7fffe05afeb4,133119984,0,0x0,8
tick,0x7fffe05afeb4,133136471,0,0x0,8
tick,0x7fffe05afeb4,133152189,0,0x0,8
tick,0x7fffe05afeb4,133166849,0,0x0,8
tick,0x7fffe05afeb4,133183027,0,0x0,8
tick,0x7fffe05afeb4,133197913,0,0x0,8
tick,0x7fffe05afeb4,133214430,0,0x0,8
tick,0x7fffe05afeb4,133230624,0,0x0,8
tick,0x7fffe05afeb4,133246230,0,0x0,8
tick,0x7fffe05afeb4,133261799,0,0x0,8
tick,0x7fffe05afeb4,133277001,0,0x0,8
tick,0x7fffe05afeb4,133293006,0,0x0,8
tick,0x7fffe05afeb4,133309030,0,0x0,8
tick,0x7fffe05afeb4,133323818,0,0x0,8
tick,0x7fffe05afeb4,133338881,0,0x0,8
tick,0x7fffe05afeb4,133354793,0,0x0,8
tick,0x7fffe05afeb4,133370820,0,0x0,8
tick,0x7fffe05afeb4,133385982,0,0x0,8
tick,0x7fffe05afeb4,133401968,0,0x0,8
tick,0x7fffe05afeb4,133416741,0,0x0,8
tick,0x7fffe05afeb4,133432917,0,0x0,8
tick,0x7fffe05afeb4,133448937,0,0x0,8
tick,0x7fffe05afeb4,133465388,0,0x0,8
tick,0x7fffe05afeb4,133479894,0,0x0,8
tick,0x7fffe05afeb4,133496650,0,0x0,8
tick,0x7fffe05afeb4,133512839,0,0x0,8
tick,0x7fffe05afeb4,133528677,0,0x0,8
tick,0x7fffe05afeb4,133545789,0,0x0,8
tick,0x7fffe05afeb4,133560168,0,0x0,8
tick,0x7fffe05afeb4,133576268,0,0x0,8
tick,0x7fffe05afeb4,133592496,0,0x0,8
tick,0x7fffe05afeb4,133615323,0,0x0,8
tick,0x7fffe05afeb4,133622864,0,0x0,8
tick,0x7fffe05afeb4,133638971,0,0x0,8
tick,0x7fffe05afeb4,133654904,0,0x0,8
tick,0x7fffe05afeb4,133670775,0,0x0,8
tick,0x7fffe05afeb4,133686820,0,0x0,8
tick,0x7fffe05afeb4,133702870,0,0x0,8
tick,0x7fffe05afeb4,133719289,0,0x0,8
tick,0x7fffe05afeb4,133735158,0,0x0,8
tick,0x7fffe05afeb4,133751176,0,0x0,8
tick,0x7fffe05afeb4,133766888,0,0x0,8
tick,0x7fffe05afeb4,133783090,0,0x0,8
tick,0x7fffe05afeb4,133799583,0,0x0,8
tick,0x7fffe05afeb4,133814088,0,0x0,8
tick,0x7fffe05afeb4,133830261,0,0x0,8
tick,0x7fffe05afeb4,133846119,0,0x0,8
tick,0x7fffe05afeb4,133862030,0,0x0,8
tick,0x7fffe05afeb4,133878235,0,0x0,8
tick,0x7fffe05afeb4,133894248,0,0x0,8
tick,0x7fffe05afeb4,133910678,0,0x0,8
tick,0x7fffe05afeb4,133926133,0,0x0,8
tick,0x7fffe05afeb4,133942200,0,0x0,8
tick,0x7fffe05afeb4,133957791,0,0x0,8
tick,0x7fffe05afeb4,133974913,0,0x0,8
tick,0x7fffe05afeb4,133988855,0,0x0,8
tick,0x7fffe05afeb4,134004843,0,0x0,8
tick,0x7fffe05afeb4,134019770,0,0x0,8
tick,0x7fffe05afeb4,134036246,0,0x0,8
tick,0x7fffe05afeb4,134051924,0,0x0,8
tick,0x7fffe05afeb4,134067417,0,0x0,8
tick,0x7fffe05afeb4,134082884,0,0x0,8
tick,0x7fffe05afeb4,134100822,0,0x0,8
tick,0x7fffe05afeb4,134115005,0,0x0,8
tick,0x7fffe05afeb4,134130917,0,0x0,8
tick,0x7fffe05afeb4,134146007,0,0x0,8
tick,0x7fffe05afeb4,134161808,0,0x0,8
tick,0x7fffe05afeb4,134186564,0,0x0,8
tick,0x7fffe05afeb4,134194567,0,0x0,8
tick,0x7fffe05afeb4,134210004,0,0x0,8
tick,0x7fffe05afeb4,134224625,0,0x0,8
tick,0x7fffe05afeb4,134240320,0,0x0,8
tick,0x7fffe05afeb4,134256136,0,0x0,8
tick,0x7fffe05afeb4,134272126,0,0x0,8
tick,0x7fffe05afeb4,134286971,0,0x0,8
tick,0x7fffe05afeb4,134302783,0,0x0,8
tick,0x7fffe05afeb4,134319112,0,0x0,8
tick,0x7fffe05afeb4,134335003,0,0x0,8
tick,0x7fffe05afeb4,134350820,0,0x0,8
tick,0x7fffe05afeb4,134366989,0,0x0,8
tick,0x7fffe05afeb4,134383659,0,0x0,8
tick,0x7fffe05afeb4,134401031,0,0x0,8
tick,0x7fffe05afeb4,134418707,0,0x0,8
tick,0x7fffe05afeb4,134431833,0,0x0,8
tick,0x7fffe05afeb4,134446281,0,0x0,8
tick,0x7fffe05afeb4,134460796,0,0x0,8
tick,0x7fffe05afeb4,134477569,0,0x0,8
tick,0x7fffe05afeb4,134493160,0,0x0,8
tick,0x7fffe05afeb4,134509383,0,0x0,8
tick,0x7fffe05afeb4,134523824,0,0x0,8
tick,0x7fffe05afeb4,134539419,0,0x0,8
tick,0x7fffe05afeb4,134554235,0,0x0,8
tick,0x7fffe05afeb4,134571253,0,0x0,8
tick,0x7fffe05afeb4,134587395,0,0x0,8
tick,0x7fffe05afeb4,134601305,0,0x0,8
tick,0x7fffe05afeb4,134617001,0,0x0,8
tick,0x7fffe05afeb4,134633031,0,0x0,8
tick,0x7fffe05afeb4,134647822,0,0x0,8
tick,0x7fffe05afeb4,134663822,0,0x0,8
tick,0x7fffe05afeb4,134679921,0,0x0,8
tick,0x7fffe05afeb4,134696397,0,0x0,8
tick,0x7fffe05afeb4,134711126,0,0x0,8
tick,0x7fffe05afeb4,134726697,0,0x0,8
tick,0x7fffe05afeb4,134740781,0,0x0,8
tick,0x7fffe05afeb4,134757123,0,0x0,8
tick,0x7fffe05afeb4,134772784,0,0x0,8
tick,0x7fffe05afeb4,134788869,0,0x0,8
tick,0x7fffe05afeb4,134804823,0,0x0,8
tick,0x7fffe05afeb4,134821125,0,0x0,8
tick,0x7fffe05afeb4,134836809,0,0x0,8
tick,0x7fffe05afeb4,134851872,0,0x0,8
tick,0x7fffe05afeb4,134867907,0,0x0,8
tick,0x7fffe05afeb4,134884243,0,0x0,8
tick,0x7fffe05afeb4,134899990,0,0x0,8
tick,0x7fffe05afeb4,134915056,0,0x0,8
tick,0x7fffe05afeb4,134931235,0,0x0,8
tick,0x7fffe05afeb4,134946028,0,0x0,8
tick,0x7fffe05afeb4,134961746,0,0x0,8
tick,0x7fffe05afeb4,134977307,0,0x0,8
tick,0x7fffe05afeb4,134992762,0,0x0,8
tick,0x7fffe05afeb4,135008848,0,0x0,8
tick,0x7fffe05afeb4,135024730,0,0x0,8
tick,0x7fffe05afeb4,135040825,0,0x0,8
tick,0x7fffe05afeb4,135056818,0,0x0,8
tick,0x7fffe05afeb4,135072232,0,0x0,8
tick,0x7fffe05afeb4,135088013,0,0x0,8
tick,0x7fffe05afeb4,135104162,0,0x0,8
tick,0x7fffe05afeb4,135119827,0,0x0,8
tick,0x7fffe05afeb4,135135943,0,0x0,8
tick,0x7fffe05afeb4,135152046,0,0x0,8
tick,0x7fffe05afeb4,135168201,0,0x0,8
tick,0x7fffe05afeb4,135183900,0,0x0,8
tick,0x7fffe05afeb4,135200445,0,0x0,8
tick,0x7fffe05afeb4,135215902,0,0x0,8
tick,0x7fffe05afeb4,135232164,0,0x0,8
tick,0x7fffe05afeb4,135248516,0,0x0,8
tick,0x7fffe05afeb4,135264275,0,0x0,8
tick,0x7fffe05afeb4,135279964,0,0x0,8
tick,0x7fffe05afeb4,135295950,0,0x0,8
tick,0x7fffe05afeb4,135312131,0,0x0,8
tick,0x7fffe05afeb4,135327517,0,0x0,8
tick,0x7fffe05afeb4,135342741,0,0x0,8
tick,0x7fffe05afeb4,135358885,0,0x0,8
tick,0x7fffe05afeb4,135375271,0,0x0,8
tick,0x7fffe05afeb4,135391182,0,0x0,8
tick,0x7fffe05afeb4,135407557,0,0x0,8
tick,0x7fffe05afeb4,135423384,0,0x0,8
tick,0x7fffe05afeb4,135437843,0,0x0,8
tick,0x7fffe05afeb4,135454185,0,0x0,8
tick,0x7fffe05afeb4,135470018,0,0x0,8
tick,0x7fffe05afeb4,135486069,0,0x0,8
tick,0x7fffe05afeb4,135502022,0,0x0,8
tick,0x7fffe05afeb4,135518824,0,0x0,8
tick,0x7fffe05afeb4,135534406,0,0x0,8
tick,0x7fffe05afeb4,135550483,0,0x0,8
tick,0x7fffe05afeb4,135566428,0,0x0,8
tick,0x7fffe05afeb4,135596441,0,0x0,8
tick,0x7fffe05afeb4,135616374,0,0x0,8
tick,0x7fffe05afeb4,135630839,0,0x0,8
tick,0x7fffe05afeb4,135645148,0,0x0,8
tick,0x7fffe05afeb4,135660924,0,0x0,8
tick,0x7fffe05afeb4,135676775,0,0x0,8
tick,0x7fffe05afeb4,135692860,0,0x0,8
tick,0x7fffe05afeb4,135709042,0,0x0,8
tick,0x7fffe05afeb4,135724331,0,0x0,8
tick,0x7fffe05afeb4,135738874,0,0x0,8
tick,0x7fffe05afeb4,135754857,0,0x0,8
tick,0x7fffe05afeb4,135770983,0,0x0,8
tick,0x7fffe05afeb4,135786820,0,0x0,8
tick,0x7fffe05afeb4,135802733,0,0x0,8
tick,0x7fffe05afeb4,135818858,0,0x0,8
tick,0x7fffe05afeb4,135834927,0,0x0,8
tick,0x7fffe05afeb4,135850915,0,0x0,8
tick,0x7fffe05afeb4,135866817,0,0x0,8
tick,0x7fffe05afeb4,135882943,0,0x0,8
tick,0x7fffe05afeb4,135899196,0,0x0,8
tick,0x7fffe05afeb4,135915277,0,0x0,8
tick,0x7fffe05afeb4,135931975,0,0x0,8
tick,0x7fffe05afeb4,135946976,0,0x0,8
tick,0x7fffe05afeb4,135965118,0,0x0,8
tick,0x7fffe05afeb4,135980009,0,0x0,8
tick,0x7fffe05afeb4,135996559,0,0x0,8
tick,0x7fffe05afeb4,136011468,0,0x0,8
tick,0x7fffe05afeb4,136026915,0,0x0,8
tick,0x7fffe05afeb4,136041853,0,0x0,8
tick,0x7fffe05afeb4,136057759,0,0x0,8
tick,0x7fffe05afeb4,136073023,0,0x0,8
tick,0x7fffe05afeb4,136088960,0,0x0,8
tick,0x7fffe05afeb4,136104967,0,0x0,8
tick,0x7fffe05afeb4,136120805,0,0x0,8
tick,0x7fffe05afeb4,136137015,0,0x0,8
tick,0x7fffe05afeb4,136153158,0,0x0,8
tick,0x7fffe05afeb4,136168991,0,0x0,8
tick,0x7fffe05afeb4,136185280,0,0x0,8
tick,0x7fffe05afeb4,136200998,0,0x0,8
tick,0x7fffe05afeb4,136217089,0,0x0,8
tick,0x7fffe05afeb4,136232882,0,0x0,8
tick,0x7fffe05afeb4,136248837,0,0x0,8
tick,0x7fffe05afeb4,136265006,0,0x0,8
tick,0x7fffe05afeb4,136279861,0,0x0,8
tick,0x7fffe05afeb4,136295900,0,0x0,8
tick,0x7fffe05afeb4,136311761,0,0x0,8
tick,0x7fffe05afeb4,136327880,0,0x0,8
tick,0x7fffe05afeb4,136343859,0,0x0,8
tick,0x7fffe05afeb4,136360077,0,0x0,8
tick,0x7fffe05afeb4,136375815,0,0x0,8
tick,0x7fffe05afeb4,136391934,0,0x0,8
tick,0x7fffe05afeb4,136407994,0,0x0,8
tick,0x7fffe05afeb4,136422987,0,0x0,8
tick,0x7fffe05afeb4,136439522,0,0x0,8
tick,0x7fffe05afeb4,136455001,0,0x0,8
tick,0x7fffe05afeb4,136469856,0,0x0,8
tick,0x7fffe05afeb4,136485805,0,0x0,8
tick,0x7fffe05afeb4,136502008,0,0x0,8
tick,0x7fffe05afeb4,136521324,0,0x0,8
tick,0x7fffe05afeb4,136534549,0,0x0,8
tick,0x7fffe05afeb4,136551352,0,0x0,8
tick,0x7fffe05afeb4,136565844,0,0x0,8
tick,0x7fffe05afeb4,136580921,0,0x0,8
tick,0x7fffe05afeb4,136598748,0,0x0,8
tick,0x7fffe05afeb4,136615434,0,0x0,8
tick,0x7fffe05afeb4,136628827,0,0x0,8
tick,0x7fffe05afeb4,136644849,0,0x0,8
tick,0x7fffe05afeb4,136660948,0,0x0,8
tick,0x7fffe05afeb4,136677049,0,0x0,8
tick,0x7fffe05afeb4,136692942,0,0x0,8
tick,0x7fffe05afeb4,136708151,0,0x0,8
tick,0x7fffe05afeb4,136723921,0,0x0,8
tick,0x7fffe05afeb4,136742511,0,0x0,8
tick,0x7fffe05afeb4,136756060,0,0x0,8
tick,0x7fffe05afeb4,136772136,0,0x0,8
tick,0x7fffe05afeb4,136788329,0,0x0,8
tick,0x7fffe05afeb4,136804132,0,0x0,8
tick,0x7fffe05afeb4,136818911,0,0x0,8
tick,0x7fffe05afeb4,136835028,0,0x0,8
tick,0x7fffe05afeb4,136850080,0,0x0,8
tick,0x7fffe05afeb4,136864834,0,0x0,8
tick,0x7fffe05afeb4,136879989,0,0x0,8
tick,0x7fffe05afeb4,136895830,0,0x0,8
tick,0x7fffe05afeb4,136911908,0,0x0,8
tick,0x7fffe05afeb4,136928193,0,0x0,8
tick,0x7fffe05afeb4,136944614,0,0x0,8
tick,0x7fffe05afeb4,136961490,0,0x0,8
tick,0x7fffe05afeb4,136976264,0,0x0,8
tick,0x7fffe05afeb4,136992521,0,0x0,8
tick,0x7fffe05afeb4,137008360,0,0x0,8
tick,0x7fffe05afeb4,137024094,0,0x0,8
tick,0x7fffe05afeb4,137040562,0,0x0,8
tick,0x7fffe05afeb4,137055926,0,0x0,8
tick,0x7fffe05afeb4,137070985,0,0x0,8
tick,0x7fffe05afeb4,137086876,0,0x0,8
tick,0x7fffe05afeb4,137101937,0,0x0,8
tick,0x7fffe05afeb4,137117844,0,0x0,8
tick,0x7fffe05afeb4,137135338,0,0x0,8
tick,0x7fffe05afeb4,137150343,0,0x0,8
tick,0x7fffe05afeb4,137166579,0,0x0,8
tick,0x7fffe05afeb4,137182123,0,0x0,8
tick,0x7fffe05afeb4,137197929,0,0x0,8
tick,0x7fffe05afeb4,137214031,0,0x0,8
tick,0x7fffe05afeb4,137230216,0,0x0,8
tick,0x7fffe05afeb4,137245836,0,0x0,8
tick,0x7fffe05afeb4,137260802,0,0x0,8
tick,0x7fffe05afeb4,137277174,0,0x0,8
tick,0x7fffe05afeb4,137294904,0,0x0,8
tick,0x7fffe05afeb4,137309048,0,0x0,8
tick,0x7fffe05afeb4,137324182,0,0x0,8
tick,0x7fffe05afeb4,137340378,0,0x0,8
tick,0x7fffe05afeb4,137355980,0,0x0,8
tick,0x7fffe05afeb4,137371845,0,0x0,8
tick,0x7fffe05afeb4,137386871,0,0x0,8
tick,0x7fffe05afeb4,137405136,0,0x0,8
tick,0x7fffe05afeb4,137418007,0,0x0,8
tick,0x7fffe05afeb4,137434035,0,0x0,8
tick,0x7fffe05afeb4,137449130,0,0x0,8
tick,0x7fffe05afeb4,137465356,0,0x0,8
tick,0x7fffe05afeb4,137480934,0,0x0,8
tick,0x7fffe05afeb4,137496069,0,0x0,8
tick,0x7fffe05afeb4,137510855,0,0x0,8
tick,0x7fffe05afeb4,137526904,0,0x0,8
tick,0x7fffe05afeb4,137542882,0,0x0,8
tick,0x7fffe05afeb4,137558825,0,0x0,8
tick,0x7fffe05afeb4,137575167,0,0x0,8
tick,0x7fffe05afeb4,137594160,0,0x0,8
tick,0x7fffe05afeb4,137605992,0,0x0,8
tick,0x7fffe05afeb4,137622923,0,0x0,8
tick,0x7fffe05afeb4,137636849,0,0x0,8
tick,0x7fffe05afeb4,137653081,0,0x0,8
tick,0x7fffe05afeb4,137669261,0,0x0,8
tick,0x7fffe05afeb4,137685101,0,0x0,8
tick,0x7fffe05afeb4,137701002,0,0x0,8
tick,0x7fffe05afeb4,137716766,0,0x0,8
tick,0x7fffe05afeb4,137732999,0,0x0,8
tick,0x7fffe05afeb4,137747778,0,0x0,8
tick,0x7fffe05afeb4,137763850,0,0x0,8
tick,0x7fffe05afeb4,137779904,0,0x0,8
tick,0x7fffe05afeb4,137795763,0,0x0,8
tick,0x7fffe05afeb4,137811782,0,0x0,8
tick,0x7fffe05afeb4,137827746,0,0x0,8
tick,0x7fffe05afeb4,137843947,0,0x0,8
tick,0x7fffe05afeb4,137858834,0,0x0,8
tick,0x7fffe05afeb4,137875495,0,0x0,8
tick,0x7fffe05afeb4,137890788,0,0x0,8
tick,0x7fffe05afeb4,137905944,0,0x0,8
tick,0x7fffe05afeb4,137922061,0,0x0,8
tick,0x7fffe05afeb4,137938422,0,0x0,8
tick,0x7fffe05afeb4,137956041,0,0x0,8
tick,0x7fffe05afeb4,137970605,0,0x0,8
tick,0x7fffe05afeb4,137986086,0,0x0,8
tick,0x7fffe05afeb4,138002121,0,0x0,8
tick,0x7fffe05afeb4,138017121,0,0x0,8
tick,0x7fffe05afeb4,138031791,0,0x0,8
tick,0x7fffe05afeb4,138047807,0,0x0,8
tick,0x7fffe05afeb4,138063935,0,0x0,8
tick,0x7fffe05afeb4,138079819,0,0x0,8
tick,0x7fffe05afeb4,138095096,0,0x0,8
tick,0x7fffe05afeb4,138110992,0,0x0,8
tick,0x7fffe05afeb4,138126956,0,0x0,8
tick,0x7fffe05afeb4,138142788,0,0x0,8
tick,0x7fffe05afeb4,138159200,0,0x0,8
tick,0x7fffe05afeb4,138177219,0,0x0,8
tick,0x7fffe05afeb4,138191424,0,0x0,8
tick,0x7fffe05afeb4,138206933,0,0x0,8
tick,0x7fffe05afeb4,138223282,0,0x0,8
tick,0x7fffe05afeb4,138238086,0,0x0,8
tick,0x7fffe05afeb4,138254129,0,0x0,8
tick,0x7fffe05afeb4,138270416,0,0x0,8
tick,0x7fffe05afeb4,138286956,0,0x0,8
tick,0x7fffe05afeb4,138301930,0,0x0,8
tick,0x7fffe05afeb4,138317228,0,0x0,8
tick,0x7fffe05afeb4,138332846,0,0x0,8
tick,0x7fffe05afeb4,138348758,0,0x0,8
tick,0x7fffe05afeb4,138364834,0,0x0,8
tick,0x7fffe05afeb4,138379999,0,0x0,8
tick,0x7fffe05afeb4,138400449,0,0x0,8
tick,0x7fffe05afeb4,138411781,0,0x0,8
tick,0x7fffe05afeb4,138427842,0,0x0,8
tick,0x7fffe05afeb4,138444120,0,0x0,8
tick,0x7fffe05afeb4,138460023,0,0x0,8
tick,0x7fffe05afeb4,138475989,0,0x0,8
tick,0x7fffe05afeb4,138491920,0,0x0,8
tick,0x7fffe05afeb4,138509051,0,0x0,8
tick,0x7fffe05afeb4,138524176,0,0x0,8
tick,0x7fffe05afeb4,138540076,0,0x0,8
tick,0x7fffe05afeb4,138555985,0,0x0,8
tick,0x7fffe05afeb4,138572151,0,0x0,8
tick,0x7fffe05afeb4,138587990,0,0x0,8
tick,0x7fffe05afeb4,138605496,0,0x0,8
tick,0x7fffe05afeb4,138621013,0,0x0,8
tick,0x7fffe05afeb4,138653159,0,0x0,8
tick,0x7fffe05afeb4,138668268,0,0x0,8
tick,0x7fffe05afeb4,138684093,0,0x0,8
tick,0x7fffe05afeb4,138700081,0,0x0,8
tick,0x7fffe05afeb4,138716231,0,0x0,8
tick,0x7fffe05afeb4,138732853,0,0x0,8
tick,0x7fffe05afeb4,138748327,0,0x0,8
tick,0x7fffe05afeb4,138763847,0,0x0,8
tick,0x7fffe05afeb4,138779957,0,0x0,8
tick,0x7fffe05afeb4,138795771,0,0x0,8
tick,0x7fffe05afeb4,138812142,0,0x0,8
tick,0x7fffe05afeb4,138827967,0,0x0,8
tick,0x7fffe05afeb4,138844125,0,0x0,8
tick,0x7fffe05afeb4,138859794,0,0x0,8
tick,0x7fffe05afeb4,138876050,0,0x0,8
tick,0x7fffe05afeb4,138892021,0,0x0,8
tick,0x7fffe05afeb4,138907952,0,0x0,8
tick,0x7fffe05afeb4,138924265,0,0x0,8
tick,0x7fffe05afeb4,138940308,0,0x0,8
tick,0x7fffe05afeb4,138958293,0,0x0,8
tick,0x7fffe05afeb4,138971883,0,0x0,8
tick,0x7fffe05afeb4,138986943,0,0x0,8
tick,0x7fffe05afeb4,139002980,0,0x0,8
tick,0x7fffe05afeb4,139018742,0,0x0,8
tick,0x7fffe05afeb4,139035791,0,0x0,8
tick,0x7fffe05afeb4,139050921,0,0x0,8
tick,0x7fffe05afeb4,139068845,0,0x0,8
tick,0x7fffe05afeb4,139082898,0,0x0,8
tick,0x7fffe05afeb4,139098238,0,0x0,8
tick,0x7fffe05afeb4,139113885,0,0x0,8
tick,0x7fffe05afeb4,139129976,0,0x0,8
tick,0x7fffe05afeb4,139146012,0,0x0,8
tick,0x7fffe05afeb4,139162028,0,0x0,8
tick,0x7fffe05afeb4,139179737,0,0x0,8
tick,0x7fffe05afeb4,139193937,0,0x0,8
tick,0x7fffe05afeb4,139209858,0,0x0,8
tick,0x7fffe05afeb4,139225949,0,0x0,8
tick,0x7fffe05afeb4,139241989,0,0x0,8
tick,0x7fffe05afeb4,139258311,0,0x0,8
tick,0x7fffe05afeb4,139272857,0,0x0,8
tick,0x7fffe05afeb4,139288883,0,0x0,8
tick,0x7fffe05afeb4,139303779,0,0x0,8
tick,0x7fffe05afeb4,139319880,0,0x0,8
tick,0x7fffe05afeb4,139336020,0,0x0,8
tick,0x7fffe05afeb4,139351878,0,0x0,8
tick,0x7fffe05afeb4,139367781,0,0x0,8
tick,0x7fffe05afeb4,139384912,0,0x0,8
tick,0x7fffe05afeb4,139402952,0,0x0,8
tick,0x7fffe05afeb4,139416428,0,0x0,8
tick,0x7fffe05afeb4,139430746,0,0x0,8
tick,0x7fffe05afeb4,139446302,0,0x0,8
tick,0x7fffe05afeb4,139462252,0,0x0,8
tick,0x7fffe05afeb4,139477592,0,0x0,8
tick,0x7fffe05afeb4,139492293,0,0x0,8
tick,0x7fffe05afeb4,139512381,0,0x0,8
tick,0x7fffe05afeb4,139523907,0,0x0,8
tick,0x7fffe05afeb4,139540133,0,0x0,8
tick,0x7fffe05afeb4,139555775,0,0x0,8
tick,0x7fffe05afeb4,139571843,0,0x0,8
tick,0x7fffe05afeb4,139588436,0,0x0,8
tick,0x7fffe05afeb4,139604797,0,0x0,8
tick,0x7fffe05afeb4,139621297,0,0x0,8
tick,0x7fffe05afeb4,139636925,0,0x0,8
tick,0x7fffe05afeb4,139651861,0,0x0,8
tick,0x7fffe05afeb4,139667941,0,0x0,8
tick,0x7fffe05afeb4,139684133,0,0x0,8
tick,0x7fffe05afeb4,139700015,0,0x0,8
tick,0x7fffe05afeb4,139716186,0,0x0,8
tick,0x7fffe05afeb4,139733126,0,0x0,8
tick,0x7fffe05afeb4,139747765,0,0x0,8
tick,0x7fffe05afeb4,139764225,0,0x0,8
tick,0x7fffe05afeb4,139778944,0,0x0,8
tick,0x7fffe05afeb4,139795353,0,0x0,8
tick,0x7fffe05afeb4,139810860,0,0x0,8
tick,0x7fffe05afeb4,139827080,0,0x0,8
tick,0x7fffe05afeb4,139841846,0,0x0,8
tick,0x7fffe05afeb4,139857787,0,0x0,8
tick,0x7fffe05afeb4,139873814,0,0x0,8
tick,0x7fffe05afeb4,139889978,0,0x0,8
tick,0x7fffe05afeb4,139906236,0,0x0,8
tick,0x7fffe05afeb4,139921847,0,0x0,8
tick,0x7fffe05afeb4,139938096,0,0x0,8
tick,0x7fffe05afeb4,139955775,0,0x0,8
tick,0x7fffe05afeb4,139970164,0,0x0,8
tick,0x7fffe05afeb4,139986380,0,0x0,8
tick,0x7fffe05afeb4,140002119,0,0x0,8
tick,0x7fffe05afeb4,140016896,0,0x0,8
tick,0x7fffe05afeb4,140032731,0,0x0,8
tick,0x7fffe05afeb4,140048034,0,0x0,8
tick,0x7fffe05afeb4,140063817,0,0x0,8
tick,0x7fffe05afeb4,140080514,0,0x0,8
tick,0x7fffe05afeb4,140095754,0,0x0,8
tick,0x7fffe05afeb4,140111798,0,0x0,8
tick,0x7fffe05afeb4,140126821,0,0x0,8
tick,0x7fffe05afeb4,140142833,0,0x0,8
tick,0x7fffe05afeb4,140158838,0,0x0,8
tick,0x7fffe05afeb4,140175322,0,0x0,8
tick,0x7fffe05afeb4,140190961,0,0x0,8
tick,0x7fffe05afeb4,140206916,0,0x0,8
tick,0x7fffe05afeb4,140222804,0,0x0,8
tick,0x7fffe05afeb4,140239196,0,0x0,8
tick,0x7fffe05afeb4,140254748,0,0x0,8
tick,0x7fffe05afeb4,140270996,0,0x0,8
tick,0x7fffe05afeb4,140285839,0,0x0,8
tick,0x7fffe05afeb4,140302278,0,0x0,8
tick,0x7fffe05afeb4,140316764,0,0x0,8
tick,0x7fffe05afeb4,140333461,0,0x0,8
tick,0x7fffe05afeb4,140348111,0,0x0,8
tick,0x7fffe05afeb4,140364114,0,0x0,8
tick,0x7fffe05afeb4,140379987,0,0x0,8
tick,0x7fffe05afeb4,140396216,0,0x0,8
tick,0x7fffe05afeb4,140413753,0,0x0,8
tick,0x7fffe05afeb4,140426868,0,0x0,8
tick,0x7fffe05afeb4,140442829,0,0x0,8
tick,0x7fffe05afeb4,140457903,0,0x0,8
tick,0x7fffe05afeb4,140474065,0,0x0,8
tick,0x7fffe05afeb4,140489275,0,0x0,8
tick,0x7fffe05afeb4,140504916,0,0x0,8
tick,0x7fffe05afeb4,140521034,0,0x0,8
tick,0x7fffe05afeb4,140536752,0,0x0,8
tick,0x7fffe05afeb4,140552891,0,0x0,8
tick,0x7fffe05afeb4,140568781,0,0x0,8
tick,0x7fffe05afeb4,140585988,0,0x0,8
tick,0x7fffe05afeb4,140605319,0,0x0,8
tick,0x7fffe05afeb4,140616976,0,0x0,8
tick,0x7fffe05afeb4,140632861,0,0x0,8
tick,0x7fffe05afeb4,140652056,0,0x0,8
tick,0x7fffe05afeb4,140667537,0,0x0,8
tick,0x7fffe05afeb4,140681000,0,0x0,8
tick,0x7fffe05afeb4,140697917,0,0x0,8
tick,0x7fffe05afeb4,140712011,0,0x0,8
tick,0x7fffe05afeb4,140728979,0,0x0,8
tick,0x7fffe05afeb4,140742766,0,0x0,8
tick,0x7fffe05afeb4,140757776,0,0x0,8
tick,0x7fffe05afeb4,140773926,0,0x0,8
tick,0x7fffe05afeb4,140789779,0,0x0,8
tick,0x7fffe05afeb4,140805825,0,0x0,8
tick,0x7fffe05afeb4,140821770,0,0x0,8
tick,0x7fffe05afeb4,140838923,0,0x0,8
tick,0x7fffe05afeb4,140854913,0,0x0,8
tick,0x7fffe05afeb4,140870391,0,0x0,8
tick,0x7fffe05afeb4,140885782,0,0x0,8
tick,0x7fffe05afeb4,140902248,0,0x0,8
tick,0x7fffe05afeb4,140916903,0,0x0,8
tick,0x7fffe05afeb4,140933142,0,0x0,8
tick,0x7fffe05afeb4,140948812,0,0x0,8
tick,0x7fffe05afeb4,140965422,0,0x0,8
tick,0x7fffe05afeb4,140980741,0,0x0,8
tick,0x7fffe05afeb4,140996971,0,0x0,8
tick,0x7fffe05afeb4,141013068,0,0x0,8
tick,0x7fffe05afeb4,141028108,0,0x0,8
tick,0x7fffe05afeb4,141044024,0,0x0,8
tick,0x7fffe05afeb4,141060967,0,0x0,8
tick,0x7fffe05afeb4,141076615,0,0x0,8
tick,0x7fffe05afeb4,141092307,0,0x0,8
tick,0x7fffe05afeb4,141107954,0,0x0,8
tick,0x7fffe05afeb4,141124032,0,0x0,8
tick,0x7fffe05afeb4,141139214,0,0x0,8
tick,0x7fffe05afeb4,141155010,0,0x0,8
tick,0x7fffe05afeb4,141170881,0,0x0,8
tick,0x7fffe05afeb4,141186888,0,0x0,8
tick,0x7fffe05afeb4,141202850,0,0x0,8
tick,0x7fffe05afeb4,141219138,0,0x0,8
tick,0x7fffe05afeb4,141234849,0,0x0,8
tick,0x7fffe05afeb4,141257000,0,0x0,8
tick,0x7fffe05afeb4,141267157,0,0x0,8
tick,0x7fffe05afeb4,141281958,0,0x0,8
tick,0x7fffe05afeb4,141297863,0,0x0,8
tick,0x7fffe05afeb4,141313803,0,0x0,8
tick,0x7fffe05afeb4,141330142,0,0x0,8
tick,0x7fffe05afeb4,141347867,0,0x0,8
tick,0x7fffe05afeb4,141361312,0,0x0,8
tick,0x7fffe05afeb4,141375873,0,0x0,8
tick,0x7fffe05afeb4,141391969,0,0x0,8
tick,0x7fffe05afeb4,141407876,0,0x0,8
tick,0x7fffe05afeb4,141423997,0,0x0,8
tick,0x7fffe05afeb4,141444702,0,0x0,8
tick,0x7fffe05afeb4,141455785,0,0x0,8
tick,0x7fffe05afeb4,141471976,0,0x0,8
tick,0x7fffe05afeb4,141487970,0,0x0,8
tick,0x7fffe05afeb4,141509228,0,0x0,8
tick,0x7fffe05afeb4,141521021,0,0x0,8
tick,0x7fffe05afeb4,141535011,0,0x0,8
tick,0x7fffe05afeb4,141550887,0,0x0,8
tick,0x7fffe05afeb4,141566900,0,0x0,8
tick,0x7fffe05afeb4,141582756,0,0x0,8
tick,0x7fffe05afeb4,141608865,0,0x0,8
tick,0x7fffe05afeb4,141617931,0,0x0,8
tick,0x7fffe05afeb4,141632316,0,0x0,8
tick,0x7fffe05afeb4,141651744,0,0x0,8
tick,0x7fffe05afeb4,141664260,0,0x0,8
tick,0x7fffe05afeb4,141680560,0,0x0,8
tick,0x7fffe05afeb4,141695907,0,0x0,8
tick,0x7fffe05afeb4,141713572,0,0x0,8
tick,0x7fffe05afeb4,141731285,0,0x0,8
tick,0x7fffe05afeb4,141741912,0,0x0,8
tick,0x7fffe05afeb4,141756761,0,0x0,8
tick,0x7fffe05afeb4,141772102,0,0x0,8
tick,0x7fffe05afeb4,141789860,0,0x0,8
tick,0x7fffe05afeb4,141803085,0,0x0,8
tick,0x7fffe05afeb4,141819197,0,0x0,8
tick,0x7fffe05afeb4,141838332,0,0x0,8
tick,0x7fffe05afeb4,141850920,0,0x0,8
tick,0x7fffe05afeb4,141867183,0,0x0,8
tick,0x7fffe05afeb4,141883320,0,0x0,8
tick,0x7fffe05afeb4,141898977,0,0x0,8
tick,0x7fffe05afeb4,141916963,0,0x0,8
tick,0x7fffe05afeb4,141930172,0,0x0,8
tick,0x7fffe05afeb4,141946729,0,0x0,8
tick,0x7fffe05afeb4,141961963,0,0x0,8
tick,0x7fffe05afeb4,141978423,0,0x0,8
tick,0x7fffe05afeb4,141993437,0,0x0,8
tick,0x7fffe05afeb4,142009739,0,0x0,8
tick,0x7fffe05afeb4,142025301,0,0x0,8
tick,0x7fffe05afeb4,142041561,0,0x0,8
tick,0x7fffe05afeb4,142058244,0,0x0,8
tick,0x7fffe05afeb4,142073405,0,0x0,8
tick,0x7fffe05afeb4,142088950,0,0x0,8
tick,0x7fffe05afeb4,142105144,0,0x0,8
tick,0x7fffe05afeb4,142120864,0,0x0,8
tick,0x7fffe05afeb4,142137208,0,0x0,8
tick,0x7fffe05afeb4,142153042,0,0x0,8
tick,0x7fffe05afeb4,142169612,0,0x0,8
tick,0x7fffe05afeb4,142185325,0,0x0,8
tick,0x7fffe05afeb4,142201041,0,0x0,8
tick,0x7fffe05afeb4,142217721,0,0x0,8
tick,0x7fffe05afeb4,142233531,0,0x0,8
tick,0x7fffe05afeb4,142249080,0,0x0,8
tick,0x7fffe05afeb4,142265055,0,0x0,8
tick,0x7fffe05afeb4,142282848,0,0x0,8
tick,0x7fffe05afeb4,142297264,0,0x0,8
tick,0x7fffe05afeb4,142313165,0,0x0,8
tick,0x7fffe05afeb4,142330001,0,0x0,8
tick,0x7fffe05afeb4,142347741,0,0x0,8
tick,0x7fffe05afeb4,142360342,0,0x0,8
tick,0x7fffe05afeb4,142374836,0,0x0,8
tick,0x7fffe05afeb4,142391059,0,0x0,8
tick,0x7fffe05afeb4,142406960,0,0x0,8
tick,0x7fffe05afeb4,142422871,0,0x0,8
tick,0x7fffe05afeb4,142438003,0,0x0,8
tick,0x7fffe05afeb4,142453360,0,0x0,8
tick,0x7fffe05afeb4,142469150,0,0x0,8
tick,0x7fffe05afeb4,142485401,0,0x0,8
tick,0x7fffe05afeb4,142502511,0,0x0,8
tick,0x7fffe05afeb4,142518231,0,0x0,8
tick,0x7fffe05afeb4,142533334,0,0x0,8
tick,0x7fffe05afeb4,142548379,0,0x0,8
tick,0x7fffe05afeb4,142564717,0,0x0,8
tick,0x7fffe05afeb4,142579427,0,0x0,8
tick,0x7fffe05afeb4,142593932,0,0x0,8
tick,0x7fffe05afeb4,142625924,0,0x0,8
tick,0x7fffe05afeb4,142646620,0,0x0,8
tick,0x7fffe05afeb4,142657196,0,0x0,8
tick,0x7fffe05afeb4,142672844,0,0x0,8
tick,0x7fffe05afeb4,142687894,0,0x0,8
tick,0x7fffe05afeb4,142703950,0,0x0,8
tick,0x7fffe05afeb4,142722057,0,0x0,8
tick,0x7fffe05afeb4,142736134,0,0x0,8
tick,0x7fffe05afeb4,142751864,0,0x0,8
tick,0x7fffe05afeb4,142768221,0,0x0,8
tick,0x7fffe05afeb4,142784383,0,0x0,8
tick,0x7fffe05afeb4,142799813,0,0x0,8
tick,0x7fffe05afeb4,142815892,0,0x0,8
tick,0x7fffe05afeb4,142833546,0,0x0,8
tick,0x7fffe05afeb4,142848015,0,0x0,8
tick,0x7fffe05afeb4,142863936,0,0x0,8
tick,0x7fffe05afeb4,142879666,0,0x0,8
tick,0x7fffe05afeb4,142894774,0,0x0,8
tick,0x7fffe05afeb4,142910784,0,0x0,8
tick,0x7fffe05afeb4,142926851,0,0x0,8
tick,0x7fffe05afeb4,142943090,0,0x0,8
tick,0x7fffe05afeb4,142958770,0,0x0,8
tick,0x7fffe05afeb4,142974926,0,0x0,8
tick,0x7fffe05afeb4,142990930,0,0x0,8
tick,0x7fffe05afeb4,143007403,0,0x0,8
tick,0x7fffe05afeb4,143023004,0,0x0,8
tick,0x7fffe05afeb4,143038148,0,0x0,8
tick,0x7fffe05afeb4,143054945,0,0x0,8
tick,0x7fffe05afeb4,143070743,0,0x0,8
tick,0x7fffe05afeb4,143086749,0,0x0,8
tick,0x7fffe05afeb4,143102146,0,0x0,8
tick,0x7fffe05afeb4,143118531,0,0x0,8
tick,0x7fffe05afeb4,143134755,0,0x0,8
tick,0x7fffe05afeb4,143149857,0,0x0,8
tick,0x7fffe05afeb4,143166946,0,0x0,8
tick,0x7fffe05afeb4,143181970,0,0x0,8
tick,0x7fffe05afeb4,143198203,0,0x0,8
tick,0x7fffe05afeb4,143212855,0,0x0,8
tick,0x7fffe05afeb4,143229342,0,0x0,8
tick,0x7fffe05afeb4,143244865,0,0x0,8
tick,0x7fffe05afeb4,143261000,0,0x0,8
tick,0x7fffe05afeb4,143277282,0,0x0,8
tick,0x7fffe05afeb4,143293104,0,0x0,8
tick,0x7fffe05afeb4,143308861,0,0x0,8
tick,0x7fffe05afeb4,143325509,0,0x0,8
tick,0x7fffe05afeb4,143340780,0,0x0,8
tick,0x7fffe05afeb4,143357158,0,0x0,8
tick,0x7fffe05afeb4,143373282,0,0x0,8
tick,0x7fffe05afeb4,143389296,0,0x0,8
tick,0x7fffe05afeb4,143404934,0,0x0,8
tick,0x7fffe05afeb4,143420959,0,0x0,8
tick,0x7fffe05afeb4,143436897,0,0x0,8
tick,0x7fffe05afeb4,143451973,0,0x0,8
tick,0x7fffe05afeb4,143467854,0,0x0,8
tick,0x7fffe05afeb4,143483848,0,0x0,8
tick,0x7fffe05afeb4,143499789,0,0x0,8
tick,0x7fffe05afeb4,143515947,0,0x0,8
tick,0x7fffe05afeb4,143531986,0,0x0,8
tick,0x7fffe05afeb4,143547937,0,0x0,8
tick,0x7fffe05afeb4,143563774,0,0x0,8
tick,0x7fffe05afeb4,143580446,0,0x0,8
tick,0x7fffe05afeb4,143595929,0,0x0,8
tick,0x7fffe05afeb4,143617264,0,0x0,8
tick,0x7fffe05afeb4,143627884,0,0x0,8
tick,0x7fffe05afeb4,143645462,0,0x0,8
tick,0x7fffe05afeb4,143660484,0,0x0,8
tick,0x7fffe05afeb4,143675952,0,0x0,8
tick,0x7fffe05afeb4,143690846,0,0x0,8
tick,0x7fffe05afeb4,143709348,0,0x0,8
tick,0x7fffe05afeb4,143722866,0,0x0,8
tick,0x7fffe05afeb4,143739844,0,0x0,8
tick,0x7fffe05afeb4,143754937,0,0x0,8
tick,0x7fffe05afeb4,143772174,0,0x0,8
tick,0x7fffe05afeb4,143786772,0,0x0,8
tick,0x7fffe05afeb4,143803029,0,0x0,8
tick,0x7fffe05afeb4,143818826,0,0x0,8
tick,0x7fffe05afeb4,143835136,0,0x0,8
tick,0x7fffe05afeb4,143850797,0,0x0,8
tick,0x7fffe05afeb4,143866868,0,0x0,8
tick,0x7fffe05afeb4,143882836,0,0x0,8
tick,0x7fffe05afeb4,143898845,0,0x0,8
tick,0x7fffe05afeb4,143914880,0,0x0,8
tick,0x7fffe05afeb4,143930942,0,0x0,8
tick,0x7fffe05afeb4,143945849,0,0x0,8
tick,0x7fffe05afeb4,143960835,0,0x0,8
tick,0x7fffe05afeb4,143976776,0,0x0,8
tick,0x7fffe05afeb4,143992865,0,0x0,8
tick,0x7fffe05afeb4,144008904,0,0x0,8
tick,0x7fffe05afeb4,144024874,0,0x0,8
tick,0x7fffe05afeb4,144041488,0,0x0,8
tick,0x7fffe05afeb4,144056943,0,0x0,8
tick,0x7fffe05afeb4,144072764,0,0x0,8
tick,0x7fffe05afeb4,144087873,0,0x0,8
tick,0x7fffe05afeb4,144103896,0,0x0,8
tick,0x7fffe05afeb4,144118876,0,0x0,8
tick,0x7fffe05afeb4,144134173,0,0x0,8
tick,0x7fffe05afeb4,144149954,0,0x0,8
tick,0x7fffe05afeb4,144164770,0,0x0,8
tick,0x7fffe05afeb4,144179818,0,0x0,8
tick,0x7fffe05afeb4,144194858,0,0x0,8
tick,0x7fffe05afeb4,144210069,0,0x0,8
tick,0x7fffe05afeb4,144225760,0,0x0,8
tick,0x7fffe05afeb4,144241968,0,0x0,8
tick,0x7fffe05afeb4,144257911,0,0x0,8
tick,0x7fffe05afeb4,144273977,0,0x0,8
tick,0x7fffe05afeb4,144289859,0,0x0,8
tick,0x7fffe05afeb4,144305851,0,0x0,8
tick,0x7fffe05afeb4,144321785,0,0x0,8
tick,0x7fffe05afeb4,144338010,0,0x0,8
tick,0x7fffe05afeb4,144353844,0,0x0,8
tick,0x7fffe05afeb4,144370036,0,0x0,8
tick,0x7fffe05afeb4,144385788,0,0x0,8
tick,0x7fffe05afeb4,144401868,0,0x0,8
tick,0x7fffe05afeb4,144417835,0,0x0,8
tick,0x7fffe05afeb4,144433896,0,0x0,8
tick,0x7fffe05afeb4,144449785,0,0x0,8
tick,0x7fffe05afeb4,144466121,0,0x0,8
tick,0x7fffe05afeb4,144481978,0,0x0,8
tick,0x7fffe05afeb4,144497957,0,0x0,8
tick,0x7fffe05afeb4,144513765,0,0x0,8
tick,0x7fffe05afeb4,144530065,0,0x0,8
tick,0x7fffe05afeb4,144545984,0,0x0,8
tick,0x7fffe05afeb4,144561931,0,0x0,8
tick,0x7fffe05afeb4,144577842,0,0x0,8
tick,0x7fffe05afeb4,144594009,0,0x0,8
tick,0x7fffe05afeb4,144610076,0,0x0,8
tick,0x7fffe05afeb4,144625792,0,0x0,8
tick,0x7fffe05afeb4,144641817,0,0x0,8
tick,0x7fffe05afeb4,144657963,0,0x0,8
tick,0x7fffe05afeb4,144673896,0,0x0,8
tick,0x7fffe05afeb4,144689890,0,0x0,8
tick,0x7fffe05afeb4,144705911,0,0x0,8
tick,0x7fffe05afeb4,144722058,0,0x0,8
tick,0x7fffe05afeb4,144737925,0,0x0,8
tick,0x7fffe05afeb4,144753918,0,0x0,8
tick,0x7fffe05afeb4,144769944,0,0x0,8
tick,0x7fffe05afeb4,144785914,0,0x0,8
tick,0x7fffe05afeb4,144801833,0,0x0,8
tick,0x7fffe05afeb4,144818178,0,0x0,8
tick,0x7fffe05afeb4,144833783,0,0x0,8
tick,0x7fffe05afeb4,144849940,0,0x0,8
tick,0x7fffe05afeb4,144865835,0,0x0,8
tick,0x7fffe05afeb4,144881895,0,0x0,8
tick,0x7fffe05afeb4,144897823,0,0x0,8
tick,0x7fffe05afeb4,144912946,0,0x0,8
tick,0x7fffe05afeb4,144929021,0,0x0,8
tick,0x7fffe05afeb4,144944830,0,0x0,8
tick,0x7fffe05afeb4,144960820,0,0x0,8
tick,0x7fffe05afeb4,144977010,0,0x0,8
tick,0x7fffe05afeb4,144992852,0,0x0,8
tick,0x7fffe05afeb4,145009051,0,0x0,8
tick,0x7fffe05afeb4,145024856,0,0x0,8
tick,0x7fffe05afeb4,145040961,0,0x0,8
tick,0x7fffe05afeb4,145056946,0,0x0,8
tick,0x7fffe05afeb4,145072915,0,0x0,8
tick,0x7fffe05afeb4,145088802,0,0x0,8
tick,0x7fffe05afeb4,145104931,0,0x0,8
tick,0x7fffe05afeb4,145120851,0,0x0,8
tick,0x7fffe05afeb4,145136924,0,0x0,8
tick,0x7fffe05afeb4,145152931,0,0x0,8
tick,0x7fffe05afeb4,145169019,0,0x0,8
tick,0x7fffe05afeb4,145185076,0,0x0,8
tick,0x7fffe05afeb4,145200845,0,0x0,8
tick,0x7fffe05afeb4,145216853,0,0x0,8
tick,0x7fffe05afeb4,145232979,0,0x0,8
tick,0x7fffe05afeb4,145248948,0,0x0,8
tick,0x7fffe05afeb4,145265108,0,0x0,8
tick,0x7fffe05afeb4,145280771,0,0x0,8
tick,0x7fffe05afeb4,145295862,0,0x0,8
tick,0x7fffe05afeb4,145311863,0,0x0,8
tick,0x7fffe05afeb4,145327877,0,0x0,8
tick,0x7fffe05afeb4,145343874,0,0x0,8
tick,0x7fffe05afeb4,145358959,0,0x0,8
tick,0x7fffe05afeb4,145374858,0,0x0,8
tick,0x7fffe05afeb4,145390934,0,0x0,8
tick,0x7fffe05afeb4,145406765,0,0x0,8
tick,0x7fffe05afeb4,145422885,0,0x0,8
tick,0x7fffe05afeb4,145438876,0,0x0,8
tick,0x7fffe05afeb4,145454876,0,0x0,8
tick,0x7fffe05afeb4,145470852,0,0x0,8
tick,0x7fffe05afeb4,145487171,0,0x0,8
tick,0x7fffe05afeb4,145502802,0,0x0,8
tick,0x7fffe05afeb4,145518850,0,0x0,8
tick,0x7fffe05afeb4,145534862,0,0x0,8
tick,0x7fffe05afeb4,145550962,0,0x0,8
tick,0x7fffe05afeb4,145566946,0,0x0,8
tick,0x7fffe05afeb4,145582929,0,0x0,8
tick,0x7fffe05afeb4,145597936,0,0x0,8
tick,0x7fffe05afeb4,145613932,0,0x0,8
tick,0x7fffe05afeb4,145629881,0,0x0,8
tick,0x7fffe05afeb4,145645776,0,0x0,8
tick,0x7fffe05afeb4,145661766,0,0x0,8
tick,0x7fffe05afeb4,145677918,0,0x0,8
tick,0x7fffe05afeb4,145693867,0,0x0,8
tick,0x7fffe05afeb4,145709975,0,0x0,8
tick,0x7fffe05afeb4,145725830,0,0x0,8
tick,0x7fffe05afeb4,145742012,0,0x0,8
tick,0x7fffe05afeb4,145757766,0,0x0,8
tick,0x7fffe05afeb4,145773915,0,0x0,8
tick,0x7fffe05afeb4,145790290,0,0x0,8
tick,0x7fffe05afeb4,145805920,0,0x0,8
tick,0x7fffe05afeb4,145821828,0,0x0,8
tick,0x7fffe05afeb4,145837850,0,0x0,8
tick,0x7fffe05afeb4,145853812,0,0x0,8
tick,0x7fffe05afeb4,145870042,0,0x0,8
tick,0x7fffe05afeb4,145885777,0,0x0,8
tick,0x7fffe05afeb4,145900836,0,0x0,8
tick,0x7fffe05afeb4,145916771,0,0x0,8
tick,0x7fffe05afeb4,145932099,0,0x0,8
tick,0x7fffe05afeb4,145947914,0,0x0,8
tick,0x7fffe05afeb4,145963817,0,0x0,8
tick,0x7fffe05afeb4,145979846,0,0x0,8
tick,0x7fffe05afeb4,145995869,0,0x0,8
tick,0x7fffe05afeb4,146011878,0,0x0,8
tick,0x7fffe05afeb4,146026946,0,0x0,8
tick,0x7fffe05afeb4,146042903,0,0x0,8
tick,0x7fffe05afeb4,146058909,0,0x0,8
tick,0x7fffe05afeb4,146075055,0,0x0,8
tick,0x7fffe05afeb4,146090903,0,0x0,8
tick,0x7fffe05afeb4,146108320,0,0x0,8
tick,0x7fffe05afeb4,146123122,0,0x0,8
tick,0x7fffe05afeb4,146139324,0,0x0,8
tick,0x7fffe05afeb4,146154992,0,0x0,8
tick,0x7fffe05afeb4,146170817,0,0x0,8
tick,0x7fffe05afeb4,146187062,0,0x0,8
tick,0x7fffe05afeb4,146202982,0,0x0,8
tick,0x7fffe05afeb4,146218875,0,0x0,8
tick,0x7fffe05afeb4,146235920,0,0x0,8
tick,0x7fffe05afeb4,146250974,0,0x0,8
tick,0x7fffe05afeb4,146266923,0,0x0,8
tick,0x7fffe05afeb4,146282893,0,0x0,8
tick,0x7fffe05afeb4,146301847,0,0x0,8
tick,0x7fffe05afeb4,146314807,0,0x0,8
tick,0x7fffe05afeb4,146332519,0,0x0,8
tick,0x7fffe05afeb4,146345891,0,0x0,8
tick,0x7fffe05afeb4,146361818,0,0x0,8
tick,0x7fffe05afeb4,146377479,0,0x0,8
tick,0x7fffe05afeb4,146392760,0,0x0,8
tick,0x7fffe05afeb4,146408828,0,0x0,8
tick,0x7fffe05afeb4,146424850,0,0x0,8
tick,0x7fffe05afeb4,146440135,0,0x0,8
tick,0x7fffe05afeb4,146455838,0,0x0,8
tick,0x7fffe05afeb4,146471915,0,0x0,8
tick,0x7fffe05afeb4,146486880,0,0x0,8
tick,0x7fffe05afeb4,146502988,0,0x0,8
tick,0x7fffe05afeb4,146517773,0,0x0,8
tick,0x7fffe05afeb4,146533959,0,0x0,8
tick,0x7fffe05afeb4,146549992,0,0x0,8
tick,0x7fffe05afeb4,146566022,0,0x0,8
tick,0x7fffe05afeb4,146581855,0,0x0,8
tick,0x7fffe05afeb4,146596874,0,0x0,8
tick,0x7fffe05afeb4,146612773,0,0x0,8
tick,0x7fffe05afeb4,146628938,0,0x0,8
tick,0x7fffe05afeb4,146644770,0,0x0,8
tick,0x7fffe05afeb4,146660854,0,0x0,8
tick,0x7fffe05afeb4,146675869,0,0x0,8
tick,0x7fffe05afeb4,146691900,0,0x0,8
tick,0x7fffe05afeb4,146707792,0,0x0,8
tick,0x7fffe05afeb4,146723760,0,0x0,8
tick,0x7fffe05afeb4,146739866,0,0x0,8
tick,0x7fffe05afeb4,146755898,0,0x0,8
tick,0x7fffe05afeb4,146771839,0,0x0,8
tick,0x7fffe05afeb4,146787910,0,0x0,8
tick,0x7fffe05afeb4,146803801,0,0x0,8
tick,0x7fffe05afeb4,146820037,0,0x0,8
tick,0x7fffe05afeb4,146835807,0,0x0,8
tick,0x7fffe05afeb4,146851768,0,0x0,8
tick,0x7fffe05afeb4,146866838,0,0x0,8
tick,0x7fffe05afeb4,146882931,0,0x0,8
tick,0x7fffe05afeb4,146898783,0,0x0,8
tick,0x7fffe05afeb4,146914785,0,0x0,8
tick,0x7fffe05afeb4,146930874,0,0x0,8
tick,0x7fffe05afeb4,146946136,0,0x0,8
tick,0x7fffe05afeb4,146961773,0,0x0,8
tick,0x7fffe05afeb4,146976929,0,0x0,8
tick,0x7fffe05afeb4,146992867,0,0x0,8
tick,0x7fffe05afeb4,147008857,0,0x0,8
tick,0x7fffe05afeb4,147024870,0,0x0,8
tick,0x7fffe05afeb4,147041410,0,0x0,8
tick,0x7fffe05afeb4,147056799,0,0x0,8
tick,0x7fffe05afeb4,147072847,0,0x0,8
tick,0x7fffe05afeb4,147088986,0,0x0,8
tick,0x7fffe05afeb4,147104837,0,0x0,8
tick,0x7fffe05afeb4,147120869,0,0x0,8
tick,0x7fffe05afeb4,147135917,0,0x0,8
tick,0x7fffe05afeb4,147152010,0,0x0,8
tick,0x7fffe05afeb4,147167930,0,0x0,8
tick,0x7fffe05afeb4,147183783,0,0x0,8
tick,0x7fffe05afeb4,147199960,0,0x0,8
tick,0x7fffe05afeb4,147215855,0,0x0,8
tick,0x7fffe05afeb4,147231920,0,0x0,8
tick,0x7fffe05afeb4,147246848,0,0x0,8
tick,0x7fffe05afeb4,147263141,0,0x0,8
tick,0x7fffe05afeb4,147277863,0,0x0,8
tick,0x7fffe05afeb4,147293865,0,0x0,8
tick,0x7fffe05afeb4,147309866,0,0x0,8
tick,0x7fffe05afeb4,147325940,0,0x0,8
tick,0x7fffe05afeb4,147341879,0,0x0,8
tick,0x7fffe05afeb4,147357927,0,0x0,8
tick,0x7fffe05afeb4,147373849,0,0x0,8
tick,0x7fffe05afeb4,147390023,0,0x0,8
tick,0x7fffe05afeb4,147405768,0,0x0,8
tick,0x7fffe05afeb4,147421841,0,0x0,8
tick,0x7fffe05afeb4,147437837,0,0x0,8
tick,0x7fffe05afeb4,147453852,0,0x0,8
tick,0x7fffe05afeb4,147469908,0,0x0,8
tick,0x7fffe05afeb4,147485875,0,0x0,8
tick,0x7fffe05afeb4,147501826,0,0x0,8
tick,0x7fffe05afeb4,147516883,0,0x0,8
tick,0x7fffe05afeb4,147532870,0,0x0,8
tick,0x7fffe05afeb4,147548869,0,0x0,8
tick,0x7fffe05afeb4,147564843,0,0x0,8
tick,0x7fffe05afeb4,147580003,0,0x0,8
tick,0x7fffe05afeb4,147596076,0,0x0,8
tick,0x7fffe05afeb4,147611964,0,0x0,8
tick,0x7fffe05afeb4,147627765,0,0x0,8
tick,0x7fffe05afeb4,147644032,0,0x0,8
tick,0x7fffe05afeb4,147659911,0,0x0,8
tick,0x7fffe05afeb4,147675931,0,0x0,8
tick,0x7fffe05afeb4,147691859,0,0x0,8
tick,0x7fffe05afeb4,147706980,0,0x0,8
tick,0x7fffe05afeb4,147722855,0,0x0,8
tick,0x7fffe05afeb4,147738856,0,0x0,8
tick,0x7fffe05afeb4,147754777,0,0x0,8
tick,0x7fffe05afeb4,147770954,0,0x0,8
tick,0x7fffe05afeb4,147785844,0,0x0,8
tick,0x7fffe05afeb4,147801853,0,0x0,8
tick,0x7fffe05afeb4,147817866,0,0x0,8
tick,0x7fffe05afeb4,147833861,0,0x0,8
tick,0x7fffe05afeb4,147849879,0,0x0,8
tick,0x7fffe05afeb4,147865834,0,0x0,8
tick,0x7fffe05afeb4,147881761,0,0x0,8
tick,0x7fffe05afeb4,147896937,0,0x0,8
tick,0x7fffe05afeb4,147912844,0,0x0,8
tick,0x7fffe05afeb4,147929015,0,0x0,8
tick,0x7fffe05afeb4,147944839,0,0x0,8
tick,0x7fffe05afeb4,147960958,0,0x0,8
tick,0x7fffe05afeb4,147975753,0,0x0,8
tick,0x7fffe05afeb4,147991863,0,0x0,8
tick,0x7fffe05afeb4,148007756,0,0x0,8
tick,0x7fffe05afeb4,148023929,0,0x0,8
tick,0x7fffe05afeb4,148040586,0,0x0,8
tick,0x7fffe05afeb4,148054962,0,0x0,8
tick,0x7fffe05afeb4,148070777,0,0x0,8
tick,0x7fffe05afeb4,148086980,0,0x0,8
tick,0x7fffe05afeb4,148103183,0,0x0,8
tick,0x7fffe05afeb4,148117805,0,0x0,8
tick,0x7fffe05afeb4,148133876,0,0x0,8
tick,0x7fffe05afeb4,148150059,0,0x0,8
tick,0x7fffe05afeb4,148166284,0,0x0,8
tick,0x7fffe05afeb4,148181945,0,0x0,8
tick,0x7fffe05afeb4,148196789,0,0x0,8
tick,0x7fffe05afeb4,148212879,0,0x0,8
tick,0x7fffe05afeb4,148228768,0,0x0,8
tick,0x7fffe05afeb4,148244910,0,0x0,8
tick,0x7fffe05afeb4,148260782,0,0x0,8
tick,0x7fffe05afeb4,148276094,0,0x0,8
tick,0x7fffe05afeb4,148291756,0,0x0,8
tick,0x7fffe05afeb4,148306939,0,0x0,8
tick,0x7fffe05afeb4,148322760,0,0x0,8
tick,0x7fffe05afeb4,148338905,0,0x0,8
tick,0x7fffe05afeb4,148354899,0,0x0,8
tick,0x7fffe05afeb4,148370889,0,0x0,8
tick,0x7fffe05afeb4,148385857,0,0x0,8
tick,0x7fffe05afeb4,148402026,0,0x0,8
tick,0x7fffe05afeb4,148417778,0,0x0,8
tick,0x7fffe05afeb4,148433827,0,0x0,8
tick,0x7fffe05afeb4,148449769,0,0x0,8
tick,0x7fffe05afeb4,148464918,0,0x0,8
tick,0x7fffe05afeb4,148480029,0,0x0,8
tick,0x7fffe05afeb4,148495966,0,0x0,8
tick,0x7fffe05afeb4,148511851,0,0x0,8
tick,0x7fffe05afeb4,148527903,0,0x0,8
tick,0x7fffe05afeb4,148543769,0,0x0,8
tick,0x7fffe05afeb4,148559891,0,0x0,8
tick,0x7fffe05afeb4,148575899,0,0x0,8
tick,0x7fffe05afeb4,148591997,0,0x0,8
tick,0x7fffe05afeb4,148606861,0,0x0,8
tick,0x7fffe05afeb4,148622762,0,0x0,8
tick,0x7fffe05afeb4,148638785,0,0x0,8
tick,0x7fffe05afeb4,148655062,0,0x0,8
tick,0x7fffe05afeb4,148670992,0,0x0,8
tick,0x7fffe05afeb4,148686892,0,0x0,8
tick,0x7fffe05afeb4,148702929,0,0x0,8
tick,0x7fffe05afeb4,148718016,0,0x0,8
tick,0x7fffe05afeb4,148733856,0,0x0,8
tick,0x7fffe05afeb4,148749879,0,0x0,8
tick,0x7fffe05afeb4,148765774,0,0x0,8
tick,0x7fffe05afeb4,148781899,0,0x0,8
tick,0x7fffe05afeb4,148797770,0,0x0,8
tick,0x7fffe05afeb4,148813850,0,0x0,8
tick,0x7fffe05afeb4,148829880,0,0x0,8
tick,0x7fffe05afeb4,148845933,0,0x0,8
tick,0x7fffe05afeb4,148861843,0,0x0,8
tick,0x7fffe05afeb4,148877946,0,0x0,8
tick,0x7fffe05afeb4,148893772,0,0x0,8
tick,0x7fffe05afeb4,148909986,0,0x0,8
tick,0x7fffe05afeb4,148925930,0,0x0,8
tick,0x7fffe05afeb4,148941884,0,0x0,8
tick,0x7fffe05afeb4,148957849,0,0x0,8
tick,0x7fffe05afeb4,148973930,0,0x0,8
tick,0x7fffe05afeb4,148989879,0,0x0,8
tick,0x7fffe05afeb4,149005832,0,0x0,8
tick,0x7fffe05afeb4,149021761,0,0x0,8
tick,0x7fffe05afeb4,149037945,0,0x0,8
tick,0x7fffe05afeb4,149053904,0,0x0,8
tick,0x7fffe05afeb4,149069937,0,0x0,8
tick,0x7fffe05afeb4,149085944,0,0x0,8
tick,0x7fffe05afeb4,149101979,0,0x0,8
tick,0x7fffe05afeb4,149116961,0,0x0,8
tick,0x7fffe05afeb4,149132870,0,0x0,8
tick,0x7fffe05afeb4,149148956,0,0x0,8
tick,0x7fffe05afeb4,149165547,0,0x0,8
tick,0x7fffe05afeb4,149180959,0,0x0,8
tick,0x7fffe05afeb4,149197219,0,0x0,8
tick,0x7fffe05afeb4,149212814,0,0x0,8
tick,0x7fffe05afeb4,149228944,0,0x0,8
tick,0x7fffe05afeb4,149243779,0,0x0,8
tick,0x7fffe05afeb4,149259998,0,0x0,8
tick,0x7fffe05afeb4,149275899,0,0x0,8
tick,0x7fffe05afeb4,149292115,0,0x0,8
tick,0x7fffe05afeb4,149306845,0,0x0,8
tick,0x7fffe05afeb4,149323091,0,0x0,8
tick,0x7fffe05afeb4,149338917,0,0x0,8
tick,0x7fffe05afeb4,149354922,0,0x0,8
tick,0x7fffe05afeb4,149370850,0,0x0,8
tick,0x7fffe05afeb4,149386906,0,0x0,8
tick,0x7fffe05afeb4,149402877,0,0x0,8
tick,0x7fffe05afeb4,149417881,0,0x0,8
tick,0x7fffe05afeb4,149432790,0,0x0,8
tick,0x7fffe05afeb4,149447787,0,0x0,8
tick,0x7fffe05afeb4,149463862,0,0x0,8
tick,0x7fffe05afeb4,149478931,0,0x0,8
tick,0x7fffe05afeb4,149494857,0,0x0,8
tick,0x7fffe05afeb4,149510799,0,0x0,8
tick,0x7fffe05afeb4,149526762,0,0x0,8
tick,0x7fffe05afeb4,149542785,0,0x0,8
tick,0x7fffe05afeb4,149558774,0,0x0,8
tick,0x7fffe05afeb4,149574792,0,0x0,8
tick,0x7fffe05afeb4,149590871,0,0x0,8
tick,0x7fffe05afeb4,149606878,0,0x0,8
tick,0x7fffe05afeb4,149622781,0,0x0,8
tick,0x7fffe05afeb4,149638828,0,0x0,8
tick,0x7fffe05afeb4,149654770,0,0x0,8
tick,0x7fffe05afeb4,149670778,0,0x0,8
tick,0x7fffe05afeb4,149686919,0,0x0,8
tick,0x7fffe05afeb4,149702790,0,0x0,8
tick,0x7fffe05afeb4,149717772,0,0x0,8
tick,0x7fffe05afeb4,149733870,0,0x0,8
tick,0x7fffe05afeb4,149749832,0,0x0,8
tick,0x7fffe05afeb4,149765758,0,0x0,8
tick,0x7fffe05afeb4,149781845,0,0x0,8
tick,0x7fffe05afeb4,149796965,0,0x0,8
tick,0x7fffe05afeb4,149812844,0,0x0,8
tick,0x7fffe05afeb4,149828775,0,0x0,8
tick,0x7fffe05afeb4,149844892,0,0x0,8
tick,0x7fffe05afeb4,149860804,0,0x0,8
tick,0x7fffe05afeb4,149876759,0,0x0,8
tick,0x7fffe05afeb4,149892898,0,0x0,8
tick,0x7fffe05afeb4,149907851,0,0x0,8
tick,0x7fffe05afeb4,149923880,0,0x0,8
tick,0x7fffe05afeb4,149939883,0,0x0,8
tick,0x7fffe05afeb4,149955952,0,0x0,8
tick,0x7fffe05afeb4,149971779,0,0x0,8
tick,0x7fffe05afeb4,149987789,0,0x0,8
tick,0x7fffe05afeb4,150003872,0,0x0,8
tick,0x7fffe05afeb4,150019987,0,0x0,8
tick,0x7fffe05afeb4,150035878,0,0x0,8
tick,0x7fffe05afeb4,150051857,0,0x0,8
tick,0x7fffe05afeb4,150067820,0,0x0,8
tick,0x7fffe05afeb4,150083947,0,0x0,8
tick,0x7fffe05afeb4,150099781,0,0x0,8
tick,0x7fffe05afeb4,150115770,0,0x0,8
tick,0x7fffe05afeb4,150131864,0,0x0,8
tick,0x7fffe05afeb4,150147977,0,0x0,8
tick,0x7fffe05afeb4,150163761,0,0x0,8
tick,0x7fffe05afeb4,150178775,0,0x0,8
tick,0x7fffe05afeb4,150194803,0,0x0,8
tick,0x7fffe05afeb4,150210846,0,0x0,8
tick,0x7fffe05afeb4,150226779,0,0x0,8
tick,0x7fffe05afeb4,150241957,0,0x0,8
tick,0x7fffe05afeb4,150257871,0,0x0,8
tick,0x7fffe05afeb4,150273850,0,0x0,8
tick,0x7fffe05afeb4,150290872,0,0x0,8
tick,0x7fffe05afeb4,150305850,0,0x0,8
tick,0x7fffe05afeb4,150321499,0,0x0,8
tick,0x7fffe05afeb4,150336894,0,0x0,8
tick,0x7fffe05afeb4,150352909,0,0x0,8
tick,0x7fffe05afeb4,150368863,0,0x0,8
tick,0x7fffe05afeb4,150384946,0,0x0,8
tick,0x7fffe05afeb4,150400770,0,0x0,8
tick,0x7fffe05afeb4,150416271,0,0x0,8
tick,0x7fffe05afeb4,150431857,0,0x0,8
tick,0x7fffe05afeb4,150447983,0,0x0,8
tick,0x7fffe05afeb4,150463852,0,0x0,8
tick,0x7fffe05afeb4,150479959,0,0x0,8
tick,0x7fffe05afeb4,150494773,0,0x0,8
tick,0x7fffe05afeb4,150511023,0,0x0,8
tick,0x7fffe05afeb4,150526876,0,0x0,8
tick,0x7fffe05afeb4,150542780,0,0x0,8
tick,0x7fffe05afeb4,150558776,0,0x0,8
tick,0x7fffe05afeb4,150574842,0,0x0,8
tick,0x7fffe05afeb4,150590790,0,0x0,8
tick,0x7fffe05afeb4,150606920,0,0x0,8
tick,0x7fffe05afeb4,150622768,0,0x0,8
tick,0x7fffe05afeb4,150638780,0,0x0,8
tick,0x7fffe05afeb4,150654870,0,0x0,8
tick,0x7fffe05afeb4,150670767,0,0x0,8
tick,0x7fffe05afeb4,150686814,0,0x0,8
tick,0x7fffe05afeb4,150705693,0,0x0,8
tick,0x7fffe05afeb4,150718788,0,0x0,8
tick,0x7fffe05afeb4,150734815,0,0x0,8
tick,0x7fffe05afeb4,150749808,0,0x0,8
tick,0x7fffe05afeb4,150766477,0,0x0,8
tick,0x7fffe05afeb4,150781779,0,0x0,8
tick,0x7fffe05afeb4,150800322,0,0x0,8
tick,0x7fffe05afeb4,150813807,0,0x0,8
tick,0x7fffe05afeb4,150829919,0,0x0,8
tick,0x7fffe05afeb4,150845856,0,0x0,8
tick,0x7fffe05afeb4,150861805,0,0x0,8
tick,0x7fffe05afeb4,150877863,0,0x0,8
tick,0x7fffe05afeb4,150893764,0,0x0,8
tick,0x7fffe05afeb4,150909779,0,0x0,8
tick,0x7fffe05afeb4,150925867,0,0x0,8
tick,0x7fffe05afeb4,150941865,0,0x0,8
tick,0x7fffe05afeb4,150957860,0,0x0,8
tick,0x7fffe05afeb4,150973851,0,0x0,8
tick,0x7fffe05afeb4,150989816,0,0x0,8
tick,0x7fffe05afeb4,151005779,0,0x0,8
tick,0x7fffe05afeb4,151020772,0,0x0,8
tick,0x7fffe05afeb4,151035860,0,0x0,8
tick,0x7fffe05afeb4,151051854,0,0x0,8
tick,0x7fffe05afeb4,151067802,0,0x0,8
tick,0x7fffe05afeb4,151082903,0,0x0,8
tick,0x7fffe05afeb4,151098920,0,0x0,8
tick,0x7fffe05afeb4,151114772,0,0x0,8
tick,0x7fffe05afeb4,151130773,0,0x0,8
tick,0x7fffe05afeb4,151145973,0,0x0,8
tick,0x7fffe05afeb4,151161858,0,0x0,8
tick,0x7fffe05afeb4,151177796,0,0x0,8
tick,0x7fffe05afeb4,151193857,0,0x0,8
tick,0x7fffe05afeb4,151209875,0,0x0,8
tick,0x7fffe05afeb4,151225764,0,0x0,8
tick,0x7fffe05afeb4,151241795,0,0x0,8
tick,0x7fffe05afeb4,151257853,0,0x0,8
tick,0x7fffe05afeb4,151273946,0,0x0,8
tick,0x7fffe05afeb4,151290200,0,0x0,8
tick,0x7fffe05afeb4,151306068,0,0x0,8
tick,0x7fffe05afeb4,151320770,0,0x0,8
tick,0x7fffe05afeb4,151335773,0,0x0,8
tick,0x7fffe05afeb4,151351877,0,0x0,8
tick,0x7fffe05afeb4,151367865,0,0x0,8
tick,0x7fffe05afeb4,151384106,0,0x0,8
tick,0x7fffe05afeb4,151399875,0,0x0,8
tick,0x7fffe05afeb4,151415957,0,0x0,8
tick,0x7fffe05afeb4,151431768,0,0x0,8
tick,0x7fffe05afeb4,151447760,0,0x0,8
tick,0x7fffe05afeb4,151463860,0,0x0,8
tick,0x7fffe05afeb4,151479858,0,0x0,8
tick,0x7fffe05afeb4,151495861,0,0x0,8
tick,0x7fffe05afeb4,151511772,0,0x0,8
tick,0x7fffe05afeb4,151527772,0,0x0,8
tick,0x7fffe05afeb4,151543816,0,0x0,8
tick,0x7fffe05afeb4,151559793,0,0x0,8
tick,0x7fffe05afeb4,151574881,0,0x0,8
tick,0x7fffe05afeb4,151590876,0,0x0,8
tick,0x7fffe05afeb4,151606805,0,0x0,8
tick,0x7fffe05afeb4,151622773,0,0x0,8
tick,0x7fffe05afeb4,151638896,0,0x0,8
tick,0x7fffe05afeb4,151654846,0,0x0,8
tick,0x7fffe05afeb4,151670839,0,0x0,8
tick,0x7fffe05afeb4,151686761,0,0x0,8
tick,0x7fffe05afeb4,151701975,0,0x0,8
tick,0x7fffe05afeb4,151717844,0,0x0,8
tick,0x7fffe05afeb4,151733999,0,0x0,8
tick,0x7fffe05afeb4,151749864,0,0x0,8
tick,0x7fffe05afeb4,151764831,0,0x0,8
tick,0x7fffe05afeb4,151779880,0,0x0,8
tick,0x7fffe05afeb4,151795873,0,0x0,8
tick,0x7fffe05afeb4,151811893,0,0x0,8
tick,0x7fffe05afeb4,151827909,0,0x0,8
tick,0x7fffe05afeb4,151843857,0,0x0,8
tick,0x7fffe05afeb4,151858853,0,0x0,8
tick,0x7fffe05afeb4,151874840,0,0x0,8
tick,0x7fffe05afeb4,151890842,0,0x0,8
tick,0x7fffe05afeb4,151906767,0,0x0,8
tick,0x7fffe05afeb4,151922927,0,0x0,8
tick,0x7fffe05afeb4,151938932,0,0x0,8
tick,0x7fffe05afeb4,151954990,0,0x0,8
tick,0x7fffe05afeb4,151970774,0,0x0,8
tick,0x7fffe05afeb4,151986881,0,0x0,8
tick,0x7fffe05afeb4,152002816,0,0x0,8
tick,0x7fffe05afeb4,152018838,0,0x0,8
tick,0x7fffe05afeb4,152034881,0,0x0,8
tick,0x7fffe05afeb4,152050852,0,0x0,8
tick,0x7fffe05afeb4,152067088,0,0x0,8
tick,0x7fffe05afeb4,152082971,0,0x0,8
tick,0x7fffe05afeb4,152097897,0,0x0,8
tick,0x7fffe05afeb4,152113923,0,0x0,8
tick,0x7fffe05afeb4,152129881,0,0x0,8
tick,0x7fffe05afeb4,152146024,0,0x0,8
tick,0x7fffe05afeb4,152161883,0,0x0,8
tick,0x7fffe05afeb4,152177858,0,0x0,8
tick,0x7fffe05afeb4,152193848,0,0x0,8
tick,0x7fffe05afeb4,152208861,0,0x0,8
tick,0x7fffe05afeb4,152224753,0,0x0,8
tick,0x7fffe05afeb4,152240869,0,0x0,8
tick,0x7fffe05afeb4,152256786,0,0x0,8
tick,0x7fffe05afeb4,152272913,0,0x0,8
tick,0x7fffe05afeb4,152288885,0,0x0,8
tick,0x7fffe05afeb4,152304847,0,0x0,8
tick,0x7fffe05afeb4,152320766,0,0x0,8
tick,0x7fffe05afeb4,152336160,0,0x0,8
tick,0x7fffe05afeb4,152351839,0,0x0,8
tick,0x7fffe05afeb4,152367919,0,0x0,8
tick,0x7fffe05afeb4,152383808,0,0x0,8
tick,0x7fffe05afeb4,152398920,0,0x0,8
tick,0x7fffe05afeb4,152414958,0,0x0,8
tick,0x7fffe05afeb4,152430839,0,0x0,8
tick,0x7fffe05afeb4,152445810,0,0x0,8
tick,0x7fffe05afeb4,152461909,0,0x0,8
tick,0x7fffe05afeb4,152478178,0,0x0,8
tick,0x7fffe05afeb4,152493920,0,0x0,8
tick,0x7fffe05afeb4,152509790,0,0x0,8
tick,0x7fffe05afeb4,152524998,0,0x0,8
tick,0x7fffe05afeb4,152540954,0,0x0,8
tick,0x7fffe05afeb4,152556790,0,0x0,8
tick,0x7fffe05afeb4,152572868,0,0x0,8
tick,0x7fffe05afeb4,152589107,0,0x0,8
tick,0x7fffe05afeb4,152604080,0,0x0,8
tick,0x7fffe05afeb4,152619890,0,0x0,8
tick,0x7fffe05afeb4,152635769,0,0x0,8
tick,0x7fffe05afeb4,152651945,0,0x0,8
tick,0x7fffe05afeb4,152668023,0,0x0,8
tick,0x7fffe05afeb4,152683912,0,0x0,8
tick,0x7fffe05afeb4,152699821,0,0x0,8
tick,0x7fffe05afeb4,152715920,0,0x0,8
tick,0x7fffe05afeb4,152732080,0,0x0,8
tick,0x7fffe05afeb4,152747815,0,0x0,8
tick,0x7fffe05afeb4,152763781,0,0x0,8
tick,0x7fffe05afeb4,152779962,0,0x0,8
tick,0x7fffe05afeb4,152795813,0,0x0,8
tick,0x7fffe05afeb4,152811900,0,0x0,8
tick,0x7fffe05afeb4,152826799,0,0x0,8
tick,0x7fffe05afeb4,152843013,0,0x0,8
tick,0x7fffe05afeb4,152857815,0,0x0,8
tick,0x7fffe05afeb4,152873867,0,0x0,8
tick,0x7fffe05afeb4,152889808,0,0x0,8
tick,0x7fffe05afeb4,152905877,0,0x0,8
tick,0x7fffe05afeb4,152921781,0,0x0,8
tick,0x7fffe05afeb4,152937920,0,0x0,8
tick,0x7fffe05afeb4,152953855,0,0x0,8
tick,0x7fffe05afeb4,152969956,0,0x0,8
tick,0x7fffe05afeb4,152985767,0,0x0,8
tick,0x7fffe05afeb4,153001824,0,0x0,8
tick,0x7fffe05afeb4,153017767,0,0x0,8
tick,0x7fffe05afeb4,153033965,0,0x0,8
tick,0x7fffe05afeb4,153049842,0,0x0,8
tick,0x7fffe05afeb4,153065845,0,0x0,8
tick,0x7fffe05afeb4,153081767,0,0x0,8
tick,0x7fffe05afeb4,153097918,0,0x0,8
tick,0x7fffe05afeb4,153112905,0,0x0,8
tick,0x7fffe05afeb4,153129163,0,0x0,8
tick,0x7fffe05afeb4,153147077,0,0x0,8
tick,0x7fffe05afeb4,153159973,0,0x0,8
tick,0x7fffe05afeb4,153176577,0,0x0,8
tick,0x7fffe05afeb4,153190921,0,0x0,8
tick,0x7fffe05afeb4,153209388,0,0x0,8
tick,0x7fffe05afeb4,153222857,0,0x0,8
tick,0x7fffe05afeb4,153239927,0,0x0,8
tick,0x7fffe05afeb4,153255111,0,0x0,8
tick,0x7fffe05afeb4,153270779,0,0x0,8
tick,0x7fffe05afeb4,153287053,0,0x0,8
tick,0x7fffe05afeb4,153302776,0,0x0,8
tick,0x7fffe05afeb4,153317886,0,0x0,8
tick,0x7fffe05afeb4,153333787,0,0x0,8
tick,0x7fffe05afeb4,153350029,0,0x0,8
tick,0x7fffe05afeb4,153365965,0,0x0,8
tick,0x7fffe05afeb4,153381933,0,0x0,8
tick,0x7fffe05afeb4,153397770,0,0x0,8
tick,0x7fffe05afeb4,153413942,0,0x0,8
tick,0x7fffe05afeb4,153429904,0,0x0,8
tick,0x7fffe05afeb4,153446130,0,0x0,8
tick,0x7fffe05afeb4,153461769,0,0x0,8
tick,0x7fffe05afeb4,153477447,0,0x0,8
tick,0x7fffe05afeb4,153492968,0,0x0,8
tick,0x7fffe05afeb4,153509832,0,0x0,8
tick,0x7fffe05afeb4,153524899,0,0x0,8
tick,0x7fffe05afeb4,153541214,0,0x0,8
tick,0x7fffe05afeb4,153555866,0,0x0,8
tick,0x7fffe05afeb4,153571928,0,0x0,8
tick,0x7fffe05afeb4,153587946,0,0x0,8
tick,0x7fffe05afeb4,153603900,0,0x0,8
tick,0x7fffe05afeb4,153619937,0,0x0,8
tick,0x7fffe05afeb4,153635924,0,0x0,8
tick,0x7fffe05afeb4,153652003,0,0x0,8
tick,0x7fffe05afeb4,153667974,0,0x0,8
tick,0x7fffe05afeb4,153683880,0,0x0,8
tick,0x7fffe05afeb4,153699973,0,0x0,8
tick,0x7fffe05afeb4,153715851,0,0x0,8
tick,0x7fffe05afeb4,153731998,0,0x0,8
tick,0x7fffe05afeb4,153747968,0,0x0,8
tick,0x7fffe05afeb4,153762857,0,0x0,8
tick,0x7fffe05afeb4,153778786,0,0x0,8
tick,0x7fffe05afeb4,153793898,0,0x0,8
tick,0x7fffe05afeb4,153809806,0,0x0,8
tick,0x7fffe05afeb4,153825799,0,0x0,8
tick,0x7fffe05afeb4,153841893,0,0x0,8
tick,0x7fffe05afeb4,153857896,0,0x0,8
tick,0x7fffe05afeb4,153873826,0,0x0,8
tick,0x7fffe05afeb4,153889907,0,0x0,8
tick,0x7fffe05afeb4,153905774,0,0x0,8
tick,0x7fffe05afeb4,153921923,0,0x0,8
tick,0x7fffe05afeb4,153937817,0,0x0,8
tick,0x7fffe05afeb4,153953793,0,0x0,8
tick,0x7fffe05afeb4,153969938,0,0x0,8
tick,0x7fffe05afeb4,153986132,0,0x0,8
tick,0x7fffe05afeb4,154001751,0,0x0,8
tick,0x7fffe05afeb4,154017879,0,0x0,8
tick,0x7fffe05afeb4,154033928,0,0x0,8
tick,0x7fffe05afeb4,154049913,0,0x0,8
tick,0x7fffe05afeb4,154065851,0,0x0,8
tick,0x7fffe05afeb4,154081941,0,0x0,8
tick,0x7fffe05afeb4,154097858,0,0x0,8
tick,0x7fffe05afeb4,154113941,0,0x0,8
tick,0x7fffe05afeb4,154129924,0,0x0,8
tick,0x7fffe05afeb4,154145958,0,0x0,8
tick,0x7fffe05afeb4,154161773,0,0x0,8
tick,0x7fffe05afeb4,154178282,0,0x0,8
tick,0x7fffe05afeb4,154194020,0,0x0,8
tick,0x7fffe05afeb4,154209940,0,0x0,8
tick,0x7fffe05afeb4,154225754,0,0x0,8
tick,0x7fffe05afeb4,154241915,0,0x0,8
tick,0x7fffe05afeb4,154257910,0,0x0,8
tick,0x7fffe05afeb4,154273840,0,0x0,8
tick,0x7fffe05afeb4,154289818,0,0x0,8
tick,0x7fffe05afeb4,154306020,0,0x0,8
tick,0x7fffe05afeb4,154321762,0,0x0,8
tick,0x7fffe05afeb4,154337928,0,0x0,8
tick,0x7fffe05afeb4,154353859,0,0x0,8
tick,0x7fffe05afeb4,154368981,0,0x0,8
tick,0x7fffe05afeb4,154384791,0,0x0,8
tick,0x7fffe05afeb4,154399951,0,0x0,8
tick,0x7fffe05afeb4,154416020,0,0x0,8
tick,0x7fffe05afeb4,154430957,0,0x0,8
tick,0x7fffe05afeb4,154447027,0,0x0,8
tick,0x7fffe05afeb4,154461827,0,0x0,8
tick,0x7fffe05afeb4,154478160,0,0x0,8
tick,0x7fffe05afeb4,154493968,0,0x0,8
tick,0x7fffe05afeb4,154509793,0,0x0,8
tick,0x7fffe05afeb4,154525981,0,0x0,8
tick,0x7fffe05afeb4,154541871,0,0x0,8
tick,0x7fffe05afeb4,154558010,0,0x0,8
tick,0x7fffe05afeb4,154573767,0,0x0,8
tick,0x7fffe05afeb4,154590038,0,0x0,8
tick,0x7fffe05afeb4,154605854,0,0x0,8
tick,0x7fffe05afeb4,154621903,0,0x0,8
tick,0x7fffe05afeb4,154636885,0,0x0,8
tick,0x7fffe05afeb4,154652868,0,0x0,8
tick,0x7fffe05afeb4,154667911,0,0x0,8
tick,0x7fffe05afeb4,154683903,0,0x0,8
tick,0x7fffe05afeb4,154699980,0,0x0,8
tick,0x7fffe05afeb4,154715974,0,0x0,8
tick,0x7fffe05afeb4,154731988,0,0x0,8
tick,0x7fffe05afeb4,154747853,0,0x0,8
tick,0x7fffe05afeb4,154763899,0,0x0,8
tick,0x7fffe05afeb4,154780008,0,0x0,8
tick,0x7fffe05afeb4,154795752,0,0x0,8
tick,0x7fffe05afeb4,154811934,0,0x0,8
tick,0x7fffe05afeb4,154827777,0,0x0,8
tick,0x7fffe05afeb4,154844047,0,0x0,8
tick,0x7fffe05afeb4,154859908,0,0x0,8
tick,0x7fffe05afeb4,154876016,0,0x0,8
tick,0x7fffe05afeb4,154891772,0,0x0,8
tick,0x7fffe05afeb4,154907844,0,0x0,8
tick,0x7fffe05afeb4,154923776,0,0x0,8
tick,0x7fffe05afeb4,154938825,0,0x0,8
tick,0x7fffe05afeb4,154954920,0,0x0,8
tick,0x7fffe05afeb4,154970861,0,0x0,8
tick,0x7fffe05afeb4,154986850,0,0x0,8
tick,0x7fffe05afeb4,155002833,0,0x0,8
tick,0x7fffe05afeb4,155018791,0,0x0,8
tick,0x7fffe05afeb4,155034775,0,0x0,8
tick,0x7fffe05afeb4,155050871,0,0x0,8
tick,0x7fffe05afeb4,155066856,0,0x0,8
tick,0x7fffe05afeb4,155082855,0,0x0,8
tick,0x7fffe05afeb4,155098813,0,0x0,8
tick,0x7fffe05afeb4,155114811,0,0x0,8
tick,0x7fffe05afeb4,155129885,0,0x0,8
tick,0x7fffe05afeb4,155145860,0,0x0,8
tick,0x7fffe05afeb4,155161789,0,0x0,8
tick,0x7fffe05afeb4,155177793,0,0x0,8
tick,0x7fffe05afeb4,155193863,0,0x0,8
tick,0x7fffe05afeb4,155209808,0,0x0,8
tick,0x7fffe05afeb4,155224851,0,0x0,8
tick,0x7fffe05afeb4,155240769,0,0x0,8
tick,0x7fffe05afeb4,155255778,0,0x0,8
tick,0x7fffe05afeb4,155271782,0,0x0,8
tick,0x7fffe05afeb4,155287815,0,0x0,8
tick,0x7fffe05afeb4,155303867,0,0x0,8
tick,0x7fffe05afeb4,155319846,0,0x0,8
tick,0x7fffe05afeb4,155335870,0,0x0,8
tick,0x7fffe05afeb4,155350791,0,0x0,8
tick,0x7fffe05afeb4,155366862,0,0x0,8
tick,0x7fffe05afeb4,155382870,0,0x0,8
tick,0x7fffe05afeb4,155398827,0,0x0,8
tick,0x7fffe05afeb4,155414777,0,0x0,8
tick,0x7fffe05afeb4,155430796,0,0x0,8
tick,0x7fffe05afeb4,155445854,0,0x0,8
tick,0x7fffe05afeb4,155461863,0,0x0,8
tick,0x7fffe05afeb4,155478203,0,0x0,8
tick,0x7fffe05afeb4,155493786,0,0x0,8
tick,0x7fffe05afeb4,155509811,0,0x0,8
tick,0x7fffe05afeb4,155525787,0,0x0,8
tick,0x7fffe05afeb4,155541778,0,0x0,8
tick,0x7fffe05afeb4,155557760,0,0x0,8
tick,0x7fffe05afeb4,155573772,0,0x0,8
tick,0x7fffe05afeb4,155589864,0,0x0,8
tick,0x7fffe05afeb4,155605766,0,0x0,8
tick,0x7fffe05afeb4,155621784,0,0x0,8
tick,0x7fffe05afeb4,155637761,0,0x0,8
tick,0x7fffe05afeb4,155653787,0,0x0,8
tick,0x7fffe05afeb4,155669806,0,0x0,8
tick,0x7fffe05afeb4,155685776,0,0x0,8
tick,0x7fffe05afeb4,155701780,0,0x0,8
tick,0x7fffe05afeb4,155717786,0,0x0,8
tick,0x7fffe05afeb4,155733821,0,0x0,8
tick,0x7fffe05afeb4,155749800,0,0x0,8
tick,0x7fffe05afeb4,155765799,0,0x0,8
tick,0x7fffe05afeb4,155781764,0,0x0,8
tick,0x7fffe05afeb4,155797768,0,0x0,8
tick,0x7fffe05afeb4,155813787,0,0x0,8
tick,0x7fffe05afeb4,155829807,0,0x0,8
tick,0x7fffe05afeb4,155845781,0,0x0,8
tick,0x7fffe05afeb4,155861782,0,0x0,8
tick,0x7fffe05afeb4,155877769,0,0x0,8
tick,0x7fffe05afeb4,155893866,0,0x0,8
tick,0x7fffe05afeb4,155909795,0,0x0,8
tick,0x7fffe05afeb4,155925819,0,0x0,8
tick,0x7fffe05afeb4,155941777,0,0x0,8
tick,0x7fffe05afeb4,155957857,0,0x0,8
tick,0x7fffe05afeb4,155973781,0,0x0,8
tick,0x7fffe05afeb4,155989797,0,0x0,8
tick,0x7fffe05afeb4,156005787,0,0x0,8
tick,0x7fffe05afeb4,156021774,0,0x0,8
tick,0x7fffe05afeb4,156037777,0,0x0,8
tick,0x7fffe05afeb4,156053780,0,0x0,8
tick,0x7fffe05afeb4,156069880,0,0x0,8
tick,0x7fffe05afeb4,156085828,0,0x0,8
tick,0x7fffe05afeb4,156101784,0,0x0,8
tick,0x7fffe05afeb4,156117779,0,0x0,8
tick,0x7fffe05afeb4,156134029,0,0x0,8
tick,0x7fffe05afeb4,156149916,0,0x0,8
tick,0x7fffe05afeb4,156165779,0,0x0,8
tick,0x7fffe05afeb4,156181779,0,0x0,8
tick,0x7fffe05afeb4,156196893,0,0x0,8
tick,0x7fffe05afeb4,156212785,0,0x0,8
tick,0x7fffe05afeb4,156228786,0,0x0,8
tick,0x7fffe05afeb4,156243786,0,0x0,8
tick,0x7fffe05afeb4,156259864,0,0x0,8
tick,0x7fffe05afeb4,156275858,0,0x0,8
tick,0x7fffe05afeb4,156291861,0,0x0,8
tick,0x7fffe05afeb4,156307787,0,0x0,8
tick,0x7fffe05afeb4,156323770,0,0x0,8
tick,0x7fffe05afeb4,156339815,0,0x0,8
tick,0x7fffe05afeb4,156355759,0,0x0,8
tick,0x7fffe05afeb4,156371779,0,0x0,8
tick,0x7fffe05afeb4,156387857,0,0x0,8
tick,0x7fffe05afeb4,156403926,0,0x0,8
tick,0x7fffe05afeb4,156419774,0,0x0,8
tick,0x7fffe05afeb4,156435855,0,0x0,8
tick,0x7fffe05afeb4,156451768,0,0x0,8
tick,0x7fffe05afeb4,156467794,0,0x0,8
tick,0x7fffe05afeb4,156483820,0,0x0,8
tick,0x7fffe05afeb4,156499905,0,0x0,8
tick,0x7fffe05afeb4,156515833,0,0x0,8
tick,0x7fffe05afeb4,156531849,0,0x0,8
tick,0x7fffe05afeb4,156547849,0,0x0,8
tick,0x7fffe05afeb4,156563768,0,0x0,8
tick,0x7fffe05afeb4,156579817,0,0x0,8
tick,0x7fffe05afeb4,156595774,0,0x0,8
tick,0x7fffe05afeb4,156611848,0,0x0,8
tick,0x7fffe05afeb4,156627851,0,0x0,8
tick,0x7fffe05afeb4,156643864,0,0x0,8
tick,0x7fffe05afeb4,156659826,0,0x0,8
tick,0x7fffe05afeb4,156675817,0,0x0,8
tick,0x7fffe05afeb4,156691788,0,0x0,8
tick,0x7fffe05afeb4,156707772,0,0x0,8
tick,0x7fffe05afeb4,156723854,0,0x0,8
tick,0x7fffe05afeb4,156739767,0,0x0,8
tick,0x7fffe05afeb4,156755812,0,0x0,8
tick,0x7fffe05afeb4,156771790,0,0x0,8
tick,0x7fffe05afeb4,156787856,0,0x0,8
tick,0x7fffe05afeb4,156803784,0,0x0,8
tick,0x7fffe05afeb4,156819779,0,0x0,8
tick,0x7fffe05afeb4,156835873,0,0x0,8
tick,0x7fffe05afeb4,156850793,0,0x0,8
tick,0x7fffe05afeb4,156866862,0,0x0,8
tick,0x7fffe05afeb4,156882810,0,0x0,8
tick,0x7fffe05afeb4,156898863,0,0x0,8
tick,0x7fffe05afeb4,156914941,0,0x0,8
tick,0x7fffe05afeb4,156930786,0,0x0,8
tick,0x7fffe05afeb4,156946109,0,0x0,8
tick,0x7fffe05afeb4,156961777,0,0x0,8
tick,0x7fffe05afeb4,156978018,0,0x0,8
tick,0x7fffe05afeb4,156993785,0,0x0,8
tick,0x7fffe05afeb4,157009844,0,0x0,8
tick,0x7fffe05afeb4,157025780,0,0x0,8
tick,0x7fffe05afeb4,157041777,0,0x0,8
tick,0x7fffe05afeb4,157057801,0,0x0,8
tick,0x7fffe05afeb4,157073793,0,0x0,8
tick,0x7fffe05afeb4,157089817,0,0x0,8
tick,0x7fffe05afeb4,157105782,0,0x0,8
tick,0x7fffe05afeb4,157121768,0,0x0,8
tick,0x7fffe05afeb4,157137862,0,0x0,8
tick,0x7fffe05afeb4,157152893,0,0x0,8
tick,0x7fffe05afeb4,157168794,0,0x0,8
tick,0x7fffe05afeb4,157183848,0,0x0,8
tick,0x7fffe05afeb4,157199864,0,0x0,8
tick,0x7fffe05afeb4,157215872,0,0x0,8
tick,0x7fffe05afeb4,157231815,0,0x0,8
tick,0x7fffe05afeb4,157247786,0,0x0,8
tick,0x7fffe05afeb4,157263852,0,0x0,8
tick,0x7fffe05afeb4,157279846,0,0x0,8
tick,0x7fffe05afeb4,157295789,0,0x0,8
tick,0x7fffe05afeb4,157311872,0,0x0,8
tick,0x7fffe05afeb4,157327820,0,0x0,8
tick,0x7fffe05afeb4,157343787,0,0x0,8
tick,0x7fffe05afeb4,157359895,0,0x0,8
tick,0x7fffe05afeb4,157375867,0,0x0,8
tick,0x7fffe05afeb4,157391778,0,0x0,8
tick,0x7fffe05afeb4,157407835,0,0x0,8
tick,0x7fffe05afeb4,157423866,0,0x0,8
tick,0x7fffe05afeb4,157438777,0,0x0,8
tick,0x7fffe05afeb4,157453773,0,0x0,8
tick,0x7fffe05afeb4,157469856,0,0x0,8
tick,0x7fffe05afeb4,157485779,0,0x0,8
tick,0x7fffe05afeb4,157501842,0,0x0,8
tick,0x7fffe05afeb4,157517849,0,0x0,8
tick,0x7fffe05afeb4,157533856,0,0x0,8
tick,0x7fffe05afeb4,157549863,0,0x0,8
tick,0x7fffe05afeb4,157565782,0,0x0,8
tick,0x7fffe05afeb4,157581786,0,0x0,8
tick,0x7fffe05afeb4,157597849,0,0x0,8
tick,0x7fffe05afeb4,157613851,0,0x0,8
tick,0x7fffe05afeb4,157629868,0,0x0,8
tick,0x7fffe05afeb4,157645779,0,0x0,8
tick,0x7fffe05afeb4,157661826,0,0x0,8
tick,0x7fffe05afeb4,157677776,0,0x0,8
tick,0x7fffe05afeb4,157693862,0,0x0,8
tick,0x7fffe05afeb4,157709860,0,0x0,8
tick,0x7fffe05afeb4,157725796,0,0x0,8
tick,0x7fffe05afeb4,157741853,0,0x0,8
tick,0x7fffe05afeb4,157757857,0,0x0,8
tick,0x7fffe05afeb4,157773804,0,0x0,8
tick,0x7fffe05afeb4,157790139,0,0x0,8
tick,0x7fffe05afeb4,157805847,0,0x0,8
tick,0x7fffe05afeb4,157821980,0,0x0,8
tick,0x7fffe05afeb4,157837854,0,0x0,8
tick,0x7fffe05afeb4,157853834,0,0x0,8
tick,0x7fffe05afeb4,157869885,0,0x0,8
tick,0x7fffe05afeb4,157885862,0,0x0,8
tick,0x7fffe05afeb4,157901785,0,0x0,8
tick,0x7fffe05afeb4,157916858,0,0x0,8
tick,0x7fffe05afeb4,157932866,0,0x0,8
tick,0x7fffe05afeb4,157948784,0,0x0,8
tick,0x7fffe05afeb4,157963851,0,0x0,8
tick,0x7fffe05afeb4,157979867,0,0x0,8
tick,0x7fffe05afeb4,157995776,0,0x0,8
tick,0x7fffe05afeb4,158011800,0,0x0,8
tick,0x7fffe05afeb4,158026865,0,0x0,8
tick,0x7fffe05afeb4,158042910,0,0x0,8
tick,0x7fffe05afeb4,158058870,0,0x0,8
tick,0x7fffe05afeb4,158074780,0,0x0,8
tick,0x7fffe05afeb4,158090807,0,0x0,8
tick,0x7fffe05afeb4,158106763,0,0x0,8
tick,0x7fffe05afeb4,158121855,0,0x0,8
tick,0x7fffe05afeb4,158137931,0,0x0,8
tick,0x7fffe05afeb4,158153861,0,0x0,8
tick,0x7fffe05afeb4,158169886,0,0x0,8
tick,0x7fffe05afeb4,158185013,0,0x0,8
tick,0x7fffe05afeb4,158199792,0,0x0,8
tick,0x7fffe05afeb4,158215909,0,0x0,8
tick,0x7fffe05afeb4,158231788,0,0x0,8
tick,0x7fffe05afeb4,158248256,0,0x0,8
tick,0x7fffe05afeb4,158263910,0,0x0,8
tick,0x7fffe05afeb4,158280009,0,0x0,8
tick,0x7fffe05afeb4,158295781,0,0x0,8
tick,0x7fffe05afeb4,158311790,0,0x0,8
tick,0x7fffe05afeb4,158328026,0,0x0,8
tick,0x7fffe05afeb4,158343906,0,0x0,8
tick,0x7fffe05afeb4,158359973,0,0x0,8
tick,0x7fffe05afeb4,158376027,0,0x0,8
tick,0x7fffe05afeb4,158390869,0,0x0,8
tick,0x7fffe05afeb4,158406850,0,0x0,8
tick,0x7fffe05afeb4,158422784,0,0x0,8
tick,0x7fffe05afeb4,158438984,0,0x0,8
tick,0x7fffe05afeb4,158455004,0,0x0,8
tick,0x7fffe05afeb4,158471016,0,0x0,8
tick,0x7fffe05afeb4,158486861,0,0x0,8
tick,0x7fffe05afeb4,158503113,0,0x0,8
tick,0x7fffe05afeb4,158517812,0,0x0,8
tick,0x7fffe05afeb4,158533982,0,0x0,8
tick,0x7fffe05afeb4,158549888,0,0x0,8
tick,0x7fffe05afeb4,158565925,0,0x0,8
tick,0x7fffe05afeb4,158582009,0,0x0,8
tick,0x7fffe05afeb4,158597778,0,0x0,8
tick,0x7fffe05afeb4,158613836,0,0x0,8
tick,0x7fffe05afeb4,158629994,0,0x0,8
tick,0x7fffe05afeb4,158645988,0,0x0,8
tick,0x7fffe05afeb4,158661849,0,0x0,8
tick,0x7fffe05afeb4,158677789,0,0x0,8
tick,0x7fffe05afeb4,158693984,0,0x0,8
tick,0x7fffe05afeb4,158710012,0,0x0,8
tick,0x7fffe05afeb4,158725860,0,0x0,8
tick,0x7fffe05afeb4,158741799,0,0x0,8
tick,0x7fffe05afeb4,158757915,0,0x0,8
tick,0x7fffe05afeb4,158773843,0,0x0,8
tick,0x7fffe05afeb4,158788827,0,0x0,8
tick,0x7fffe05afeb4,158805010,0,0x0,8
tick,0x7fffe05afeb4,158821707,0,0x0,8
tick,0x7fffe05afeb4,158836787,0,0x0,8
tick,0x7fffe05afeb4,158851959,0,0x0,8
tick,0x7fffe05afeb4,158867010,0,0x0,8
tick,0x7fffe05afeb4,158882974,0,0x0,8
tick,0x7fffe05afeb4,158897780,0,0x0,8
tick,0x7fffe05afeb4,158912950,0,0x0,8
tick,0x7fffe05afeb4,158928812,0,0x0,8
tick,0x7fffe05afeb4,158943892,0,0x0,8
tick,0x7fffe05afeb4,158959934,0,0x0,8
tick,0x7fffe05afeb4,158975819,0,0x0,8
tick,0x7fffe05afeb4,158991790,0,0x0,8
tick,0x7fffe05afeb4,159006918,0,0x0,8
tick,0x7fffe05afeb4,159022809,0,0x0,8
tick,0x7fffe05afeb4,159038922,0,0x0,8
tick,0x7fffe05afeb4,159054862,0,0x0,8
tick,0x7fffe05afeb4,159071493,0,0x0,8
tick,0x7fffe05afeb4,159086890,0,0x0,8
tick,0x7fffe05afeb4,159103560,0,0x0,8
tick,0x7fffe05afeb4,159118858,0,0x0,8
tick,0x7fffe05afeb4,159135849,0,0x0,8
tick,0x7fffe05afeb4,159150917,0,0x0,8
tick,0x7fffe05afeb4,159166980,0,0x0,8
tick,0x7fffe05afeb4,159182909,0,0x0,8
tick,0x7fffe05afeb4,159198903,0,0x0,8
tick,0x7fffe05afeb4,159214873,0,0x0,8
tick,0x7fffe05afeb4,159231052,0,0x0,8
tick,0x7fffe05afeb4,159246823,0,0x0,8
tick,0x7fffe05afeb4,159262766,0,0x0,8
tick,0x7fffe05afeb4,159277862,0,0x0,8
tick,0x7fffe05afeb4,159293877,0,0x0,8
tick,0x7fffe05afeb4,159309848,0,0x0,8
tick,0x7fffe05afeb4,159325925,0,0x0,8
tick,0x7fffe05afeb4,159342008,0,0x0,8
tick,0x7fffe05afeb4,159357838,0,0x0,8
tick,0x7fffe05afeb4,159373845,0,0x0,8
tick,0x7fffe05afeb4,159389815,0,0x0,8
tick,0x7fffe05afeb4,159405900,0,0x0,8
tick,0x7fffe05afeb4,159421771,0,0x0,8
tick,0x7fffe05afeb4,159437772,0,0x0,8
tick,0x7fffe05afeb4,159453818,0,0x0,8
tick,0x7fffe05afeb4,159469837,0,0x0,8
tick,0x7fffe05afeb4,159485766,0,0x0,8
tick,0x7fffe05afeb4,159501861,0,0x0,8
tick,0x7fffe05afeb4,159517805,0,0x0,8
tick,0x7fffe05afeb4,159533889,0,0x0,8
tick,0x7fffe05afeb4,159549868,0,0x0,8
tick,0x7fffe05afeb4,159565831,0,0x0,8
tick,0x7fffe05afeb4,159581771,0,0x0,8
tick,0x7fffe05afeb4,159597780,0,0x0,8
tick,0x7fffe05afeb4,159613857,0,0x0,8
tick,0x7fffe05afeb4,159629860,0,0x0,8
tick,0x7fffe05afeb4,159645778,0,0x0,8
tick,0x7fffe05afeb4,159661908,0,0x0,8
tick,0x7fffe05afeb4,159677786,0,0x0,8
tick,0x7fffe05afeb4,159692768,0,0x0,8
tick,0x7fffe05afeb4,159707769,0,0x0,8
tick,0x7fffe05afeb4,159723824,0,0x0,8
tick,0x7fffe05afeb4,159739813,0,0x0,8
tick,0x7fffe05afeb4,159755854,0,0x0,8
tick,0x7fffe05afeb4,159770785,0,0x0,8
tick,0x7fffe05afeb4,159786855,0,0x0,8
tick,0x7fffe05afeb4,159802826,0,0x0,8
tick,0x7fffe05afeb4,159818831,0,0x0,8
tick,0x7fffe05afeb4,159834788,0,0x0,8
tick,0x7fffe05afeb4,159850827,0,0x0,8
tick,0x7fffe05afeb4,159866886,0,0x0,8
tick,0x7fffe05afeb4,159881858,0,0x0,8
tick,0x7fffe05afeb4,159897781,0,0x0,8
tick,0x7fffe05afeb4,159913787,0,0x0,8
tick,0x7fffe05afeb4,159930069,0,0x0,8
tick,0x7fffe05afeb4,159946143,0,0x0,8
tick,0x7fffe05afeb4,159961842,0,0x0,8
tick,0x7fffe05afeb4,159978492,0,0x0,8
tick,0x7fffe05afeb4,159993855,0,0x0,8
tick,0x7fffe05afeb4,160009881,0,0x0,8
tick,0x7fffe05afeb4,160024790,0,0x0,8
tick,0x7fffe05afeb4,160041180,0,0x0,8
tick,0x7fffe05afeb4,160056849,0,0x0,8
tick,0x7fffe05afeb4,160072769,0,0x0,8
tick,0x7fffe05afeb4,160087875,0,0x0,8
tick,0x7fffe05afeb4,160103783,0,0x0,8
tick,0x7fffe05afeb4,160119822,0,0x0,8
tick,0x7fffe05afeb4,160135780,0,0x0,8
tick,0x7fffe05afeb4,160150949,0,0x0,8
tick,0x7fffe05afeb4,160165817,0,0x0,8
tick,0x7fffe05afeb4,160182027,0,0x0,8
tick,0x7fffe05afeb4,160197783,0,0x0,8
tick,0x7fffe05afeb4,160213766,0,0x0,8
tick,0x7fffe05afeb4,160229869,0,0x0,8
tick,0x7fffe05afeb4,160244906,0,0x0,8
tick,0x7fffe05afeb4,160260763,0,0x0,8
tick,0x7fffe05afeb4,160276779,0,0x0,8
tick,0x7fffe05afeb4,160292853,0,0x0,8
tick,0x7fffe05afeb4,160308794,0,0x0,8
tick,0x7fffe05afeb4,160324830,0,0x0,8
tick,0x7fffe05afeb4,160340775,0,0x0,8
tick,0x7fffe05afeb4,160356804,0,0x0,8
tick,0x7fffe05afeb4,160372799,0,0x0,8
tick,0x7fffe05afeb4,160387862,0,0x0,8
tick,0x7fffe05afeb4,160403973,0,0x0,8
tick,0x7fffe05afeb4,160418862,0,0x0,8
tick,0x7fffe05afeb4,160433905,0,0x0,8
tick,0x7fffe05afeb4,160449847,0,0x0,8
tick,0x7fffe05afeb4,160465913,0,0x0,8
tick,0x7fffe05afeb4,160481861,0,0x0,8
tick,0x7fffe05afeb4,160497897,0,0x0,8
tick,0x7fffe05afeb4,160513860,0,0x0,8
tick,0x7fffe05afeb4,160529807,0,0x0,8
tick,0x7fffe05afeb4,160545790,0,0x0,8
tick,0x7fffe05afeb4,160561782,0,0x0,8
tick,0x7fffe05afeb4,160577778,0,0x0,8
tick,0x7fffe05afeb4,160593823,0,0x0,8
tick,0x7fffe05afeb4,160609806,0,0x0,8
tick,0x7fffe05afeb4,160625781,0,0x0,8
tick,0x7fffe05afeb4,160641788,0,0x0,8
tick,0x7fffe05afeb4,160657794,0,0x0,8
tick,0x7fffe05afeb4,160673774,0,0x0,8
tick,0x7fffe05afeb4,160689846,0,0x0,8
tick,0x7fffe05afeb4,160705896,0,0x0,8
tick,0x7fffe05afeb4,160721782,0,0x0,8
tick,0x7fffe05afeb4,160737774,0,0x0,8
tick,0x7fffe05afeb4,160753775,0,0x0,8
tick,0x7fffe05afeb4,160768788,0,0x0,8
tick,0x7fffe05afeb4,160784768,0,0x0,8
tick,0x7fffe05afeb4,160800766,0,0x0,8
tick,0x7fffe05afeb4,160816808,0,0x0,8
tick,0x7fffe05afeb4,160832796,0,0x0,8
tick,0x7fffe05afeb4,160848795,0,0x0,8
tick,0x7fffe05afeb4,160864771,0,0x0,8
tick,0x7fffe05afeb4,160880775,0,0x0,8
tick,0x7fffe05afeb4,160895776,0,0x0,8
tick,0x7fffe05afeb4,160911765,0,0x0,8
tick,0x7fffe05afeb4,160927780,0,0x0,8
tick,0x7fffe05afeb4,160943768,0,0x0,8
tick,0x7fffe05afeb4,160959843,0,0x0,8
tick,0x7fffe05afeb4,160974759,0,0x0,8
tick,0x7fffe05afeb4,160990775,0,0x0,8
tick,0x7fffe05afeb4,161005784,0,0x0,8
tick,0x7fffe05afeb4,161021789,0,0x0,8
tick,0x7fffe05afeb4,161037809,0,0x0,8
tick,0x7fffe05afeb4,161053806,0,0x0,8
tick,0x7fffe05afeb4,161069895,0,0x0,8
tick,0x7fffe05afeb4,161085820,0,0x0,8
tick,0x7fffe05afeb4,161100838,0,0x0,8
tick,0x7fffe05afeb4,161116802,0,0x0,8
tick,0x7fffe05afeb4,161132776,0,0x0,8
tick,0x7fffe05afeb4,161148897,0,0x0,8
tick,0x7fffe05afeb4,161164858,0,0x0,8
tick,0x7fffe05afeb4,161179875,0,0x0,8
tick,0x7fffe05afeb4,161194796,0,0x0,8
tick,0x7fffe05afeb4,161210765,0,0x0,8
tick,0x7fffe05afeb4,161225768,0,0x0,8
tick,0x7fffe05afeb4,161241773,0,0x0,8
tick,0x7fffe05afeb4,161256827,0,0x0,8
tick,0x7fffe05afeb4,161272788,0,0x0,8
tick,0x7fffe05afeb4,161288827,0,0x0,8
tick,0x7fffe05afeb4,161304775,0,0x0,8
tick,0x7fffe05afeb4,161320858,0,0x0,8
tick,0x7fffe05afeb4,161336827,0,0x0,8
tick,0x7fffe05afeb4,161351778,0,0x0,8
tick,0x7fffe05afeb4,161367777,0,0x0,8
tick,0x7fffe05afeb4,161383781,0,0x0,8
tick,0x7fffe05afeb4,161399804,0,0x0,8
tick,0x7fffe05afeb4,161414844,0,0x0,8
tick,0x7fffe05afeb4,161430846,0,0x0,8
tick,0x7fffe05afeb4,161445770,0,0x0,8
tick,0x7fffe05afeb4,161460765,0,0x0,8
tick,0x7fffe05afeb4,161476937,0,0x0,8
tick,0x7fffe05afeb4,161492865,0,0x0,8
tick,0x7fffe05afeb4,161508764,0,0x0,8
tick,0x7fffe05afeb4,161523786,0,0x0,8
tick,0x7fffe05afeb4,161539760,0,0x0,8
tick,0x7fffe05afeb4,161554868,0,0x0,8
tick,0x7fffe05afeb4,161570952,0,0x0,8
tick,0x7fffe05afeb4,161586785,0,0x0,8
tick,0x7fffe05afeb4,161602998,0,0x0,8
tick,0x7fffe05afeb4,161618800,0,0x0,8
tick,0x7fffe05afeb4,161634839,0,0x0,8
tick,0x7fffe05afeb4,161650807,0,0x0,8
tick,0x7fffe05afeb4,161666847,0,0x0,8
tick,0x7fffe05afeb4,161682847,0,0x0,8
tick,0x7fffe05afeb4,161698862,0,0x0,8
tick,0x7fffe05afeb4,161714764,0,0x0,8
tick,0x7fffe05afeb4,161729805,0,0x0,8
tick,0x7fffe05afeb4,161744858,0,0x0,8
tick,0x7fffe05afeb4,161760784,0,0x0,8
tick,0x7fffe05afeb4,161776764,0,0x0,8
tick,0x7fffe05afeb4,161792858,0,0x0,8
tick,0x7fffe05afeb4,161808886,0,0x0,8
tick,0x7fffe05afeb4,161824831,0,0x0,8
tick,0x7fffe05afeb4,161840764,0,0x0,8
tick,0x7fffe05afeb4,161855824,0,0x0,8
tick,0x7fffe05afeb4,161871850,0,0x0,8
tick,0x7fffe05afeb4,161887859,0,0x0,8
tick,0x7fffe05afeb4,161903899,0,0x0,8
tick,0x7fffe05afeb4,161919796,0,0x0,8
tick,0x7fffe05afeb4,161934774,0,0x0,8
tick,0x7fffe05afeb4,161950768,0,0x0,8
tick,0x7fffe05afeb4,161966771,0,0x0,8
tick,0x7fffe05afeb4,161982910,0,0x0,8
tick,0x7fffe05afeb4,161998771,0,0x0,8
tick,0x7fffe05afeb4,162014855,0,0x0,8
tick,0x7fffe05afeb4,162030775,0,0x0,8
tick,0x7fffe05afeb4,162045826,0,0x0,8
tick,0x7fffe05afeb4,162061761,0,0x0,8
tick,0x7fffe05afeb4,162077861,0,0x0,8
tick,0x7fffe05afeb4,162094016,0,0x0,8
tick,0x7fffe05afeb4,162109875,0,0x0,8
tick,0x7fffe05afeb4,162125851,0,0x0,8
tick,0x7fffe05afeb4,162141843,0,0x0,8
tick,0x7fffe05afeb4,162157759,0,0x0,8
tick,0x7fffe05afeb4,162173813,0,0x0,8
tick,0x7fffe05afeb4,162189866,0,0x0,8
tick,0x7fffe05afeb4,162205828,0,0x0,8
tick,0x7fffe05afeb4,162221767,0,0x0,8
tick,0x7fffe05afeb4,162237827,0,0x0,8
tick,0x7fffe05afeb4,162253841,0,0x0,8
tick,0x7fffe05afeb4,162269802,0,0x0,8
tick,0x7fffe05afeb4,162285772,0,0x0,8
tick,0x7fffe05afeb4,162301775,0,0x0,8
tick,0x7fffe05afeb4,162317852,0,0x0,8
tick,0x7fffe05afeb4,162333846,0,0x0,8
tick,0x7fffe05afeb4,162349885,0,0x0,8
tick,0x7fffe05afeb4,162365918,0,0x0,8
tick,0x7fffe05afeb4,162381863,0,0x0,8
tick,0x7fffe05afeb4,162397816,0,0x0,8
tick,0x7fffe05afeb4,162413801,0,0x0,8
tick,0x7fffe05afeb4,162429861,0,0x0,8
tick,0x7fffe05afeb4,162444810,0,0x0,8
tick,0x7fffe05afeb4,162460805,0,0x0,8
tick,0x7fffe05afeb4,162476821,0,0x0,8
tick,0x7fffe05afeb4,162492941,0,0x0,8
tick,0x7fffe05afeb4,162508771,0,0x0,8
tick,0x7fffe05afeb4,162524839,0,0x0,8
tick,0x7fffe05afeb4,162539842,0,0x0,8
tick,0x7fffe05afeb4,162554797,0,0x0,8
tick,0x7fffe05afeb4,162570776,0,0x0,8
tick,0x7fffe05afeb4,162585859,0,0x0,8
tick,0x7fffe05afeb4,162601846,0,0x0,8
tick,0x7fffe05afeb4,162617780,0,0x0,8
tick,0x7fffe05afeb4,162633784,0,0x0,8
tick,0x7fffe05afeb4,162649794,0,0x0,8
tick,0x7fffe05afeb4,162665784,0,0x0,8
tick,0x7fffe05afeb4,162680766,0,0x0,8
tick,0x7fffe05afeb4,162696834,0,0x0,8
tick,0x7fffe05afeb4,162712852,0,0x0,8
tick,0x7fffe05afeb4,162729114,0,0x0,8
tick,0x7fffe05afeb4,162744775,0,0x0,8
tick,0x7fffe05afeb4,162760768,0,0x0,8
tick,0x7fffe05afeb4,162776852,0,0x0,8
tick,0x7fffe05afeb4,162792858,0,0x0,8
tick,0x7fffe05afeb4,162808784,0,0x0,8
tick,0x7fffe05afeb4,162824787,0,0x0,8
tick,0x7fffe05afeb4,162839796,0,0x0,8
tick,0x7fffe05afeb4,162854779,0,0x0,8
tick,0x7fffe05afeb4,162870801,0,0x0,8
tick,0x7fffe05afeb4,162886854,0,0x0,8
tick,0x7fffe05afeb4,162902847,0,0x0,8
tick,0x7fffe05afeb4,162918783,0,0x0,8
tick,0x7fffe05afeb4,162934950,0,0x0,8
tick,0x7fffe05afeb4,162950783,0,0x0,8
tick,0x7fffe05afeb4,162966768,0,0x0,8
tick,0x7fffe05afeb4,162982844,0,0x0,8
tick,0x7fffe05afeb4,162998916,0,0x0,8
tick,0x7fffe05afeb4,163014754,0,0x0,8
tick,0x7fffe05afeb4,163030827,0,0x0,8
tick,0x7fffe05afeb4,163045795,0,0x0,8
tick,0x7fffe05afeb4,163061790,0,0x0,8
tick,0x7fffe05afeb4,163077788,0,0x0,8
tick,0x7fffe05afeb4,163092783,0,0x0,8
tick,0x7fffe05afeb4,163108858,0,0x0,8
tick,0x7fffe05afeb4,163124774,0,0x0,8
tick,0x7fffe05afeb4,163139937,0,0x0,8
tick,0x7fffe05afeb4,163155879,0,0x0,8
tick,0x7fffe05afeb4,163171783,0,0x0,8
tick,0x7fffe05afeb4,163187789,0,0x0,8
tick,0x7fffe05afeb4,163203781,0,0x0,8
tick,0x7fffe05afeb4,163219789,0,0x0,8
tick,0x7fffe05afeb4,163235810,0,0x0,8
tick,0x7fffe05afeb4,163251780,0,0x0,8
tick,0x7fffe05afeb4,163267777,0,0x0,8
tick,0x7fffe05afeb4,163283791,0,0x0,8
tick,0x7fffe05afeb4,163299854,0,0x0,8
tick,0x7fffe05afeb4,163315863,0,0x0,8
tick,0x7fffe05afeb4,163331855,0,0x0,8
tick,0x7fffe05afeb4,163347838,0,0x0,8
tick,0x7fffe05afeb4,163363825,0,0x0,8
tick,0x7fffe05afeb4,163379860,0,0x0,8
tick,0x7fffe05afeb4,163394764,0,0x0,8
tick,0x7fffe05afeb4,163410763,0,0x0,8
tick,0x7fffe05afeb4,163426870,0,0x0,8
tick,0x7fffe05afeb4,163442859,0,0x0,8
tick,0x7fffe05afeb4,163458855,0,0x0,8
tick,0x7fffe05afeb4,163474787,0,0x0,8
tick,0x7fffe05afeb4,163490788,0,0x0,8
tick,0x7fffe05afeb4,163506784,0,0x0,8
tick,0x7fffe05afeb4,163522770,0,0x0,8
tick,0x7fffe05afeb4,163537845,0,0x0,8
tick,0x7fffe05afeb4,163553784,0,0x0,8
tick,0x7fffe05afeb4,163569826,0,0x0,8
tick,0x7fffe05afeb4,163585881,0,0x0,8
tick,0x7fffe05afeb4,163601853,0,0x0,8
tick,0x7fffe05afeb4,163617767,0,0x0,8
tick,0x7fffe05afeb4,163633794,0,0x0,8
tick,0x7fffe05afeb4,163649888,0,0x0,8
tick,0x7fffe05afeb4,163665975,0,0x0,8
tick,0x7fffe05afeb4,163681856,0,0x0,8
tick,0x7fffe05afeb4,163697782,0,0x0,8
tick,0x7fffe05afeb4,163713769,0,0x0,8
tick,0x7fffe05afeb4,163728794,0,0x0,8
tick,0x7fffe05afeb4,163744849,0,0x0,8
tick,0x7fffe05afeb4,163760801,0,0x0,8
tick,0x7fffe05afeb4,163776839,0,0x0,8
tick,0x7fffe05afeb4,163792791,0,0x0,8
tick,0x7fffe05afeb4,163808862,0,0x0,8
tick,0x7fffe05afeb4,163824777,0,0x0,8
tick,0x7fffe05afeb4,163840805,0,0x0,8
tick,0x7fffe05afeb4,163856878,0,0x0,8
tick,0x7fffe05afeb4,163872802,0,0x0,8
tick,0x7fffe05afeb4,163887859,0,0x0,8
tick,0x7fffe05afeb4,163903795,0,0x0,8
tick,0x7fffe05afeb4,163919838,0,0x0,8
tick,0x7fffe05afeb4,163935757,0,0x0,8
tick,0x7fffe05afeb4,163951767,0,0x0,8
tick,0x7fffe05afeb4,163967858,0,0x0,8
tick,0x7fffe05afeb4,163983852,0,0x0,8
tick,0x7fffe05afeb4,163999888,0,0x0,8
tick,0x7fffe05afeb4,164015854,0,0x0,8
tick,0x7fffe05afeb4,164031865,0,0x0,8
tick,0x7fffe05afeb4,164047765,0,0x0,8
tick,0x7fffe05afeb4,164063780,0,0x0,8
tick,0x7fffe05afeb4,164079872,0,0x0,8
tick,0x7fffe05afeb4,164095781,0,0x0,8
tick,0x7fffe05afeb4,164111844,0,0x0,8
tick,0x7fffe05afeb4,164127858,0,0x0,8
tick,0x7fffe05afeb4,164143854,0,0x0,8
tick,0x7fffe05afeb4,164159838,0,0x0,8
tick,0x7fffe05afeb4,164175850,0,0x0,8
tick,0x7fffe05afeb4,164191905,0,0x0,8
tick,0x7fffe05afeb4,164207771,0,0x0,8
tick,0x7fffe05afeb4,164223853,0,0x0,8
tick,0x7fffe05afeb4,164238856,0,0x0,8
tick,0x7fffe05afeb4,164253850,0,0x0,8
tick,0x7fffe05afeb4,164269825,0,0x0,8
tick,0x7fffe05afeb4,164285883,0,0x0,8
tick,0x7fffe05afeb4,164300768,0,0x0,8
tick,0x7fffe05afeb4,164316771,0,0x0,8
tick,0x7fffe05afeb4,164332772,0,0x0,8
tick,0x7fffe05afeb4,164348769,0,0x0,8
tick,0x7fffe05afeb4,164364813,0,0x0,8
tick,0x7fffe05afeb4,164380766,0,0x0,8
tick,0x7fffe05afeb4,164395787,0,0x0,8
tick,0x7fffe05afeb4,164411788,0,0x0,8
tick,0x7fffe05afeb4,164427784,0,0x0,8
tick,0x7fffe05afeb4,164443778,0,0x0,8
tick,0x7fffe05afeb4,164459795,0,0x0,8
tick,0x7fffe05afeb4,164475786,0,0x0,8
tick,0x7fffe05afeb4,164491772,0,0x0,8
tick,0x7fffe05afeb4,164507850,0,0x0,8
tick,0x7fffe05afeb4,164523878,0,0x0,8
tick,0x7fffe05afeb4,164539824,0,0x0,8
tick,0x7fffe05afeb4,164555851,0,0x0,8
tick,0x7fffe05afeb4,164571812,0,0x0,8
tick,0x7fffe05afeb4,164587789,0,0x0,8
tick,0x7fffe05afeb4,164603776,0,0x0,8
tick,0x7fffe05afeb4,164619835,0,0x0,8
tick,0x7fffe05afeb4,164635791,0,0x0,8
tick,0x7fffe05afeb4,164651853,0,0x0,8
tick,0x7fffe05afeb4,164667779,0,0x0,8
tick,0x7fffe05afeb4,164683862,0,0x0,8
tick,0x7fffe05afeb4,164699893,0,0x0,8
tick,0x7fffe05afeb4,164715767,0,0x0,8
tick,0x7fffe05afeb4,164731842,0,0x0,8
tick,0x7fffe05afeb4,164747776,0,0x0,8
tick,0x7fffe05afeb4,164763859,0,0x0,8
tick,0x7fffe05afeb4,164779871,0,0x0,8
tick,0x7fffe05afeb4,164795792,0,0x0,8
tick,0x7fffe05afeb4,164811883,0,0x0,8
tick,0x7fffe05afeb4,164827772,0,0x0,8
tick,0x7fffe05afeb4,164843870,0,0x0,8
tick,0x7fffe05afeb4,164859882,0,0x0,8
tick,0x7fffe05afeb4,164874846,0,0x0,8
tick,0x7fffe05afeb4,164890857,0,0x0,8
tick,0x7fffe05afeb4,164906858,0,0x0,8
tick,0x7fffe05afeb4,164922802,0,0x0,8
tick,0x7fffe05afeb4,164938782,0,0x0,8
tick,0x7fffe05afeb4,164954811,0,0x0,8
tick,0x7fffe05afeb4,164970766,0,0x0,8
tick,0x7fffe05afeb4,164985832,0,0x0,8
tick,0x7fffe05afeb4,165001776,0,0x0,8
tick,0x7fffe05afeb4,165017967,0,0x0,8
tick,0x7fffe05afeb4,165032886,0,0x0,8
tick,0x7fffe05afeb4,165047769,0,0x0,8
tick,0x7fffe05afeb4,165063763,0,0x0,8
tick,0x7fffe05afeb4,165079867,0,0x0,8
tick,0x7fffe05afeb4,165095782,0,0x0,8
tick,0x7fffe05afeb4,165111848,0,0x0,8
tick,0x7fffe05afeb4,165126872,0,0x0,8
tick,0x7fffe05afeb4,165142790,0,0x0,8
tick,0x7fffe05afeb4,165158801,0,0x0,8
tick,0x7fffe05afeb4,165174861,0,0x0,8
tick,0x7fffe05afeb4,165190848,0,0x0,8
tick,0x7fffe05afeb4,165206892,0,0x0,8
tick,0x7fffe05afeb4,165222837,0,0x0,8
tick,0x7fffe05afeb4,165238835,0,0x0,8
tick,0x7fffe05afeb4,165254794,0,0x0,8
tick,0x7fffe05afeb4,165270783,0,0x0,8
tick,0x7fffe05afeb4,165286829,0,0x0,8
tick,0x7fffe05afeb4,165302772,0,0x0,8
tick,0x7fffe05afeb4,165318843,0,0x0,8
tick,0x7fffe05afeb4,165334866,0,0x0,8
tick,0x7fffe05afeb4,165350753,0,0x0,8
tick,0x7fffe05afeb4,165366798,0,0x0,8
tick,0x7fffe05afeb4,165382759,0,0x0,8
tick,0x7fffe05afeb4,165398768,0,0x0,8
tick,0x7fffe05afeb4,165414776,0,0x0,8
tick,0x7fffe05afeb4,165430763,0,0x0,8
tick,0x7fffe05afeb4,165445970,0,0x0,8
tick,0x7fffe05afeb4,165460771,0,0x0,8
tick,0x7fffe05afeb4,165476842,0,0x0,8
tick,0x7fffe05afeb4,165492795,0,0x0,8
tick,0x7fffe05afeb4,165507755,0,0x0,8
tick,0x7fffe05afeb4,165523776,0,0x0,8
tick,0x7fffe05afeb4,165539910,0,0x0,8
tick,0x7fffe05afeb4,165555766,0,0x0,8
tick,0x7fffe05afeb4,165571790,0,0x0,8
tick,0x7fffe05afeb4,165587879,0,0x0,8
tick,0x7fffe05afeb4,165603785,0,0x0,8
tick,0x7fffe05afeb4,165619789,0,0x0,8
tick,0x7fffe05afeb4,165635772,0,0x0,8
tick,0x7fffe05afeb4,165651856,0,0x0,8
tick,0x7fffe05afeb4,165666805,0,0x0,8
tick,0x7fffe05afeb4,165682769,0,0x0,8
tick,0x7fffe05afeb4,165698781,0,0x0,8
tick,0x7fffe05afeb4,165714840,0,0x0,8
tick,0x7fffe05afeb4,165730839,0,0x0,8
tick,0x7fffe05afeb4,165746767,0,0x0,8
tick,0x7fffe05afeb4,165762775,0,0x0,8
tick,0x7fffe05afeb4,165778938,0,0x0,8
tick,0x7fffe05afeb4,165794772,0,0x0,8
tick,0x7fffe05afeb4,165810770,0,0x0,8
tick,0x7fffe05afeb4,165826844,0,0x0,8
tick,0x7fffe05afeb4,165842859,0,0x0,8
tick,0x7fffe05afeb4,165857785,0,0x0,8
tick,0x7fffe05afeb4,165873769,0,0x0,8
tick,0x7fffe05afeb4,165889830,0,0x0,8
tick,0x7fffe05afeb4,165905776,0,0x0,8
tick,0x7fffe05afeb4,165921862,0,0x0,8
tick,0x7fffe05afeb4,165937780,0,0x0,8
tick,0x7fffe05afeb4,165953859,0,0x0,8
tick,0x7fffe05afeb4,165969794,0,0x0,8
tick,0x7fffe05afeb4,165985776,0,0x0,8
tick,0x7fffe05afeb4,166001802,0,0x0,8
tick,0x7fffe05afeb4,166017780,0,0x0,8
tick,0x7fffe05afeb4,166033781,0,0x0,8
tick,0x7fffe05afeb4,166049883,0,0x0,8
tick,0x7fffe05afeb4,166065793,0,0x0,8
tick,0x7fffe05afeb4,166081813,0,0x0,8
tick,0x7fffe05afeb4,166097799,0,0x0,8
tick,0x7fffe05afeb4,166113802,0,0x0,8
tick,0x7fffe05afeb4,166129895,0,0x0,8
tick,0x7fffe05afeb4,166145912,0,0x0,8
tick,0x7fffe05afeb4,166161779,0,0x0,8
tick,0x7fffe05afeb4,166177801,0,0x0,8
tick,0x7fffe05afeb4,166193790,0,0x0,8
tick,0x7fffe05afeb4,166209889,0,0x0,8
tick,0x7fffe05afeb4,166225790,0,0x0,8
tick,0x7fffe05afeb4,166241816,0,0x0,8
tick,0x7fffe05afeb4,166257842,0,0x0,8
tick,0x7fffe05afeb4,166273782,0,0x0,8
tick,0x7fffe05afeb4,166289966,0,0x0,8
tick,0x7fffe05afeb4,166305863,0,0x0,8
tick,0x7fffe05afeb4,166321795,0,0x0,8
tick,0x7fffe05afeb4,166337785,0,0x0,8
tick,0x7fffe05afeb4,166353913,0,0x0,8
tick,0x7fffe05afeb4,166369886,0,0x0,8
tick,0x7fffe05afeb4,166385798,0,0x0,8
tick,0x7fffe05afeb4,166401772,0,0x0,8
tick,0x7fffe05afeb4,166417905,0,0x0,8
tick,0x7fffe05afeb4,166433763,0,0x0,8
tick,0x7fffe05afeb4,166449809,0,0x0,8
tick,0x7fffe05afeb4,166465788,0,0x0,8
tick,0x7fffe05afeb4,166481873,0,0x0,8
tick,0x7fffe05afeb4,166497906,0,0x0,8
tick,0x7fffe05afeb4,166513768,0,0x0,8
tick,0x7fffe05afeb4,166529818,0,0x0,8
tick,0x7fffe05afeb4,166545781,0,0x0,8
tick,0x7fffe05afeb4,166561815,0,0x0,8
tick,0x7fffe05afeb4,166577777,0,0x0,8
tick,0x7fffe05afeb4,166593781,0,0x0,8
tick,0x7fffe05afeb4,166609895,0,0x0,8
tick,0x7fffe05afeb4,166625823,0,0x0,8
tick,0x7fffe05afeb4,166641867,0,0x0,8
tick,0x7fffe05afeb4,166657766,0,0x0,8
tick,0x7fffe05afeb4,166673766,0,0x0,8
tick,0x7fffe05afeb4,166689777,0,0x0,8
tick,0x7fffe05afeb4,166705892,0,0x0,8
tick,0x7fffe05afeb4,166721850,0,0x0,8
tick,0x7fffe05afeb4,166737858,0,0x0,8
tick,0x7fffe05afeb4,166753863,0,0x0,8
tick,0x7fffe05afeb4,166769786,0,0x0,8
tick,0x7fffe05afeb4,166785772,0,0x0,8
tick,0x7fffe05afeb4,166801807,0,0x0,8
tick,0x7fffe05afeb4,166817852,0,0x0,8
tick,0x7fffe05afeb4,166833785,0,0x0,8
tick,0x7fffe05afeb4,166849872,0,0x0,8
tick,0x7fffe05afeb4,166865778,0,0x0,8
tick,0x7fffe05afeb4,166881764,0,0x0,8
tick,0x7fffe05afeb4,166897785,0,0x0,8
tick,0x7fffe05afeb4,166913874,0,0x0,8
tick,0x7fffe05afeb4,166929871,0,0x0,8
tick,0x7fffe05afeb4,166945782,0,0x0,8
tick,0x7fffe05afeb4,166960855,0,0x0,8
tick,0x7fffe05afeb4,166976852,0,0x0,8
tick,0x7fffe05afeb4,166992763,0,0x0,8
tick,0x7fffe05afeb4,167008784,0,0x0,8
tick,0x7fffe05afeb4,167024777,0,0x0,8
tick,0x7fffe05afeb4,167040806,0,0x0,8
tick,0x7fffe05afeb4,167056844,0,0x0,8
tick,0x7fffe05afeb4,167072815,0,0x0,8
tick,0x7fffe05afeb4,167088783,0,0x0,8
tick,0x7fffe05afeb4,167104788,0,0x0,8
tick,0x7fffe05afeb4,167120761,0,0x0,8
tick,0x7fffe05afeb4,167136776,0,0x0,8
tick,0x7fffe05afeb4,167152913,0,0x0,8
tick,0x7fffe05afeb4,167168858,0,0x0,8
tick,0x7fffe05afeb4,167184872,0,0x0,8
tick,0x7fffe05afeb4,167200821,0,0x0,8
tick,0x7fffe05afeb4,167216808,0,0x0,8
tick,0x7fffe05afeb4,167232775,0,0x0,8
tick,0x7fffe05afeb4,167248869,0,0x0,8
tick,0x7fffe05afeb4,167264855,0,0x0,8
tick,0x7fffe05afeb4,167279896,0,0x0,8
tick,0x7fffe05afeb4,167295862,0,0x0,8
tick,0x7fffe05afeb4,167311877,0,0x0,8
tick,0x7fffe05afeb4,167327775,0,0x0,8
tick,0x7fffe05afeb4,167343767,0,0x0,8
tick,0x7fffe05afeb4,167359884,0,0x0,8
tick,0x7fffe05afeb4,167375877,0,0x0,8
tick,0x7fffe05afeb4,167391872,0,0x0,8
tick,0x7fffe05afeb4,167407859,0,0x0,8
tick,0x7fffe05afeb4,167423839,0,0x0,8
tick,0x7fffe05afeb4,167439822,0,0x0,8
tick,0x7fffe05afeb4,167455790,0,0x0,8
tick,0x7fffe05afeb4,167471889,0,0x0,8
tick,0x7fffe05afeb4,167487783,0,0x0,8
tick,0x7fffe05afeb4,167503843,0,0x0,8
tick,0x7fffe05afeb4,167519894,0,0x0,8
tick,0x7fffe05afeb4,167535864,0,0x0,8
tick,0x7fffe05afeb4,167551776,0,0x0,8
tick,0x7fffe05afeb4,167567775,0,0x0,8
tick,0x7fffe05afeb4,167583876,0,0x0,8
tick,0x7fffe05afeb4,167599860,0,0x0,8
tick,0x7fffe05afeb4,167614771,0,0x0,8
tick,0x7fffe05afeb4,167630779,0,0x0,8
tick,0x7fffe05afeb4,167645788,0,0x0,8
tick,0x7fffe05afeb4,167661766,0,0x0,8
tick,0x7fffe05afeb4,167677772,0,0x0,8
tick,0x7fffe05afeb4,167693863,0,0x0,8
tick,0x7fffe05afeb4,167709881,0,0x0,8
tick,0x7fffe05afeb4,167725782,0,0x0,8
tick,0x7fffe05afeb4,167741860,0,0x0,8
tick,0x7fffe05afeb4,167757808,0,0x0,8
tick,0x7fffe05afeb4,167772804,0,0x0,8
tick,0x7fffe05afeb4,167788773,0,0x0,8
tick,0x7fffe05afeb4,167804775,0,0x0,8
tick,0x7fffe05afeb4,167820907,0,0x0,8
tick,0x7fffe05afeb4,167836778,0,0x0,8
tick,0x7fffe05afeb4,167852760,0,0x0,8
tick,0x7fffe05afeb4,167867798,0,0x0,8
tick,0x7fffe05afeb4,167883780,0,0x0,8
tick,0x7fffe05afeb4,167899802,0,0x0,8
tick,0x7fffe05afeb4,167915767,0,0x0,8
tick,0x7fffe05afeb4,167931888,0,0x0,8
tick,0x7fffe05afeb4,167946803,0,0x0,8
tick,0x7fffe05afeb4,167962844,0,0x0,8
tick,0x7fffe05afeb4,167979074,0,0x0,8
tick,0x7fffe05afeb4,167994827,0,0x0,8
tick,0x7fffe05afeb4,168010770,0,0x0,8
tick,0x7fffe05afeb4,168025844,0,0x0,8
tick,0x7fffe05afeb4,168041790,0,0x0,8
tick,0x7fffe05afeb4,168057845,0,0x0,8
tick,0x7fffe05afeb4,168073787,0,0x0,8
tick,0x7fffe05afeb4,168089883,0,0x0,8
tick,0x7fffe05afeb4,168105825,0,0x0,8
tick,0x7fffe05afeb4,168121777,0,0x0,8
tick,0x7fffe05afeb4,168137848,0,0x0,8
tick,0x7fffe05afeb4,168154098,0,0x0,8
tick,0x7fffe05afeb4,168169793,0,0x0,8
tick,0x7fffe05afeb4,168185842,0,0x0,8
tick,0x7fffe05afeb4,168201757,0,0x0,8
tick,0x7fffe05afeb4,168217856,0,0x0,8
tick,0x7fffe05afeb4,168233783,0,0x0,8
tick,0x7fffe05afeb4,168249907,0,0x0,8
tick,0x7fffe05afeb4,168265876,0,0x0,8
tick,0x7fffe05afeb4,168281866,0,0x0,8
tick,0x7fffe05afeb4,168297861,0,0x0,8
tick,0x7fffe05afeb4,168313754,0,0x0,8
tick,0x7fffe05afeb4,168329846,0,0x0,8
tick,0x7fffe05afeb4,168345768,0,0x0,8
tick,0x7fffe05afeb4,168361848,0,0x0,8
tick,0x7fffe05afeb4,168377844,0,0x0,8
tick,0x7fffe05afeb4,168393846,0,0x0,8
tick,0x7fffe05afeb4,168409900,0,0x0,8
tick,0x7fffe05afeb4,168425799,0,0x0,8
tick,0x7fffe05afeb4,168441786,0,0x0,8
tick,0x7fffe05afeb4,168457782,0,0x0,8
tick,0x7fffe05afeb4,168473855,0,0x0,8
tick,0x7fffe05afeb4,168489851,0,0x0,8
tick,0x7fffe05afeb4,168505852,0,0x0,8
tick,0x7fffe05afeb4,168521788,0,0x0,8
tick,0x7fffe05afeb4,168537765,0,0x0,8
tick,0x7fffe05afeb4,168553784,0,0x0,8
tick,0x7fffe05afeb4,168569772,0,0x0,8
tick,0x7fffe05afeb4,168585868,0,0x0,8
tick,0x7fffe05afeb4,168602113,0,0x0,8
tick,0x7fffe05afeb4,168616838,0,0x0,8
tick,0x7fffe05afeb4,168632851,0,0x0,8
tick,0x7fffe05afeb4,168648853,0,0x0,8
tick,0x7fffe05afeb4,168664775,0,0x0,8
tick,0x7fffe05afeb4,168679796,0,0x0,8
tick,0x7fffe05afeb4,168695818,0,0x0,8
tick,0x7fffe05afeb4,168710772,0,0x0,8
tick,0x7fffe05afeb4,168725817,0,0x0,8
tick,0x7fffe05afeb4,168741759,0,0x0,8
tick,0x7fffe05afeb4,168756850,0,0x0,8
tick,0x7fffe05afeb4,168772865,0,0x0,8
tick,0x7fffe05afeb4,168787762,0,0x0,8
tick,0x7fffe05afeb4,168803782,0,0x0,8
tick,0x7fffe05afeb4,168819855,0,0x0,8
tick,0x7fffe05afeb4,168835837,0,0x0,8
tick,0x7fffe05afeb4,168851851,0,0x0,8
tick,0x7fffe05afeb4,168867865,0,0x0,8
tick,0x7fffe05afeb4,168883780,0,0x0,8
tick,0x7fffe05afeb4,168899789,0,0x0,8
tick,0x7fffe05afeb4,168915810,0,0x0,8
tick,0x7fffe05afeb4,168931895,0,0x0,8
tick,0x7fffe05afeb4,168946763,0,0x0,8
tick,0x7fffe05afeb4,168961848,0,0x0,8
tick,0x7fffe05afeb4,168977853,0,0x0,8
tick,0x7fffe05afeb4,168993830,0,0x0,8
tick,0x7fffe05afeb4,169009832,0,0x0,8
tick,0x7fffe05afeb4,169025850,0,0x0,8
tick,0x7fffe05afeb4,169041879,0,0x0,8
tick,0x7fffe05afeb4,169057860,0,0x0,8
tick,0x7fffe05afeb4,169073853,0,0x0,8
tick,0x7fffe05afeb4,169089860,0,0x0,8
tick,0x7fffe05afeb4,169104780,0,0x0,8
tick,0x7fffe05afeb4,169120768,0,0x0,8
tick,0x7fffe05afeb4,169136849,0,0x0,8
tick,0x7fffe05afeb4,169152865,0,0x0,8
tick,0x7fffe05afeb4,169167777,0,0x0,8
tick,0x7fffe05afeb4,169183868,0,0x0,8
tick,0x7fffe05afeb4,169199812,0,0x0,8
tick,0x7fffe05afeb4,169215775,0,0x0,8
tick,0x7fffe05afeb4,169231943,0,0x0,8
tick,0x7fffe05afeb4,169247772,0,0x0,8
tick,0x7fffe05afeb4,169263809,0,0x0,8
tick,0x7fffe05afeb4,169279863,0,0x0,8
tick,0x7fffe05afeb4,169295857,0,0x0,8
tick,0x7fffe05afeb4,169310778,0,0x0,8
tick,0x7fffe05afeb4,169326824,0,0x0,8
tick,0x7fffe05afeb4,169342757,0,0x0,8
tick,0x7fffe05afeb4,169358772,0,0x0,8
tick,0x7fffe05afeb4,169374874,0,0x0,8
tick,0x7fffe05afeb4,169390853,0,0x0,8
tick,0x7fffe05afeb4,169406837,0,0x0,8
tick,0x7fffe05afeb4,169422766,0,0x0,8
tick,0x7fffe05afeb4,169437783,0,0x0,8
tick,0x7fffe05afeb4,169453801,0,0x0,8
tick,0x7fffe05afeb4,169469798,0,0x0,8
tick,0x7fffe05afeb4,169485772,0,0x0,8
tick,0x7fffe05afeb4,169501839,0,0x0,8
tick,0x7fffe05afeb4,169516848,0,0x0,8
tick,0x7fffe05afeb4,169532805,0,0x0,8
tick,0x7fffe05afeb4,169548845,0,0x0,8
tick,0x7fffe05afeb4,169564780,0,0x0,8
tick,0x7fffe05afeb4,169579771,0,0x0,8
tick,0x7fffe05afeb4,169595773,0,0x0,8
tick,0x7fffe05afeb4,169611866,0,0x0,8
tick,0x7fffe05afeb4,169627880,0,0x0,8
tick,0x7fffe05afeb4,169642763,0,0x0,8
tick,0x7fffe05afeb4,169658770,0,0x0,8
tick,0x7fffe05afeb4,169674845,0,0x0,8
tick,0x7fffe05afeb4,169690813,0,0x0,8
tick,0x7fffe05afeb4,169706796,0,0x0,8
tick,0x7fffe05afeb4,169722767,0,0x0,8
tick,0x7fffe05afeb4,169738859,0,0x0,8
tick,0x7fffe05afeb4,169754845,0,0x0,8
tick,0x7fffe05afeb4,169770849,0,0x0,8
tick,0x7fffe05afeb4,169786849,0,0x0,8
tick,0x7fffe05afeb4,169802781,0,0x0,8
tick,0x7fffe05afeb4,169817797,0,0x0,8
tick,0x7fffe05afeb4,169833776,0,0x0,8
tick,0x7fffe05afeb4,169849865,0,0x0,8
tick,0x7fffe05afeb4,169865861,0,0x0,8
tick,0x7fffe05afeb4,169880960,0,0x0,8
tick,0x7fffe05afeb4,169896855,0,0x0,8
tick,0x7fffe05afeb4,169912790,0,0x0,8
tick,0x7fffe05afeb4,169928811,0,0x0,8
tick,0x7fffe05afeb4,169944797,0,0x0,8
tick,0x7fffe05afeb4,169960773,0,0x0,8
tick,0x7fffe05afeb4,169976853,0,0x0,8
tick,0x7fffe05afeb4,169992869,0,0x0,8
tick,0x7fffe05afeb4,170008791,0,0x0,8
tick,0x7fffe05afeb4,170023818,0,0x0,8
tick,0x7fffe05afeb4,170039828,0,0x0,8
tick,0x7fffe05afeb4,170055820,0,0x0,8
tick,0x7fffe05afeb4,170071849,0,0x0,8
tick,0x7fffe05afeb4,170087873,0,0x0,8
tick,0x7fffe05afeb4,170103916,0,0x0,8
tick,0x7fffe05afeb4,170119816,0,0x0,8
tick,0x7fffe05afeb4,170135768,0,0x0,8
tick,0x7fffe05afeb4,170151830,0,0x0,8
tick,0x7fffe05afeb4,170166780,0,0x0,8
tick,0x7fffe05afeb4,170182794,0,0x0,8
tick,0x7fffe05afeb4,170197850,0,0x0,8
tick,0x7fffe05afeb4,170213902,0,0x0,8
tick,0x7fffe05afeb4,170229806,0,0x0,8
tick,0x7fffe05afeb4,170245882,0,0x0,8
tick,0x7fffe05afeb4,170261787,0,0x0,8
tick,0x7fffe05afeb4,170277773,0,0x0,8
tick,0x7fffe05afeb4,170293847,0,0x0,8
tick,0x7fffe05afeb4,170310141,0,0x0,8
tick,0x7fffe05afeb4,170325901,0,0x0,8
tick,0x7fffe05afeb4,170341818,0,0x0,8
tick,0x7fffe05afeb4,170357847,0,0x0,8
tick,0x7fffe05afeb4,170374004,0,0x0,8
tick,0x7fffe05afeb4,170389887,0,0x0,8
tick,0x7fffe05afeb4,170405856,0,0x0,8
tick,0x7fffe05afeb4,170421846,0,0x0,8
tick,0x7fffe05afeb4,170437766,0,0x0,8
tick,0x7fffe05afeb4,170453798,0,0x0,8
tick,0x7fffe05afeb4,170469790,0,0x0,8
tick,0x7fffe05afeb4,170484853,0,0x0,8
tick,0x7fffe05afeb4,170500773,0,0x0,8
tick,0x7fffe05afeb4,170516770,0,0x0,8
tick,0x7fffe05afeb4,170532837,0,0x0,8
tick,0x7fffe05afeb4,170547849,0,0x0,8
tick,0x7fffe05afeb4,170563786,0,0x0,8
tick,0x7fffe05afeb4,170579946,0,0x0,8
tick,0x7fffe05afeb4,170595797,0,0x0,8
tick,0x7fffe05afeb4,170611826,0,0x0,8
tick,0x7fffe05afeb4,170627861,0,0x0,8
tick,0x7fffe05afeb4,170643857,0,0x0,8
tick,0x7fffe05afeb4,170659880,0,0x0,8
tick,0x7fffe05afeb4,170675854,0,0x0,8
tick,0x7fffe05afeb4,170691767,0,0x0,8
tick,0x7fffe05afeb4,170706793,0,0x0,8
tick,0x7fffe05afeb4,170722801,0,0x0,8
tick,0x7fffe05afeb4,170737873,0,0x0,8
tick,0x7fffe05afeb4,170753846,0,0x0,8
tick,0x7fffe05afeb4,170769878,0,0x0,8
tick,0x7fffe05afeb4,170785839,0,0x0,8
tick,0x7fffe05afeb4,170801842,0,0x0,8
tick,0x7fffe05afeb4,170817775,0,0x0,8
tick,0x7fffe05afeb4,170833790,0,0x0,8
tick,0x7fffe05afeb4,170849898,0,0x0,8
tick,0x7fffe05afeb4,170865770,0,0x0,8
tick,0x7fffe05afeb4,170880766,0,0x0,8
tick,0x7fffe05afeb4,170895770,0,0x0,8
tick,0x7fffe05afeb4,170911781,0,0x0,8
tick,0x7fffe05afeb4,170927813,0,0x0,8
tick,0x7fffe05afeb4,170943769,0,0x0,8
tick,0x7fffe05afeb4,170959810,0,0x0,8
tick,0x7fffe05afeb4,170975815,0,0x0,8
tick,0x7fffe05afeb4,170991775,0,0x0,8
tick,0x7fffe05afeb4,171007866,0,0x0,8
tick,0x7fffe05afeb4,171023842,0,0x0,8
tick,0x7fffe05afeb4,171040003,0,0x0,8
tick,0x7fffe05afeb4,171055770,0,0x0,8
tick,0x7fffe05afeb4,171070812,0,0x0,8
tick,0x7fffe05afeb4,171086848,0,0x0,8
tick,0x7fffe05afeb4,171102911,0,0x0,8
tick,0x7fffe05afeb4,171118855,0,0x0,8
tick,0x7fffe05afeb4,171135005,0,0x0,8
tick,0x7fffe05afeb4,171150799,0,0x0,8
tick,0x7fffe05afeb4,171166776,0,0x0,8
tick,0x7fffe05afeb4,171182776,0,0x0,8
tick,0x7fffe05afeb4,171198785,0,0x0,8
tick,0x7fffe05afeb4,171213860,0,0x0,8
tick,0x7fffe05afeb4,171229779,0,0x0,8
tick,0x7fffe05afeb4,171245877,0,0x0,8
tick,0x7fffe05afeb4,171261875,0,0x0,8
tick,0x7fffe05afeb4,171277764,0,0x0,8
tick,0x7fffe05afeb4,171293779,0,0x0,8
tick,0x7fffe05afeb4,171309888,0,0x0,8
tick,0x7fffe05afeb4,171325944,0,0x0,8
tick,0x7fffe05afeb4,171341806,0,0x0,8
tick,0x7fffe05afeb4,171357997,0,0x0,8
tick,0x7fffe05afeb4,171373875,0,0x0,8
tick,0x7fffe05afeb4,171389814,0,0x0,8
tick,0x7fffe05afeb4,171404820,0,0x0,8
tick,0x7fffe05afeb4,171420831,0,0x0,8
tick,0x7fffe05afeb4,171436775,0,0x0,8
tick,0x7fffe05afeb4,171452786,0,0x0,8
tick,0x7fffe05afeb4,171468815,0,0x0,8
tick,0x7fffe05afeb4,171484881,0,0x0,8
tick,0x7fffe05afeb4,171500770,0,0x0,8
tick,0x7fffe05afeb4,171515790,0,0x0,8
tick,0x7fffe05afeb4,171531879,0,0x0,8
tick,0x7fffe05afeb4,171547765,0,0x0,8
tick,0x7fffe05afeb4,171563765,0,0x0,8
tick,0x7fffe05afeb4,171579898,0,0x0,8
tick,0x7fffe05afeb4,171595848,0,0x0,8
tick,0x7fffe05afeb4,171611780,0,0x0,8
tick,0x7fffe05afeb4,171627779,0,0x0,8
tick,0x7fffe05afeb4,171642882,0,0x0,8
tick,0x7fffe05afeb4,171657819,0,0x0,8
tick,0x7fffe05afeb4,171673794,0,0x0,8
tick,0x7fffe05afeb4,171689800,0,0x0,8
tick,0x7fffe05afeb4,171705870,0,0x0,8
tick,0x7fffe05afeb4,171721767,0,0x0,8
tick,0x7fffe05afeb4,171737777,0,0x0,8
tick,0x7fffe05afeb4,171753843,0,0x0,8
tick,0x7fffe05afeb4,171769884,0,0x0,8
tick,0x7fffe05afeb4,171785854,0,0x0,8
tick,0x7fffe05afeb4,171801842,0,0x0,8
tick,0x7fffe05afeb4,171817850,0,0x0,8
tick,0x7fffe05afeb4,171833785,0,0x0,8
tick,0x7fffe05afeb4,171849780,0,0x0,8
tick,0x7fffe05afeb4,171865796,0,0x0,8
tick,0x7fffe05afeb4,171881762,0,0x0,8
tick,0x7fffe05afeb4,171896792,0,0x0,8
tick,0x7fffe05afeb4,171912841,0,0x0,8
tick,0x7fffe05afeb4,171928813,0,0x0,8
tick,0x7fffe05afeb4,171944766,0,0x0,8
tick,0x7fffe05afeb4,171960771,0,0x0,8
tick,0x7fffe05afeb4,171975760,0,0x0,8
tick,0x7fffe05afeb4,171990772,0,0x0,8
tick,0x7fffe05afeb4,172006848,0,0x0,8
tick,0x7fffe05afeb4,172022790,0,0x0,8
tick,0x7fffe05afeb4,172038809,0,0x0,8
tick,0x7fffe05afeb4,172054791,0,0x0,8
tick,0x7fffe05afeb4,172070790,0,0x0,8
tick,0x7fffe05afeb4,172086771,0,0x0,8
tick,0x7fffe05afeb4,172102784,0,0x0,8
tick,0x7fffe05afeb4,172118782,0,0x0,8
tick,0x7fffe05afeb4,172134793,0,0x0,8
tick,0x7fffe05afeb4,172150903,0,0x0,8
tick,0x7fffe05afeb4,172166775,0,0x0,8
tick,0x7fffe05afeb4,172182778,0,0x0,8
tick,0x7fffe05afeb4,172198786,0,0x0,8
tick,0x7fffe05afeb4,172214779,0,0x0,8
tick,0x7fffe05afeb4,172230850,0,0x0,8
tick,0x7fffe05afeb4,172246796,0,0x0,8
tick,0x7fffe05afeb4,172262785,0,0x0,8
tick,0x7fffe05afeb4,172278869,0,0x0,8
tick,0x7fffe05afeb4,172294762,0,0x0,8
tick,0x7fffe05afeb4,172310758,0,0x0,8
tick,0x7fffe05afeb4,172326871,0,0x0,8
tick,0x7fffe05afeb4,172342766,0,0x0,8
tick,0x7fffe05afeb4,172357854,0,0x0,8
tick,0x7fffe05afeb4,172373940,0,0x0,8
tick,0x7fffe05afeb4,172389860,0,0x0,8
tick,0x7fffe05afeb4,172405818,0,0x0,8
tick,0x7fffe05afeb4,172421780,0,0x0,8
tick,0x7fffe05afeb4,172437781,0,0x0,8
tick,0x7fffe05afeb4,172453811,0,0x0,8
tick,0x7fffe05afeb4,172469783,0,0x0,8
tick,0x7fffe05afeb4,172485822,0,0x0,8
tick,0x7fffe05afeb4,172501780,0,0x0,8
tick,0x7fffe05afeb4,172517812,0,0x0,8
tick,0x7fffe05afeb4,172533777,0,0x0,8
tick,0x7fffe05afeb4,172549813,0,0x0,8
tick,0x7fffe05afeb4,172565776,0,0x0,8
tick,0x7fffe05afeb4,172581819,0,0x0,8
tick,0x7fffe05afeb4,172597796,0,0x0,8
tick,0x7fffe05afeb4,172613832,0,0x0,8
tick,0x7fffe05afeb4,172629852,0,0x0,8
tick,0x7fffe05afeb4,172645783,0,0x0,8
tick,0x7fffe05afeb4,172661862,0,0x0,8
tick,0x7fffe05afeb4,172677784,0,0x0,8
tick,0x7fffe05afeb4,172693860,0,0x0,8
tick,0x7fffe05afeb4,172709861,0,0x0,8
tick,0x7fffe05afeb4,172725782,0,0x0,8
tick,0x7fffe05afeb4,172741779,0,0x0,8
tick,0x7fffe05afeb4,172757800,0,0x0,8
tick,0x7fffe05afeb4,172773776,0,0x0,8
tick,0x7fffe05afeb4,172789877,0,0x0,8
tick,0x7fffe05afeb4,172805857,0,0x0,8
tick,0x7fffe05afeb4,172821778,0,0x0,8
tick,0x7fffe05afeb4,172837846,0,0x0,8
tick,0x7fffe05afeb4,172853802,0,0x0,8
tick,0x7fffe05afeb4,172869804,0,0x0,8
tick,0x7fffe05afeb4,172885785,0,0x0,8
tick,0x7fffe05afeb4,172901795,0,0x0,8
tick,0x7fffe05afeb4,172916856,0,0x0,8
tick,0x7fffe05afeb4,172932777,0,0x0,8
tick,0x7fffe05afeb4,172948798,0,0x0,8
tick,0x7fffe05afeb4,172963863,0,0x0,8
tick,0x7fffe05afeb4,172979803,0,0x0,8
tick,0x7fffe05afeb4,172994774,0,0x0,8
tick,0x7fffe05afeb4,173010772,0,0x0,8
tick,0x7fffe05afeb4,173025846,0,0x0,8
tick,0x7fffe05afeb4,173041836,0,0x0,8
tick,0x7fffe05afeb4,173057819,0,0x0,8
tick,0x7fffe05afeb4,173073851,0,0x0,8
tick,0x7fffe05afeb4,173089841,0,0x0,8
tick,0x7fffe05afeb4,173104789,0,0x0,8
tick,0x7fffe05afeb4,173120780,0,0x0,8
tick,0x7fffe05afeb4,173135778,0,0x0,8
tick,0x7fffe05afeb4,173151943,0,0x0,8
tick,0x7fffe05afeb4,173167882,0,0x0,8
tick,0x7fffe05afeb4,173183867,0,0x0,8
tick,0x7fffe05afeb4,173199891,0,0x0,8
tick,0x7fffe05afeb4,173215765,0,0x0,8
tick,0x7fffe05afeb4,173231858,0,0x0,8
tick,0x7fffe05afeb4,173247800,0,0x0,8
tick,0x7fffe05afeb4,173263880,0,0x0,8
tick,0x7fffe05afeb4,173279867,0,0x0,8
tick,0x7fffe05afeb4,173295874,0,0x0,8
tick,0x7fffe05afeb4,173311815,0,0x0,8
tick,0x7fffe05afeb4,173327780,0,0x0,8
tick,0x7fffe05afeb4,173343774,0,0x0,8
tick,0x7fffe05afeb4,173359913,0,0x0,8
tick,0x7fffe05afeb4,173375853,0,0x0,8
tick,0x7fffe05afeb4,173391862,0,0x0,8
tick,0x7fffe05afeb4,173407817,0,0x0,8
tick,0x7fffe05afeb4,173423813,0,0x0,8
tick,0x7fffe05afeb4,173439962,0,0x0,8
tick,0x7fffe05afeb4,173455850,0,0x0,8
tick,0x7fffe05afeb4,173471851,0,0x0,8
tick,0x7fffe05afeb4,173487890,0,0x0,8
tick,0x7fffe05afeb4,173503856,0,0x0,8
tick,0x7fffe05afeb4,173519876,0,0x0,8
tick,0x7fffe05afeb4,173535775,0,0x0,8
tick,0x7fffe05afeb4,173551806,0,0x0,8
tick,0x7fffe05afeb4,173567868,0,0x0,8
tick,0x7fffe05afeb4,173583784,0,0x0,8
tick,0x7fffe05afeb4,173599895,0,0x0,8
tick,0x7fffe05afeb4,173615793,0,0x0,8
tick,0x7fffe05afeb4,173631768,0,0x0,8
tick,0x7fffe05afeb4,173647783,0,0x0,8
tick,0x7fffe05afeb4,173663770,0,0x0,8
tick,0x7fffe05afeb4,173679947,0,0x0,8
tick,0x7fffe05afeb4,173696152,0,0x0,8
tick,0x7fffe05afeb4,173711871,0,0x0,8
tick,0x7fffe05afeb4,173727865,0,0x0,8
tick,0x7fffe05afeb4,173743861,0,0x0,8
tick,0x7fffe05afeb4,173759792,0,0x0,8
tick,0x7fffe05afeb4,173775758,0,0x0,8
tick,0x7fffe05afeb4,173791764,0,0x0,8
tick,0x7fffe05afeb4,173807770,0,0x0,8
tick,0x7fffe05afeb4,173823799,0,0x0,8
tick,0x7fffe05afeb4,173839875,0,0x0,8
tick,0x7fffe05afeb4,173855861,0,0x0,8
tick,0x7fffe05afeb4,173871848,0,0x0,8
tick,0x7fffe05afeb4,173886805,0,0x0,8
tick,0x7fffe05afeb4,173902766,0,0x0,8
tick,0x7fffe05afeb4,173918827,0,0x0,8
tick,0x7fffe05afeb4,173935048,0,0x0,8
tick,0x7fffe05afeb4,173950933,0,0x0,8
tick,0x7fffe05afeb4,173966851,0,0x0,8
tick,0x7fffe05afeb4,173982810,0,0x0,8
tick,0x7fffe05afeb4,173998762,0,0x0,8
tick,0x7fffe05afeb4,174014763,0,0x0,8
tick,0x7fffe05afeb4,174030782,0,0x0,8
tick,0x7fffe05afeb4,174045865,0,0x0,8
tick,0x7fffe05afeb4,174061772,0,0x0,8
tick,0x7fffe05afeb4,174077775,0,0x0,8
tick,0x7fffe05afeb4,174093880,0,0x0,8
tick,0x7fffe05afeb4,174109869,0,0x0,8
tick,0x7fffe05afeb4,174125778,0,0x0,8
tick,0x7fffe05afeb4,174141781,0,0x0,8
tick,0x7fffe05afeb4,174157898,0,0x0,8
tick,0x7fffe05afeb4,174173855,0,0x0,8
tick,0x7fffe05afeb4,174189897,0,0x0,8
tick,0x7fffe05afeb4,174205870,0,0x0,8
tick,0x7fffe05afeb4,174221868,0,0x0,8
tick,0x7fffe05afeb4,174237772,0,0x0,8
tick,0x7fffe05afeb4,174253917,0,0x0,8
tick,0x7fffe05afeb4,174269901,0,0x0,8
tick,0x7fffe05afeb4,174285828,0,0x0,8
tick,0x7fffe05afeb4,174301767,0,0x0,8
tick,0x7fffe05afeb4,174317858,0,0x0,8
tick,0x7fffe05afeb4,174333838,0,0x0,8
tick,0x7fffe05afeb4,174349788,0,0x0,8
tick,0x7fffe05afeb4,174365800,0,0x0,8
tick,0x7fffe05afeb4,174381780,0,0x0,8
tick,0x7fffe05afeb4,174396776,0,0x0,8
tick,0x7fffe05afeb4,174412860,0,0x0,8
tick,0x7fffe05afeb4,174427770,0,0x0,8
tick,0x7fffe05afeb4,174443773,0,0x0,8
tick,0x7fffe05afeb4,174459797,0,0x0,8
tick,0x7fffe05afeb4,174475814,0,0x0,8
tick,0x7fffe05afeb4,174491870,0,0x0,8
tick,0x7fffe05afeb4,174507778,0,0x0,8
tick,0x7fffe05afeb4,174523843,0,0x0,8
tick,0x7fffe05afeb4,174539782,0,0x0,8
tick,0x7fffe05afeb4,174554775,0,0x0,8
tick,0x7fffe05afeb4,174570793,0,0x0,8
tick,0x7fffe05afeb4,174586773,0,0x0,8
tick,0x7fffe05afeb4,174602802,0,0x0,8
tick,0x7fffe05afeb4,174618848,0,0x0,8
tick,0x7fffe05afeb4,174634864,0,0x0,8
tick,0x7fffe05afeb4,174650759,0,0x0,8
tick,0x7fffe05afeb4,174665801,0,0x0,8
tick,0x7fffe05afeb4,174681769,0,0x0,8
tick,0x7fffe05afeb4,174697795,0,0x0,8
tick,0x7fffe05afeb4,174713840,0,0x0,8
tick,0x7fffe05afeb4,174729831,0,0x0,8
tick,0x7fffe05afeb4,174745863,0,0x0,8
tick,0x7fffe05afeb4,174761777,0,0x0,8
tick,0x7fffe05afeb4,174777856,0,0x0,8
tick,0x7fffe05afeb4,174793767,0,0x0,8
tick,0x7fffe05afeb4,174809826,0,0x0,8
tick,0x7fffe05afeb4,174825863,0,0x0,8
tick,0x7fffe05afeb4,174841812,0,0x0,8
tick,0x7fffe05afeb4,174857794,0,0x0,8
tick,0x7fffe05afeb4,174873869,0,0x0,8
tick,0x7fffe05afeb4,174889821,0,0x0,8
tick,0x7fffe05afeb4,174905775,0,0x0,8
tick,0x7fffe05afeb4,174921770,0,0x0,8
tick,0x7fffe05afeb4,174936873,0,0x0,8
tick,0x7fffe05afeb4,174952824,0,0x0,8
tick,0x7fffe05afeb4,174968857,0,0x0,8
tick,0x7fffe05afeb4,174984839,0,0x0,8
tick,0x7fffe05afeb4,175000771,0,0x0,8
tick,0x7fffe05afeb4,175015762,0,0x0,8
tick,0x7fffe05afeb4,175031937,0,0x0,8
tick,0x7fffe05afeb4,175046933,0,0x0,8
tick,0x7fffe05afeb4,175062937,0,0x0,8
tick,0x7fffe05afeb4,175078825,0,0x0,8
tick,0x7fffe05afeb4,175094861,0,0x0,8
tick,0x7fffe05afeb4,175110772,0,0x0,8
tick,0x7fffe05afeb4,175126766,0,0x0,8
tick,0x7fffe05afeb4,175142852,0,0x0,8
tick,0x7fffe05afeb4,175158868,0,0x0,8
tick,0x7fffe05afeb4,175174863,0,0x0,8
tick,0x7fffe05afeb4,175190767,0,0x0,8
tick,0x7fffe05afeb4,175206866,0,0x0,8
tick,0x7fffe05afeb4,175222823,0,0x0,8
tick,0x7fffe05afeb4,175238784,0,0x0,8
tick,0x7fffe05afeb4,175255016,0,0x0,8
tick,0x7fffe05afeb4,175270879,0,0x0,8
tick,0x7fffe05afeb4,175286852,0,0x0,8
tick,0x7fffe05afeb4,175302774,0,0x0,8
tick,0x7fffe05afeb4,175318847,0,0x0,8
tick,0x7fffe05afeb4,175334851,0,0x0,8
tick,0x7fffe05afeb4,175350761,0,0x0,8
tick,0x7fffe05afeb4,175365792,0,0x0,8
tick,0x7fffe05afeb4,175381847,0,0x0,8
tick,0x7fffe05afeb4,175397809,0,0x0,8
tick,0x7fffe05afeb4,175413859,0,0x0,8
tick,0x7fffe05afeb4,175429861,0,0x0,8
tick,0x7fffe05afeb4,175445785,0,0x0,8
tick,0x7fffe05afeb4,175461788,0,0x0,8
tick,0x7fffe05afeb4,175477776,0,0x0,8
tick,0x7fffe05afeb4,175493904,0,0x0,8
tick,0x7fffe05afeb4,175510216,0,0x0,8
tick,0x7fffe05afeb4,175525846,0,0x0,8
tick,0x7fffe05afeb4,175541764,0,0x0,8
tick,0x7fffe05afeb4,175557829,0,0x0,8
tick,0x7fffe05afeb4,175573798,0,0x0,8
tick,0x7fffe05afeb4,175589813,0,0x0,8
tick,0x7fffe05afeb4,175605790,0,0x0,8
tick,0x7fffe05afeb4,175621847,0,0x0,8
tick,0x7fffe05afeb4,175637850,0,0x0,8
tick,0x7fffe05afeb4,175653892,0,0x0,8
tick,0x7fffe05afeb4,175669895,0,0x0,8
tick,0x7fffe05afeb4,175685780,0,0x0,8
tick,0x7fffe05afeb4,175701800,0,0x0,8
tick,0x7fffe05afeb4,175717867,0,0x0,8
tick,0x7fffe05afeb4,175733833,0,0x0,8
tick,0x7fffe05afeb4,175749848,0,0x0,8
tick,0x7fffe05afeb4,175765859,0,0x0,8
tick,0x7fffe05afeb4,175781856,0,0x0,8
tick,0x7fffe05afeb4,175797765,0,0x0,8
tick,0x7fffe05afeb4,175813783,0,0x0,8
tick,0x7fffe05afeb4,175829897,0,0x0,8
tick,0x7fffe05afeb4,175845855,0,0x0,8
tick,0x7fffe05afeb4,175861849,0,0x0,8
tick,0x7fffe05afeb4,175877843,0,0x0,8
tick,0x7fffe05afeb4,175893856,0,0x0,8
tick,0x7fffe05afeb4,175909800,0,0x0,8
tick,0x7fffe05afeb4,175925798,0,0x0,8
tick,0x7fffe05afeb4,175941794,0,0x0,8
tick,0x7fffe05afeb4,175957860,0,0x0,8
tick,0x7fffe05afeb4,175973848,0,0x0,8
tick,0x7fffe05afeb4,175989817,0,0x0,8
tick,0x7fffe05afeb4,176005854,0,0x0,8
tick,0x7fffe05afeb4,176021776,0,0x0,8
tick,0x7fffe05afeb4,176037767,0,0x0,8
tick,0x7fffe05afeb4,176053796,0,0x0,8
tick,0x7fffe05afeb4,176069783,0,0x0,8
tick,0x7fffe05afeb4,176085871,0,0x0,8
tick,0x7fffe05afeb4,176101851,0,0x0,8
tick,0x7fffe05afeb4,176117849,0,0x0,8
tick,0x7fffe05afeb4,176133815,0,0x0,8
tick,0x7fffe05afeb4,176148805,0,0x0,8
tick,0x7fffe05afeb4,176165002,0,0x0,8
tick,0x7fffe05afeb4,176179882,0,0x0,8
tick,0x7fffe05afeb4,176195846,0,0x0,8
tick,0x7fffe05afeb4,176211869,0,0x0,8
tick,0x7fffe05afeb4,176227987,0,0x0,8
tick,0x7fffe05afeb4,176243765,0,0x0,8
tick,0x7fffe05afeb4,176259891,0,0x0,8
tick,0x7fffe05afeb4,176275778,0,0x0,8
tick,0x7fffe05afeb4,176291796,0,0x0,8
tick,0x7fffe05afeb4,176307846,0,0x0,8
tick,0x7fffe05afeb4,176323786,0,0x0,8
tick,0x7fffe05afeb4,176339842,0,0x0,8
tick,0x7fffe05afeb4,176355806,0,0x0,8
tick,0x7fffe05afeb4,176371795,0,0x0,8
tick,0x7fffe05afeb4,176387868,0,0x0,8
tick,0x7fffe05afeb4,176403878,0,0x0,8
tick,0x7fffe05afeb4,176418851,0,0x0,8
tick,0x7fffe05afeb4,176434801,0,0x0,8
tick,0x7fffe05afeb4,176450801,0,0x0,8
tick,0x7fffe05afeb4,176465821,0,0x0,8
tick,0x7fffe05afeb4,176481843,0,0x0,8
tick,0x7fffe05afeb4,176497783,0,0x0,8
tick,0x7fffe05afeb4,176513853,0,0x0,8
tick,0x7fffe05afeb4,176529865,0,0x0,8
tick,0x7fffe05afeb4,176545843,0,0x0,8
tick,0x7fffe05afeb4,176561832,0,0x0,8
tick,0x7fffe05afeb4,176577777,0,0x0,8
tick,0x7fffe05afeb4,176593838,0,0x0,8
tick,0x7fffe05afeb4,176609902,0,0x0,8
tick,0x7fffe05afeb4,176625840,0,0x0,8
tick,0x7fffe05afeb4,176641775,0,0x0,8
tick,0x7fffe05afeb4,176656874,0,0x0,8
tick,0x7fffe05afeb4,176672805,0,0x0,8
tick,0x7fffe05afeb4,176688771,0,0x0,8
tick,0x7fffe05afeb4,176704814,0,0x0,8
tick,0x7fffe05afeb4,176720813,0,0x0,8
tick,0x7fffe05afeb4,176736804,0,0x0,8
tick,0x7fffe05afeb4,176752844,0,0x0,8
tick,0x7fffe05afeb4,176768859,0,0x0,8
tick,0x7fffe05afeb4,176784848,0,0x0,8
tick,0x7fffe05afeb4,176800765,0,0x0,8
tick,0x7fffe05afeb4,176816778,0,0x0,8
tick,0x7fffe05afeb4,176832814,0,0x0,8
tick,0x7fffe05afeb4,176848792,0,0x0,8
tick,0x7fffe05afeb4,176864857,0,0x0,8
tick,0x7fffe05afeb4,176880756,0,0x0,8
tick,0x7fffe05afeb4,176895766,0,0x0,8
tick,0x7fffe05afeb4,176911794,0,0x0,8
tick,0x7fffe05afeb4,176927768,0,0x0,8
tick,0x7fffe05afeb4,176943847,0,0x0,8
tick,0x7fffe05afeb4,176959829,0,0x0,8
tick,0x7fffe05afeb4,176975779,0,0x0,8
tick,0x7fffe05afeb4,176991865,0,0x0,8
tick,0x7fffe05afeb4,177006778,0,0x0,8
tick,0x7fffe05afeb4,177022776,0,0x0,8
tick,0x7fffe05afeb4,177038801,0,0x0,8
tick,0x7fffe05afeb4,177054796,0,0x0,8
tick,0x7fffe05afeb4,177070856,0,0x0,8
tick,0x7fffe05afeb4,177086783,0,0x0,8
tick,0x7fffe05afeb4,177102858,0,0x0,8
tick,0x7fffe05afeb4,177118847,0,0x0,8
tick,0x7fffe05afeb4,177134790,0,0x0,8
tick,0x7fffe05afeb4,177150794,0,0x0,8
tick,0x7fffe05afeb4,177166801,0,0x0,8
tick,0x7fffe05afeb4,177182856,0,0x0,8
tick,0x7fffe05afeb4,177198778,0,0x0,8
tick,0x7fffe05afeb4,177214788,0,0x0,8
tick,0x7fffe05afeb4,177230843,0,0x0,8
tick,0x7fffe05afeb4,177245858,0,0x0,8
tick,0x7fffe05afeb4,177261809,0,0x0,8
tick,0x7fffe05afeb4,177276814,0,0x0,8
tick,0x7fffe05afeb4,177292786,0,0x0,8
tick,0x7fffe05afeb4,177308771,0,0x0,8
tick,0x7fffe05afeb4,177324774,0,0x0,8
tick,0x7fffe05afeb4,177340802,0,0x0,8
tick,0x7fffe05afeb4,177356808,0,0x0,8
tick,0x7fffe05afeb4,177372876,0,0x0,8
tick,0x7fffe05afeb4,177388792,0,0x0,8
tick,0x7fffe05afeb4,177404771,0,0x0,8
tick,0x7fffe05afeb4,177420947,0,0x0,8
tick,0x7fffe05afeb4,177436797,0,0x0,8
tick,0x7fffe05afeb4,177452848,0,0x0,8
tick,0x7fffe05afeb4,177468770,0,0x0,8
tick,0x7fffe05afeb4,177484768,0,0x0,8
tick,0x7fffe05afeb4,177500778,0,0x0,8
tick,0x7fffe05afeb4,177516781,0,0x0,8
tick,0x7fffe05afeb4,177532783,0,0x0,8
tick,0x7fffe05afeb4,177548777,0,0x0,8
tick,0x7fffe05afeb4,177564777,0,0x0,8
tick,0x7fffe05afeb4,177579890,0,0x0,8
tick,0x7fffe05afeb4,177595827,0,0x0,8
tick,0x7fffe05afeb4,177611801,0,0x0,8
tick,0x7fffe05afeb4,177626846,0,0x0,8
tick,0x7fffe05afeb4,177642785,0,0x0,8
tick,0x7fffe05afeb4,177658866,0,0x0,8
tick,0x7fffe05afeb4,177674852,0,0x0,8
tick,0x7fffe05afeb4,177690791,0,0x0,8
tick,0x7fffe05afeb4,177706811,0,0x0,8
tick,0x7fffe05afeb4,177722774,0,0x0,8
tick,0x7fffe05afeb4,177738782,0,0x0,8
tick,0x7fffe05afeb4,177754797,0,0x0,8
tick,0x7fffe05afeb4,177770780,0,0x0,8
tick,0x7fffe05afeb4,177786769,0,0x0,8
tick,0x7fffe05afeb4,177802784,0,0x0,8
tick,0x7fffe05afeb4,177817825,0,0x0,8
tick,0x7fffe05afeb4,177833785,0,0x0,8
tick,0x7fffe05afeb4,177849875,0,0x0,8
tick,0x7fffe05afeb4,177865789,0,0x0,8
tick,0x7fffe05afeb4,177881850,0,0x0,8
tick,0x7fffe05afeb4,177897772,0,0x0,8
tick,0x7fffe05afeb4,177913837,0,0x0,8
tick,0x7fffe05afeb4,177929862,0,0x0,8
tick,0x7fffe05afeb4,177945877,0,0x0,8
tick,0x7fffe05afeb4,177961847,0,0x0,8
tick,0x7fffe05afeb4,177976763,0,0x0,8
tick,0x7fffe05afeb4,177992866,0,0x0,8
tick,0x7fffe05afeb4,178008843,0,0x0,8
tick,0x7fffe05afeb4,178024861,0,0x0,8
tick,0x7fffe05afeb4,178040767,0,0x0,8
tick,0x7fffe05afeb4,178055788,0,0x0,8
tick,0x7fffe05afeb4,178072079,0,0x0,8
tick,0x7fffe05afeb4,178087783,0,0x0,8
tick,0x7fffe05afeb4,178103821,0,0x0,8
tick,0x7fffe05afeb4,178119834,0,0x0,8
tick,0x7fffe05afeb4,178135786,0,0x0,8
tick,0x7fffe05afeb4,178151783,0,0x0,8
tick,0x7fffe05afeb4,178167797,0,0x0,8
tick,0x7fffe05afeb4,178183779,0,0x0,8
tick,0x7fffe05afeb4,178199859,0,0x0,8
tick,0x7fffe05afeb4,178215885,0,0x0,8
tick,0x7fffe05afeb4,178231869,0,0x0,8
tick,0x7fffe05afeb4,178247794,0,0x0,8
tick,0x7fffe05afeb4,178263988,0,0x0,8
tick,0x7fffe05afeb4,178279933,0,0x0,8
tick,0x7fffe05afeb4,178295781,0,0x0,8
tick,0x7fffe05afeb4,178311834,0,0x0,8
tick,0x7fffe05afeb4,178327851,0,0x0,8
tick,0x7fffe05afeb4,178342813,0,0x0,8
tick,0x7fffe05afeb4,178358758,0,0x0,8
tick,0x7fffe05afeb4,178374767,0,0x0,8
tick,0x7fffe05afeb4,178390768,0,0x0,8
tick,0x7fffe05afeb4,178405765,0,0x0,8
tick,0x7fffe05afeb4,178421802,0,0x0,8
tick,0x7fffe05afeb4,178436768,0,0x0,8
tick,0x7fffe05afeb4,178452842,0,0x0,8
tick,0x7fffe05afeb4,178467852,0,0x0,8
tick,0x7fffe05afeb4,178483860,0,0x0,8
tick,0x7fffe05afeb4,178499909,0,0x0,8
tick,0x7fffe05afeb4,178515779,0,0x0,8
tick,0x7fffe05afeb4,178531849,0,0x0,8
tick,0x7fffe05afeb4,178547850,0,0x0,8
tick,0x7fffe05afeb4,178563805,0,0x0,8
tick,0x7fffe05afeb4,178579894,0,0x0,8
tick,0x7fffe05afeb4,178595848,0,0x0,8
tick,0x7fffe05afeb4,178611879,0,0x0,8
tick,0x7fffe05afeb4,178626785,0,0x0,8
tick,0x7fffe05afeb4,178642853,0,0x0,8
tick,0x7fffe05afeb4,178658849,0,0x0,8
tick,0x7fffe05afeb4,178674867,0,0x0,8
tick,0x7fffe05afeb4,178690775,0,0x0,8
tick,0x7fffe05afeb4,178705783,0,0x0,8
tick,0x7fffe05afeb4,178721828,0,0x0,8
tick,0x7fffe05afeb4,178737770,0,0x0,8
tick,0x7fffe05afeb4,178753762,0,0x0,8
tick,0x7fffe05afeb4,178769909,0,0x0,8
tick,0x7fffe05afeb4,178785905,0,0x0,8
tick,0x7fffe05afeb4,178801837,0,0x0,8
tick,0x7fffe05afeb4,178816833,0,0x0,8
tick,0x7fffe05afeb4,178832792,0,0x0,8
tick,0x7fffe05afeb4,178848822,0,0x0,8
tick,0x7fffe05afeb4,178864760,0,0x0,8
tick,0x7fffe05afeb4,178879864,0,0x0,8
tick,0x7fffe05afeb4,178895850,0,0x0,8
tick,0x7fffe05afeb4,178911840,0,0x0,8
tick,0x7fffe05afeb4,178926853,0,0x0,8
tick,0x7fffe05afeb4,178942855,0,0x0,8
tick,0x7fffe05afeb4,178957811,0,0x0,8
tick,0x7fffe05afeb4,178973762,0,0x0,8
tick,0x7fffe05afeb4,178989885,0,0x0,8
tick,0x7fffe05afeb4,179005854,0,0x0,8
tick,0x7fffe05afeb4,179021859,0,0x0,8
tick,0x7fffe05afeb4,179037827,0,0x0,8
tick,0x7fffe05afeb4,179053818,0,0x0,8
tick,0x7fffe05afeb4,179069793,0,0x0,8
tick,0x7fffe05afeb4,179085805,0,0x0,8
tick,0x7fffe05afeb4,179101826,0,0x0,8
tick,0x7fffe05afeb4,179116820,0,0x0,8
tick,0x7fffe05afeb4,179132768,0,0x0,8
tick,0x7fffe05afeb4,179147805,0,0x0,8
tick,0x7fffe05afeb4,179163865,0,0x0,8
tick,0x7fffe05afeb4,179179987,0,0x0,8
tick,0x7fffe05afeb4,179195774,0,0x0,8
tick,0x7fffe05afeb4,179211764,0,0x0,8
tick,0x7fffe05afeb4,179226851,0,0x0,8
tick,0x7fffe05afeb4,179242776,0,0x0,8
tick,0x7fffe05afeb4,179258776,0,0x0,8
tick,0x7fffe05afeb4,179273907,0,0x0,8
tick,0x7fffe05afeb4,179289822,0,0x0,8
tick,0x7fffe05afeb4,179305794,0,0x0,8
tick,0x7fffe05afeb4,179322030,0,0x0,8
tick,0x7fffe05afeb4,179337880,0,0x0,8
tick,0x7fffe05afeb4,179353909,0,0x0,8
tick,0x7fffe05afeb4,179368791,0,0x0,8
tick,0x7fffe05afeb4,179384997,0,0x0,8
tick,0x7fffe05afeb4,179400789,0,0x0,8
tick,0x7fffe05afeb4,179416796,0,0x0,8
tick,0x7fffe05afeb4,179432772,0,0x0,8
tick,0x7fffe05afeb4,179448819,0,0x0,8
tick,0x7fffe05afeb4,179464849,0,0x0,8
tick,0x7fffe05afeb4,179480856,0,0x0,8
tick,0x7fffe05afeb4,179496868,0,0x0,8
tick,0x7fffe05afeb4,179512779,0,0x0,8
tick,0x7fffe05afeb4,179527871,0,0x0,8
tick,0x7fffe05afeb4,179543846,0,0x0,8
tick,0x7fffe05afeb4,179559888,0,0x0,8
tick,0x7fffe05afeb4,179575908,0,0x0,8
tick,0x7fffe05afeb4,179591803,0,0x0,8
tick,0x7fffe05afeb4,179607780,0,0x0,8
tick,0x7fffe05afeb4,179623773,0,0x0,8
tick,0x7fffe05afeb4,179639871,0,0x0,8
tick,0x7fffe05afeb4,179655854,0,0x0,8
tick,0x7fffe05afeb4,179671866,0,0x0,8
tick,0x7fffe05afeb4,179687873,0,0x0,8
tick,0x7fffe05afeb4,179703884,0,0x0,8
tick,0x7fffe05afeb4,179719853,0,0x0,8
tick,0x7fffe05afeb4,179735770,0,0x0,8
tick,0x7fffe05afeb4,179751872,0,0x0,8
tick,0x7fffe05afeb4,179767846,0,0x0,8
tick,0x7fffe05afeb4,179783837,0,0x0,8
tick,0x7fffe05afeb4,179799896,0,0x0,8
tick,0x7fffe05afeb4,179815839,0,0x0,8
tick,0x7fffe05afeb4,179831780,0,0x0,8
tick,0x7fffe05afeb4,179847779,0,0x0,8
tick,0x7fffe05afeb4,179863856,0,0x0,8
tick,0x7fffe05afeb4,179879885,0,0x0,8
tick,0x7fffe05afeb4,179895847,0,0x0,8
tick,0x7fffe05afeb4,179911856,0,0x0,8
tick,0x7fffe05afeb4,179927840,0,0x0,8
tick,0x7fffe05afeb4,179943817,0,0x0,8
tick,0x7fffe05afeb4,179959822,0,0x0,8
tick,0x7fffe05afeb4,179974766,0,0x0,8
tick,0x7fffe05afeb4,179990868,0,0x0,8
tick,0x7fffe05afeb4,180006769,0,0x0,8
tick,0x7fffe05afeb4,180022791,0,0x0,8
tick,0x7fffe05afeb4,180038767,0,0x0,8
tick,0x7fffe05afeb4,180054810,0,0x0,8
tick,0x7fffe05afeb4,180070804,0,0x0,8
tick,0x7fffe05afeb4,180086812,0,0x0,8
tick,0x7fffe05afeb4,180102845,0,0x0,8
tick,0x7fffe05afeb4,180118785,0,0x0,8
tick,0x7fffe05afeb4,180134782,0,0x0,8
tick,0x7fffe05afeb4,180150812,0,0x0,8
tick,0x7fffe05afeb4,180166810,0,0x0,8
tick,0x7fffe05afeb4,180182763,0,0x0,8
tick,0x7fffe05afeb4,180198769,0,0x0,8
tick,0x7fffe05afeb4,180214806,0,0x0,8
tick,0x7fffe05afeb4,180230825,0,0x0,8
tick,0x7fffe05afeb4,180246849,0,0x0,8
tick,0x7fffe05afeb4,180262773,0,0x0,8
tick,0x7fffe05afeb4,180277871,0,0x0,8
tick,0x7fffe05afeb4,180293793,0,0x0,8
tick,0x7fffe05afeb4,180309837,0,0x0,8
tick,0x7fffe05afeb4,180325861,0,0x0,8
tick,0x7fffe05afeb4,180341794,0,0x0,8
tick,0x7fffe05afeb4,180357893,0,0x0,8
tick,0x7fffe05afeb4,180373778,0,0x0,8
tick,0x7fffe05afeb4,180389871,0,0x0,8
tick,0x7fffe05afeb4,180405765,0,0x0,8
tick,0x7fffe05afeb4,180421782,0,0x0,8
tick,0x7fffe05afeb4,180437760,0,0x0,8
tick,0x7fffe05afeb4,180453838,0,0x0,8
tick,0x7fffe05afeb4,180469896,0,0x0,8
tick,0x7fffe05afeb4,180484772,0,0x0,8
tick,0x7fffe05afeb4,180500769,0,0x0,8
tick,0x7fffe05afeb4,180516779,0,0x0,8
tick,0x7fffe05afeb4,180531805,0,0x0,8
tick,0x7fffe05afeb4,180547801,0,0x0,8
tick,0x7fffe05afeb4,180563772,0,0x0,8
tick,0x7fffe05afeb4,180579852,0,0x0,8
tick,0x7fffe05afeb4,180595804,0,0x0,8
tick,0x7fffe05afeb4,180611832,0,0x0,8
tick,0x7fffe05afeb4,180627759,0,0x0,8
tick,0x7fffe05afeb4,180643768,0,0x0,8
tick,0x7fffe05afeb4,180659807,0,0x0,8
tick,0x7fffe05afeb4,180675771,0,0x0,8
tick,0x7fffe05afeb4,180691779,0,0x0,8
tick,0x7fffe05afeb4,180707789,0,0x0,8
tick,0x7fffe05afeb4,180723777,0,0x0,8
tick,0x7fffe05afeb4,180739870,0,0x0,8
tick,0x7fffe05afeb4,180755758,0,0x0,8
tick,0x7fffe05afeb4,180771768,0,0x0,8
tick,0x7fffe05afeb4,180787761,0,0x0,8
tick,0x7fffe05afeb4,180803801,0,0x0,8
tick,0x7fffe05afeb4,180819766,0,0x0,8
tick,0x7fffe05afeb4,180835781,0,0x0,8
tick,0x7fffe05afeb4,180851751,0,0x0,8
tick,0x7fffe05afeb4,180867793,0,0x0,8
tick,0x7fffe05afeb4,180883752,0,0x0,8
tick,0x7fffe05afeb4,180898765,0,0x0,8
tick,0x7fffe05afeb4,180914848,0,0x0,8
tick,0x7fffe05afeb4,180930880,0,0x0,8
tick,0x7fffe05afeb4,180946803,0,0x0,8
tick,0x7fffe05afeb4,180962763,0,0x0,8
tick,0x7fffe05afeb4,180977786,0,0x0,8
tick,0x7fffe05afeb4,180993857,0,0x0,8
tick,0x7fffe05afeb4,181009911,0,0x0,8
tick,0x7fffe05afeb4,181025850,0,0x0,8
tick,0x7fffe05afeb4,181041777,0,0x0,8
tick,0x7fffe05afeb4,181057869,0,0x0,8
tick,0x7fffe05afeb4,181073784,0,0x0,8
tick,0x7fffe05afeb4,181089855,0,0x0,8
tick,0x7fffe05afeb4,181105845,0,0x0,8
tick,0x7fffe05afeb4,181121857,0,0x0,8
tick,0x7fffe05afeb4,181137856,0,0x0,8
tick,0x7fffe05afeb4,181153925,0,0x0,8
tick,0x7fffe05afeb4,181169797,0,0x0,8
tick,0x7fffe05afeb4,181185825,0,0x0,8
tick,0x7fffe05afeb4,181201764,0,0x0,8
tick,0x7fffe05afeb4,181217810,0,0x0,8
tick,0x7fffe05afeb4,181233868,0,0x0,8
tick,0x7fffe05afeb4,181249849,0,0x0,8
tick,0x7fffe05afeb4,181264861,0,0x0,8
tick,0x7fffe05afeb4,181280906,0,0x0,8
tick,0x7fffe05afeb4,181295772,0,0x0,8
tick,0x7fffe05afeb4,181311775,0,0x0,8
tick,0x7fffe05afeb4,181327778,0,0x0,8
tick,0x7fffe05afeb4,181343850,0,0x0,8
tick,0x7fffe05afeb4,181359907,0,0x0,8
tick,0x7fffe05afeb4,181375842,0,0x0,8
tick,0x7fffe05afeb4,181391858,0,0x0,8
tick,0x7fffe05afeb4,181407797,0,0x0,8
tick,0x7fffe05afeb4,181423760,0,0x0,8
tick,0x7fffe05afeb4,181439802,0,0x0,8
tick,0x7fffe05afeb4,181454771,0,0x0,8
tick,0x7fffe05afeb4,181470853,0,0x0,8
tick,0x7fffe05afeb4,181486851,0,0x0,8
tick,0x7fffe05afeb4,181502860,0,0x0,8
tick,0x7fffe05afeb4,181518843,0,0x0,8
tick,0x7fffe05afeb4,181534809,0,0x0,8
tick,0x7fffe05afeb4,181550764,0,0x0,8
tick,0x7fffe05afeb4,181566858,0,0x0,8
tick,0x7fffe05afeb4,181582856,0,0x0,8
tick,0x7fffe05afeb4,181597835,0,0x0,8
tick,0x7fffe05afeb4,181613866,0,0x0,8
tick,0x7fffe05afeb4,181629884,0,0x0,8
tick,0x7fffe05afeb4,181645850,0,0x0,8
tick,0x7fffe05afeb4,181661796,0,0x0,8
tick,0x7fffe05afeb4,181677791,0,0x0,8
tick,0x7fffe05afeb4,181693866,0,0x0,8
tick,0x7fffe05afeb4,181708854,0,0x0,8
tick,0x7fffe05afeb4,181724795,0,0x0,8
tick,0x7fffe05afeb4,181739813,0,0x0,8
tick,0x7fffe05afeb4,181755813,0,0x0,8
tick,0x7fffe05afeb4,181771781,0,0x0,8
tick,0x7fffe05afeb4,181787840,0,0x0,8
tick,0x7fffe05afeb4,181803769,0,0x0,8
tick,0x7fffe05afeb4,181819808,0,0x0,8
tick,0x7fffe05afeb4,181835878,0,0x0,8
tick,0x7fffe05afeb4,181851839,0,0x0,8
tick,0x7fffe05afeb4,181867829,0,0x0,8
tick,0x7fffe05afeb4,181883771,0,0x0,8
tick,0x7fffe05afeb4,181898863,0,0x0,8
tick,0x7fffe05afeb4,181914848,0,0x0,8
tick,0x7fffe05afeb4,181930866,0,0x0,8
tick,0x7fffe05afeb4,181946042,0,0x0,8
tick,0x7fffe05afeb4,181961870,0,0x0,8
tick,0x7fffe05afeb4,181977758,0,0x0,8
tick,0x7fffe05afeb4,181993776,0,0x0,8
tick,0x7fffe05afeb4,182009833,0,0x0,8
tick,0x7fffe05afeb4,182025859,0,0x0,8
tick,0x7fffe05afeb4,182041780,0,0x0,8
tick,0x7fffe05afeb4,182056942,0,0x0,8
tick,0x7fffe05afeb4,182072781,0,0x0,8
tick,0x7fffe05afeb4,182087783,0,0x0,8
tick,0x7fffe05afeb4,182103778,0,0x0,8
tick,0x7fffe05afeb4,182119806,0,0x0,8
tick,0x7fffe05afeb4,182135792,0,0x0,8
tick,0x7fffe05afeb4,182151807,0,0x0,8
tick,0x7fffe05afeb4,182167881,0,0x0,8
tick,0x7fffe05afeb4,182183856,0,0x0,8
tick,0x7fffe05afeb4,182199871,0,0x0,8
tick,0x7fffe05afeb4,182215807,0,0x0,8
tick,0x7fffe05afeb4,182231788,0,0x0,8
tick,0x7fffe05afeb4,182247801,0,0x0,8
tick,0x7fffe05afeb4,182263775,0,0x0,8
tick,0x7fffe05afeb4,182278873,0,0x0,8
tick,0x7fffe05afeb4,182294787,0,0x0,8
tick,0x7fffe05afeb4,182310881,0,0x0,8
tick,0x7fffe05afeb4,182326843,0,0x0,8
tick,0x7fffe05afeb4,182342765,0,0x0,8
tick,0x7fffe05afeb4,182358788,0,0x0,8
tick,0x7fffe05afeb4,182374869,0,0x0,8
tick,0x7fffe05afeb4,182390797,0,0x0,8
tick,0x7fffe05afeb4,182406843,0,0x0,8
tick,0x7fffe05afeb4,182422855,0,0x0,8
tick,0x7fffe05afeb4,182438793,0,0x0,8
tick,0x7fffe05afeb4,182454774,0,0x0,8
tick,0x7fffe05afeb4,182470775,0,0x0,8
tick,0x7fffe05afeb4,182486856,0,0x0,8
tick,0x7fffe05afeb4,182502864,0,0x0,8
tick,0x7fffe05afeb4,182518783,0,0x0,8
tick,0x7fffe05afeb4,182534884,0,0x0,8
tick,0x7fffe05afeb4,182550778,0,0x0,8
tick,0x7fffe05afeb4,182566805,0,0x0,8
tick,0x7fffe05afeb4,182582775,0,0x0,8
tick,0x7fffe05afeb4,182598854,0,0x0,8
tick,0x7fffe05afeb4,182614862,0,0x0,8
tick,0x7fffe05afeb4,182630850,0,0x0,8
tick,0x7fffe05afeb4,182645787,0,0x0,8
tick,0x7fffe05afeb4,182661846,0,0x0,8
tick,0x7fffe05afeb4,182677785,0,0x0,8
tick,0x7fffe05afeb4,182693776,0,0x0,8
tick,0x7fffe05afeb4,182709889,0,0x0,8
tick,0x7fffe05afeb4,182725820,0,0x0,8
tick,0x7fffe05afeb4,182741821,0,0x0,8
tick,0x7fffe05afeb4,182757769,0,0x0,8
tick,0x7fffe05afeb4,182773784,0,0x0,8
tick,0x7fffe05afeb4,182789788,0,0x0,8
tick,0x7fffe05afeb4,182804772,0,0x0,8
tick,0x7fffe05afeb4,182820984,0,0x0,8
tick,0x7fffe05afeb4,182836889,0,0x0,8
tick,0x7fffe05afeb4,182851860,0,0x0,8
tick,0x7fffe05afeb4,182867781,0,0x0,8
tick,0x7fffe05afeb4,182883778,0,0x0,8
tick,0x7fffe05afeb4,182899836,0,0x0,8
tick,0x7fffe05afeb4,182915793,0,0x0,8
tick,0x7fffe05afeb4,182930862,0,0x0,8
tick,0x7fffe05afeb4,182946875,0,0x0,8
tick,0x7fffe05afeb4,182962874,0,0x0,8
tick,0x7fffe05afeb4,182978790,0,0x0,8
tick,0x7fffe05afeb4,182994846,0,0x0,8
tick,0x7fffe05afeb4,183010777,0,0x0,8
tick,0x7fffe05afeb4,183026777,0,0x0,8
tick,0x7fffe05afeb4,183042783,0,0x0,8
tick,0x7fffe05afeb4,183058863,0,0x0,8
tick,0x7fffe05afeb4,183073792,0,0x0,8
tick,0x7fffe05afeb4,183088807,0,0x0,8
tick,0x7fffe05afeb4,183103776,0,0x0,8
tick,0x7fffe05afeb4,183119780,0,0x0,8
tick,0x7fffe05afeb4,183135777,0,0x0,8
tick,0x7fffe05afeb4,183151792,0,0x0,8
tick,0x7fffe05afeb4,183167881,0,0x0,8
tick,0x7fffe05afeb4,183183788,0,0x0,8
tick,0x7fffe05afeb4,183199836,0,0x0,8
tick,0x7fffe05afeb4,183215773,0,0x0,8
tick,0x7fffe05afeb4,183231859,0,0x0,8
tick,0x7fffe05afeb4,183247766,0,0x0,8
tick,0x7fffe05afeb4,183263802,0,0x0,8
tick,0x7fffe05afeb4,183279824,0,0x0,8
tick,0x7fffe05afeb4,183295930,0,0x0,8
tick,0x7fffe05afeb4,183311760,0,0x0,8
tick,0x7fffe05afeb4,183327820,0,0x0,8
tick,0x7fffe05afeb4,183343807,0,0x0,8
tick,0x7fffe05afeb4,183359803,0,0x0,8
tick,0x7fffe05afeb4,183375784,0,0x0,8
tick,0x7fffe05afeb4,183390871,0,0x0,8
tick,0x7fffe05afeb4,183405765,0,0x0,8
tick,0x7fffe05afeb4,183421842,0,0x0,8
tick,0x7fffe05afeb4,183436777,0,0x0,8
tick,0x7fffe05afeb4,183452844,0,0x0,8
tick,0x7fffe05afeb4,183468798,0,0x0,8
tick,0x7fffe05afeb4,183484761,0,0x0,8
tick,0x7fffe05afeb4,183499922,0,0x0,8
tick,0x7fffe05afeb4,183515787,0,0x0,8
tick,0x7fffe05afeb4,183531893,0,0x0,8
tick,0x7fffe05afeb4,183547865,0,0x0,8
tick,0x7fffe05afeb4,183562848,0,0x0,8
tick,0x7fffe05afeb4,183578804,0,0x0,8
tick,0x7fffe05afeb4,183594776,0,0x0,8
tick,0x7fffe05afeb4,183610787,0,0x0,8
tick,0x7fffe05afeb4,183626837,0,0x0,8
tick,0x7fffe05afeb4,183642869,0,0x0,8
tick,0x7fffe05afeb4,183658778,0,0x0,8
tick,0x7fffe05afeb4,183674880,0,0x0,8
tick,0x7fffe05afeb4,183690788,0,0x0,8
tick,0x7fffe05afeb4,183706775,0,0x0,8
tick,0x7fffe05afeb4,183722885,0,0x0,8
tick,0x7fffe05afeb4,183737767,0,0x0,8
tick,0x7fffe05afeb4,183753784,0,0x0,8
tick,0x7fffe05afeb4,183769876,0,0x0,8
tick,0x7fffe05afeb4,183785869,0,0x0,8
tick,0x7fffe05afeb4,183801777,0,0x0,8
tick,0x7fffe05afeb4,183817798,0,0x0,8
tick,0x7fffe05afeb4,183833777,0,0x0,8
tick,0x7fffe05afeb4,183849903,0,0x0,8
tick,0x7fffe05afeb4,183865780,0,0x0,8
tick,0x7fffe05afeb4,183881862,0,0x0,8
tick,0x7fffe05afeb4,183896801,0,0x0,8
tick,0x7fffe05afeb4,183912759,0,0x0,8
tick,0x7fffe05afeb4,183928776,0,0x0,8
tick,0x7fffe05afeb4,183944781,0,0x0,8
tick,0x7fffe05afeb4,183960809,0,0x0,8
tick,0x7fffe05afeb4,183976882,0,0x0,8
tick,0x7fffe05afeb4,183992770,0,0x0,8
tick,0x7fffe05afeb4,184008782,0,0x0,8
tick,0x7fffe05afeb4,184024794,0,0x0,8
tick,0x7fffe05afeb4,184040785,0,0x0,8
tick,0x7fffe05afeb4,184056826,0,0x0,8
tick,0x7fffe05afeb4,184072763,0,0x0,8
tick,0x7fffe05afeb4,184088794,0,0x0,8
tick,0x7fffe05afeb4,184104775,0,0x0,8
tick,0x7fffe05afeb4,184120795,0,0x0,8
tick,0x7fffe05afeb4,184136759,0,0x0,8
tick,0x7fffe05afeb4,184152765,0,0x0,8
tick,0x7fffe05afeb4,184168883,0,0x0,8
tick,0x7fffe05afeb4,184184978,0,0x0,8
tick,0x7fffe05afeb4,184200812,0,0x0,8
tick,0x7fffe05afeb4,184216771,0,0x0,8
tick,0x7fffe05afeb4,184232864,0,0x0,8
tick,0x7fffe05afeb4,184248782,0,0x0,8
tick,0x7fffe05afeb4,184264854,0,0x0,8
tick,0x7fffe05afeb4,184279792,0,0x0,8
tick,0x7fffe05afeb4,184294771,0,0x0,8
tick,0x7fffe05afeb4,184310864,0,0x0,8
tick,0x7fffe05afeb4,184326850,0,0x0,8
tick,0x7fffe05afeb4,184342841,0,0x0,8
tick,0x7fffe05afeb4,184358842,0,0x0,8
tick,0x7fffe05afeb4,184374780,0,0x0,8
tick,0x7fffe05afeb4,184390875,0,0x0,8
tick,0x7fffe05afeb4,184406847,0,0x0,8
tick,0x7fffe05afeb4,184422761,0,0x0,8
tick,0x7fffe05afeb4,184437832,0,0x0,8
tick,0x7fffe05afeb4,184453851,0,0x0,8
tick,0x7fffe05afeb4,184469830,0,0x0,8
tick,0x7fffe05afeb4,184485766,0,0x0,8
tick,0x7fffe05afeb4,184501788,0,0x0,8
tick,0x7fffe05afeb4,184517855,0,0x0,8
tick,0x7fffe05afeb4,184533860,0,0x0,8
tick,0x7fffe05afeb4,184549810,0,0x0,8
tick,0x7fffe05afeb4,184565847,0,0x0,8
tick,0x7fffe05afeb4,184581781,0,0x0,8
tick,0x7fffe05afeb4,184597780,0,0x0,8
tick,0x7fffe05afeb4,184613789,0,0x0,8
tick,0x7fffe05afeb4,184629875,0,0x0,8
tick,0x7fffe05afeb4,184645846,0,0x0,8
tick,0x7fffe05afeb4,184661774,0,0x0,8
tick,0x7fffe05afeb4,184677876,0,0x0,8
tick,0x7fffe05afeb4,184693761,0,0x0,8
tick,0x7fffe05afeb4,184709801,0,0x0,8
tick,0x7fffe05afeb4,184725775,0,0x0,8
tick,0x7fffe05afeb4,184741777,0,0x0,8
tick,0x7fffe05afeb4,184757846,0,0x0,8
tick,0x7fffe05afeb4,184773778,0,0x0,8
tick,0x7fffe05afeb4,184789798,0,0x0,8
tick,0x7fffe05afeb4,184805850,0,0x0,8
tick,0x7fffe05afeb4,184821781,0,0x0,8
tick,0x7fffe05afeb4,184837785,0,0x0,8
tick,0x7fffe05afeb4,184853771,0,0x0,8
tick,0x7fffe05afeb4,184869914,0,0x0,8
tick,0x7fffe05afeb4,184885798,0,0x0,8
tick,0x7fffe05afeb4,184901850,0,0x0,8
tick,0x7fffe05afeb4,184917777,0,0x0,8
tick,0x7fffe05afeb4,184933844,0,0x0,8
tick,0x7fffe05afeb4,184949813,0,0x0,8
tick,0x7fffe05afeb4,184964768,0,0x0,8
tick,0x7fffe05afeb4,184979919,0,0x0,8
tick,0x7fffe05afeb4,184995845,0,0x0,8
tick,0x7fffe05afeb4,185011858,0,0x0,8
tick,0x7fffe05afeb4,185027864,0,0x0,8
tick,0x7fffe05afeb4,185043852,0,0x0,8
tick,0x7fffe05afeb4,185060063,0,0x0,8
tick,0x7fffe05afeb4,185075858,0,0x0,8
tick,0x7fffe05afeb4,185090800,0,0x0,8
tick,0x7fffe05afeb4,185106867,0,0x0,8
tick,0x7fffe05afeb4,185122811,0,0x0,8
tick,0x7fffe05afeb4,185138857,0,0x0,8
tick,0x7fffe05afeb4,185154958,0,0x0,8
tick,0x7fffe05afeb4,185170779,0,0x0,8
tick,0x7fffe05afeb4,185185770,0,0x0,8
tick,0x7fffe05afeb4,185201853,0,0x0,8
tick,0x7fffe05afeb4,185217837,0,0x0,8
tick,0x7fffe05afeb4,185233843,0,0x0,8
tick,0x7fffe05afeb4,185249781,0,0x0,8
tick,0x7fffe05afeb4,185265849,0,0x0,8
tick,0x7fffe05afeb4,185281825,0,0x0,8
tick,0x7fffe05afeb4,185297771,0,0x0,8
tick,0x7fffe05afeb4,185313827,0,0x0,8
tick,0x7fffe05afeb4,185329881,0,0x0,8
tick,0x7fffe05afeb4,185345818,0,0x0,8
tick,0x7fffe05afeb4,185361846,0,0x0,8
tick,0x7fffe05afeb4,185377852,0,0x0,8
tick,0x7fffe05afeb4,185393918,0,0x0,8
tick,0x7fffe05afeb4,185408772,0,0x0,8
tick,0x7fffe05afeb4,185424851,0,0x0,8
tick,0x7fffe05afeb4,185440784,0,0x0,8
tick,0x7fffe05afeb4,185456856,0,0x0,8
tick,0x7fffe05afeb4,185472863,0,0x0,8
tick,0x7fffe05afeb4,185488872,0,0x0,8
tick,0x7fffe05afeb4,185504827,0,0x0,8
tick,0x7fffe05afeb4,185520785,0,0x0,8
tick,0x7fffe05afeb4,185536816,0,0x0,8
tick,0x7fffe05afeb4,185552831,0,0x0,8
tick,0x7fffe05afeb4,185567841,0,0x0,8
tick,0x7fffe05afeb4,185583855,0,0x0,8
tick,0x7fffe05afeb4,185599882,0,0x0,8
tick,0x7fffe05afeb4,185615807,0,0x0,8
tick,0x7fffe05afeb4,185631771,0,0x0,8
tick,0x7fffe05afeb4,185647771,0,0x0,8
tick,0x7fffe05afeb4,185663768,0,0x0,8
tick,0x7fffe05afeb4,185679953,0,0x0,8
tick,0x7fffe05afeb4,185695778,0,0x0,8
tick,0x7fffe05afeb4,185711862,0,0x0,8
tick,0x7fffe05afeb4,185727775,0,0x0,8
tick,0x7fffe05afeb4,185743764,0,0x0,8
tick,0x7fffe05afeb4,185759820,0,0x0,8
tick,0x7fffe05afeb4,185775848,0,0x0,8
tick,0x7fffe05afeb4,185791778,0,0x0,8
tick,0x7fffe05afeb4,185807848,0,0x0,8
tick,0x7fffe05afeb4,185823855,0,0x0,8
tick,0x7fffe05afeb4,185839908,0,0x0,8
tick,0x7fffe05afeb4,185855791,0,0x0,8
tick,0x7fffe05afeb4,185871773,0,0x0,8
tick,0x7fffe05afeb4,185887776,0,0x0,8
tick,0x7fffe05afeb4,185903889,0,0x0,8
tick,0x7fffe05afeb4,185919808,0,0x0,8
tick,0x7fffe05afeb4,185935902,0,0x0,8
tick,0x7fffe05afeb4,185951859,0,0x0,8
tick,0x7fffe05afeb4,185966773,0,0x0,8
tick,0x7fffe05afeb4,185982783,0,0x0,8
tick,0x7fffe05afeb4,185998830,0,0x0,8
tick,0x7fffe05afeb4,186014849,0,0x0,8
tick,0x7fffe05afeb4,186030826,0,0x0,8
tick,0x7fffe05afeb4,186045861,0,0x0,8
tick,0x7fffe05afeb4,186061834,0,0x0,8
tick,0x7fffe05afeb4,186076859,0,0x0,8
tick,0x7fffe05afeb4,186092776,0,0x0,8
tick,0x7fffe05afeb4,186108779,0,0x0,8
tick,0x7fffe05afeb4,186124851,0,0x0,8
tick,0x7fffe05afeb4,186139894,0,0x0,8
tick,0x7fffe05afeb4,186155776,0,0x0,8
tick,0x7fffe05afeb4,186171796,0,0x0,8
tick,0x7fffe05afeb4,186187829,0,0x0,8
tick,0x7fffe05afeb4,186203766,0,0x0,8
tick,0x7fffe05afeb4,186219868,0,0x0,8
tick,0x7fffe05afeb4,186234814,0,0x0,8
tick,0x7fffe05afeb4,186250777,0,0x0,8
tick,0x7fffe05afeb4,186266854,0,0x0,8
tick,0x7fffe05afeb4,186282791,0,0x0,8
tick,0x7fffe05afeb4,186298783,0,0x0,8
tick,0x7fffe05afeb4,186314809,0,0x0,8
tick,0x7fffe05afeb4,186330786,0,0x0,8
tick,0x7fffe05afeb4,186346767,0,0x0,8
tick,0x7fffe05afeb4,186362841,0,0x0,8
tick,0x7fffe05afeb4,186378773,0,0x0,8
tick,0x7fffe05afeb4,186393822,0,0x0,8
tick,0x7fffe05afeb4,186409941,0,0x0,8
tick,0x7fffe05afeb4,186424835,0,0x0,8
tick,0x7fffe05afeb4,186440785,0,0x0,8
tick,0x7fffe05afeb4,186456844,0,0x0,8
tick,0x7fffe05afeb4,186472890,0,0x0,8
tick,0x7fffe05afeb4,186488858,0,0x0,8
tick,0x7fffe05afeb4,186504776,0,0x0,8
tick,0x7fffe05afeb4,186520782,0,0x0,8
tick,0x7fffe05afeb4,186536776,0,0x0,8
tick,0x7fffe05afeb4,186552779,0,0x0,8
tick,0x7fffe05afeb4,186567859,0,0x0,8
tick,0x7fffe05afeb4,186583789,0,0x0,8
tick,0x7fffe05afeb4,186599866,0,0x0,8
tick,0x7fffe05afeb4,186614789,0,0x0,8
tick,0x7fffe05afeb4,186630837,0,0x0,8
tick,0x7fffe05afeb4,186646809,0,0x0,8
tick,0x7fffe05afeb4,186662787,0,0x0,8
tick,0x7fffe05afeb4,186678771,0,0x0,8
tick,0x7fffe05afeb4,186694756,0,0x0,8
tick,0x7fffe05afeb4,186710858,0,0x0,8
tick,0x7fffe05afeb4,186726852,0,0x0,8
tick,0x7fffe05afeb4,186742860,0,0x0,8
tick,0x7fffe05afeb4,186757778,0,0x0,8
tick,0x7fffe05afeb4,186773777,0,0x0,8
tick,0x7fffe05afeb4,186789800,0,0x0,8
tick,0x7fffe05afeb4,186805842,0,0x0,8
tick,0x7fffe05afeb4,186821796,0,0x0,8
tick,0x7fffe05afeb4,186837852,0,0x0,8
tick,0x7fffe05afeb4,186853882,0,0x0,8
tick,0x7fffe05afeb4,186869790,0,0x0,8
tick,0x7fffe05afeb4,186885786,0,0x0,8
tick,0x7fffe05afeb4,186901896,0,0x0,8
tick,0x7fffe05afeb4,186916764,0,0x0,8
tick,0x7fffe05afeb4,186932864,0,0x0,8
tick,0x7fffe05afeb4,186948790,0,0x0,8
tick,0x7fffe05afeb4,186964849,0,0x0,8
tick,0x7fffe05afeb4,186980777,0,0x0,8
tick,0x7fffe05afeb4,186995773,0,0x0,8
tick,0x7fffe05afeb4,187011766,0,0x0,8
tick,0x7fffe05afeb4,187027852,0,0x0,8
tick,0x7fffe05afeb4,187043787,0,0x0,8
tick,0x7fffe05afeb4,187059978,0,0x0,8
tick,0x7fffe05afeb4,187075914,0,0x0,8
tick,0x7fffe05afeb4,187091811,0,0x0,8
tick,0x7fffe05afeb4,187106781,0,0x0,8
tick,0x7fffe05afeb4,187122770,0,0x0,8
tick,0x7fffe05afeb4,187138868,0,0x0,8
tick,0x7fffe05afeb4,187154887,0,0x0,8
tick,0x7fffe05afeb4,187170868,0,0x0,8
tick,0x7fffe05afeb4,187186846,0,0x0,8
tick,0x7fffe05afeb4,187202832,0,0x0,8
tick,0x7fffe05afeb4,187217775,0,0x0,8
tick,0x7fffe05afeb4,187233812,0,0x0,8
tick,0x7fffe05afeb4,187249877,0,0x0,8
tick,0x7fffe05afeb4,187265849,0,0x0,8
tick,0x7fffe05afeb4,187281873,0,0x0,8
tick,0x7fffe05afeb4,187297769,0,0x0,8
tick,0x7fffe05afeb4,187313765,0,0x0,8
tick,0x7fffe05afeb4,187328789,0,0x0,8
tick,0x7fffe05afeb4,187343778,0,0x0,8
tick,0x7fffe05afeb4,187358893,0,0x0,8
tick,0x7fffe05afeb4,187374861,0,0x0,8
tick,0x7fffe05afeb4,187389866,0,0x0,8
tick,0x7fffe05afeb4,187405770,0,0x0,8
tick,0x7fffe05afeb4,187421861,0,0x0,8
tick,0x7fffe05afeb4,187437806,0,0x0,8
tick,0x7fffe05afeb4,187453767,0,0x0,8
tick,0x7fffe05afeb4,187469780,0,0x0,8
tick,0x7fffe05afeb4,187485774,0,0x0,8
tick,0x7fffe05afeb4,187501947,0,0x0,8
tick,0x7fffe05afeb4,187517844,0,0x0,8
tick,0x7fffe05afeb4,187533876,0,0x0,8
tick,0x7fffe05afeb4,187549832,0,0x0,8
tick,0x7fffe05afeb4,187565770,0,0x0,8
tick,0x7fffe05afeb4,187581824,0,0x0,8
tick,0x7fffe05afeb4,187597784,0,0x0,8
tick,0x7fffe05afeb4,187613855,0,0x0,8
tick,0x7fffe05afeb4,187629853,0,0x0,8
tick,0x7fffe05afeb4,187644844,0,0x0,8
tick,0x7fffe05afeb4,187660770,0,0x0,8
tick,0x7fffe05afeb4,187676765,0,0x0,8
tick,0x7fffe05afeb4,187692867,0,0x0,8
tick,0x7fffe05afeb4,187708773,0,0x0,8
tick,0x7fffe05afeb4,187724855,0,0x0,8
tick,0x7fffe05afeb4,187740797,0,0x0,8
tick,0x7fffe05afeb4,187756883,0,0x0,8
tick,0x7fffe05afeb4,187772777,0,0x0,8
tick,0x7fffe05afeb4,187788776,0,0x0,8
tick,0x7fffe05afeb4,187804847,0,0x0,8
tick,0x7fffe05afeb4,187820860,0,0x0,8
tick,0x7fffe05afeb4,187836858,0,0x0,8
tick,0x7fffe05afeb4,187852849,0,0x0,8
tick,0x7fffe05afeb4,187868853,0,0x0,8
tick,0x7fffe05afeb4,187884779,0,0x0,8
tick,0x7fffe05afeb4,187899781,0,0x0,8
tick,0x7fffe05afeb4,187915785,0,0x0,8
tick,0x7fffe05afeb4,187931858,0,0x0,8
tick,0x7fffe05afeb4,187947790,0,0x0,8
tick,0x7fffe05afeb4,187963834,0,0x0,8
tick,0x7fffe05afeb4,187979841,0,0x0,8
tick,0x7fffe05afeb4,187995850,0,0x0,8
tick,0x7fffe05afeb4,188011764,0,0x0,8
tick,0x7fffe05afeb4,188027806,0,0x0,8
tick,0x7fffe05afeb4,188042775,0,0x0,8
tick,0x7fffe05afeb4,188057770,0,0x0,8
tick,0x7fffe05afeb4,188073774,0,0x0,8
tick,0x7fffe05afeb4,188089836,0,0x0,8
tick,0x7fffe05afeb4,188105784,0,0x0,8
tick,0x7fffe05afeb4,188121796,0,0x0,8
tick,0x7fffe05afeb4,188136775,0,0x0,8
tick,0x7fffe05afeb4,188152834,0,0x0,8
tick,0x7fffe05afeb4,188168871,0,0x0,8
tick,0x7fffe05afeb4,188184859,0,0x0,8
tick,0x7fffe05afeb4,188200769,0,0x0,8
tick,0x7fffe05afeb4,188216779,0,0x0,8
tick,0x7fffe05afeb4,188232810,0,0x0,8
tick,0x7fffe05afeb4,188248766,0,0x0,8
tick,0x7fffe05afeb4,188264816,0,0x0,8
tick,0x7fffe05afeb4,188280772,0,0x0,8
tick,0x7fffe05afeb4,188295878,0,0x0,8
tick,0x7fffe05afeb4,188311770,0,0x0,8
tick,0x7fffe05afeb4,188327862,0,0x0,8
tick,0x7fffe05afeb4,188343914,0,0x0,8
tick,0x7fffe05afeb4,188359811,0,0x0,8
tick,0x7fffe05afeb4,188375792,0,0x0,8
tick,0x7fffe05afeb4,188391861,0,0x0,8
tick,0x7fffe05afeb4,188407761,0,0x0,8
tick,0x7fffe05afeb4,188423886,0,0x0,8
tick,0x7fffe05afeb4,188438802,0,0x0,8
tick,0x7fffe05afeb4,188453766,0,0x0,8
tick,0x7fffe05afeb4,188469777,0,0x0,8
tick,0x7fffe05afeb4,188485768,0,0x0,8
tick,0x7fffe05afeb4,188501844,0,0x0,8
tick,0x7fffe05afeb4,188517850,0,0x0,8
tick,0x7fffe05afeb4,188533873,0,0x0,8
tick,0x7fffe05afeb4,188549903,0,0x0,8
tick,0x7fffe05afeb4,188565779,0,0x0,8
tick,0x7fffe05afeb4,188581769,0,0x0,8
tick,0x7fffe05afeb4,188596847,0,0x0,8
tick,0x7fffe05afeb4,188612914,0,0x0,8
tick,0x7fffe05afeb4,188628843,0,0x0,8
tick,0x7fffe05afeb4,188644848,0,0x0,8
tick,0x7fffe05afeb4,188660806,0,0x0,8
tick,0x7fffe05afeb4,188676774,0,0x0,8
tick,0x7fffe05afeb4,188691809,0,0x0,8
tick,0x7fffe05afeb4,188706847,0,0x0,8
tick,0x7fffe05afeb4,188722862,0,0x0,8
tick,0x7fffe05afeb4,188738852,0,0x0,8
tick,0x7fffe05afeb4,188754838,0,0x0,8
tick,0x7fffe05afeb4,188770783,0,0x0,8
tick,0x7fffe05afeb4,188786757,0,0x0,8
tick,0x7fffe05afeb4,188802783,0,0x0,8
tick,0x7fffe05afeb4,188818848,0,0x0,8
tick,0x7fffe05afeb4,188834781,0,0x0,8
tick,0x7fffe05afeb4,188850849,0,0x0,8
tick,0x7fffe05afeb4,188866843,0,0x0,8
tick,0x7fffe05afeb4,188882861,0,0x0,8
tick,0x7fffe05afeb4,188897781,0,0x0,8
tick,0x7fffe05afeb4,188913761,0,0x0,8
tick,0x7fffe05afeb4,188929915,0,0x0,8
tick,0x7fffe05afeb4,188946513,0,0x0,8
tick,0x7fffe05afeb4,188961842,0,0x0,8
tick,0x7fffe05afeb4,188977758,0,0x0,8
tick,0x7fffe05afeb4,188993824,0,0x0,8
tick,0x7fffe05afeb4,189008769,0,0x0,8
tick,0x7fffe05afeb4,189024791,0,0x0,8
tick,0x7fffe05afeb4,189040787,0,0x0,8
tick,0x7fffe05afeb4,189056851,0,0x0,8
tick,0x7fffe05afeb4,189072773,0,0x0,8
tick,0x7fffe05afeb4,189087869,0,0x0,8
tick,0x7fffe05afeb4,189103777,0,0x0,8
tick,0x7fffe05afeb4,189119816,0,0x0,8
tick,0x7fffe05afeb4,189135787,0,0x0,8
tick,0x7fffe05afeb4,189151796,0,0x0,8
tick,0x7fffe05afeb4,189167818,0,0x0,8
tick,0x7fffe05afeb4,189183843,0,0x0,8
tick,0x7fffe05afeb4,189199856,0,0x0,8
tick,0x7fffe05afeb4,189215837,0,0x0,8
tick,0x7fffe05afeb4,189231875,0,0x0,8
tick,0x7fffe05afeb4,189247768,0,0x0,8
tick,0x7fffe05afeb4,189263779,0,0x0,8
tick,0x7fffe05afeb4,189279964,0,0x0,8
tick,0x7fffe05afeb4,189295861,0,0x0,8
tick,0x7fffe05afeb4,189311780,0,0x0,8
tick,0x7fffe05afeb4,189327856,0,0x0,8
tick,0x7fffe05afeb4,189343765,0,0x0,8
tick,0x7fffe05afeb4,189358871,0,0x0,8
tick,0x7fffe05afeb4,189374778,0,0x0,8
tick,0x7fffe05afeb4,189390788,0,0x0,8
tick,0x7fffe05afeb4,189406762,0,0x0,8
tick,0x7fffe05afeb4,189422856,0,0x0,8
tick,0x7fffe05afeb4,189438884,0,0x0,8
tick,0x7fffe05afeb4,189454837,0,0x0,8
tick,0x7fffe05afeb4,189470763,0,0x0,8
tick,0x7fffe05afeb4,189486773,0,0x0,8
tick,0x7fffe05afeb4,189502831,0,0x0,8
tick,0x7fffe05afeb4,189517846,0,0x0,8
tick,0x7fffe05afeb4,189533874,0,0x0,8
tick,0x7fffe05afeb4,189549855,0,0x0,8
tick,0x7fffe05afeb4,189565768,0,0x0,8
tick,0x7fffe05afeb4,189581767,0,0x0,8
tick,0x7fffe05afeb4,189596772,0,0x0,8
tick,0x7fffe05afeb4,189611851,0,0x0,8
tick,0x7fffe05afeb4,189627860,0,0x0,8
tick,0x7fffe05afeb4,189643787,0,0x0,8
tick,0x7fffe05afeb4,189659923,0,0x0,8
tick,0x7fffe05afeb4,189675858,0,0x0,8
tick,0x7fffe05afeb4,189691803,0,0x0,8
tick,0x7fffe05afeb4,189707768,0,0x0,8
tick,0x7fffe05afeb4,189723870,0,0x0,8
tick,0x7fffe05afeb4,189739831,0,0x0,8
tick,0x7fffe05afeb4,189755837,0,0x0,8
tick,0x7fffe05afeb4,189771847,0,0x0,8
tick,0x7fffe05afeb4,189787758,0,0x0,8
tick,0x7fffe05afeb4,189803776,0,0x0,8
tick,0x7fffe05afeb4,189819775,0,0x0,8
tick,0x7fffe05afeb4,189835811,0,0x0,8
tick,0x7fffe05afeb4,189851771,0,0x0,8
tick,0x7fffe05afeb4,189867847,0,0x0,8
tick,0x7fffe05afeb4,189883866,0,0x0,8
tick,0x7fffe05afeb4,189899860,0,0x0,8
tick,0x7fffe05afeb4,189915865,0,0x0,8
tick,0x7fffe05afeb4,189931770,0,0x0,8
tick,0x7fffe05afeb4,189947020,0,0x0,8
tick,0x7fffe05afeb4,189962851,0,0x0,8
tick,0x7fffe05afeb4,189978778,0,0x0,8
tick,0x7fffe05afeb4,189994782,0,0x0,8
tick,0x7fffe05afeb4,190010783,0,0x0,8
tick,0x7fffe05afeb4,190026854,0,0x0,8
tick,0x7fffe05afeb4,190042794,0,0x0,8
tick,0x7fffe05afeb4,190058789,0,0x0,8
tick,0x7fffe05afeb4,190074775,0,0x0,8
tick,0x7fffe05afeb4,190090779,0,0x0,8
tick,0x7fffe05afeb4,190106854,0,0x0,8
tick,0x7fffe05afeb4,190122895,0,0x0,8
tick,0x7fffe05afeb4,190137869,0,0x0,8
tick,0x7fffe05afeb4,190153899,0,0x0,8
tick,0x7fffe05afeb4,190169835,0,0x0,8
tick,0x7fffe05afeb4,190184785,0,0x0,8
tick,0x7fffe05afeb4,190200850,0,0x0,8
tick,0x7fffe05afeb4,190216775,0,0x0,8
tick,0x7fffe05afeb4,190232776,0,0x0,8
tick,0x7fffe05afeb4,190248870,0,0x0,8
tick,0x7fffe05afeb4,190264804,0,0x0,8
tick,0x7fffe05afeb4,190279901,0,0x0,8
tick,0x7fffe05afeb4,190295845,0,0x0,8
tick,0x7fffe05afeb4,190311778,0,0x0,8
tick,0x7fffe05afeb4,190327805,0,0x0,8
tick,0x7fffe05afeb4,190343769,0,0x0,8
tick,0x7fffe05afeb4,190359933,0,0x0,8
tick,0x7fffe05afeb4,190375778,0,0x0,8
tick,0x7fffe05afeb4,190391797,0,0x0,8
tick,0x7fffe05afeb4,190406775,0,0x0,8
tick,0x7fffe05afeb4,190422845,0,0x0,8
tick,0x7fffe05afeb4,190438793,0,0x0,8
tick,0x7fffe05afeb4,190454817,0,0x0,8
tick,0x7fffe05afeb4,190470785,0,0x0,8
tick,0x7fffe05afeb4,190486776,0,0x0,8
tick,0x7fffe05afeb4,190502778,0,0x0,8
tick,0x7fffe05afeb4,190518767,0,0x0,8
tick,0x7fffe05afeb4,190534796,0,0x0,8
tick,0x7fffe05afeb4,190550847,0,0x0,8
tick,0x7fffe05afeb4,190566768,0,0x0,8
tick,0x7fffe05afeb4,190582859,0,0x0,8
tick,0x7fffe05afeb4,190598760,0,0x0,8
tick,0x7fffe05afeb4,190614870,0,0x0,8
tick,0x7fffe05afeb4,190630765,0,0x0,8
tick,0x7fffe05afeb4,190645866,0,0x0,8
tick,0x7fffe05afeb4,190661815,0,0x0,8
tick,0x7fffe05afeb4,190677847,0,0x0,8
tick,0x7fffe05afeb4,190693854,0,0x0,8
tick,0x7fffe05afeb4,190708779,0,0x0,8
tick,0x7fffe05afeb4,190724845,0,0x0,8
tick,0x7fffe05afeb4,190740772,0,0x0,8
tick,0x7fffe05afeb4,190756840,0,0x0,8
tick,0x7fffe05afeb4,190772776,0,0x0,8
tick,0x7fffe05afeb4,190788826,0,0x0,8
tick,0x7fffe05afeb4,190804841,0,0x0,8
tick,0x7fffe05afeb4,190820758,0,0x0,8
tick,0x7fffe05afeb4,190836842,0,0x0,8
tick,0x7fffe05afeb4,190852778,0,0x0,8
tick,0x7fffe05afeb4,190867866,0,0x0,8
tick,0x7fffe05afeb4,190883865,0,0x0,8
tick,0x7fffe05afeb4,190899883,0,0x0,8
tick,0x7fffe05afeb4,190915844,0,0x0,8
tick,0x7fffe05afeb4,190931858,0,0x0,8
tick,0x7fffe05afeb4,190947078,0,0x0,8
tick,0x7fffe05afeb4,190962774,0,0x0,8
tick,0x7fffe05afeb4,190978810,0,0x0,8
tick,0x7fffe05afeb4,190994850,0,0x0,8
tick,0x7fffe05afeb4,191010806,0,0x0,8
tick,0x7fffe05afeb4,191025842,0,0x0,8
tick,0x7fffe05afeb4,191041799,0,0x0,8
tick,0x7fffe05afeb4,191057829,0,0x0,8
tick,0x7fffe05afeb4,191073787,0,0x0,8
tick,0x7fffe05afeb4,191089876,0,0x0,8
tick,0x7fffe05afeb4,191105774,0,0x0,8
tick,0x7fffe05afeb4,191121859,0,0x0,8
tick,0x7fffe05afeb4,191137850,0,0x0,8
tick,0x7fffe05afeb4,191154091,0,0x0,8
tick,0x7fffe05afeb4,191169801,0,0x0,8
tick,0x7fffe05afeb4,191185784,0,0x0,8
tick,0x7fffe05afeb4,191201767,0,0x0,8
tick,0x7fffe05afeb4,191217854,0,0x0,8
tick,0x7fffe05afeb4,191233848,0,0x0,8
tick,0x7fffe05afeb4,191249856,0,0x0,8
tick,0x7fffe05afeb4,191265867,0,0x0,8
tick,0x7fffe05afeb4,191281861,0,0x0,8
tick,0x7fffe05afeb4,191296789,0,0x0,8
tick,0x7fffe05afeb4,191312787,0,0x0,8
tick,0x7fffe05afeb4,191328855,0,0x0,8
tick,0x7fffe05afeb4,191344854,0,0x0,8
tick,0x7fffe05afeb4,191360884,0,0x0,8
tick,0x7fffe05afeb4,191376817,0,0x0,8
tick,0x7fffe05afeb4,191392880,0,0x0,8
tick,0x7fffe05afeb4,191408802,0,0x0,8
tick,0x7fffe05afeb4,191424763,0,0x0,8
tick,0x7fffe05afeb4,191440815,0,0x0,8
tick,0x7fffe05afeb4,191456982,0,0x0,8
tick,0x7fffe05afeb4,191472800,0,0x0,8
tick,0x7fffe05afeb4,191488862,0,0x0,8
tick,0x7fffe05afeb4,191504856,0,0x0,8
tick,0x7fffe05afeb4,191520776,0,0x0,8
tick,0x7fffe05afeb4,191536768,0,0x0,8
tick,0x7fffe05afeb4,191552772,0,0x0,8
tick,0x7fffe05afeb4,191568862,0,0x0,8
tick,0x7fffe05afeb4,191584767,0,0x0,8
tick,0x7fffe05afeb4,191600823,0,0x0,8
tick,0x7fffe05afeb4,191616822,0,0x0,8
tick,0x7fffe05afeb4,191632759,0,0x0,8
tick,0x7fffe05afeb4,191647770,0,0x0,8
tick,0x7fffe05afeb4,191663831,0,0x0,8
tick,0x7fffe05afeb4,191679898,0,0x0,8
tick,0x7fffe05afeb4,191695903,0,0x0,8
tick,0x7fffe05afeb4,191711852,0,0x0,8
tick,0x7fffe05afeb4,191727842,0,0x0,8
tick,0x7fffe05afeb4,191743787,0,0x0,8
tick,0x7fffe05afeb4,191759979,0,0x0,8
tick,0x7fffe05afeb4,191775776,0,0x0,8
tick,0x7fffe05afeb4,191791776,0,0x0,8
tick,0x7fffe05afeb4,191807852,0,0x0,8
tick,0x7fffe05afeb4,191823854,0,0x0,8
tick,0x7fffe05afeb4,191839908,0,0x0,8
tick,0x7fffe05afeb4,191855769,0,0x0,8
tick,0x7fffe05afeb4,191871828,0,0x0,8
tick,0x7fffe05afeb4,191887776,0,0x0,8
tick,0x7fffe05afeb4,191903882,0,0x0,8
tick,0x7fffe05afeb4,191919791,0,0x0,8
tick,0x7fffe05afeb4,191935854,0,0x0,8
tick,0x7fffe05afeb4,191951846,0,0x0,8
tick,0x7fffe05afeb4,191967776,0,0x0,8
tick,0x7fffe05afeb4,191983798,0,0x0,8
tick,0x7fffe05afeb4,191999868,0,0x0,8
tick,0x7fffe05afeb4,192015852,0,0x0,8
tick,0x7fffe05afeb4,192031788,0,0x0,8
tick,0x7fffe05afeb4,192047852,0,0x0,8
tick,0x7fffe05afeb4,192063865,0,0x0,8
tick,0x7fffe05afeb4,192079781,0,0x0,8
tick,0x7fffe05afeb4,192094772,0,0x0,8
tick,0x7fffe05afeb4,192109818,0,0x0,8
tick,0x7fffe05afeb4,192125854,0,0x0,8
tick,0x7fffe05afeb4,192141850,0,0x0,8
tick,0x7fffe05afeb4,192157781,0,0x0,8
tick,0x7fffe05afeb4,192173961,0,0x0,8
tick,0x7fffe05afeb4,192189799,0,0x0,8
tick,0x7fffe05afeb4,192204779,0,0x0,8
tick,0x7fffe05afeb4,192220770,0,0x0,8
tick,0x7fffe05afeb4,192235767,0,0x0,8
tick,0x7fffe05afeb4,192251851,0,0x0,8
tick,0x7fffe05afeb4,192267865,0,0x0,8
tick,0x7fffe05afeb4,192283853,0,0x0,8
tick,0x7fffe05afeb4,192299859,0,0x0,8
tick,0x7fffe05afeb4,192315771,0,0x0,8
tick,0x7fffe05afeb4,192331794,0,0x0,8
tick,0x7fffe05afeb4,192347849,0,0x0,8
tick,0x7fffe05afeb4,192363921,0,0x0,8
tick,0x7fffe05afeb4,192379875,0,0x0,8
tick,0x7fffe05afeb4,192394780,0,0x0,8
tick,0x7fffe05afeb4,192410852,0,0x0,8
tick,0x7fffe05afeb4,192426773,0,0x0,8
tick,0x7fffe05afeb4,192442784,0,0x0,8
tick,0x7fffe05afeb4,192458812,0,0x0,8
tick,0x7fffe05afeb4,192474840,0,0x0,8
tick,0x7fffe05afeb4,192490781,0,0x0,8
tick,0x7fffe05afeb4,192506852,0,0x0,8
tick,0x7fffe05afeb4,192522768,0,0x0,8
tick,0x7fffe05afeb4,192538770,0,0x0,8
tick,0x7fffe05afeb4,192554793,0,0x0,8
tick,0x7fffe05afeb4,192570877,0,0x0,8
tick,0x7fffe05afeb4,192586763,0,0x0,8
tick,0x7fffe05afeb4,192601768,0,0x0,8
tick,0x7fffe05afeb4,192617895,0,0x0,8
tick,0x7fffe05afeb4,192633777,0,0x0,8
tick,0x7fffe05afeb4,192649866,0,0x0,8
tick,0x7fffe05afeb4,192665799,0,0x0,8
tick,0x7fffe05afeb4,192681799,0,0x0,8
tick,0x7fffe05afeb4,192697770,0,0x0,8
tick,0x7fffe05afeb4,192713854,0,0x0,8
tick,0x7fffe05afeb4,192729833,0,0x0,8
tick,0x7fffe05afeb4,192745858,0,0x0,8
tick,0x7fffe05afeb4,192761834,0,0x0,8
tick,0x7fffe05afeb4,192777783,0,0x0,8
tick,0x7fffe05afeb4,192793778,0,0x0,8
tick,0x7fffe05afeb4,192810023,0,0x0,8
tick,0x7fffe05afeb4,192825860,0,0x0,8
tick,0x7fffe05afeb4,192841842,0,0x0,8
tick,0x7fffe05afeb4,192857939,0,0x0,8
tick,0x7fffe05afeb4,192873767,0,0x0,8
tick,0x7fffe05afeb4,192889861,0,0x0,8
tick,0x7fffe05afeb4,192905790,0,0x0,8
tick,0x7fffe05afeb4,192921779,0,0x0,8
tick,0x7fffe05afeb4,192937798,0,0x0,8
tick,0x7fffe05afeb4,192953891,0,0x0,8
tick,0x7fffe05afeb4,192970040,0,0x0,8
tick,0x7fffe05afeb4,192985812,0,0x0,8
tick,0x7fffe05afeb4,193001801,0,0x0,8
tick,0x7fffe05afeb4,193017803,0,0x0,8
tick,0x7fffe05afeb4,193033773,0,0x0,8
tick,0x7fffe05afeb4,193049856,0,0x0,8
tick,0x7fffe05afeb4,193065868,0,0x0,8
tick,0x7fffe05afeb4,193081856,0,0x0,8
tick,0x7fffe05afeb4,193097845,0,0x0,8
tick,0x7fffe05afeb4,193113768,0,0x0,8
tick,0x7fffe05afeb4,193129861,0,0x0,8
tick,0x7fffe05afeb4,193145791,0,0x0,8
tick,0x7fffe05afeb4,193161843,0,0x0,8
tick,0x7fffe05afeb4,193177817,0,0x0,8
tick,0x7fffe05afeb4,193193866,0,0x0,8
tick,0x7fffe05afeb4,193208786,0,0x0,8
tick,0x7fffe05afeb4,193224766,0,0x0,8
tick,0x7fffe05afeb4,193240819,0,0x0,8
tick,0x7fffe05afeb4,193255800,0,0x0,8
tick,0x7fffe05afeb4,193271788,0,0x0,8
tick,0x7fffe05afeb4,193287865,0,0x0,8
tick,0x7fffe05afeb4,193303823,0,0x0,8
tick,0x7fffe05afeb4,193319781,0,0x0,8
tick,0x7fffe05afeb4,193334783,0,0x0,8
tick,0x7fffe05afeb4,193350820,0,0x0,8
tick,0x7fffe05afeb4,193366908,0,0x0,8
tick,0x7fffe05afeb4,193382831,0,0x0,8
tick,0x7fffe05afeb4,193397822,0,0x0,8
tick,0x7fffe05afeb4,193413847,0,0x0,8
tick,0x7fffe05afeb4,193429926,0,0x0,8
tick,0x7fffe05afeb4,193445792,0,0x0,8
tick,0x7fffe05afeb4,193460779,0,0x0,8
tick,0x7fffe05afeb4,193476848,0,0x0,8
tick,0x7fffe05afeb4,193492847,0,0x0,8
tick,0x7fffe05afeb4,193509104,0,0x0,8
tick,0x7fffe05afeb4,193524899,0,0x0,8
tick,0x7fffe05afeb4,193539877,0,0x0,8
tick,0x7fffe05afeb4,193554780,0,0x0,8
tick,0x7fffe05afeb4,193570857,0,0x0,8
tick,0x7fffe05afeb4,193586873,0,0x0,8
tick,0x7fffe05afeb4,193602761,0,0x0,8
tick,0x7fffe05afeb4,193618879,0,0x0,8
tick,0x7fffe05afeb4,193634797,0,0x0,8
tick,0x7fffe05afeb4,193650760,0,0x0,8
tick,0x7fffe05afeb4,193666816,0,0x0,8
tick,0x7fffe05afeb4,193682772,0,0x0,8
tick,0x7fffe05afeb4,193698803,0,0x0,8
tick,0x7fffe05afeb4,193714848,0,0x0,8
tick,0x7fffe05afeb4,193730859,0,0x0,8
tick,0x7fffe05afeb4,193745891,0,0x0,8
tick,0x7fffe05afeb4,193761774,0,0x0,8
tick,0x7fffe05afeb4,193777768,0,0x0,8
tick,0x7fffe05afeb4,193793846,0,0x0,8
tick,0x7fffe05afeb4,193809832,0,0x0,8
tick,0x7fffe05afeb4,193825839,0,0x0,8
tick,0x7fffe05afeb4,193841815,0,0x0,8
tick,0x7fffe05afeb4,193857849,0,0x0,8
tick,0x7fffe05afeb4,193873778,0,0x0,8
tick,0x7fffe05afeb4,193889839,0,0x0,8
tick,0x7fffe05afeb4,193905772,0,0x0,8
tick,0x7fffe05afeb4,193921857,0,0x0,8
tick,0x7fffe05afeb4,193937844,0,0x0,8
tick,0x7fffe05afeb4,193953869,0,0x0,8
tick,0x7fffe05afeb4,193969864,0,0x0,8
tick,0x7fffe05afeb4,193985838,0,0x0,8
tick,0x7fffe05afeb4,194001766,0,0x0,8
tick,0x7fffe05afeb4,194017846,0,0x0,8
tick,0x7fffe05afeb4,194033904,0,0x0,8
tick,0x7fffe05afeb4,194049887,0,0x0,8
tick,0x7fffe05afeb4,194065855,0,0x0,8
tick,0x7fffe05afeb4,194081844,0,0x0,8
tick,0x7fffe05afeb4,194097765,0,0x0,8
tick,0x7fffe05afeb4,194113754,0,0x0,8
tick,0x7fffe05afeb4,194129792,0,0x0,8
tick,0x7fffe05afeb4,194145779,0,0x0,8
tick,0x7fffe05afeb4,194160759,0,0x0,8
tick,0x7fffe05afeb4,194176824,0,0x0,8
tick,0x7fffe05afeb4,194192791,0,0x0,8
tick,0x7fffe05afeb4,194208797,0,0x0,8
tick,0x7fffe05afeb4,194224766,0,0x0,8
tick,0x7fffe05afeb4,194239772,0,0x0,8
tick,0x7fffe05afeb4,194254817,0,0x0,8
tick,0x7fffe05afeb4,194270890,0,0x0,8
tick,0x7fffe05afeb4,194286842,0,0x0,8
tick,0x7fffe05afeb4,194302766,0,0x0,8
tick,0x7fffe05afeb4,194318854,0,0x0,8
tick,0x7fffe05afeb4,194334811,0,0x0,8
tick,0x7fffe05afeb4,194350776,0,0x0,8
tick,0x7fffe05afeb4,194366851,0,0x0,8
tick,0x7fffe05afeb4,194382841,0,0x0,8
tick,0x7fffe05afeb4,194398886,0,0x0,8
tick,0x7fffe05afeb4,194414859,0,0x0,8
tick,0x7fffe05afeb4,194430871,0,0x0,8
tick,0x7fffe05afeb4,194447139,0,0x0,8
tick,0x7fffe05afeb4,194462784,0,0x0,8
tick,0x7fffe05afeb4,194477814,0,0x0,8
tick,0x7fffe05afeb4,194493804,0,0x0,8
tick,0x7fffe05afeb4,194511791,0,0x0,8
tick,0x7fffe05afeb4,194525904,0,0x0,8
tick,0x7fffe05afeb4,194541976,0,0x0,8
tick,0x7fffe05afeb4,194557826,0,0x0,8
tick,0x7fffe05afeb4,194573844,0,0x0,8
tick,0x7fffe05afeb4,194589860,0,0x0,8
tick,0x7fffe05afeb4,194605826,0,0x0,8
tick,0x7fffe05afeb4,194622010,0,0x0,8
tick,0x7fffe05afeb4,194637769,0,0x0,8
tick,0x7fffe05afeb4,194653937,0,0x0,8
tick,0x7fffe05afeb4,194669802,0,0x0,8
tick,0x7fffe05afeb4,194685768,0,0x0,8
tick,0x7fffe05afeb4,194701820,0,0x0,8
tick,0x7fffe05afeb4,194717839,0,0x0,8
tick,0x7fffe05afeb4,194733865,0,0x0,8
tick,0x7fffe05afeb4,194749851,0,0x0,8
tick,0x7fffe05afeb4,194765893,0,0x0,8
tick,0x7fffe05afeb4,194781771,0,0x0,8
tick,0x7fffe05afeb4,194797848,0,0x0,8
tick,0x7fffe05afeb4,194813781,0,0x0,8
tick,0x7fffe05afeb4,194829887,0,0x0,8
tick,0x7fffe05afeb4,194845872,0,0x0,8
tick,0x7fffe05afeb4,194861769,0,0x0,8
tick,0x7fffe05afeb4,194877769,0,0x0,8
tick,0x7fffe05afeb4,194893775,0,0x0,8
tick,0x7fffe05afeb4,194909791,0,0x0,8
tick,0x7fffe05afeb4,194924789,0,0x0,8
tick,0x7fffe05afeb4,194939804,0,0x0,8
tick,0x7fffe05afeb4,194955839,0,0x0,8
tick,0x7fffe05afeb4,194971771,0,0x0,8
tick,0x7fffe05afeb4,194987850,0,0x0,8
tick,0x7fffe05afeb4,195003849,0,0x0,8
tick,0x7fffe05afeb4,195019817,0,0x0,8
tick,0x7fffe05afeb4,195034888,0,0x0,8
tick,0x7fffe05afeb4,195050898,0,0x0,8
tick,0x7fffe05afeb4,195066805,0,0x0,8
tick,0x7fffe05afeb4,195082764,0,0x0,8
tick,0x7fffe05afeb4,195097850,0,0x0,8
tick,0x7fffe05afeb4,195113850,0,0x0,8
tick,0x7fffe05afeb4,195128894,0,0x0,8
tick,0x7fffe05afeb4,195144768,0,0x0,8
tick,0x7fffe05afeb4,195159901,0,0x0,8
tick,0x7fffe05afeb4,195175815,0,0x0,8
tick,0x7fffe05afeb4,195191775,0,0x0,8
tick,0x7fffe05afeb4,195207855,0,0x0,8
tick,0x7fffe05afeb4,195223862,0,0x0,8
tick,0x7fffe05afeb4,195239869,0,0x0,8
tick,0x7fffe05afeb4,195255828,0,0x0,8
tick,0x7fffe05afeb4,195271775,0,0x0,8
tick,0x7fffe05afeb4,195287786,0,0x0,8
tick,0x7fffe05afeb4,195303862,0,0x0,8
tick,0x7fffe05afeb4,195319770,0,0x0,8
tick,0x7fffe05afeb4,195334768,0,0x0,8
tick,0x7fffe05afeb4,195350881,0,0x0,8
tick,0x7fffe05afeb4,195366813,0,0x0,8
tick,0x7fffe05afeb4,195381837,0,0x0,8
tick,0x7fffe05afeb4,195396883,0,0x0,8
tick,0x7fffe05afeb4,195412766,0,0x0,8
tick,0x7fffe05afeb4,195428789,0,0x0,8
tick,0x7fffe05afeb4,195444798,0,0x0,8
tick,0x7fffe05afeb4,195459813,0,0x0,8
tick,0x7fffe05afeb4,195475865,0,0x0,8
tick,0x7fffe05afeb4,195491829,0,0x0,8
tick,0x7fffe05afeb4,195507757,0,0x0,8
tick,0x7fffe05afeb4,195523824,0,0x0,8
tick,0x7fffe05afeb4,195538849,0,0x0,8
tick,0x7fffe05afeb4,195554850,0,0x0,8
tick,0x7fffe05afeb4,195571268,0,0x0,8
tick,0x7fffe05afeb4,195586860,0,0x0,8
tick,0x7fffe05afeb4,195602767,0,0x0,8
tick,0x7fffe05afeb4,195618832,0,0x0,8
tick,0x7fffe05afeb4,195634150,0,0x0,8
tick,0x7fffe05afeb4,195649882,0,0x0,8
tick,0x7fffe05afeb4,195665985,0,0x0,8
tick,0x7fffe05afeb4,195681778,0,0x0,8
tick,0x7fffe05afeb4,195696839,0,0x0,8
tick,0x7fffe05afeb4,195712763,0,0x0,8
tick,0x7fffe05afeb4,195728927,0,0x0,8
tick,0x7fffe05afeb4,195744865,0,0x0,8
tick,0x7fffe05afeb4,195760765,0,0x0,8
tick,0x7fffe05afeb4,195775766,0,0x0,8
tick,0x7fffe05afeb4,195791801,0,0x0,8
tick,0x7fffe05afeb4,195807805,0,0x0,8
tick,0x7fffe05afeb4,195823785,0,0x0,8
tick,0x7fffe05afeb4,195839876,0,0x0,8
tick,0x7fffe05afeb4,195855857,0,0x0,8
tick,0x7fffe05afeb4,195871773,0,0x0,8
tick,0x7fffe05afeb4,195887857,0,0x0,8
tick,0x7fffe05afeb4,195903847,0,0x0,8
tick,0x7fffe05afeb4,195919795,0,0x0,8
tick,0x7fffe05afeb4,195935794,0,0x0,8
tick,0x7fffe05afeb4,195951769,0,0x0,8
tick,0x7fffe05afeb4,195967850,0,0x0,8
tick,0x7fffe05afeb4,195983776,0,0x0,8
tick,0x7fffe05afeb4,195999875,0,0x0,8
tick,0x7fffe05afeb4,196015841,0,0x0,8
tick,0x7fffe05afeb4,196031848,0,0x0,8
tick,0x7fffe05afeb4,196047772,0,0x0,8
tick,0x7fffe05afeb4,196063778,0,0x0,8
tick,0x7fffe05afeb4,196078840,0,0x0,8
tick,0x7fffe05afeb4,196094834,0,0x0,8
tick,0x7fffe05afeb4,196110774,0,0x0,8
tick,0x7fffe05afeb4,196126851,0,0x0,8
tick,0x7fffe05afeb4,196142864,0,0x0,8
tick,0x7fffe05afeb4,196158808,0,0x0,8
tick,0x7fffe05afeb4,196174808,0,0x0,8
tick,0x7fffe05afeb4,196190780,0,0x0,8
tick,0x7fffe05afeb4,196205771,0,0x0,8
tick,0x7fffe05afeb4,196221761,0,0x0,8
tick,0x7fffe05afeb4,196237791,0,0x0,8
tick,0x7fffe05afeb4,196252830,0,0x0,8
tick,0x7fffe05afeb4,196268778,0,0x0,8
tick,0x7fffe05afeb4,196283786,0,0x0,8
tick,0x7fffe05afeb4,196299810,0,0x0,8
tick,0x7fffe05afeb4,196315843,0,0x0,8
tick,0x7fffe05afeb4,196331770,0,0x0,8
tick,0x7fffe05afeb4,196347843,0,0x0,8
tick,0x7fffe05afeb4,196363910,0,0x0,8
tick,0x7fffe05afeb4,196378772,0,0x0,8
tick,0x7fffe05afeb4,196394775,0,0x0,8
tick,0x7fffe05afeb4,196410797,0,0x0,8
tick,0x7fffe05afeb4,196426856,0,0x0,8
tick,0x7fffe05afeb4,196442778,0,0x0,8
tick,0x7fffe05afeb4,196458778,0,0x0,8
tick,0x7fffe05afeb4,196474774,0,0x0,8
tick,0x7fffe05afeb4,196490784,0,0x0,8
tick,0x7fffe05afeb4,196505792,0,0x0,8
tick,0x7fffe05afeb4,196521776,0,0x0,8
tick,0x7fffe05afeb4,196537841,0,0x0,8
tick,0x7fffe05afeb4,196553838,0,0x0,8
tick,0x7fffe05afeb4,196568772,0,0x0,8
tick,0x7fffe05afeb4,196584804,0,0x0,8
tick,0x7fffe05afeb4,196600764,0,0x0,8
tick,0x7fffe05afeb4,196616779,0,0x0,8
tick,0x7fffe05afeb4,196632789,0,0x0,8
tick,0x7fffe05afeb4,196648783,0,0x0,8
tick,0x7fffe05afeb4,196664810,0,0x0,8
tick,0x7fffe05afeb4,196679862,0,0x0,8
tick,0x7fffe05afeb4,196695868,0,0x0,8
tick,0x7fffe05afeb4,196711846,0,0x0,8
tick,0x7fffe05afeb4,196727898,0,0x0,8
tick,0x7fffe05afeb4,196743773,0,0x0,8
tick,0x7fffe05afeb4,196759830,0,0x0,8
tick,0x7fffe05afeb4,196775859,0,0x0,8
tick,0x7fffe05afeb4,196791796,0,0x0,8
tick,0x7fffe05afeb4,196807778,0,0x0,8
tick,0x7fffe05afeb4,196823784,0,0x0,8
tick,0x7fffe05afeb4,196839908,0,0x0,8
tick,0x7fffe05afeb4,196855763,0,0x0,8
tick,0x7fffe05afeb4,196871762,0,0x0,8
tick,0x7fffe05afeb4,196887796,0,0x0,8
tick,0x7fffe05afeb4,196903847,0,0x0,8
tick,0x7fffe05afeb4,196919789,0,0x0,8
tick,0x7fffe05afeb4,196935812,0,0x0,8
tick,0x7fffe05afeb4,196951888,0,0x0,8
tick,0x7fffe05afeb4,196967857,0,0x0,8
tick,0x7fffe05afeb4,196983772,0,0x0,8
tick,0x7fffe05afeb4,196999774,0,0x0,8
tick,0x7fffe05afeb4,197015843,0,0x0,8
tick,0x7fffe05afeb4,197031769,0,0x0,8
tick,0x7fffe05afeb4,197047845,0,0x0,8
tick,0x7fffe05afeb4,197063880,0,0x0,8
tick,0x7fffe05afeb4,197079791,0,0x0,8
tick,0x7fffe05afeb4,197095784,0,0x0,8
tick,0x7fffe05afeb4,197111780,0,0x0,8
tick,0x7fffe05afeb4,197127865,0,0x0,8
tick,0x7fffe05afeb4,197143875,0,0x0,8
tick,0x7fffe05afeb4,197159867,0,0x0,8
tick,0x7fffe05afeb4,197175799,0,0x0,8
tick,0x7fffe05afeb4,197191857,0,0x0,8
tick,0x7fffe05afeb4,197207766,0,0x0,8
tick,0x7fffe05afeb4,197223758,0,0x0,8
tick,0x7fffe05afeb4,197238771,0,0x0,8
tick,0x7fffe05afeb4,197254848,0,0x0,8
tick,0x7fffe05afeb4,197270772,0,0x0,8
tick,0x7fffe05afeb4,197286858,0,0x0,8
tick,0x7fffe05afeb4,197302856,0,0x0,8
tick,0x7fffe05afeb4,197318771,0,0x0,8
tick,0x7fffe05afeb4,197334767,0,0x0,8
tick,0x7fffe05afeb4,197350860,0,0x0,8
tick,0x7fffe05afeb4,197366828,0,0x0,8
tick,0x7fffe05afeb4,197382847,0,0x0,8
tick,0x7fffe05afeb4,197398903,0,0x0,8
tick,0x7fffe05afeb4,197414819,0,0x0,8
tick,0x7fffe05afeb4,197430774,0,0x0,8
tick,0x7fffe05afeb4,197445777,0,0x0,8
tick,0x7fffe05afeb4,197461851,0,0x0,8
tick,0x7fffe05afeb4,197477772,0,0x0,8
tick,0x7fffe05afeb4,197493874,0,0x0,8
tick,0x7fffe05afeb4,197509847,0,0x0,8
tick,0x7fffe05afeb4,197525840,0,0x0,8
tick,0x7fffe05afeb4,197541772,0,0x0,8
tick,0x7fffe05afeb4,197557773,0,0x0,8
tick,0x7fffe05afeb4,197573804,0,0x0,8
tick,0x7fffe05afeb4,197589874,0,0x0,8
tick,0x7fffe05afeb4,197605856,0,0x0,8
tick,0x7fffe05afeb4,197621768,0,0x0,8
tick,0x7fffe05afeb4,197637821,0,0x0,8
tick,0x7fffe05afeb4,197653899,0,0x0,8
tick,0x7fffe05afeb4,197669907,0,0x0,8
tick,0x7fffe05afeb4,197685787,0,0x0,8
tick,0x7fffe05afeb4,197701769,0,0x0,8
tick,0x7fffe05afeb4,197717869,0,0x0,8
tick,0x7fffe05afeb4,197733874,0,0x0,8
tick,0x7fffe05afeb4,197749857,0,0x0,8
tick,0x7fffe05afeb4,197765764,0,0x0,8
tick,0x7fffe05afeb4,197781844,0,0x0,8
tick,0x7fffe05afeb4,197797865,0,0x0,8
tick,0x7fffe05afeb4,197813812,0,0x0,8
tick,0x7fffe05afeb4,197828863,0,0x0,8
tick,0x7fffe05afeb4,197844780,0,0x0,8
tick,0x7fffe05afeb4,197860772,0,0x0,8
tick,0x7fffe05afeb4,197876761,0,0x0,8
tick,0x7fffe05afeb4,197892814,0,0x0,8
tick,0x7fffe05afeb4,197908773,0,0x0,8
tick,0x7fffe05afeb4,197924857,0,0x0,8
tick,0x7fffe05afeb4,197939848,0,0x0,8
tick,0x7fffe05afeb4,197955882,0,0x0,8
tick,0x7fffe05afeb4,197971847,0,0x0,8
tick,0x7fffe05afeb4,197987763,0,0x0,8
tick,0x7fffe05afeb4,198003756,0,0x0,8
tick,0x7fffe05afeb4,198019813,0,0x0,8
tick,0x7fffe05afeb4,198035858,0,0x0,8
tick,0x7fffe05afeb4,198051847,0,0x0,8
tick,0x7fffe05afeb4,198067865,0,0x0,8
tick,0x7fffe05afeb4,198083833,0,0x0,8
tick,0x7fffe05afeb4,198099757,0,0x0,8
tick,0x7fffe05afeb4,198115767,0,0x0,8
tick,0x7fffe05afeb4,198131758,0,0x0,8
tick,0x7fffe05afeb4,198147786,0,0x0,8
tick,0x7fffe05afeb4,198163841,0,0x0,8
tick,0x7fffe05afeb4,198179896,0,0x0,8
tick,0x7fffe05afeb4,198194759,0,0x0,8
tick,0x7fffe05afeb4,198210806,0,0x0,8
tick,0x7fffe05afeb4,198226757,0,0x0,8
tick,0x7fffe05afeb4,198242866,0,0x0,8
tick,0x7fffe05afeb4,198258876,0,0x0,8
tick,0x7fffe05afeb4,198274858,0,0x0,8
tick,0x7fffe05afeb4,198290781,0,0x0,8
tick,0x7fffe05afeb4,198306893,0,0x0,8
tick,0x7fffe05afeb4,198322763,0,0x0,8
tick,0x7fffe05afeb4,198338783,0,0x0,8
tick,0x7fffe05afeb4,198354774,0,0x0,8
tick,0x7fffe05afeb4,198370857,0,0x0,8
tick,0x7fffe05afeb4,198386794,0,0x0,8
tick,0x7fffe05afeb4,198402798,0,0x0,8
tick,0x7fffe05afeb4,198418853,0,0x0,8
tick,0x7fffe05afeb4,198434809,0,0x0,8
tick,0x7fffe05afeb4,198450778,0,0x0,8
tick,0x7fffe05afeb4,198466770,0,0x0,8
tick,0x7fffe05afeb4,198482847,0,0x0,8
tick,0x7fffe05afeb4,198498795,0,0x0,8
tick,0x7fffe05afeb4,198513782,0,0x0,8
tick,0x7fffe05afeb4,198529888,0,0x0,8
tick,0x7fffe05afeb4,198545883,0,0x0,8
tick,0x7fffe05afeb4,198561767,0,0x0,8
tick,0x7fffe05afeb4,198577776,0,0x0,8
tick,0x7fffe05afeb4,198593863,0,0x0,8
tick,0x7fffe05afeb4,198609811,0,0x0,8
tick,0x7fffe05afeb4,198625811,0,0x0,8
tick,0x7fffe05afeb4,198640767,0,0x0,8
tick,0x7fffe05afeb4,198656865,0,0x0,8
tick,0x7fffe05afeb4,198672804,0,0x0,8
tick,0x7fffe05afeb4,198687775,0,0x0,8
tick,0x7fffe05afeb4,198703797,0,0x0,8
tick,0x7fffe05afeb4,198719842,0,0x0,8
tick,0x7fffe05afeb4,198735778,0,0x0,8
tick,0x7fffe05afeb4,198751848,0,0x0,8
tick,0x7fffe05afeb4,198767858,0,0x0,8
tick,0x7fffe05afeb4,198783779,0,0x0,8
tick,0x7fffe05afeb4,198799811,0,0x0,8
tick,0x7fffe05afeb4,198815845,0,0x0,8
tick,0x7fffe05afeb4,198831800,0,0x0,8
tick,0x7fffe05afeb4,198847802,0,0x0,8
tick,0x7fffe05afeb4,198863771,0,0x0,8
tick,0x7fffe05afeb4,198879873,0,0x0,8
tick,0x7fffe05afeb4,198895774,0,0x0,8
tick,0x7fffe05afeb4,198911781,0,0x0,8
tick,0x7fffe05afeb4,198927843,0,0x0,8
tick,0x7fffe05afeb4,198943844,0,0x0,8
tick,0x7fffe05afeb4,198959870,0,0x0,8
tick,0x7fffe05afeb4,198975832,0,0x0,8
tick,0x7fffe05afeb4,198991814,0,0x0,8
tick,0x7fffe05afeb4,199007814,0,0x0,8
tick,0x7fffe05afeb4,199023799,0,0x0,8
tick,0x7fffe05afeb4,199039806,0,0x0,8
tick,0x7fffe05afeb4,199055818,0,0x0,8
tick,0x7fffe05afeb4,199071779,0,0x0,8
tick,0x7fffe05afeb4,199087865,0,0x0,8
tick,0x7fffe05afeb4,199103849,0,0x0,8
tick,0x7fffe05afeb4,199119783,0,0x0,8
tick,0x7fffe05afeb4,199135769,0,0x0,8
tick,0x7fffe05afeb4,199151774,0,0x0,8
tick,0x7fffe05afeb4,199167796,0,0x0,8
tick,0x7fffe05afeb4,199183777,0,0x0,8
tick,0x7fffe05afeb4,199198781,0,0x0,8
tick,0x7fffe05afeb4,199214836,0,0x0,8
tick,0x7fffe05afeb4,199229805,0,0x0,8
tick,0x7fffe05afeb4,199244848,0,0x0,8
tick,0x7fffe05afeb4,199260835,0,0x0,8
tick,0x7fffe05afeb4,199276765,0,0x0,8
tick,0x7fffe05afeb4,199292789,0,0x0,8
tick,0x7fffe05afeb4,199308888,0,0x0,8
tick,0x7fffe05afeb4,199324854,0,0x0,8
tick,0x7fffe05afeb4,199340776,0,0x0,8
tick,0x7fffe05afeb4,199356986,0,0x0,8
tick,0x7fffe05afeb4,199372902,0,0x0,8
tick,0x7fffe05afeb4,199387782,0,0x0,8
tick,0x7fffe05afeb4,199403856,0,0x0,8
tick,0x7fffe05afeb4,199419938,0,0x0,8
tick,0x7fffe05afeb4,199435781,0,0x0,8
tick,0x7fffe05afeb4,199451846,0,0x0,8
tick,0x7fffe05afeb4,199467856,0,0x0,8
tick,0x7fffe05afeb4,199483848,0,0x0,8
tick,0x7fffe05afeb4,199499802,0,0x0,8
tick,0x7fffe05afeb4,199514792,0,0x0,8
tick,0x7fffe05afeb4,199530775,0,0x0,8
tick,0x7fffe05afeb4,199545771,0,0x0,8
tick,0x7fffe05afeb4,199560792,0,0x0,8
tick,0x7fffe05afeb4,199576852,0,0x0,8
tick,0x7fffe05afeb4,199592771,0,0x0,8
tick,0x7fffe05afeb4,199607857,0,0x0,8
tick,0x7fffe05afeb4,199623868,0,0x0,8
tick,0x7fffe05afeb4,199639848,0,0x0,8
tick,0x7fffe05afeb4,199655766,0,0x0,8
tick,0x7fffe05afeb4,199671785,0,0x0,8
tick,0x7fffe05afeb4,199687875,0,0x0,8
tick,0x7fffe05afeb4,199703857,0,0x0,8
tick,0x7fffe05afeb4,199719851,0,0x0,8
tick,0x7fffe05afeb4,199735786,0,0x0,8
tick,0x7fffe05afeb4,199751816,0,0x0,8
tick,0x7fffe05afeb4,199767776,0,0x0,8
tick,0x7fffe05afeb4,199782781,0,0x0,8
tick,0x7fffe05afeb4,199798812,0,0x0,8
tick,0x7fffe05afeb4,199813781,0,0x0,8
tick,0x7fffe05afeb4,199829782,0,0x0,8
tick,0x7fffe05afeb4,199844833,0,0x0,8
tick,0x7fffe05afeb4,199860808,0,0x0,8
tick,0x7fffe05afeb4,199876762,0,0x0,8
tick,0x7fffe05afeb4,199892769,0,0x0,8
tick,0x7fffe05afeb4,199908772,0,0x0,8
tick,0x7fffe05afeb4,199924765,0,0x0,8
tick,0x7fffe05afeb4,199939785,0,0x0,8
tick,0x7fffe05afeb4,199955806,0,0x0,8
tick,0x7fffe05afeb4,199971778,0,0x0,8
tick,0x7fffe05afeb4,199987778,0,0x0,8
tick,0x7fffe05afeb4,200003768,0,0x0,8
tick,0x7fffe05afeb4,200019807,0,0x0,8
tick,0x7fffe05afeb4,200035778,0,0x0,8
tick,0x7fffe05afeb4,200051769,0,0x0,8
tick,0x7fffe05afeb4,200067815,0,0x0,8
tick,0x7fffe05afeb4,200083805,0,0x0,8
tick,0x7fffe05afeb4,200099789,0,0x0,8
tick,0x7fffe05afeb4,200115786,0,0x0,8
tick,0x7fffe05afeb4,200131765,0,0x0,8
tick,0x7fffe05afeb4,200147763,0,0x0,8
tick,0x7fffe05afeb4,200163766,0,0x0,8
tick,0x7fffe05afeb4,200179831,0,0x0,8
tick,0x7fffe05afeb4,200195780,0,0x0,8
tick,0x7fffe05afeb4,200211765,0,0x0,8
tick,0x7fffe05afeb4,200227780,0,0x0,8
tick,0x7fffe05afeb4,200243778,0,0x0,8
tick,0x7fffe05afeb4,200259895,0,0x0,8
tick,0x7fffe05afeb4,200275770,0,0x0,8
tick,0x7fffe05afeb4,200291776,0,0x0,8
tick,0x7fffe05afeb4,200307848,0,0x0,8
tick,0x7fffe05afeb4,200323826,0,0x0,8
tick,0x7fffe05afeb4,200338871,0,0x0,8
tick,0x7fffe05afeb4,200354830,0,0x0,8
tick,0x7fffe05afeb4,200370776,0,0x0,8
tick,0x7fffe05afeb4,200386783,0,0x0,8
tick,0x7fffe05afeb4,200402784,0,0x0,8
tick,0x7fffe05afeb4,200417848,0,0x0,8
tick,0x7fffe05afeb4,200433873,0,0x0,8
tick,0x7fffe05afeb4,200449783,0,0x0,8
tick,0x7fffe05afeb4,200465855,0,0x0,8
tick,0x7fffe05afeb4,200481779,0,0x0,8
tick,0x7fffe05afeb4,200497794,0,0x0,8
tick,0x7fffe05afeb4,200513872,0,0x0,8
tick,0x7fffe05afeb4,200529877,0,0x0,8
tick,0x7fffe05afeb4,200545782,0,0x0,8
tick,0x7fffe05afeb4,200561910,0,0x0,8
tick,0x7fffe05afeb4,200577838,0,0x0,8
tick,0x7fffe05afeb4,200593757,0,0x0,8
tick,0x7fffe05afeb4,200609849,0,0x0,8
tick,0x7fffe05afeb4,200625902,0,0x0,8
tick,0x7fffe05afeb4,200640768,0,0x0,8
tick,0x7fffe05afeb4,200655819,0,0x0,8
tick,0x7fffe05afeb4,200671859,0,0x0,8
tick,0x7fffe05afeb4,200687845,0,0x0,8
tick,0x7fffe05afeb4,200703768,0,0x0,8
tick,0x7fffe05afeb4,200718824,0,0x0,8
tick,0x7fffe05afeb4,200734856,0,0x0,8
tick,0x7fffe05afeb4,200750796,0,0x0,8
tick,0x7fffe05afeb4,200766858,0,0x0,8
tick,0x7fffe05afeb4,200782763,0,0x0,8
tick,0x7fffe05afeb4,200797837,0,0x0,8
tick,0x7fffe05afeb4,200813791,0,0x0,8
tick,0x7fffe05afeb4,200829818,0,0x0,8
tick,0x7fffe05afeb4,200845885,0,0x0,8
tick,0x7fffe05afeb4,200861761,0,0x0,8
tick,0x7fffe05afeb4,200877859,0,0x0,8
tick,0x7fffe05afeb4,200893863,0,0x0,8
tick,0x7fffe05afeb4,200909833,0,0x0,8
tick,0x7fffe05afeb4,200925769,0,0x0,8
tick,0x7fffe05afeb4,200941829,0,0x0,8
tick,0x7fffe05afeb4,200957867,0,0x0,8
tick,0x7fffe05afeb4,200973767,0,0x0,8
tick,0x7fffe05afeb4,200989869,0,0x0,8
tick,0x7fffe05afeb4,201005877,0,0x0,8
tick,0x7fffe05afeb4,201021805,0,0x0,8
tick,0x7fffe05afeb4,201037779,0,0x0,8
tick,0x7fffe05afeb4,201053776,0,0x0,8
tick,0x7fffe05afeb4,201069848,0,0x0,8
tick,0x7fffe05afeb4,201085869,0,0x0,8
tick,0x7fffe05afeb4,201101848,0,0x0,8
tick,0x7fffe05afeb4,201117856,0,0x0,8
tick,0x7fffe05afeb4,201133822,0,0x0,8
tick,0x7fffe05afeb4,201148807,0,0x0,8
tick,0x7fffe05afeb4,201163770,0,0x0,8
tick,0x7fffe05afeb4,201179900,0,0x0,8
tick,0x7fffe05afeb4,201195853,0,0x0,8
tick,0x7fffe05afeb4,201211881,0,0x0,8
tick,0x7fffe05afeb4,201226766,0,0x0,8
tick,0x7fffe05afeb4,201242866,0,0x0,8
tick,0x7fffe05afeb4,201257770,0,0x0,8
tick,0x7fffe05afeb4,201273785,0,0x0,8
tick,0x7fffe05afeb4,201290179,0,0x0,8
tick,0x7fffe05afeb4,201305781,0,0x0,8
tick,0x7fffe05afeb4,201322205,0,0x0,8
tick,0x7fffe05afeb4,201337822,0,0x0,8
tick,0x7fffe05afeb4,201353892,0,0x0,8
tick,0x7fffe05afeb4,201369803,0,0x0,8
tick,0x7fffe05afeb4,201385806,0,0x0,8
tick,0x7fffe05afeb4,201401880,0,0x0,8
tick,0x7fffe05afeb4,201417790,0,0x0,8
tick,0x7fffe05afeb4,201433798,0,0x0,8
tick,0x7fffe05afeb4,201448816,0,0x0,8
tick,0x7fffe05afeb4,201464872,0,0x0,8
tick,0x7fffe05afeb4,201480881,0,0x0,8
tick,0x7fffe05afeb4,201496793,0,0x0,8
tick,0x7fffe05afeb4,201512813,0,0x0,8
tick,0x7fffe05afeb4,201529180,0,0x0,8
tick,0x7fffe05afeb4,201544813,0,0x0,8
tick,0x7fffe05afeb4,201560771,0,0x0,8
tick,0x7fffe05afeb4,201576795,0,0x0,8
tick,0x7fffe05afeb4,201592776,0,0x0,8
tick,0x7fffe05afeb4,201607787,0,0x0,8
tick,0x7fffe05afeb4,201623829,0,0x0,8
tick,0x7fffe05afeb4,201639051,0,0x0,8
tick,0x7fffe05afeb4,201654796,0,0x0,8
tick,0x7fffe05afeb4,201669820,0,0x0,8
tick,0x7fffe05afeb4,201684800,0,0x0,8
tick,0x7fffe05afeb4,201700767,0,0x0,8
tick,0x7fffe05afeb4,201716797,0,0x0,8
tick,0x7fffe05afeb4,201732771,0,0x0,8
tick,0x7fffe05afeb4,201748767,0,0x0,8
tick,0x7fffe05afeb4,201764774,0,0x0,8
tick,0x7fffe05afeb4,201779809,0,0x0,8
tick,0x7fffe05afeb4,201795770,0,0x0,8
tick,0x7fffe05afeb4,201811765,0,0x0,8
tick,0x7fffe05afeb4,201827790,0,0x0,8
tick,0x7fffe05afeb4,201843847,0,0x0,8
tick,0x7fffe05afeb4,201859806,0,0x0,8
tick,0x7fffe05afeb4,201875786,0,0x0,8
tick,0x7fffe05afeb4,201891787,0,0x0,8
tick,0x7fffe05afeb4,201907795,0,0x0,8
tick,0x7fffe05afeb4,201923794,0,0x0,8
tick,0x7fffe05afeb4,201939927,0,0x0,8
tick,0x7fffe05afeb4,201955849,0,0x0,8
tick,0x7fffe05afeb4,201971838,0,0x0,8
tick,0x7fffe05afeb4,201987775,0,0x0,8
tick,0x7fffe05afeb4,202003771,0,0x0,8
tick,0x7fffe05afeb4,202019858,0,0x0,8
tick,0x7fffe05afeb4,202035812,0,0x0,8
tick,0x7fffe05afeb4,202051784,0,0x0,8
tick,0x7fffe05afeb4,202067794,0,0x0,8
tick,0x7fffe05afeb4,202083807,0,0x0,8
tick,0x7fffe05afeb4,202099771,0,0x0,8
tick,0x7fffe05afeb4,202115856,0,0x0,8
tick,0x7fffe05afeb4,202131852,0,0x0,8
tick,0x7fffe05afeb4,202147863,0,0x0,8
tick,0x7fffe05afeb4,202163847,0,0x0,8
tick,0x7fffe05afeb4,202178844,0,0x0,8
tick,0x7fffe05afeb4,202194775,0,0x0,8
tick,0x7fffe05afeb4,202210769,0,0x0,8
tick,0x7fffe05afeb4,202226768,0,0x0,8
tick,0x7fffe05afeb4,202241838,0,0x0,8
tick,0x7fffe05afeb4,202257856,0,0x0,8
tick,0x7fffe05afeb4,202273809,0,0x0,8
tick,0x7fffe05afeb4,202288849,0,0x0,8
tick,0x7fffe05afeb4,202304807,0,0x0,8
tick,0x7fffe05afeb4,202320764,0,0x0,8
tick,0x7fffe05afeb4,202336879,0,0x0,8
tick,0x7fffe05afeb4,202352806,0,0x0,8
tick,0x7fffe05afeb4,202367778,0,0x0,8
tick,0x7fffe05afeb4,202383878,0,0x0,8
tick,0x7fffe05afeb4,202399879,0,0x0,8
tick,0x7fffe05afeb4,202415784,0,0x0,8
tick,0x7fffe05afeb4,202431796,0,0x0,8
tick,0x7fffe05afeb4,202447856,0,0x0,8
tick,0x7fffe05afeb4,202463938,0,0x0,8
tick,0x7fffe05afeb4,202479133,0,0x0,8
tick,0x7fffe05afeb4,202494863,0,0x0,8
tick,0x7fffe05afeb4,202510848,0,0x0,8
tick,0x7fffe05afeb4,202526783,0,0x0,8
tick,0x7fffe05afeb4,202542780,0,0x0,8
tick,0x7fffe05afeb4,202557848,0,0x0,8
tick,0x7fffe05afeb4,202573852,0,0x0,8
tick,0x7fffe05afeb4,202589974,0,0x0,8
tick,0x7fffe05afeb4,202605859,0,0x0,8
tick,0x7fffe05afeb4,202621847,0,0x0,8
tick,0x7fffe05afeb4,202637832,0,0x0,8
tick,0x7fffe05afeb4,202654002,0,0x0,8
tick,0x7fffe05afeb4,202669779,0,0x0,8
tick,0x7fffe05afeb4,202685841,0,0x0,8
tick,0x7fffe05afeb4,202701837,0,0x0,8
tick,0x7fffe05afeb4,202717846,0,0x0,8
tick,0x7fffe05afeb4,202733852,0,0x0,8
tick,0x7fffe05afeb4,202748840,0,0x0,8
tick,0x7fffe05afeb4,202764765,0,0x0,8
tick,0x7fffe05afeb4,202780767,0,0x0,8
tick,0x7fffe05afeb4,202795859,0,0x0,8
tick,0x7fffe05afeb4,202811855,0,0x0,8
tick,0x7fffe05afeb4,202827784,0,0x0,8
tick,0x7fffe05afeb4,202843845,0,0x0,8
tick,0x7fffe05afeb4,202859774,0,0x0,8
tick,0x7fffe05afeb4,202875778,0,0x0,8
tick,0x7fffe05afeb4,202891766,0,0x0,8
tick,0x7fffe05afeb4,202906772,0,0x0,8
tick,0x7fffe05afeb4,202922765,0,0x0,8
tick,0x7fffe05afeb4,202937872,0,0x0,8
tick,0x7fffe05afeb4,202953765,0,0x0,8
tick,0x7fffe05afeb4,202969854,0,0x0,8
tick,0x7fffe05afeb4,202985763,0,0x0,8
tick,0x7fffe05afeb4,203001773,0,0x0,8
tick,0x7fffe05afeb4,203017787,0,0x0,8
tick,0x7fffe05afeb4,203033846,0,0x0,8
tick,0x7fffe05afeb4,203049918,0,0x0,8
tick,0x7fffe05afeb4,203065851,0,0x0,8
tick,0x7fffe05afeb4,203081850,0,0x0,8
tick,0x7fffe05afeb4,203097867,0,0x0,8
tick,0x7fffe05afeb4,203113767,0,0x0,8
tick,0x7fffe05afeb4,203129805,0,0x0,8
tick,0x7fffe05afeb4,203145866,0,0x0,8
tick,0x7fffe05afeb4,203161815,0,0x0,8
tick,0x7fffe05afeb4,203177769,0,0x0,8
tick,0x7fffe05afeb4,203193804,0,0x0,8
tick,0x7fffe05afeb4,203209804,0,0x0,8
tick,0x7fffe05afeb4,203225780,0,0x0,8
tick,0x7fffe05afeb4,203240790,0,0x0,8
tick,0x7fffe05afeb4,203256770,0,0x0,8
tick,0x7fffe05afeb4,203272781,0,0x0,8
tick,0x7fffe05afeb4,203288857,0,0x0,8
tick,0x7fffe05afeb4,203304831,0,0x0,8
tick,0x7fffe05afeb4,203320809,0,0x0,8
tick,0x7fffe05afeb4,203335785,0,0x0,8
tick,0x7fffe05afeb4,203351782,0,0x0,8
tick,0x7fffe05afeb4,203367781,0,0x0,8
tick,0x7fffe05afeb4,203383794,0,0x0,8
tick,0x7fffe05afeb4,203399813,0,0x0,8
tick,0x7fffe05afeb4,203415913,0,0x0,8
tick,0x7fffe05afeb4,203431877,0,0x0,8
tick,0x7fffe05afeb4,203446980,0,0x0,8
tick,0x7fffe05afeb4,203462811,0,0x0,8
tick,0x7fffe05afeb4,203478938,0,0x0,8
tick,0x7fffe05afeb4,203494868,0,0x0,8
tick,0x7fffe05afeb4,203510843,0,0x0,8
tick,0x7fffe05afeb4,203526859,0,0x0,8
tick,0x7fffe05afeb4,203542841,0,0x0,8
tick,0x7fffe05afeb4,203558772,0,0x0,8
tick,0x7fffe05afeb4,203574801,0,0x0,8
tick,0x7fffe05afeb4,203590780,0,0x0,8
tick,0x7fffe05afeb4,203606983,0,0x0,8
tick,0x7fffe05afeb4,203622834,0,0x0,8
tick,0x7fffe05afeb4,203638826,0,0x0,8
tick,0x7fffe05afeb4,203654811,0,0x0,8
tick,0x7fffe05afeb4,203671026,0,0x0,8
tick,0x7fffe05afeb4,203686803,0,0x0,8
tick,0x7fffe05afeb4,203701844,0,0x0,8
tick,0x7fffe05afeb4,203717863,0,0x0,8
tick,0x7fffe05afeb4,203733852,0,0x0,8
tick,0x7fffe05afeb4,203748772,0,0x0,8
tick,0x7fffe05afeb4,203764771,0,0x0,8
tick,0x7fffe05afeb4,203779826,0,0x0,8
tick,0x7fffe05afeb4,203795755,0,0x0,8
tick,0x7fffe05afeb4,203811841,0,0x0,8
tick,0x7fffe05afeb4,203826925,0,0x0,8
tick,0x7fffe05afeb4,203842764,0,0x0,8
tick,0x7fffe05afeb4,203857847,0,0x0,8
tick,0x7fffe05afeb4,203873781,0,0x0,8
tick,0x7fffe05afeb4,203889864,0,0x0,8
tick,0x7fffe05afeb4,203905765,0,0x0,8
tick,0x7fffe05afeb4,203921768,0,0x0,8
tick,0x7fffe05afeb4,203937873,0,0x0,8
tick,0x7fffe05afeb4,203953778,0,0x0,8
tick,0x7fffe05afeb4,203969864,0,0x0,8
tick,0x7fffe05afeb4,203985779,0,0x0,8
tick,0x7fffe05afeb4,204001851,0,0x0,8
tick,0x7fffe05afeb4,204017762,0,0x0,8
tick,0x7fffe05afeb4,204033762,0,0x0,8
tick,0x7fffe05afeb4,204049912,0,0x0,8
tick,0x7fffe05afeb4,204065856,0,0x0,8
tick,0x7fffe05afeb4,204081850,0,0x0,8
tick,0x7fffe05afeb4,204097885,0,0x0,8
tick,0x7fffe05afeb4,204112776,0,0x0,8
tick,0x7fffe05afeb4,204128800,0,0x0,8
tick,0x7fffe05afeb4,204144766,0,0x0,8
tick,0x7fffe05afeb4,204159945,0,0x0,8
tick,0x7fffe05afeb4,204175865,0,0x0,8
tick,0x7fffe05afeb4,204191850,0,0x0,8
tick,0x7fffe05afeb4,204207900,0,0x0,8
tick,0x7fffe05afeb4,204223789,0,0x0,8
tick,0x7fffe05afeb4,204238780,0,0x0,8
tick,0x7fffe05afeb4,204254811,0,0x0,8
tick,0x7fffe05afeb4,204270792,0,0x0,8
tick,0x7fffe05afeb4,204286840,0,0x0,8
tick,0x7fffe05afeb4,204302847,0,0x0,8
tick,0x7fffe05afeb4,204317862,0,0x0,8
tick,0x7fffe05afeb4,204333791,0,0x0,8
tick,0x7fffe05afeb4,204349885,0,0x0,8
tick,0x7fffe05afeb4,204364802,0,0x0,8
tick,0x7fffe05afeb4,204379900,0,0x0,8
tick,0x7fffe05afeb4,204395784,0,0x0,8
tick,0x7fffe05afeb4,204411800,0,0x0,8
tick,0x7fffe05afeb4,204427786,0,0x0,8
tick,0x7fffe05afeb4,204443780,0,0x0,8
tick,0x7fffe05afeb4,204459797,0,0x0,8
tick,0x7fffe05afeb4,204475813,0,0x0,8
tick,0x7fffe05afeb4,204491880,0,0x0,8
tick,0x7fffe05afeb4,204507851,0,0x0,8
tick,0x7fffe05afeb4,204523856,0,0x0,8
tick,0x7fffe05afeb4,204538871,0,0x0,8
tick,0x7fffe05afeb4,204554787,0,0x0,8
tick,0x7fffe05afeb4,204570800,0,0x0,8
tick,0x7fffe05afeb4,204586839,0,0x0,8
tick,0x7fffe05afeb4,204602773,0,0x0,8
tick,0x7fffe05afeb4,204617852,0,0x0,8
tick,0x7fffe05afeb4,204633790,0,0x0,8
tick,0x7fffe05afeb4,204649897,0,0x0,8
tick,0x7fffe05afeb4,204665781,0,0x0,8
tick,0x7fffe05afeb4,204681875,0,0x0,8
tick,0x7fffe05afeb4,204696772,0,0x0,8
tick,0x7fffe05afeb4,204712883,0,0x0,8
tick,0x7fffe05afeb4,204727769,0,0x0,8
tick,0x7fffe05afeb4,204743784,0,0x0,8
tick,0x7fffe05afeb4,204759776,0,0x0,8
tick,0x7fffe05afeb4,204775772,0,0x0,8
tick,0x7fffe05afeb4,204791759,0,0x0,8
tick,0x7fffe05afeb4,204807765,0,0x0,8
tick,0x7fffe05afeb4,204823854,0,0x0,8
tick,0x7fffe05afeb4,204839872,0,0x0,8
tick,0x7fffe05afeb4,204855767,0,0x0,8
tick,0x7fffe05afeb4,204871783,0,0x0,8
tick,0x7fffe05afeb4,204887830,0,0x0,8
tick,0x7fffe05afeb4,204903849,0,0x0,8
tick,0x7fffe05afeb4,204919882,0,0x0,8
tick,0x7fffe05afeb4,204935871,0,0x0,8
tick,0x7fffe05afeb4,204951855,0,0x0,8
tick,0x7fffe05afeb4,204967774,0,0x0,8
tick,0x7fffe05afeb4,204983763,0,0x0,8
tick,0x7fffe05afeb4,204999953,0,0x0,8
tick,0x7fffe05afeb4,205015786,0,0x0,8
tick,0x7fffe05afeb4,205031759,0,0x0,8
tick,0x7fffe05afeb4,205046795,0,0x0,8
tick,0x7fffe05afeb4,205062849,0,0x0,8
tick,0x7fffe05afeb4,205078800,0,0x0,8
tick,0x7fffe05afeb4,205094788,0,0x0,8
tick,0x7fffe05afeb4,205110771,0,0x0,8
tick,0x7fffe05afeb4,205126823,0,0x0,8
tick,0x7fffe05afeb4,205142773,0,0x0,8
tick,0x7fffe05afeb4,205157863,0,0x0,8
tick,0x7fffe05afeb4,205173872,0,0x0,8
tick,0x7fffe05afeb4,205189913,0,0x0,8
tick,0x7fffe05afeb4,205205768,0,0x0,8
tick,0x7fffe05afeb4,205221860,0,0x0,8
tick,0x7fffe05afeb4,205237850,0,0x0,8
tick,0x7fffe05afeb4,205253815,0,0x0,8
tick,0x7fffe05afeb4,205269787,0,0x0,8
tick,0x7fffe05afeb4,205285859,0,0x0,8
tick,0x7fffe05afeb4,205301843,0,0x0,8
tick,0x7fffe05afeb4,205317786,0,0x0,8
tick,0x7fffe05afeb4,205333772,0,0x0,8
tick,0x7fffe05afeb4,205349821,0,0x0,8
tick,0x7fffe05afeb4,205365796,0,0x0,8
tick,0x7fffe05afeb4,205381806,0,0x0,8
tick,0x7fffe05afeb4,205397798,0,0x0,8
tick,0x7fffe05afeb4,205413968,0,0x0,8
tick,0x7fffe05afeb4,205428787,0,0x0,8
tick,0x7fffe05afeb4,205444771,0,0x0,8
tick,0x7fffe05afeb4,205460781,0,0x0,8
tick,0x7fffe05afeb4,205476827,0,0x0,8
tick,0x7fffe05afeb4,205492840,0,0x0,8
tick,0x7fffe05afeb4,205507859,0,0x0,8
tick,0x7fffe05afeb4,205523774,0,0x0,8
tick,0x7fffe05afeb4,205538861,0,0x0,8
tick,0x7fffe05afeb4,205554815,0,0x0,8
tick,0x7fffe05afeb4,205569800,0,0x0,8
tick,0x7fffe05afeb4,205585818,0,0x0,8
tick,0x7fffe05afeb4,205601795,0,0x0,8
tick,0x7fffe05afeb4,205617773,0,0x0,8
tick,0x7fffe05afeb4,205633846,0,0x0,8
tick,0x7fffe05afeb4,205649862,0,0x0,8
tick,0x7fffe05afeb4,205665785,0,0x0,8
tick,0x7fffe05afeb4,205681856,0,0x0,8
tick,0x7fffe05afeb4,205697963,0,0x0,8
tick,0x7fffe05afeb4,205713772,0,0x0,8
tick,0x7fffe05afeb4,205728782,0,0x0,8
tick,0x7fffe05afeb4,205744842,0,0x0,8
tick,0x7fffe05afeb4,205760787,0,0x0,8
tick,0x7fffe05afeb4,205776844,0,0x0,8
tick,0x7fffe05afeb4,205792763,0,0x0,8
tick,0x7fffe05afeb4,205807843,0,0x0,8
tick,0x7fffe05afeb4,205823810,0,0x0,8
tick,0x7fffe05afeb4,205839862,0,0x0,8
tick,0x7fffe05afeb4,205854776,0,0x0,8
tick,0x7fffe05afeb4,205870842,0,0x0,8
tick,0x7fffe05afeb4,205886780,0,0x0,8
tick,0x7fffe05afeb4,205902858,0,0x0,8
tick,0x7fffe05afeb4,205918816,0,0x0,8
tick,0x7fffe05afeb4,205934807,0,0x0,8
tick,0x7fffe05afeb4,205950775,0,0x0,8
tick,0x7fffe05afeb4,205966762,0,0x0,8
tick,0x7fffe05afeb4,205982813,0,0x0,8
tick,0x7fffe05afeb4,205997833,0,0x0,8
tick,0x7fffe05afeb4,206013763,0,0x0,8
tick,0x7fffe05afeb4,206029852,0,0x0,8
tick,0x7fffe05afeb4,206045773,0,0x0,8
tick,0x7fffe05afeb4,206061765,0,0x0,8
tick,0x7fffe05afeb4,206077860,0,0x0,8
tick,0x7fffe05afeb4,206093863,0,0x0,8
tick,0x7fffe05afeb4,206109810,0,0x0,8
tick,0x7fffe05afeb4,206125848,0,0x0,8
tick,0x7fffe05afeb4,206141763,0,0x0,8
tick,0x7fffe05afeb4,206156865,0,0x0,8
tick,0x7fffe05afeb4,206172804,0,0x0,8
tick,0x7fffe05afeb4,206188857,0,0x0,8
tick,0x7fffe05afeb4,206204796,0,0x0,8
tick,0x7fffe05afeb4,206220780,0,0x0,8
tick,0x7fffe05afeb4,206236849,0,0x0,8
tick,0x7fffe05afeb4,206252815,0,0x0,8
tick,0x7fffe05afeb4,206268792,0,0x0,8
tick,0x7fffe05afeb4,206284766,0,0x0,8
tick,0x7fffe05afeb4,206300817,0,0x0,8
tick,0x7fffe05afeb4,206316861,0,0x0,8
tick,0x7fffe05afeb4,206332863,0,0x0,8
tick,0x7fffe05afeb4,206348862,0,0x0,8
tick,0x7fffe05afeb4,206364821,0,0x0,8
tick,0x7fffe05afeb4,206380787,0,0x0,8
tick,0x7fffe05afeb4,206395775,0,0x0,8
tick,0x7fffe05afeb4,206411842,0,0x0,8
tick,0x7fffe05afeb4,206427767,0,0x0,8
tick,0x7fffe05afeb4,206443784,0,0x0,8
tick,0x7fffe05afeb4,206459794,0,0x0,8
tick,0x7fffe05afeb4,206475838,0,0x0,8
tick,0x7fffe05afeb4,206491775,0,0x0,8
tick,0x7fffe05afeb4,206506803,0,0x0,8
tick,0x7fffe05afeb4,206522797,0,0x0,8
tick,0x7fffe05afeb4,206538856,0,0x0,8
tick,0x7fffe05afeb4,206554871,0,0x0,8
tick,0x7fffe05afeb4,206571073,0,0x0,8
tick,0x7fffe05afeb4,206586843,0,0x0,8
tick,0x7fffe05afeb4,206601829,0,0x0,8
tick,0x7fffe05afeb4,206616762,0,0x0,8
tick,0x7fffe05afeb4,206632762,0,0x0,8
tick,0x7fffe05afeb4,206647800,0,0x0,8
tick,0x7fffe05afeb4,206662888,0,0x0,8
tick,0x7fffe05afeb4,206678807,0,0x0,8
tick,0x7fffe05afeb4,206694937,0,0x0,8
tick,0x7fffe05afeb4,206710835,0,0x0,8
tick,0x7fffe05afeb4,206726867,0,0x0,8
tick,0x7fffe05afeb4,206742768,0,0x0,8
tick,0x7fffe05afeb4,206757880,0,0x0,8
tick,0x7fffe05afeb4,206773854,0,0x0,8
tick,0x7fffe05afeb4,206789908,0,0x0,8
tick,0x7fffe05afeb4,206805804,0,0x0,8
tick,0x7fffe05afeb4,206821799,0,0x0,8
tick,0x7fffe05afeb4,206837891,0,0x0,8
tick,0x7fffe05afeb4,206853864,0,0x0,8
tick,0x7fffe05afeb4,206869858,0,0x0,8
tick,0x7fffe05afeb4,206884856,0,0x0,8
tick,0x7fffe05afeb4,206900842,0,0x0,8
tick,0x7fffe05afeb4,206916763,0,0x0,8
tick,0x7fffe05afeb4,206932811,0,0x0,8
tick,0x7fffe05afeb4,206948778,0,0x0,8
tick,0x7fffe05afeb4,206964876,0,0x0,8
tick,0x7fffe05afeb4,206980845,0,0x0,8
tick,0x7fffe05afeb4,206995868,0,0x0,8
tick,0x7fffe05afeb4,207011855,0,0x0,8
tick,0x7fffe05afeb4,207027848,0,0x0,8
tick,0x7fffe05afeb4,207043837,0,0x0,8
tick,0x7fffe05afeb4,207059854,0,0x0,8
tick,0x7fffe05afeb4,207075766,0,0x0,8
tick,0x7fffe05afeb4,207091773,0,0x0,8
tick,0x7fffe05afeb4,207107858,0,0x0,8
tick,0x7fffe05afeb4,207123842,0,0x0,8
tick,0x7fffe05afeb4,207139888,0,0x0,8
tick,0x7fffe05afeb4,207156001,0,0x0,8
tick,0x7fffe05afeb4,207171774,0,0x0,8
tick,0x7fffe05afeb4,207187770,0,0x0,8
tick,0x7fffe05afeb4,207203772,0,0x0,8
tick,0x7fffe05afeb4,207219889,0,0x0,8
tick,0x7fffe05afeb4,207235773,0,0x0,8
tick,0x7fffe05afeb4,207251842,0,0x0,8
tick,0x7fffe05afeb4,207267859,0,0x0,8
tick,0x7fffe05afeb4,207283771,0,0x0,8
tick,0x7fffe05afeb4,207299790,0,0x0,8
tick,0x7fffe05afeb4,207315852,0,0x0,8
tick,0x7fffe05afeb4,207331870,0,0x0,8
tick,0x7fffe05afeb4,207347846,0,0x0,8
tick,0x7fffe05afeb4,207363799,0,0x0,8
tick,0x7fffe05afeb4,207379951,0,0x0,8
tick,0x7fffe05afeb4,207395763,0,0x0,8
tick,0x7fffe05afeb4,207411770,0,0x0,8
tick,0x7fffe05afeb4,207427773,0,0x0,8
tick,0x7fffe05afeb4,207443783,0,0x0,8
tick,0x7fffe05afeb4,207459804,0,0x0,8
tick,0x7fffe05afeb4,207475861,0,0x0,8
tick,0x7fffe05afeb4,207491820,0,0x0,8
tick,0x7fffe05afeb4,207507838,0,0x0,8
tick,0x7fffe05afeb4,207523780,0,0x0,8
tick,0x7fffe05afeb4,207538868,0,0x0,8
tick,0x7fffe05afeb4,207554767,0,0x0,8
tick,0x7fffe05afeb4,207570869,0,0x0,8
tick,0x7fffe05afeb4,207586853,0,0x0,8
tick,0x7fffe05afeb4,207602864,0,0x0,8
tick,0x7fffe05afeb4,207618833,0,0x0,8
tick,0x7fffe05afeb4,207634778,0,0x0,8
tick,0x7fffe05afeb4,207650770,0,0x0,8
tick,0x7fffe05afeb4,207666878,0,0x0,8
tick,0x7fffe05afeb4,207682858,0,0x0,8
tick,0x7fffe05afeb4,207697793,0,0x0,8
tick,0x7fffe05afeb4,207713824,0,0x0,8
tick,0x7fffe05afeb4,207729812,0,0x0,8
tick,0x7fffe05afeb4,207745764,0,0x0,8
tick,0x7fffe05afeb4,207761779,0,0x0,8
tick,0x7fffe05afeb4,207777855,0,0x0,8
tick,0x7fffe05afeb4,207793777,0,0x0,8
tick,0x7fffe05afeb4,207809812,0,0x0,8
tick,0x7fffe05afeb4,207825957,0,0x0,8
tick,0x7fffe05afeb4,207841845,0,0x0,8
tick,0x7fffe05afeb4,207856853,0,0x0,8
tick,0x7fffe05afeb4,207872777,0,0x0,8
tick,0x7fffe05afeb4,207888808,0,0x0,8
tick,0x7fffe05afeb4,207904856,0,0x0,8
tick,0x7fffe05afeb4,207920963,0,0x0,8
tick,0x7fffe05afeb4,207936771,0,0x0,8
tick,0x7fffe05afeb4,207952763,0,0x0,8
tick,0x7fffe05afeb4,207968859,0,0x0,8
tick,0x7fffe05afeb4,207984791,0,0x0,8
tick,0x7fffe05afeb4,208000768,0,0x0,8
tick,0x7fffe05afeb4,208016845,0,0x0,8
tick,0x7fffe05afeb4,208032765,0,0x0,8
tick,0x7fffe05afeb4,208047791,0,0x0,8
tick,0x7fffe05afeb4,208063775,0,0x0,8
tick,0x7fffe05afeb4,208079782,0,0x0,8
tick,0x7fffe05afeb4,208095852,0,0x0,8
tick,0x7fffe05afeb4,208111846,0,0x0,8
tick,0x7fffe05afeb4,208127846,0,0x0,8
tick,0x7fffe05afeb4,208143766,0,0x0,8
tick,0x7fffe05afeb4,208159937,0,0x0,8
tick,0x7fffe05afeb4,208175802,0,0x0,8
tick,0x7fffe05afeb4,208191796,0,0x0,8
tick,0x7fffe05afeb4,208207848,0,0x0,8
tick,0x7fffe05afeb4,208223805,0,0x0,8
tick,0x7fffe05afeb4,208239895,0,0x0,8
tick,0x7fffe05afeb4,208255781,0,0x0,8
tick,0x7fffe05afeb4,208271868,0,0x0,8
tick,0x7fffe05afeb4,208287773,0,0x0,8
tick,0x7fffe05afeb4,208303772,0,0x0,8
tick,0x7fffe05afeb4,208319790,0,0x0,8
tick,0x7fffe05afeb4,208335851,0,0x0,8
tick,0x7fffe05afeb4,208351835,0,0x0,8
tick,0x7fffe05afeb4,208367855,0,0x0,8
tick,0x7fffe05afeb4,208383789,0,0x0,8
tick,0x7fffe05afeb4,208399802,0,0x0,8
tick,0x7fffe05afeb4,208415770,0,0x0,8
tick,0x7fffe05afeb4,208431893,0,0x0,8
tick,0x7fffe05afeb4,208447777,0,0x0,8
tick,0x7fffe05afeb4,208463761,0,0x0,8
tick,0x7fffe05afeb4,208479793,0,0x0,8
tick,0x7fffe05afeb4,208495781,0,0x0,8
tick,0x7fffe05afeb4,208511777,0,0x0,8
tick,0x7fffe05afeb4,208527761,0,0x0,8
tick,0x7fffe05afeb4,208543827,0,0x0,8
tick,0x7fffe05afeb4,208559971,0,0x0,8
tick,0x7fffe05afeb4,208575782,0,0x0,8
tick,0x7fffe05afeb4,208591757,0,0x0,8
tick,0x7fffe05afeb4,208607867,0,0x0,8
tick,0x7fffe05afeb4,208623826,0,0x0,8
tick,0x7fffe05afeb4,208639789,0,0x0,8
tick,0x7fffe05afeb4,208655834,0,0x0,8
tick,0x7fffe05afeb4,208671771,0,0x0,8
tick,0x7fffe05afeb4,208687781,0,0x0,8
tick,0x7fffe05afeb4,208702812,0,0x0,8
tick,0x7fffe05afeb4,208718882,0,0x0,8
tick,0x7fffe05afeb4,208734784,0,0x0,8
tick,0x7fffe05afeb4,208750797,0,0x0,8
tick,0x7fffe05afeb4,208766775,0,0x0,8
tick,0x7fffe05afeb4,208782779,0,0x0,8
tick,0x7fffe05afeb4,208798769,0,0x0,8
tick,0x7fffe05afeb4,208814765,0,0x0,8
tick,0x7fffe05afeb4,208830841,0,0x0,8
tick,0x7fffe05afeb4,208845858,0,0x0,8
tick,0x7fffe05afeb4,208861774,0,0x0,8
tick,0x7fffe05afeb4,208877793,0,0x0,8
tick,0x7fffe05afeb4,208893870,0,0x0,8
tick,0x7fffe05afeb4,208908822,0,0x0,8
tick,0x7fffe05afeb4,208924866,0,0x0,8
tick,0x7fffe05afeb4,208940968,0,0x0,8
tick,0x7fffe05afeb4,208956779,0,0x0,8
tick,0x7fffe05afeb4,208972764,0,0x0,8
tick,0x7fffe05afeb4,208988766,0,0x0,8
tick,0x7fffe05afeb4,209003820,0,0x0,8
tick,0x7fffe05afeb4,209019867,0,0x0,8
tick,0x7fffe05afeb4,209035850,0,0x0,8
tick,0x7fffe05afeb4,209051758,0,0x0,8
tick,0x7fffe05afeb4,209067859,0,0x0,8
tick,0x7fffe05afeb4,209083781,0,0x0,8
tick,0x7fffe05afeb4,209099771,0,0x0,8
tick,0x7fffe05afeb4,209115766,0,0x0,8
tick,0x7fffe05afeb4,209131865,0,0x0,8
tick,0x7fffe05afeb4,209147776,0,0x0,8
tick,0x7fffe05afeb4,209163861,0,0x0,8
tick,0x7fffe05afeb4,209179865,0,0x0,8
tick,0x7fffe05afeb4,209195798,0,0x0,8
tick,0x7fffe05afeb4,209211773,0,0x0,8
tick,0x7fffe05afeb4,209227775,0,0x0,8
tick,0x7fffe05afeb4,209243856,0,0x0,8
tick,0x7fffe05afeb4,209259876,0,0x0,8
tick,0x7fffe05afeb4,209274849,0,0x0,8
tick,0x7fffe05afeb4,209290863,0,0x0,8
tick,0x7fffe05afeb4,209306848,0,0x0,8
tick,0x7fffe05afeb4,209322809,0,0x0,8
tick,0x7fffe05afeb4,209338781,0,0x0,8
tick,0x7fffe05afeb4,209354826,0,0x0,8
tick,0x7fffe05afeb4,209370779,0,0x0,8
tick,0x7fffe05afeb4,209386849,0,0x0,8
tick,0x7fffe05afeb4,209402845,0,0x0,8
tick,0x7fffe05afeb4,209418850,0,0x0,8
tick,0x7fffe05afeb4,209434844,0,0x0,8
tick,0x7fffe05afeb4,209450828,0,0x0,8
tick,0x7fffe05afeb4,209466770,0,0x0,8
tick,0x7fffe05afeb4,209482861,0,0x0,8
tick,0x7fffe05afeb4,209498889,0,0x0,8
tick,0x7fffe05afeb4,209514804,0,0x0,8
tick,0x7fffe05afeb4,209530762,0,0x0,8
tick,0x7fffe05afeb4,209545848,0,0x0,8
tick,0x7fffe05afeb4,209560772,0,0x0,8
tick,0x7fffe05afeb4,209576873,0,0x0,8
tick,0x7fffe05afeb4,209592771,0,0x0,8
tick,0x7fffe05afeb4,209608868,0,0x0,8
tick,0x7fffe05afeb4,209624857,0,0x0,8
tick,0x7fffe05afeb4,209640770,0,0x0,8
tick,0x7fffe05afeb4,209656831,0,0x0,8
tick,0x7fffe05afeb4,209672767,0,0x0,8
tick,0x7fffe05afeb4,209688761,0,0x0,8
tick,0x7fffe05afeb4,209704866,0,0x0,8
tick,0x7fffe05afeb4,209720773,0,0x0,8
tick,0x7fffe05afeb4,209736852,0,0x0,8
tick,0x7fffe05afeb4,209752811,0,0x0,8
tick,0x7fffe05afeb4,209768860,0,0x0,8
tick,0x7fffe05afeb4,209784769,0,0x0,8
tick,0x7fffe05afeb4,209800826,0,0x0,8
tick,0x7fffe05afeb4,209816768,0,0x0,8
tick,0x7fffe05afeb4,209832772,0,0x0,8
tick,0x7fffe05afeb4,209848845,0,0x0,8
tick,0x7fffe05afeb4,209864792,0,0x0,8
tick,0x7fffe05afeb4,209879858,0,0x0,8
tick,0x7fffe05afeb4,209895784,0,0x0,8
tick,0x7fffe05afeb4,209911773,0,0x0,8
tick,0x7fffe05afeb4,209926846,0,0x0,8
tick,0x7fffe05afeb4,209942806,0,0x0,8
tick,0x7fffe05afeb4,209958777,0,0x0,8
tick,0x7fffe05afeb4,209974774,0,0x0,8
tick,0x7fffe05afeb4,209990776,0,0x0,8
tick,0x7fffe05afeb4,210005836,0,0x0,8
tick,0x7fffe05afeb4,210021787,0,0x0,8
tick,0x7fffe05afeb4,210037778,0,0x0,8
tick,0x7fffe05afeb4,210053919,0,0x0,8
tick,0x7fffe05afeb4,210068852,0,0x0,8
tick,0x7fffe05afeb4,210084802,0,0x0,8
tick,0x7fffe05afeb4,210100789,0,0x0,8
tick,0x7fffe05afeb4,210116768,0,0x0,8
tick,0x7fffe05afeb4,210132781,0,0x0,8
tick,0x7fffe05afeb4,210148897,0,0x0,8
tick,0x7fffe05afeb4,210164804,0,0x0,8
tick,0x7fffe05afeb4,210179890,0,0x0,8
tick,0x7fffe05afeb4,210195802,0,0x0,8
tick,0x7fffe05afeb4,210211851,0,0x0,8
tick,0x7fffe05afeb4,210227798,0,0x0,8
tick,0x7fffe05afeb4,210243768,0,0x0,8
tick,0x7fffe05afeb4,210259794,0,0x0,8
tick,0x7fffe05afeb4,210274856,0,0x0,8
tick,0x7fffe05afeb4,210290803,0,0x0,8
tick,0x7fffe05afeb4,210306852,0,0x0,8
tick,0x7fffe05afeb4,210322863,0,0x0,8
tick,0x7fffe05afeb4,210337852,0,0x0,8
tick,0x7fffe05afeb4,210353856,0,0x0,8
tick,0x7fffe05afeb4,210369815,0,0x0,8
tick,0x7fffe05afeb4,210385837,0,0x0,8
tick,0x7fffe05afeb4,210401854,0,0x0,8
tick,0x7fffe05afeb4,210417857,0,0x0,8
tick,0x7fffe05afeb4,210433857,0,0x0,8
tick,0x7fffe05afeb4,210449897,0,0x0,8
tick,0x7fffe05afeb4,210465871,0,0x0,8
tick,0x7fffe05afeb4,210481767,0,0x0,8
tick,0x7fffe05afeb4,210497788,0,0x0,8
tick,0x7fffe05afeb4,210513780,0,0x0,8
tick,0x7fffe05afeb4,210529950,0,0x0,8
tick,0x7fffe05afeb4,210545820,0,0x0,8
tick,0x7fffe05afeb4,210561846,0,0x0,8
tick,0x7fffe05afeb4,210577842,0,0x0,8
tick,0x7fffe05afeb4,210593778,0,0x0,8
tick,0x7fffe05afeb4,210609817,0,0x0,8
tick,0x7fffe05afeb4,210625832,0,0x0,8
tick,0x7fffe05afeb4,210641858,0,0x0,8
tick,0x7fffe05afeb4,210657786,0,0x0,8
tick,0x7fffe05afeb4,210673768,0,0x0,8
tick,0x7fffe05afeb4,210689788,0,0x0,8
tick,0x7fffe05afeb4,210705782,0,0x0,8
tick,0x7fffe05afeb4,210721816,0,0x0,8
tick,0x7fffe05afeb4,210737776,0,0x0,8
tick,0x7fffe05afeb4,210753771,0,0x0,8
tick,0x7fffe05afeb4,210769782,0,0x0,8
tick,0x7fffe05afeb4,210784802,0,0x0,8
tick,0x7fffe05afeb4,210800766,0,0x0,8
tick,0x7fffe05afeb4,210816783,0,0x0,8
tick,0x7fffe05afeb4,210832804,0,0x0,8
tick,0x7fffe05afeb4,210848785,0,0x0,8
tick,0x7fffe05afeb4,210864779,0,0x0,8
tick,0x7fffe05afeb4,210880791,0,0x0,8
tick,0x7fffe05afeb4,210895776,0,0x0,8
tick,0x7fffe05afeb4,210911774,0,0x0,8
tick,0x7fffe05afeb4,210927810,0,0x0,8
tick,0x7fffe05afeb4,210943833,0,0x0,8
tick,0x7fffe05afeb4,210959800,0,0x0,8
tick,0x7fffe05afeb4,210975794,0,0x0,8
tick,0x7fffe05afeb4,210991788,0,0x0,8
tick,0x7fffe05afeb4,211007786,0,0x0,8
tick,0x7fffe05afeb4,211023802,0,0x0,8
tick,0x7fffe05afeb4,211039802,0,0x0,8
tick,0x7fffe05afeb4,211055870,0,0x0,8
tick,0x7fffe05afeb4,211071795,0,0x0,8
tick,0x7fffe05afeb4,211087830,0,0x0,8
tick,0x7fffe05afeb4,211103771,0,0x0,8
tick,0x7fffe05afeb4,211119836,0,0x0,8
tick,0x7fffe05afeb4,211135779,0,0x0,8
tick,0x7fffe05afeb4,211151782,0,0x0,8
tick,0x7fffe05afeb4,211167877,0,0x0,8
tick,0x7fffe05afeb4,211183791,0,0x0,8
tick,0x7fffe05afeb4,211199787,0,0x0,8
tick,0x7fffe05afeb4,211215790,0,0x0,8
tick,0x7fffe05afeb4,211231900,0,0x0,8
tick,0x7fffe05afeb4,211247757,0,0x0,8
tick,0x7fffe05afeb4,211263881,0,0x0,8
tick,0x7fffe05afeb4,211279802,0,0x0,8
tick,0x7fffe05afeb4,211294784,0,0x0,8
tick,0x7fffe05afeb4,211310918,0,0x0,8
tick,0x7fffe05afeb4,211326851,0,0x0,8
tick,0x7fffe05afeb4,211342837,0,0x0,8
tick,0x7fffe05afeb4,211358788,0,0x0,8
tick,0x7fffe05afeb4,211374791,0,0x0,8
tick,0x7fffe05afeb4,211390794,0,0x0,8
tick,0x7fffe05afeb4,211406866,0,0x0,8
tick,0x7fffe05afeb4,211422788,0,0x0,8
tick,0x7fffe05afeb4,211437786,0,0x0,8
tick,0x7fffe05afeb4,211453780,0,0x0,8
tick,0x7fffe05afeb4,211469862,0,0x0,8
tick,0x7fffe05afeb4,211485797,0,0x0,8
tick,0x7fffe05afeb4,211501865,0,0x0,8
tick,0x7fffe05afeb4,211517864,0,0x0,8
tick,0x7fffe05afeb4,211533852,0,0x0,8
tick,0x7fffe05afeb4,211549812,0,0x0,8
tick,0x7fffe05afeb4,211565851,0,0x0,8
tick,0x7fffe05afeb4,211581806,0,0x0,8
tick,0x7fffe05afeb4,211597779,0,0x0,8
tick,0x7fffe05afeb4,211613838,0,0x0,8
tick,0x7fffe05afeb4,211629826,0,0x0,8
tick,0x7fffe05afeb4,211644778,0,0x0,8
tick,0x7fffe05afeb4,211660795,0,0x0,8
tick,0x7fffe05afeb4,211676772,0,0x0,8
tick,0x7fffe05afeb4,211692868,0,0x0,8
tick,0x7fffe05afeb4,211708798,0,0x0,8
tick,0x7fffe05afeb4,211724838,0,0x0,8
tick,0x7fffe05afeb4,211739820,0,0x0,8
tick,0x7fffe05afeb4,211755796,0,0x0,8
tick,0x7fffe05afeb4,211771776,0,0x0,8
tick,0x7fffe05afeb4,211787775,0,0x0,8
tick,0x7fffe05afeb4,211803863,0,0x0,8
tick,0x7fffe05afeb4,211819767,0,0x0,8
tick,0x7fffe05afeb4,211835798,0,0x0,8
tick,0x7fffe05afeb4,211851871,0,0x0,8
tick,0x7fffe05afeb4,211867809,0,0x0,8
tick,0x7fffe05afeb4,211883778,0,0x0,8
tick,0x7fffe05afeb4,211898848,0,0x0,8
tick,0x7fffe05afeb4,211914787,0,0x0,8
tick,0x7fffe05afeb4,211930826,0,0x0,8
tick,0x7fffe05afeb4,211946941,0,0x0,8
tick,0x7fffe05afeb4,211962776,0,0x0,8
tick,0x7fffe05afeb4,211978772,0,0x0,8
tick,0x7fffe05afeb4,211994852,0,0x0,8
tick,0x7fffe05afeb4,212010833,0,0x0,8
tick,0x7fffe05afeb4,212026798,0,0x0,8
tick,0x7fffe05afeb4,212042768,0,0x0,8
tick,0x7fffe05afeb4,212058780,0,0x0,8
tick,0x7fffe05afeb4,212073765,0,0x0,8
tick,0x7fffe05afeb4,212089834,0,0x0,8
tick,0x7fffe05afeb4,212104990,0,0x0,8
tick,0x7fffe05afeb4,212119870,0,0x0,8
tick,0x7fffe05afeb4,212135789,0,0x0,8
tick,0x7fffe05afeb4,212151804,0,0x0,8
tick,0x7fffe05afeb4,212167777,0,0x0,8
tick,0x7fffe05afeb4,212182854,0,0x0,8
tick,0x7fffe05afeb4,212197923,0,0x0,8
tick,0x7fffe05afeb4,212213761,0,0x0,8
tick,0x7fffe05afeb4,212229860,0,0x0,8
tick,0x7fffe05afeb4,212244869,0,0x0,8
tick,0x7fffe05afeb4,212260926,0,0x0,8
tick,0x7fffe05afeb4,212276780,0,0x0,8
tick,0x7fffe05afeb4,212292783,0,0x0,8
tick,0x7fffe05afeb4,212308871,0,0x0,8
tick,0x7fffe05afeb4,212324861,0,0x0,8
tick,0x7fffe05afeb4,212340776,0,0x0,8
tick,0x7fffe05afeb4,212357151,0,0x0,8
tick,0x7fffe05afeb4,212372890,0,0x0,8
tick,0x7fffe05afeb4,212388779,0,0x0,8
tick,0x7fffe05afeb4,212404793,0,0x0,8
tick,0x7fffe05afeb4,212420867,0,0x0,8
tick,0x7fffe05afeb4,212436824,0,0x0,8
tick,0x7fffe05afeb4,212452856,0,0x0,8
tick,0x7fffe05afeb4,212468875,0,0x0,8
tick,0x7fffe05afeb4,212484799,0,0x0,8
tick,0x7fffe05afeb4,212500790,0,0x0,8
tick,0x7fffe05afeb4,212516793,0,0x0,8
tick,0x7fffe05afeb4,212531849,0,0x0,8
tick,0x7fffe05afeb4,212547892,0,0x0,8
tick,0x7fffe05afeb4,212563855,0,0x0,8
tick,0x7fffe05afeb4,212579794,0,0x0,8
tick,0x7fffe05afeb4,212595796,0,0x0,8
tick,0x7fffe05afeb4,212611973,0,0x0,8
tick,0x7fffe05afeb4,212626850,0,0x0,8
tick,0x7fffe05afeb4,212642883,0,0x0,8
tick,0x7fffe05afeb4,212658787,0,0x0,8
tick,0x7fffe05afeb4,212674852,0,0x0,8
tick,0x7fffe05afeb4,212690772,0,0x0,8
tick,0x7fffe05afeb4,212706782,0,0x0,8
tick,0x7fffe05afeb4,212722881,0,0x0,8
tick,0x7fffe05afeb4,212738874,0,0x0,8
tick,0x7fffe05afeb4,212754860,0,0x0,8
tick,0x7fffe05afeb4,212770788,0,0x0,8
tick,0x7fffe05afeb4,212786782,0,0x0,8
tick,0x7fffe05afeb4,212802785,0,0x0,8
tick,0x7fffe05afeb4,212818883,0,0x0,8
tick,0x7fffe05afeb4,212834833,0,0x0,8
tick,0x7fffe05afeb4,212850770,0,0x0,8
tick,0x7fffe05afeb4,212866952,0,0x0,8
tick,0x7fffe05afeb4,212882903,0,0x0,8
tick,0x7fffe05afeb4,212898783,0,0x0,8
tick,0x7fffe05afeb4,212914220,0,0x0,8
tick,0x7fffe05afeb4,212929843,0,0x0,8
tick,0x7fffe05afeb4,212944949,0,0x0,8
tick,0x7fffe05afeb4,212960785,0,0x0,8
tick,0x7fffe05afeb4,212976783,0,0x0,8
tick,0x7fffe05afeb4,212992884,0,0x0,8
tick,0x7fffe05afeb4,213011140,0,0x0,8
tick,0x7fffe05afeb4,213023807,0,0x0,8
tick,0x7fffe05afeb4,213039902,0,0x0,8
tick,0x7fffe05afeb4,213054837,0,0x0,8
tick,0x7fffe05afeb4,213070850,0,0x0,8
tick,0x7fffe05afeb4,213086993,0,0x0,8
tick,0x7fffe05afeb4,213104064,0,0x0,8
tick,0x7fffe05afeb4,213118897,0,0x0,8
tick,0x7fffe05afeb4,213135969,0,0x0,8
tick,0x7fffe05afeb4,213150940,0,0x0,8
tick,0x7fffe05afeb4,213167034,0,0x0,8
tick,0x7fffe05afeb4,213182784,0,0x0,8
tick,0x7fffe05afeb4,213198937,0,0x0,8
tick,0x7fffe05afeb4,213214856,0,0x0,8
tick,0x7fffe05afeb4,213231870,0,0x0,8
tick,0x7fffe05afeb4,213246765,0,0x0,8
tick,0x7fffe05afeb4,213262042,0,0x0,8
tick,0x7fffe05afeb4,213277901,0,0x0,8
tick,0x7fffe05afeb4,213293026,0,0x0,8
tick,0x7fffe05afeb4,213307865,0,0x0,8
tick,0x7fffe05afeb4,213324153,0,0x0,8
tick,0x7fffe05afeb4,213338774,0,0x0,8
tick,0x7fffe05afeb4,213354950,0,0x0,8
tick,0x7fffe05afeb4,213370859,0,0x0,8
tick,0x7fffe05afeb4,213387042,0,0x0,8
tick,0x7fffe05afeb4,213401873,0,0x0,8
tick,0x7fffe05afeb4,213419137,0,0x0,8
tick,0x7fffe05afeb4,213432774,0,0x0,8
tick,0x7fffe05afeb4,213448855,0,0x0,8
tick,0x7fffe05afeb4,213463860,0,0x0,8
tick,0x7fffe05afeb4,213481030,0,0x0,8
tick,0x7fffe05afeb4,213495804,0,0x0,8
tick,0x7fffe05afeb4,213511866,0,0x0,8
tick,0x7fffe05afeb4,213527905,0,0x0,8
tick,0x7fffe05afeb4,213542923,0,0x0,8
tick,0x7fffe05afeb4,213557864,0,0x0,8
tick,0x7fffe05afeb4,213572878,0,0x0,8
tick,0x7fffe05afeb4,213588872,0,0x0,8
tick,0x7fffe05afeb4,213606905,0,0x0,8
tick,0x7fffe05afeb4,213619853,0,0x0,8
tick,0x7fffe05afeb4,213635971,0,0x0,8
tick,0x7fffe05afeb4,213651888,0,0x0,8
tick,0x7fffe05afeb4,213667882,0,0x0,8
tick,0x7fffe05afeb4,213683898,0,0x0,8
tick,0x7fffe05afeb4,213700016,0,0x0,8
tick,0x7fffe05afeb4,213715807,0,0x0,8
tick,0x7fffe05afeb4,213731897,0,0x0,8
tick,0x7fffe05afeb4,213747897,0,0x0,8
tick,0x7fffe05afeb4,213764367,0,0x0,8
tick,0x7fffe05afeb4,213779848,0,0x0,8
tick,0x7fffe05afeb4,213795770,0,0x0,8
tick,0x7fffe05afeb4,213811766,0,0x0,8
tick,0x7fffe05afeb4,213827844,0,0x0,8
tick,0x7fffe05afeb4,213843898,0,0x0,8
tick,0x7fffe05afeb4,213858937,0,0x0,8
tick,0x7fffe05afeb4,213874859,0,0x0,8
tick,0x7fffe05afeb4,213890889,0,0x0,8
tick,0x7fffe05afeb4,213905831,0,0x0,8
tick,0x7fffe05afeb4,213920772,0,0x0,8
tick,0x7fffe05afeb4,213936778,0,0x0,8
tick,0x7fffe05afeb4,213952781,0,0x0,8
tick,0x7fffe05afeb4,213968809,0,0x0,8
tick,0x7fffe05afeb4,213983840,0,0x0,8
tick,0x7fffe05afeb4,213999789,0,0x0,8
tick,0x7fffe05afeb4,214015783,0,0x0,8
tick,0x7fffe05afeb4,214031784,0,0x0,8
tick,0x7fffe05afeb4,214047848,0,0x0,8
tick,0x7fffe05afeb4,214063862,0,0x0,8
tick,0x7fffe05afeb4,214079833,0,0x0,8
tick,0x7fffe05afeb4,214095896,0,0x0,8
tick,0x7fffe05afeb4,214111881,0,0x0,8
tick,0x7fffe05afeb4,214127795,0,0x0,8
tick,0x7fffe05afeb4,214143805,0,0x0,8
tick,0x7fffe05afeb4,214159922,0,0x0,8
tick,0x7fffe05afeb4,214175959,0,0x0,8
tick,0x7fffe05afeb4,214191848,0,0x0,8
tick,0x7fffe05afeb4,214207844,0,0x0,8
tick,0x7fffe05afeb4,214223859,0,0x0,8
tick,0x7fffe05afeb4,214239852,0,0x0,8
tick,0x7fffe05afeb4,214255783,0,0x0,8
tick,0x7fffe05afeb4,214271799,0,0x0,8
tick,0x7fffe05afeb4,214286867,0,0x0,8
tick,0x7fffe05afeb4,214302809,0,0x0,8
tick,0x7fffe05afeb4,214318911,0,0x0,8
tick,0x7fffe05afeb4,214334864,0,0x0,8
tick,0x7fffe05afeb4,214350862,0,0x0,8
tick,0x7fffe05afeb4,214366827,0,0x0,8
tick,0x7fffe05afeb4,214382872,0,0x0,8
tick,0x7fffe05afeb4,214398874,0,0x0,8
tick,0x7fffe05afeb4,214414857,0,0x0,8
tick,0x7fffe05afeb4,214430774,0,0x0,8
tick,0x7fffe05afeb4,214446515,0,0x0,8
tick,0x7fffe05afeb4,214461888,0,0x0,8
tick,0x7fffe05afeb4,214477958,0,0x0,8
tick,0x7fffe05afeb4,214493769,0,0x0,8
tick,0x7fffe05afeb4,214509824,0,0x0,8
tick,0x7fffe05afeb4,214525867,0,0x0,8
tick,0x7fffe05afeb4,214541775,0,0x0,8
tick,0x7fffe05afeb4,214557856,0,0x0,8
tick,0x7fffe05afeb4,214573795,0,0x0,8
tick,0x7fffe05afeb4,214589817,0,0x0,8
tick,0x7fffe05afeb4,214604801,0,0x0,8
tick,0x7fffe05afeb4,214620835,0,0x0,8
tick,0x7fffe05afeb4,214636773,0,0x0,8
tick,0x7fffe05afeb4,214652794,0,0x0,8
tick,0x7fffe05afeb4,214668788,0,0x0,8
tick,0x7fffe05afeb4,214683835,0,0x0,8
tick,0x7fffe05afeb4,214698788,0,0x0,8
tick,0x7fffe05afeb4,214714801,0,0x0,8
tick,0x7fffe05afeb4,214730813,0,0x0,8
tick,0x7fffe05afeb4,214746849,0,0x0,8
tick,0x7fffe05afeb4,214762849,0,0x0,8
tick,0x7fffe05afeb4,214778939,0,0x0,8
tick,0x7fffe05afeb4,214794775,0,0x0,8
tick,0x7fffe05afeb4,214810775,0,0x0,8
tick,0x7fffe05afeb4,214826815,0,0x0,8
tick,0x7fffe05afeb4,214842879,0,0x0,8
tick,0x7fffe05afeb4,214858780,0,0x0,8
tick,0x7fffe05afeb4,214874845,0,0x0,8
tick,0x7fffe05afeb4,214890765,0,0x0,8
tick,0x7fffe05afeb4,214906769,0,0x0,8
tick,0x7fffe05afeb4,214922774,0,0x0,8
tick,0x7fffe05afeb4,214938765,0,0x0,8
tick,0x7fffe05afeb4,214954834,0,0x0,8
tick,0x7fffe05afeb4,214970787,0,0x0,8
tick,0x7fffe05afeb4,214986762,0,0x0,8
tick,0x7fffe05afeb4,215002870,0,0x0,8
tick,0x7fffe05afeb4,215018842,0,0x0,8
tick,0x7fffe05afeb4,215034783,0,0x0,8
tick,0x7fffe05afeb4,215050773,0,0x0,8
tick,0x7fffe05afeb4,215066854,0,0x0,8
tick,0x7fffe05afeb4,215082776,0,0x0,8
tick,0x7fffe05afeb4,215097859,0,0x0,8
tick,0x7fffe05afeb4,215113806,0,0x0,8
tick,0x7fffe05afeb4,215129858,0,0x0,8
tick,0x7fffe05afeb4,215145879,0,0x0,8
tick,0x7fffe05afeb4,215161855,0,0x0,8
tick,0x7fffe05afeb4,215177771,0,0x0,8
tick,0x7fffe05afeb4,215193775,0,0x0,8
tick,0x7fffe05afeb4,215208789,0,0x0,8
tick,0x7fffe05afeb4,215223915,0,0x0,8
tick,0x7fffe05afeb4,215239783,0,0x0,8
tick,0x7fffe05afeb4,215255760,0,0x0,8
tick,0x7fffe05afeb4,215271870,0,0x0,8
tick,0x7fffe05afeb4,215287786,0,0x0,8
tick,0x7fffe05afeb4,215303769,0,0x0,8
tick,0x7fffe05afeb4,215319785,0,0x0,8
tick,0x7fffe05afeb4,215335783,0,0x0,8
tick,0x7fffe05afeb4,215351897,0,0x0,8
tick,0x7fffe05afeb4,215367772,0,0x0,8
tick,0x7fffe05afeb4,215384253,0,0x0,8
tick,0x7fffe05afeb4,215398875,0,0x0,8
tick,0x7fffe05afeb4,215414991,0,0x0,8
tick,0x7fffe05afeb4,215430767,0,0x0,8
tick,0x7fffe05afeb4,215445785,0,0x0,8
tick,0x7fffe05afeb4,215461821,0,0x0,8
tick,0x7fffe05afeb4,215477848,0,0x0,8
tick,0x7fffe05afeb4,215493872,0,0x0,8
tick,0x7fffe05afeb4,215509862,0,0x0,8
tick,0x7fffe05afeb4,215525891,0,0x0,8
tick,0x7fffe05afeb4,215541853,0,0x0,8
tick,0x7fffe05afeb4,215557924,0,0x0,8
tick,0x7fffe05afeb4,215573771,0,0x0,8
tick,0x7fffe05afeb4,215589821,0,0x0,8
tick,0x7fffe05afeb4,215604902,0,0x0,8
tick,0x7fffe05afeb4,215620799,0,0x0,8
tick,0x7fffe05afeb4,215636855,0,0x0,8
tick,0x7fffe05afeb4,215652875,0,0x0,8
tick,0x7fffe05afeb4,215667872,0,0x0,8
tick,0x7fffe05afeb4,215683792,0,0x0,8
tick,0x7fffe05afeb4,215698790,0,0x0,8
tick,0x7fffe05afeb4,215714772,0,0x0,8
tick,0x7fffe05afeb4,215729798,0,0x0,8
tick,0x7fffe05afeb4,215745862,0,0x0,8
tick,0x7fffe05afeb4,215761769,0,0x0,8
tick,0x7fffe05afeb4,215777853,0,0x0,8
tick,0x7fffe05afeb4,215793856,0,0x0,8
tick,0x7fffe05afeb4,215809818,0,0x0,8
tick,0x7fffe05afeb4,215825768,0,0x0,8
tick,0x7fffe05afeb4,215841786,0,0x0,8
tick,0x7fffe05afeb4,215857854,0,0x0,8
tick,0x7fffe05afeb4,215873835,0,0x0,8
tick,0x7fffe05afeb4,215889779,0,0x0,8
tick,0x7fffe05afeb4,215904824,0,0x0,8
tick,0x7fffe05afeb4,215920762,0,0x0,8
tick,0x7fffe05afeb4,215935791,0,0x0,8
tick,0x7fffe05afeb4,215951855,0,0x0,8
tick,0x7fffe05afeb4,215967765,0,0x0,8
tick,0x7fffe05afeb4,215983855,0,0x0,8
tick,0x7fffe05afeb4,215998777,0,0x0,8
tick,0x7fffe05afeb4,216014890,0,0x0,8
tick,0x7fffe05afeb4,216030794,0,0x0,8
tick,0x7fffe05afeb4,216045918,0,0x0,8
tick,0x7fffe05afeb4,216061764,0,0x0,8
tick,0x7fffe05afeb4,216077867,0,0x0,8
tick,0x7fffe05afeb4,216093894,0,0x0,8
tick,0x7fffe05afeb4,216109775,0,0x0,8
tick,0x7fffe05afeb4,216125856,0,0x0,8
tick,0x7fffe05afeb4,216141803,0,0x0,8
tick,0x7fffe05afeb4,216157887,0,0x0,8
tick,0x7fffe05afeb4,216173758,0,0x0,8
tick,0x7fffe05afeb4,216189825,0,0x0,8
tick,0x7fffe05afeb4,216205851,0,0x0,8
tick,0x7fffe05afeb4,216221759,0,0x0,8
tick,0x7fffe05afeb4,216237786,0,0x0,8
tick,0x7fffe05afeb4,216253776,0,0x0,8
tick,0x7fffe05afeb4,216269840,0,0x0,8
tick,0x7fffe05afeb4,216284768,0,0x0,8
tick,0x7fffe05afeb4,216300869,0,0x0,8
tick,0x7fffe05afeb4,216316775,0,0x0,8
tick,0x7fffe05afeb4,216332771,0,0x0,8
tick,0x7fffe05afeb4,216347849,0,0x0,8
tick,0x7fffe05afeb4,216363866,0,0x0,8
tick,0x7fffe05afeb4,216379845,0,0x0,8
tick,0x7fffe05afeb4,216395776,0,0x0,8
tick,0x7fffe05afeb4,216411759,0,0x0,8
tick,0x7fffe05afeb4,216427802,0,0x0,8
tick,0x7fffe05afeb4,216443773,0,0x0,8
tick,0x7fffe05afeb4,216459833,0,0x0,8
tick,0x7fffe05afeb4,216475842,0,0x0,8
tick,0x7fffe05afeb4,216491828,0,0x0,8
tick,0x7fffe05afeb4,216507764,0,0x0,8
tick,0x7fffe05afeb4,216523865,0,0x0,8
tick,0x7fffe05afeb4,216539880,0,0x0,8
tick,0x7fffe05afeb4,216555918,0,0x0,8
tick,0x7fffe05afeb4,216571783,0,0x0,8
tick,0x7fffe05afeb4,216587859,0,0x0,8
tick,0x7fffe05afeb4,216603836,0,0x0,8
tick,0x7fffe05afeb4,216619822,0,0x0,8
tick,0x7fffe05afeb4,216635767,0,0x0,8
tick,0x7fffe05afeb4,216651847,0,0x0,8
tick,0x7fffe05afeb4,216667856,0,0x0,8
tick,0x7fffe05afeb4,216683847,0,0x0,8
tick,0x7fffe05afeb4,216699900,0,0x0,8
tick,0x7fffe05afeb4,216715873,0,0x0,8
tick,0x7fffe05afeb4,216731790,0,0x0,8
tick,0x7fffe05afeb4,216747988,0,0x0,8
tick,0x7fffe05afeb4,216763810,0,0x0,8
tick,0x7fffe05afeb4,216779987,0,0x0,8
tick,0x7fffe05afeb4,216795842,0,0x0,8
tick,0x7fffe05afeb4,216811847,0,0x0,8
tick,0x7fffe05afeb4,216827802,0,0x0,8
tick,0x7fffe05afeb4,216843768,0,0x0,8
tick,0x7fffe05afeb4,216859799,0,0x0,8
tick,0x7fffe05afeb4,216875863,0,0x0,8
tick,0x7fffe05afeb4,216891846,0,0x0,8
tick,0x7fffe05afeb4,216907769,0,0x0,8
tick,0x7fffe05afeb4,216923851,0,0x0,8
tick,0x7fffe05afeb4,216939889,0,0x0,8
tick,0x7fffe05afeb4,216955772,0,0x0,8
tick,0x7fffe05afeb4,216971848,0,0x0,8
tick,0x7fffe05afeb4,216986843,0,0x0,8
tick,0x7fffe05afeb4,217002846,0,0x0,8
tick,0x7fffe05afeb4,217018874,0,0x0,8
tick,0x7fffe05afeb4,217034848,0,0x0,8
tick,0x7fffe05afeb4,217050801,0,0x0,8
tick,0x7fffe05afeb4,217066795,0,0x0,8
tick,0x7fffe05afeb4,217082795,0,0x0,8
tick,0x7fffe05afeb4,217097881,0,0x0,8
tick,0x7fffe05afeb4,217114097,0,0x0,8
tick,0x7fffe05afeb4,217130735,0,0x0,8
tick,0x7fffe05afeb4,217146017,0,0x0,8
tick,0x7fffe05afeb4,217161802,0,0x0,8
tick,0x7fffe05afeb4,217177858,0,0x0,8
tick,0x7fffe05afeb4,217193780,0,0x0,8
tick,0x7fffe05afeb4,217209850,0,0x0,8
tick,0x7fffe05afeb4,217225866,0,0x0,8
tick,0x7fffe05afeb4,217241808,0,0x0,8
tick,0x7fffe05afeb4,217257810,0,0x0,8
tick,0x7fffe05afeb4,217273884,0,0x0,8
tick,0x7fffe05afeb4,217290744,0,0x0,8
tick,0x7fffe05afeb4,217305875,0,0x0,8
tick,0x7fffe05afeb4,217323160,0,0x0,8
tick,0x7fffe05afeb4,217336838,0,0x0,8
tick,0x7fffe05afeb4,217353138,0,0x0,8
tick,0x7fffe05afeb4,217369054,0,0x0,8
tick,0x7fffe05afeb4,217385137,0,0x0,8
tick,0x7fffe05afeb4,217400815,0,0x0,8
tick,0x7fffe05afeb4,217416881,0,0x0,8
tick,0x7fffe05afeb4,217432860,0,0x0,8
tick,0x7fffe05afeb4,217448777,0,0x0,8
tick,0x7fffe05afeb4,217463765,0,0x0,8
tick,0x7fffe05afeb4,217479018,0,0x0,8
tick,0x7fffe05afeb4,217494791,0,0x0,8
tick,0x7fffe05afeb4,217510791,0,0x0,8
tick,0x7fffe05afeb4,217526767,0,0x0,8
tick,0x7fffe05afeb4,217542772,0,0x0,8
tick,0x7fffe05afeb4,217558828,0,0x0,8
tick,0x7fffe05afeb4,217574793,0,0x0,8
tick,0x7fffe05afeb4,217590775,0,0x0,8
tick,0x7fffe05afeb4,217607068,0,0x0,8
tick,0x7fffe05afeb4,217622807,0,0x0,8
tick,0x7fffe05afeb4,217638821,0,0x0,8
tick,0x7fffe05afeb4,217654789,0,0x0,8
tick,0x7fffe05afeb4,217670770,0,0x0,8
tick,0x7fffe05afeb4,217686782,0,0x0,8
tick,0x7fffe05afeb4,217702798,0,0x0,8
tick,0x7fffe05afeb4,217718798,0,0x0,8
tick,0x7fffe05afeb4,217734816,0,0x0,8
tick,0x7fffe05afeb4,217750764,0,0x0,8
tick,0x7fffe05afeb4,217766833,0,0x0,8
tick,0x7fffe05afeb4,217782788,0,0x0,8
tick,0x7fffe05afeb4,217798767,0,0x0,8
tick,0x7fffe05afeb4,217814777,0,0x0,8
tick,0x7fffe05afeb4,217830821,0,0x0,8
tick,0x7fffe05afeb4,217845774,0,0x0,8
tick,0x7fffe05afeb4,217861920,0,0x0,8
tick,0x7fffe05afeb4,217877813,0,0x0,8
tick,0x7fffe05afeb4,217893850,0,0x0,8
tick,0x7fffe05afeb4,217909801,0,0x0,8
tick,0x7fffe05afeb4,217925852,0,0x0,8
tick,0x7fffe05afeb4,217941801,0,0x0,8
tick,0x7fffe05afeb4,217957770,0,0x0,8
tick,0x7fffe05afeb4,217973771,0,0x0,8
tick,0x7fffe05afeb4,217989834,0,0x0,8
tick,0x7fffe05afeb4,218004837,0,0x0,8
tick,0x7fffe05afeb4,218020844,0,0x0,8
tick,0x7fffe05afeb4,218036849,0,0x0,8
tick,0x7fffe05afeb4,218052812,0,0x0,8
tick,0x7fffe05afeb4,218068790,0,0x0,8
tick,0x7fffe05afeb4,218084921,0,0x0,8
tick,0x7fffe05afeb4,218100778,0,0x0,8
tick,0x7fffe05afeb4,218115792,0,0x0,8
tick,0x7fffe05afeb4,218130830,0,0x0,8
tick,0x7fffe05afeb4,218145838,0,0x0,8
tick,0x7fffe05afeb4,218161884,0,0x0,8
tick,0x7fffe05afeb4,218177815,0,0x0,8
tick,0x7fffe05afeb4,218193798,0,0x0,8
tick,0x7fffe05afeb4,218208839,0,0x0,8
tick,0x7fffe05afeb4,218224789,0,0x0,8
tick,0x7fffe05afeb4,218240838,0,0x0,8
tick,0x7fffe05afeb4,218256760,0,0x0,8
tick,0x7fffe05afeb4,218272928,0,0x0,8
tick,0x7fffe05afeb4,218288851,0,0x0,8
tick,0x7fffe05afeb4,218303782,0,0x0,8
tick,0x7fffe05afeb4,218318829,0,0x0,8
tick,0x7fffe05afeb4,218334765,0,0x0,8
tick,0x7fffe05afeb4,218350771,0,0x0,8
tick,0x7fffe05afeb4,218366832,0,0x0,8
tick,0x7fffe05afeb4,218382885,0,0x0,8
tick,0x7fffe05afeb4,218399020,0,0x0,8
tick,0x7fffe05afeb4,218414839,0,0x0,8
tick,0x7fffe05afeb4,218430760,0,0x0,8
tick,0x7fffe05afeb4,218445941,0,0x0,8
tick,0x7fffe05afeb4,218460778,0,0x0,8
tick,0x7fffe05afeb4,218476799,0,0x0,8
tick,0x7fffe05afeb4,218492863,0,0x0,8
tick,0x7fffe05afeb4,218508804,0,0x0,8
tick,0x7fffe05afeb4,218524857,0,0x0,8
tick,0x7fffe05afeb4,218540899,0,0x0,8
tick,0x7fffe05afeb4,218556783,0,0x0,8
tick,0x7fffe05afeb4,218572764,0,0x0,8
tick,0x7fffe05afeb4,218588850,0,0x0,8
tick,0x7fffe05afeb4,218604774,0,0x0,8
tick,0x7fffe05afeb4,218620900,0,0x0,8
tick,0x7fffe05afeb4,218635778,0,0x0,8
tick,0x7fffe05afeb4,218651775,0,0x0,8
tick,0x7fffe05afeb4,218667784,0,0x0,8
tick,0x7fffe05afeb4,218683851,0,0x0,8
tick,0x7fffe05afeb4,218698786,0,0x0,8
tick,0x7fffe05afeb4,218714798,0,0x0,8
tick,0x7fffe05afeb4,218730859,0,0x0,8
tick,0x7fffe05afeb4,218745812,0,0x0,8
tick,0x7fffe05afeb4,218761796,0,0x0,8
tick,0x7fffe05afeb4,218777804,0,0x0,8
tick,0x7fffe05afeb4,218793848,0,0x0,8
tick,0x7fffe05afeb4,218809855,0,0x0,8
tick,0x7fffe05afeb4,218825942,0,0x0,8
tick,0x7fffe05afeb4,218841772,0,0x0,8
tick,0x7fffe05afeb4,218857836,0,0x0,8
tick,0x7fffe05afeb4,218873767,0,0x0,8
tick,0x7fffe05afeb4,218889785,0,0x0,8
tick,0x7fffe05afeb4,218905871,0,0x0,8
tick,0x7fffe05afeb4,218921778,0,0x0,8
tick,0x7fffe05afeb4,218937937,0,0x0,8
tick,0x7fffe05afeb4,218953858,0,0x0,8
tick,0x7fffe05afeb4,218969868,0,0x0,8
tick,0x7fffe05afeb4,218985772,0,0x0,8
tick,0x7fffe05afeb4,219001772,0,0x0,8
tick,0x7fffe05afeb4,219017772,0,0x0,8
tick,0x7fffe05afeb4,219033851,0,0x0,8
tick,0x7fffe05afeb4,219049910,0,0x0,8
tick,0x7fffe05afeb4,219065866,0,0x0,8
tick,0x7fffe05afeb4,219081863,0,0x0,8
tick,0x7fffe05afeb4,219097862,0,0x0,8
tick,0x7fffe05afeb4,219113783,0,0x0,8
tick,0x7fffe05afeb4,219129791,0,0x0,8
tick,0x7fffe05afeb4,219144860,0,0x0,8
tick,0x7fffe05afeb4,219159869,0,0x0,8
tick,0x7fffe05afeb4,219175856,0,0x0,8
tick,0x7fffe05afeb4,219191894,0,0x0,8
tick,0x7fffe05afeb4,219207851,0,0x0,8
tick,0x7fffe05afeb4,219223813,0,0x0,8
tick,0x7fffe05afeb4,219239805,0,0x0,8
tick,0x7fffe05afeb4,219255776,0,0x0,8
tick,0x7fffe05afeb4,219271870,0,0x0,8
tick,0x7fffe05afeb4,219287771,0,0x0,8
tick,0x7fffe05afeb4,219302808,0,0x0,8
tick,0x7fffe05afeb4,219318763,0,0x0,8
tick,0x7fffe05afeb4,219333780,0,0x0,8
tick,0x7fffe05afeb4,219348777,0,0x0,8
tick,0x7fffe05afeb4,219364825,0,0x0,8
tick,0x7fffe05afeb4,219379885,0,0x0,8
tick,0x7fffe05afeb4,219395774,0,0x0,8
tick,0x7fffe05afeb4,219411871,0,0x0,8
tick,0x7fffe05afeb4,219427789,0,0x0,8
tick,0x7fffe05afeb4,219443789,0,0x0,8
tick,0x7fffe05afeb4,219459794,0,0x0,8
tick,0x7fffe05afeb4,219475841,0,0x0,8
tick,0x7fffe05afeb4,219491775,0,0x0,8
tick,0x7fffe05afeb4,219506775,0,0x0,8
tick,0x7fffe05afeb4,219522841,0,0x0,8
tick,0x7fffe05afeb4,219538796,0,0x0,8
tick,0x7fffe05afeb4,219554773,0,0x0,8
tick,0x7fffe05afeb4,219570780,0,0x0,8
tick,0x7fffe05afeb4,219585873,0,0x0,8
tick,0x7fffe05afeb4,219601844,0,0x0,8
tick,0x7fffe05afeb4,219617780,0,0x0,8
tick,0x7fffe05afeb4,219633802,0,0x0,8
tick,0x7fffe05afeb4,219648849,0,0x0,8
tick,0x7fffe05afeb4,219665009,0,0x0,8
tick,0x7fffe05afeb4,219679810,0,0x0,8
tick,0x7fffe05afeb4,219695904,0,0x0,8
tick,0x7fffe05afeb4,219711758,0,0x0,8
tick,0x7fffe05afeb4,219727804,0,0x0,8
tick,0x7fffe05afeb4,219743844,0,0x0,8
tick,0x7fffe05afeb4,219759804,0,0x0,8
tick,0x7fffe05afeb4,219775821,0,0x0,8
tick,0x7fffe05afeb4,219791778,0,0x0,8
tick,0x7fffe05afeb4,219807835,0,0x0,8
tick,0x7fffe05afeb4,219823809,0,0x0,8
tick,0x7fffe05afeb4,219839835,0,0x0,8
tick,0x7fffe05afeb4,219855789,0,0x0,8
tick,0x7fffe05afeb4,219871821,0,0x0,8
tick,0x7fffe05afeb4,219887814,0,0x0,8
tick,0x7fffe05afeb4,219903763,0,0x0,8
tick,0x7fffe05afeb4,219919830,0,0x0,8
tick,0x7fffe05afeb4,219935859,0,0x0,8
tick,0x7fffe05afeb4,219951776,0,0x0,8
tick,0x7fffe05afeb4,219967849,0,0x0,8
tick,0x7fffe05afeb4,219983774,0,0x0,8
tick,0x7fffe05afeb4,219998847,0,0x0,8
tick,0x7fffe05afeb4,220014766,0,0x0,8
tick,0x7fffe05afeb4,220030778,0,0x0,8
tick,0x7fffe05afeb4,220045904,0,0x0,8
tick,0x7fffe05afeb4,220061773,0,0x0,8
tick,0x7fffe05afeb4,220077859,0,0x0,8
tick,0x7fffe05afeb4,220093859,0,0x0,8
tick,0x7fffe05afeb4,220109867,0,0x0,8
tick,0x7fffe05afeb4,220125827,0,0x0,8
tick,0x7fffe05afeb4,220141787,0,0x0,8
tick,0x7fffe05afeb4,220157908,0,0x0,8
tick,0x7fffe05afeb4,220173856,0,0x0,8
tick,0x7fffe05afeb4,220189864,0,0x0,8
tick,0x7fffe05afeb4,220205860,0,0x0,8
tick,0x7fffe05afeb4,220221847,0,0x0,8
tick,0x7fffe05afeb4,220236778,0,0x0,8
tick,0x7fffe05afeb4,220251782,0,0x0,8
tick,0x7fffe05afeb4,220267800,0,0x0,8
tick,0x7fffe05afeb4,220283853,0,0x0,8
tick,0x7fffe05afeb4,220299890,0,0x0,8
tick,0x7fffe05afeb4,220315770,0,0x0,8
tick,0x7fffe05afeb4,220331847,0,0x0,8
tick,0x7fffe05afeb4,220347847,0,0x0,8
tick,0x7fffe05afeb4,220362791,0,0x0,8
tick,0x7fffe05afeb4,220378785,0,0x0,8
tick,0x7fffe05afeb4,220394773,0,0x0,8
tick,0x7fffe05afeb4,220410759,0,0x0,8
tick,0x7fffe05afeb4,220426801,0,0x0,8
tick,0x7fffe05afeb4,220442821,0,0x0,8
tick,0x7fffe05afeb4,220458786,0,0x0,8
tick,0x7fffe05afeb4,220474774,0,0x0,8
tick,0x7fffe05afeb4,220489849,0,0x0,8
tick,0x7fffe05afeb4,220505856,0,0x0,8
tick,0x7fffe05afeb4,220520880,0,0x0,8
tick,0x7fffe05afeb4,220536859,0,0x0,8
tick,0x7fffe05afeb4,220552786,0,0x0,8
tick,0x7fffe05afeb4,220568857,0,0x0,8
tick,0x7fffe05afeb4,220584791,0,0x0,8
tick,0x7fffe05afeb4,220600794,0,0x0,8
tick,0x7fffe05afeb4,220616814,0,0x0,8
tick,0x7fffe05afeb4,220632849,0,0x0,8
tick,0x7fffe05afeb4,220648900,0,0x0,8
tick,0x7fffe05afeb4,220664857,0,0x0,8
tick,0x7fffe05afeb4,220679915,0,0x0,8
tick,0x7fffe05afeb4,220695790,0,0x0,8
tick,0x7fffe05afeb4,220711815,0,0x0,8
tick,0x7fffe05afeb4,220727799,0,0x0,8
tick,0x7fffe05afeb4,220743862,0,0x0,8
tick,0x7fffe05afeb4,220759815,0,0x0,8
tick,0x7fffe05afeb4,220775859,0,0x0,8
tick,0x7fffe05afeb4,220791771,0,0x0,8
tick,0x7fffe05afeb4,220807770,0,0x0,8
tick,0x7fffe05afeb4,220822804,0,0x0,8
tick,0x7fffe05afeb4,220838858,0,0x0,8
tick,0x7fffe05afeb4,220854791,0,0x0,8
tick,0x7fffe05afeb4,220870865,0,0x0,8
tick,0x7fffe05afeb4,220886789,0,0x0,8
tick,0x7fffe05afeb4,220902788,0,0x0,8
tick,0x7fffe05afeb4,220918763,0,0x0,8
tick,0x7fffe05afeb4,220935048,0,0x0,8
tick,0x7fffe05afeb4,220950769,0,0x0,8
tick,0x7fffe05afeb4,220966763,0,0x0,8
tick,0x7fffe05afeb4,220982850,0,0x0,8
tick,0x7fffe05afeb4,220998862,0,0x0,8
tick,0x7fffe05afeb4,221013814,0,0x0,8
tick,0x7fffe05afeb4,221029827,0,0x0,8
tick,0x7fffe05afeb4,221045788,0,0x0,8
tick,0x7fffe05afeb4,221060878,0,0x0,8
tick,0x7fffe05afeb4,221075901,0,0x0,8
tick,0x7fffe05afeb4,221091778,0,0x0,8
tick,0x7fffe05afeb4,221107778,0,0x0,8
tick,0x7fffe05afeb4,221123864,0,0x0,8
tick,0x7fffe05afeb4,221139795,0,0x0,8
tick,0x7fffe05afeb4,221154845,0,0x0,8
tick,0x7fffe05afeb4,221170785,0,0x0,8
tick,0x7fffe05afeb4,221186781,0,0x0,8
tick,0x7fffe05afeb4,221202769,0,0x0,8
tick,0x7fffe05afeb4,221218772,0,0x0,8
tick,0x7fffe05afeb4,221234766,0,0x0,8
tick,0x7fffe05afeb4,221249825,0,0x0,8
tick,0x7fffe05afeb4,221265782,0,0x0,8
tick,0x7fffe05afeb4,221281771,0,0x0,8
tick,0x7fffe05afeb4,221297785,0,0x0,8
tick,0x7fffe05afeb4,221313857,0,0x0,8
tick,0x7fffe05afeb4,221329832,0,0x0,8
tick,0x7fffe05afeb4,221345842,0,0x0,8
tick,0x7fffe05afeb4,221361845,0,0x0,8
tick,0x7fffe05afeb4,221377780,0,0x0,8
tick,0x7fffe05afeb4,221393787,0,0x0,8
tick,0x7fffe05afeb4,221409862,0,0x0,8
tick,0x7fffe05afeb4,221425857,0,0x0,8
tick,0x7fffe05afeb4,221441764,0,0x0,8
tick,0x7fffe05afeb4,221457845,0,0x0,8
tick,0x7fffe05afeb4,221473851,0,0x0,8
tick,0x7fffe05afeb4,221489855,0,0x0,8
tick,0x7fffe05afeb4,221505777,0,0x0,8
tick,0x7fffe05afeb4,221521778,0,0x0,8
tick,0x7fffe05afeb4,221536843,0,0x0,8
tick,0x7fffe05afeb4,221552799,0,0x0,8
tick,0x7fffe05afeb4,221568788,0,0x0,8
tick,0x7fffe05afeb4,221584797,0,0x0,8
tick,0x7fffe05afeb4,221600780,0,0x0,8
tick,0x7fffe05afeb4,221616804,0,0x0,8
tick,0x7fffe05afeb4,221632777,0,0x0,8
tick,0x7fffe05afeb4,221648835,0,0x0,8
tick,0x7fffe05afeb4,221663820,0,0x0,8
tick,0x7fffe05afeb4,221679928,0,0x0,8
tick,0x7fffe05afeb4,221695754,0,0x0,8
tick,0x7fffe05afeb4,221711812,0,0x0,8
tick,0x7fffe05afeb4,221727774,0,0x0,8
tick,0x7fffe05afeb4,221743765,0,0x0,8
tick,0x7fffe05afeb4,221759777,0,0x0,8
tick,0x7fffe05afeb4,221775841,0,0x0,8
tick,0x7fffe05afeb4,221791770,0,0x0,8
tick,0x7fffe05afeb4,221807900,0,0x0,8
tick,0x7fffe05afeb4,221823856,0,0x0,8
tick,0x7fffe05afeb4,221839800,0,0x0,8
tick,0x7fffe05afeb4,221855779,0,0x0,8
tick,0x7fffe05afeb4,221871794,0,0x0,8
tick,0x7fffe05afeb4,221887850,0,0x0,8
tick,0x7fffe05afeb4,221903890,0,0x0,8
tick,0x7fffe05afeb4,221919779,0,0x0,8
tick,0x7fffe05afeb4,221935867,0,0x0,8
tick,0x7fffe05afeb4,221951784,0,0x0,8
tick,0x7fffe05afeb4,221966760,0,0x0,8
tick,0x7fffe05afeb4,221981839,0,0x0,8
tick,0x7fffe05afeb4,221997848,0,0x0,8
tick,0x7fffe05afeb4,222013805,0,0x0,8
tick,0x7fffe05afeb4,222029873,0,0x0,8
tick,0x7fffe05afeb4,222045819,0,0x0,8
tick,0x7fffe05afeb4,222060779,0,0x0,8
tick,0x7fffe05afeb4,222075841,0,0x0,8
tick,0x7fffe05afeb4,222091779,0,0x0,8
tick,0x7fffe05afeb4,222107856,0,0x0,8
tick,0x7fffe05afeb4,222123844,0,0x0,8
tick,0x7fffe05afeb4,222139871,0,0x0,8
tick,0x7fffe05afeb4,222155858,0,0x0,8
tick,0x7fffe05afeb4,222170773,0,0x0,8
tick,0x7fffe05afeb4,222186771,0,0x0,8
tick,0x7fffe05afeb4,222202755,0,0x0,8
tick,0x7fffe05afeb4,222218807,0,0x0,8
tick,0x7fffe05afeb4,222234852,0,0x0,8
tick,0x7fffe05afeb4,222250804,0,0x0,8
tick,0x7fffe05afeb4,222266839,0,0x0,8
tick,0x7fffe05afeb4,222282767,0,0x0,8
tick,0x7fffe05afeb4,222298774,0,0x0,8
tick,0x7fffe05afeb4,222313772,0,0x0,8
tick,0x7fffe05afeb4,222329819,0,0x0,8
tick,0x7fffe05afeb4,222345860,0,0x0,8
tick,0x7fffe05afeb4,222361785,0,0x0,8
tick,0x7fffe05afeb4,222377864,0,0x0,8
tick,0x7fffe05afeb4,222393789,0,0x0,8
tick,0x7fffe05afeb4,222408783,0,0x0,8
tick,0x7fffe05afeb4,222424773,0,0x0,8
tick,0x7fffe05afeb4,222440778,0,0x0,8
tick,0x7fffe05afeb4,222455873,0,0x0,8
tick,0x7fffe05afeb4,222471883,0,0x0,8
tick,0x7fffe05afeb4,222486910,0,0x0,8
tick,0x7fffe05afeb4,222502849,0,0x0,8
tick,0x7fffe05afeb4,222518775,0,0x0,8
tick,0x7fffe05afeb4,222534767,0,0x0,8
tick,0x7fffe05afeb4,222550764,0,0x0,8
tick,0x7fffe05afeb4,222566774,0,0x0,8
tick,0x7fffe05afeb4,222582848,0,0x0,8
tick,0x7fffe05afeb4,222597931,0,0x0,8
tick,0x7fffe05afeb4,222613842,0,0x0,8
tick,0x7fffe05afeb4,222629870,0,0x0,8
tick,0x7fffe05afeb4,222645774,0,0x0,8
tick,0x7fffe05afeb4,222661782,0,0x0,8
tick,0x7fffe05afeb4,222677835,0,0x0,8
tick,0x7fffe05afeb4,222693785,0,0x0,8
tick,0x7fffe05afeb4,222709908,0,0x0,8
tick,0x7fffe05afeb4,222725782,0,0x0,8
tick,0x7fffe05afeb4,222741762,0,0x0,8
tick,0x7fffe05afeb4,222757772,0,0x0,8
tick,0x7fffe05afeb4,222773842,0,0x0,8
tick,0x7fffe05afeb4,222789899,0,0x0,8
tick,0x7fffe05afeb4,222805788,0,0x0,8
tick,0x7fffe05afeb4,222821789,0,0x0,8
tick,0x7fffe05afeb4,222836866,0,0x0,8
tick,0x7fffe05afeb4,222852806,0,0x0,8
tick,0x7fffe05afeb4,222867776,0,0x0,8
tick,0x7fffe05afeb4,222882772,0,0x0,8
tick,0x7fffe05afeb4,222897790,0,0x0,8
tick,0x7fffe05afeb4,222913819,0,0x0,8
tick,0x7fffe05afeb4,222929873,0,0x0,8
tick,0x7fffe05afeb4,222945784,0,0x0,8
tick,0x7fffe05afeb4,222961803,0,0x0,8
tick,0x7fffe05afeb4,222976819,0,0x0,8
tick,0x7fffe05afeb4,222992777,0,0x0,8
tick,0x7fffe05afeb4,223008819,0,0x0,8
tick,0x7fffe05afeb4,223024771,0,0x0,8
tick,0x7fffe05afeb4,223040988,0,0x0,8
tick,0x7fffe05afeb4,223056851,0,0x0,8
tick,0x7fffe05afeb4,223072848,0,0x0,8
tick,0x7fffe05afeb4,223088781,0,0x0,8
tick,0x7fffe05afeb4,223104769,0,0x0,8
tick,0x7fffe05afeb4,223120858,0,0x0,8
tick,0x7fffe05afeb4,223136771,0,0x0,8
tick,0x7fffe05afeb4,223152956,0,0x0,8
tick,0x7fffe05afeb4,223168793,0,0x0,8
tick,0x7fffe05afeb4,223184878,0,0x0,8
tick,0x7fffe05afeb4,223200833,0,0x0,8
tick,0x7fffe05afeb4,223216777,0,0x0,8
tick,0x7fffe05afeb4,223232760,0,0x0,8
tick,0x7fffe05afeb4,223247841,0,0x0,8
tick,0x7fffe05afeb4,223263797,0,0x0,8
tick,0x7fffe05afeb4,223278882,0,0x0,8
tick,0x7fffe05afeb4,223294768,0,0x0,8
tick,0x7fffe05afeb4,223310831,0,0x0,8
tick,0x7fffe05afeb4,223325762,0,0x0,8
tick,0x7fffe05afeb4,223341775,0,0x0,8
tick,0x7fffe05afeb4,223357835,0,0x0,8
tick,0x7fffe05afeb4,223373893,0,0x0,8
tick,0x7fffe05afeb4,223389901,0,0x0,8
tick,0x7fffe05afeb4,223404849,0,0x0,8
tick,0x7fffe05afeb4,223420832,0,0x0,8
tick,0x7fffe05afeb4,223436794,0,0x0,8
tick,0x7fffe05afeb4,223452772,0,0x0,8
tick,0x7fffe05afeb4,223468863,0,0x0,8
tick,0x7fffe05afeb4,223484881,0,0x0,8
tick,0x7fffe05afeb4,223500771,0,0x0,8
tick,0x7fffe05afeb4,223516771,0,0x0,8
tick,0x7fffe05afeb4,223531853,0,0x0,8
tick,0x7fffe05afeb4,223547757,0,0x0,8
tick,0x7fffe05afeb4,223563779,0,0x0,8
tick,0x7fffe05afeb4,223579818,0,0x0,8
tick,0x7fffe05afeb4,223595784,0,0x0,8
tick,0x7fffe05afeb4,223611867,0,0x0,8
tick,0x7fffe05afeb4,223627885,0,0x0,8
tick,0x7fffe05afeb4,223643846,0,0x0,8
tick,0x7fffe05afeb4,223659776,0,0x0,8
tick,0x7fffe05afeb4,223675800,0,0x0,8
tick,0x7fffe05afeb4,223691818,0,0x0,8
tick,0x7fffe05afeb4,223706948,0,0x0,8
tick,0x7fffe05afeb4,223722856,0,0x0,8
tick,0x7fffe05afeb4,223738809,0,0x0,8
tick,0x7fffe05afeb4,223754768,0,0x0,8
tick,0x7fffe05afeb4,223770782,0,0x0,8
tick,0x7fffe05afeb4,223786848,0,0x0,8
tick,0x7fffe05afeb4,223802777,0,0x0,8
tick,0x7fffe05afeb4,223818861,0,0x0,8
tick,0x7fffe05afeb4,223834788,0,0x0,8
tick,0x7fffe05afeb4,223850847,0,0x0,8
tick,0x7fffe05afeb4,223866789,0,0x0,8
tick,0x7fffe05afeb4,223881774,0,0x0,8
tick,0x7fffe05afeb4,223897807,0,0x0,8
tick,0x7fffe05afeb4,223913934,0,0x0,8
tick,0x7fffe05afeb4,223928884,0,0x0,8
tick,0x7fffe05afeb4,223944782,0,0x0,8
tick,0x7fffe05afeb4,223960775,0,0x0,8
tick,0x7fffe05afeb4,223975804,0,0x0,8
tick,0x7fffe05afeb4,223991774,0,0x0,8
tick,0x7fffe05afeb4,224007781,0,0x0,8
tick,0x7fffe05afeb4,224023792,0,0x0,8
tick,0x7fffe05afeb4,224039850,0,0x0,8
tick,0x7fffe05afeb4,224054785,0,0x0,8
tick,0x7fffe05afeb4,224070791,0,0x0,8
tick,0x7fffe05afeb4,224085777,0,0x0,8
tick,0x7fffe05afeb4,224100782,0,0x0,8
tick,0x7fffe05afeb4,224116779,0,0x0,8
tick,0x7fffe05afeb4,224132794,0,0x0,8
tick,0x7fffe05afeb4,224148876,0,0x0,8
tick,0x7fffe05afeb4,224164782,0,0x0,8
tick,0x7fffe05afeb4,224179805,0,0x0,8
tick,0x7fffe05afeb4,224194778,0,0x0,8
tick,0x7fffe05afeb4,224210777,0,0x0,8
tick,0x7fffe05afeb4,224226808,0,0x0,8
tick,0x7fffe05afeb4,224242761,0,0x0,8
tick,0x7fffe05afeb4,224258956,0,0x0,8
tick,0x7fffe05afeb4,224273854,0,0x0,8
tick,0x7fffe05afeb4,224289863,0,0x0,8
tick,0x7fffe05afeb4,224304852,0,0x0,8
tick,0x7fffe05afeb4,224320852,0,0x0,8
tick,0x7fffe05afeb4,224336769,0,0x0,8
tick,0x7fffe05afeb4,224352875,0,0x0,8
tick,0x7fffe05afeb4,224368950,0,0x0,8
tick,0x7fffe05afeb4,224384782,0,0x0,8
tick,0x7fffe05afeb4,224400767,0,0x0,8
tick,0x7fffe05afeb4,224416758,0,0x0,8
tick,0x7fffe05afeb4,224432773,0,0x0,8
tick,0x7fffe05afeb4,224448763,0,0x0,8
tick,0x7fffe05afeb4,224464804,0,0x0,8
tick,0x7fffe05afeb4,224479863,0,0x0,8
tick,0x7fffe05afeb4,224495779,0,0x0,8
tick,0x7fffe05afeb4,224511852,0,0x0,8
tick,0x7fffe05afeb4,224527799,0,0x0,8
tick,0x7fffe05afeb4,224543782,0,0x0,8
tick,0x7fffe05afeb4,224559823,0,0x0,8
tick,0x7fffe05afeb4,224574778,0,0x0,8
tick,0x7fffe05afeb4,224590776,0,0x0,8
tick,0x7fffe05afeb4,224606833,0,0x0,8
tick,0x7fffe05afeb4,224622765,0,0x0,8
tick,0x7fffe05afeb4,224637921,0,0x0,8
tick,0x7fffe05afeb4,224653850,0,0x0,8
tick,0x7fffe05afeb4,224669919,0,0x0,8
tick,0x7fffe05afeb4,224685793,0,0x0,8
tick,0x7fffe05afeb4,224702115,0,0x0,8
tick,0x7fffe05afeb4,224718010,0,0x0,8
tick,0x7fffe05afeb4,224734017,0,0x0,8
tick,0x7fffe05afeb4,224749873,0,0x0,8
tick,0x7fffe05afeb4,224765845,0,0x0,8
tick,0x7fffe05afeb4,224781761,0,0x0,8
tick,0x7fffe05afeb4,224798013,0,0x0,8
tick,0x7fffe05afeb4,224813847,0,0x0,8
tick,0x7fffe05afeb4,224829899,0,0x0,8
tick,0x7fffe05afeb4,224845859,0,0x0,8
tick,0x7fffe05afeb4,224861936,0,0x0,8
tick,0x7fffe05afeb4,224878031,0,0x0,8
tick,0x7fffe05afeb4,224893804,0,0x0,8
tick,0x7fffe05afeb4,224909865,0,0x0,8
tick,0x7fffe05afeb4,224925995,0,0x0,8
tick,0x7fffe05afeb4,224941784,0,0x0,8
tick,0x7fffe05afeb4,224957932,0,0x0,8
tick,0x7fffe05afeb4,224973766,0,0x0,8
tick,0x7fffe05afeb4,224990022,0,0x0,8
tick,0x7fffe05afeb4,225005779,0,0x0,8
tick,0x7fffe05afeb4,225021895,0,0x0,8
tick,0x7fffe05afeb4,225037805,0,0x0,8
tick,0x7fffe05afeb4,225053867,0,0x0,8
tick,0x7fffe05afeb4,225068843,0,0x0,8
tick,0x7fffe05afeb4,225084917,0,0x0,8
tick,0x7fffe05afeb4,225100853,0,0x0,8
tick,0x7fffe05afeb4,225116838,0,0x0,8
tick,0x7fffe05afeb4,225132920,0,0x0,8
tick,0x7fffe05afeb4,225148914,0,0x0,8
tick,0x7fffe05afeb4,225163772,0,0x0,8
tick,0x7fffe05afeb4,225180386,0,0x0,8
tick,0x7fffe05afeb4,225196195,0,0x0,8
tick,0x7fffe05afeb4,225210854,0,0x0,8
tick,0x7fffe05afeb4,225226895,0,0x0,8
tick,0x7fffe05afeb4,225242954,0,0x0,8
tick,0x7fffe05afeb4,225258772,0,0x0,8
tick,0x7fffe05afeb4,225274045,0,0x0,8
tick,0x7fffe05afeb4,225288868,0,0x0,8
tick,0x7fffe05afeb4,225304981,0,0x0,8
tick,0x7fffe05afeb4,225320851,0,0x0,8
tick,0x7fffe05afeb4,225336964,0,0x0,8
tick,0x7fffe05afeb4,225352859,0,0x0,8
tick,0x7fffe05afeb4,225368887,0,0x0,8
tick,0x7fffe05afeb4,225384777,0,0x0,8
tick,0x7fffe05afeb4,225400853,0,0x0,8
tick,0x7fffe05afeb4,225416850,0,0x0,8
tick,0x7fffe05afeb4,225432936,0,0x0,8
tick,0x7fffe05afeb4,225448840,0,0x0,8
tick,0x7fffe05afeb4,225464987,0,0x0,8
tick,0x7fffe05afeb4,225480776,0,0x0,8
tick,0x7fffe05afeb4,225496061,0,0x0,8
tick,0x7fffe05afeb4,225510761,0,0x0,8
tick,0x7fffe05afeb4,225526947,0,0x0,8
tick,0x7fffe05afeb4,225542853,0,0x0,8
tick,0x7fffe05afeb4,225558945,0,0x0,8
tick,0x7fffe05afeb4,225574990,0,0x0,8
tick,0x7fffe05afeb4,225590818,0,0x0,8
tick,0x7fffe05afeb4,225606878,0,0x0,8
tick,0x7fffe05afeb4,225622841,0,0x0,8
tick,0x7fffe05afeb4,225638817,0,0x0,8
tick,0x7fffe05afeb4,225654884,0,0x0,8
tick,0x7fffe05afeb4,225670785,0,0x0,8
tick,0x7fffe05afeb4,225686866,0,0x0,8
tick,0x7fffe05afeb4,225702879,0,0x0,8
tick,0x7fffe05afeb4,225718926,0,0x0,8
tick,0x7fffe05afeb4,225734799,0,0x0,8
tick,0x7fffe05afeb4,225751072,0,0x0,8
tick,0x7fffe05afeb4,225766786,0,0x0,8
tick,0x7fffe05afeb4,225782883,0,0x0,8
tick,0x7fffe05afeb4,225797841,0,0x0,8
tick,0x7fffe05afeb4,225813851,0,0x0,8
tick,0x7fffe05afeb4,225829851,0,0x0,8
tick,0x7fffe05afeb4,225845823,0,0x0,8
tick,0x7fffe05afeb4,225861841,0,0x0,8
tick,0x7fffe05afeb4,225876949,0,0x0,8
tick,0x7fffe05afeb4,225892807,0,0x0,8
tick,0x7fffe05afeb4,225908852,0,0x0,8
tick,0x7fffe05afeb4,225924785,0,0x0,8
tick,0x7fffe05afeb4,225939960,0,0x0,8
tick,0x7fffe05afeb4,225955778,0,0x0,8
tick,0x7fffe05afeb4,225971927,0,0x0,8
tick,0x7fffe05afeb4,225987886,0,0x0,8
tick,0x7fffe05afeb4,226004225,0,0x0,8
tick,0x7fffe05afeb4,226019794,0,0x0,8
tick,0x7fffe05afeb4,226035967,0,0x0,8
tick,0x7fffe05afeb4,226051768,0,0x0,8
tick,0x7fffe05afeb4,226066880,0,0x0,8
tick,0x7fffe05afeb4,226082885,0,0x0,8
tick,0x7fffe05afeb4,226098782,0,0x0,8
tick,0x7fffe05afeb4,226114852,0,0x0,8
tick,0x7fffe05afeb4,226130895,0,0x0,8
tick,0x7fffe05afeb4,226145881,0,0x0,8
tick,0x7fffe05afeb4,226161788,0,0x0,8
tick,0x7fffe05afeb4,226176827,0,0x0,8
tick,0x7fffe05afeb4,226192963,0,0x0,8
tick,0x7fffe05afeb4,226208858,0,0x0,8
tick,0x7fffe05afeb4,226224893,0,0x0,8
tick,0x7fffe05afeb4,226240802,0,0x0,8
tick,0x7fffe05afeb4,226256888,0,0x0,8
tick,0x7fffe05afeb4,226272845,0,0x0,8
tick,0x7fffe05afeb4,226288829,0,0x0,8
tick,0x7fffe05afeb4,226304779,0,0x0,8
tick,0x7fffe05afeb4,226319894,0,0x0,8
tick,0x7fffe05afeb4,226336115,0,0x0,8
tick,0x7fffe05afeb4,226351933,0,0x0,8
tick,0x7fffe05afeb4,226367891,0,0x0,8
tick,0x7fffe05afeb4,226383865,0,0x0,8
tick,0x7fffe05afeb4,226399790,0,0x0,8
tick,0x7fffe05afeb4,226415854,0,0x0,8
tick,0x7fffe05afeb4,226431853,0,0x0,8
tick,0x7fffe05afeb4,226447997,0,0x0,8
tick,0x7fffe05afeb4,226463860,0,0x0,8
tick,0x7fffe05afeb4,226479990,0,0x0,8
tick,0x7fffe05afeb4,226495872,0,0x0,8
tick,0x7fffe05afeb4,226511853,0,0x0,8
tick,0x7fffe05afeb4,226526930,0,0x0,8
tick,0x7fffe05afeb4,226542828,0,0x0,8
tick,0x7fffe05afeb4,226558856,0,0x0,8
tick,0x7fffe05afeb4,226574862,0,0x0,8
tick,0x7fffe05afeb4,226590853,0,0x0,8
tick,0x7fffe05afeb4,226606877,0,0x0,8
tick,0x7fffe05afeb4,226622750,0,0x0,8
tick,0x7fffe05afeb4,226637927,0,0x0,8
tick,0x7fffe05afeb4,226653939,0,0x0,8
tick,0x7fffe05afeb4,226668878,0,0x0,8
tick,0x7fffe05afeb4,226684799,0,0x0,8
tick,0x7fffe05afeb4,226700862,0,0x0,8
tick,0x7fffe05afeb4,226716852,0,0x0,8
tick,0x7fffe05afeb4,226732965,0,0x0,8
tick,0x7fffe05afeb4,226748836,0,0x0,8
tick,0x7fffe05afeb4,226764908,0,0x0,8
tick,0x7fffe05afeb4,226780777,0,0x0,8
tick,0x7fffe05afeb4,226795867,0,0x0,8
tick,0x7fffe05afeb4,226811768,0,0x0,8
tick,0x7fffe05afeb4,226827938,0,0x0,8
tick,0x7fffe05afeb4,226843824,0,0x0,8
tick,0x7fffe05afeb4,226859826,0,0x0,8
tick,0x7fffe05afeb4,226875843,0,0x0,8
tick,0x7fffe05afeb4,226891975,0,0x0,8
tick,0x7fffe05afeb4,226907777,0,0x0,8
tick,0x7fffe05afeb4,226923801,0,0x0,8
tick,0x7fffe05afeb4,226939945,0,0x0,8
tick,0x7fffe05afeb4,226955926,0,0x0,8
tick,0x7fffe05afeb4,226971787,0,0x0,8
tick,0x7fffe05afeb4,226987877,0,0x0,8
tick,0x7fffe05afeb4,227003773,0,0x0,8
tick,0x7fffe05afeb4,227019933,0,0x0,8
tick,0x7fffe05afeb4,227035865,0,0x0,8
tick,0x7fffe05afeb4,227050842,0,0x0,8
tick,0x7fffe05afeb4,227066871,0,0x0,8
tick,0x7fffe05afeb4,227082923,0,0x0,8
tick,0x7fffe05afeb4,227097971,0,0x0,8
tick,0x7fffe05afeb4,227113845,0,0x0,8
tick,0x7fffe05afeb4,227129856,0,0x0,8
tick,0x7fffe05afeb4,227146010,0,0x0,8
tick,0x7fffe05afeb4,227161790,0,0x0,8
tick,0x7fffe05afeb4,227177892,0,0x0,8
tick,0x7fffe05afeb4,227193846,0,0x0,8
tick,0x7fffe05afeb4,227208892,0,0x0,8
tick,0x7fffe05afeb4,227224769,0,0x0,8
tick,0x7fffe05afeb4,227240847,0,0x0,8
tick,0x7fffe05afeb4,227256791,0,0x0,8
tick,0x7fffe05afeb4,227272929,0,0x0,8
tick,0x7fffe05afeb4,227288884,0,0x0,8
tick,0x7fffe05afeb4,227304834,0,0x0,8
tick,0x7fffe05afeb4,227321105,0,0x0,8
tick,0x7fffe05afeb4,227336905,0,0x0,8
tick,0x7fffe05afeb4,227352830,0,0x0,8
tick,0x7fffe05afeb4,227368865,0,0x0,8
tick,0x7fffe05afeb4,227385037,0,0x0,8
tick,0x7fffe05afeb4,227400928,0,0x0,8
tick,0x7fffe05afeb4,227416773,0,0x0,8
tick,0x7fffe05afeb4,227432931,0,0x0,8
tick,0x7fffe05afeb4,227447809,0,0x0,8
tick,0x7fffe05afeb4,227463852,0,0x0,8
tick,0x7fffe05afeb4,227479869,0,0x0,8
tick,0x7fffe05afeb4,227495947,0,0x0,8
tick,0x7fffe05afeb4,227511759,0,0x0,8
tick,0x7fffe05afeb4,227526945,0,0x0,8
tick,0x7fffe05afeb4,227542939,0,0x0,8
tick,0x7fffe05afeb4,227558968,0,0x0,8
tick,0x7fffe05afeb4,227574801,0,0x0,8
tick,0x7fffe05afeb4,227590849,0,0x0,8
tick,0x7fffe05afeb4,227606842,0,0x0,8
tick,0x7fffe05afeb4,227622818,0,0x0,8
tick,0x7fffe05afeb4,227638862,0,0x0,8
tick,0x7fffe05afeb4,227655069,0,0x0,8
tick,0x7fffe05afeb4,227670835,0,0x0,8
tick,0x7fffe05afeb4,227686842,0,0x0,8
tick,0x7fffe05afeb4,227702782,0,0x0,8
tick,0x7fffe05afeb4,227718967,0,0x0,8
tick,0x7fffe05afeb4,227734966,0,0x0,8
tick,0x7fffe05afeb4,227750768,0,0x0,8
tick,0x7fffe05afeb4,227766875,0,0x0,8
tick,0x7fffe05afeb4,227782851,0,0x0,8
tick,0x7fffe05afeb4,227797754,0,0x0,8
tick,0x7fffe05afeb4,227813821,0,0x0,8
tick,0x7fffe05afeb4,227829896,0,0x0,8
tick,0x7fffe05afeb4,227845854,0,0x0,8
tick,0x7fffe05afeb4,227860786,0,0x0,8
tick,0x7fffe05afeb4,227877031,0,0x0,8
tick,0x7fffe05afeb4,227892817,0,0x0,8
tick,0x7fffe05afeb4,227908841,0,0x0,8
tick,0x7fffe05afeb4,227924761,0,0x0,8
tick,0x7fffe05afeb4,227939936,0,0x0,8
tick,0x7fffe05afeb4,227954779,0,0x0,8
tick,0x7fffe05afeb4,227970879,0,0x0,8
tick,0x7fffe05afeb4,227986857,0,0x0,8
tick,0x7fffe05afeb4,228002841,0,0x0,8
tick,0x7fffe05afeb4,228018841,0,0x0,8
tick,0x7fffe05afeb4,228034904,0,0x0,8
tick,0x7fffe05afeb4,228050766,0,0x0,8
tick,0x7fffe05afeb4,228065854,0,0x0,8
tick,0x7fffe05afeb4,228081840,0,0x0,8
tick,0x7fffe05afeb4,228098235,0,0x0,8
tick,0x7fffe05afeb4,228113769,0,0x0,8
tick,0x7fffe05afeb4,228130010,0,0x0,8
tick,0x7fffe05afeb4,228145911,0,0x0,8
tick,0x7fffe05afeb4,228161828,0,0x0,8
tick,0x7fffe05afeb4,228177821,0,0x0,8
tick,0x7fffe05afeb4,228194014,0,0x0,8
tick,0x7fffe05afeb4,228208850,0,0x0,8
tick,0x7fffe05afeb4,228224960,0,0x0,8
tick,0x7fffe05afeb4,228240776,0,0x0,8
tick,0x7fffe05afeb4,228256779,0,0x0,8
tick,0x7fffe05afeb4,228272817,0,0x0,8
tick,0x7fffe05afeb4,228288836,0,0x0,8
tick,0x7fffe05afeb4,228304873,0,0x0,8
tick,0x7fffe05afeb4,228321403,0,0x0,8
tick,0x7fffe05afeb4,228336870,0,0x0,8
tick,0x7fffe05afeb4,228352995,0,0x0,8
tick,0x7fffe05afeb4,228367896,0,0x0,8
tick,0x7fffe05afeb4,228383813,0,0x0,8
tick,0x7fffe05afeb4,228398787,0,0x0,8
tick,0x7fffe05afeb4,228414972,0,0x0,8
tick,0x7fffe05afeb4,228430845,0,0x0,8
tick,0x7fffe05afeb4,228446813,0,0x0,8
tick,0x7fffe05afeb4,228462926,0,0x0,8
tick,0x7fffe05afeb4,228479331,0,0x0,8
tick,0x7fffe05afeb4,228494835,0,0x0,8
tick,0x7fffe05afeb4,228510848,0,0x0,8
tick,0x7fffe05afeb4,228526778,0,0x0,8
tick,0x7fffe05afeb4,228542129,0,0x0,8
tick,0x7fffe05afeb4,228557846,0,0x0,8
tick,0x7fffe05afeb4,228573993,0,0x0,8
tick,0x7fffe05afeb4,228589935,0,0x0,8
tick,0x7fffe05afeb4,228606027,0,0x0,8
tick,0x7fffe05afeb4,228621758,0,0x0,8
tick,0x7fffe05afeb4,228637769,0,0x0,8
tick,0x7fffe05afeb4,228653954,0,0x0,8
tick,0x7fffe05afeb4,228669062,0,0x0,8
tick,0x7fffe05afeb4,228684880,0,0x0,8
tick,0x7fffe05afeb4,228700850,0,0x0,8
tick,0x7fffe05afeb4,228716777,0,0x0,8
tick,0x7fffe05afeb4,228731788,0,0x0,8
tick,0x7fffe05afeb4,228747784,0,0x0,8
tick,0x7fffe05afeb4,228763800,0,0x0,8
tick,0x7fffe05afeb4,228779899,0,0x0,8
tick,0x7fffe05afeb4,228795775,0,0x0,8
tick,0x7fffe05afeb4,228811846,0,0x0,8
tick,0x7fffe05afeb4,228826772,0,0x0,8
tick,0x7fffe05afeb4,228842770,0,0x0,8
tick,0x7fffe05afeb4,228858774,0,0x0,8
tick,0x7fffe05afeb4,228874915,0,0x0,8
tick,0x7fffe05afeb4,228890771,0,0x0,8
tick,0x7fffe05afeb4,228906844,0,0x0,8
tick,0x7fffe05afeb4,228922847,0,0x0,8
tick,0x7fffe05afeb4,228938857,0,0x0,8
tick,0x7fffe05afeb4,228954783,0,0x0,8
tick,0x7fffe05afeb4,228969778,0,0x0,8
tick,0x7fffe05afeb4,228985811,0,0x0,8
tick,0x7fffe05afeb4,229001781,0,0x0,8
tick,0x7fffe05afeb4,229017860,0,0x0,8
tick,0x7fffe05afeb4,229033855,0,0x0,8
tick,0x7fffe05afeb4,229049901,0,0x0,8
tick,0x7fffe05afeb4,229065818,0,0x0,8
tick,0x7fffe05afeb4,229081759,0,0x0,8
tick,0x7fffe05afeb4,229096930,0,0x0,8
tick,0x7fffe05afeb4,229112793,0,0x0,8
tick,0x7fffe05afeb4,229127773,0,0x0,8
tick,0x7fffe05afeb4,229143778,0,0x0,8
tick,0x7fffe05afeb4,229159830,0,0x0,8
tick,0x7fffe05afeb4,229174815,0,0x0,8
tick,0x7fffe05afeb4,229190767,0,0x0,8
tick,0x7fffe05afeb4,229206800,0,0x0,8
tick,0x7fffe05afeb4,229222850,0,0x0,8
tick,0x7fffe05afeb4,229237869,0,0x0,8
tick,0x7fffe05afeb4,229253862,0,0x0,8
tick,0x7fffe05afeb4,229268777,0,0x0,8
tick,0x7fffe05afeb4,229284800,0,0x0,8
tick,0x7fffe05afeb4,229300776,0,0x0,8
tick,0x7fffe05afeb4,229316784,0,0x0,8
tick,0x7fffe05afeb4,229332776,0,0x0,8
tick,0x7fffe05afeb4,229348769,0,0x0,8
tick,0x7fffe05afeb4,229364773,0,0x0,8
tick,0x7fffe05afeb4,229380774,0,0x0,8
tick,0x7fffe05afeb4,229395848,0,0x0,8
tick,0x7fffe05afeb4,229410837,0,0x0,8
tick,0x7fffe05afeb4,229425769,0,0x0,8
tick,0x7fffe05afeb4,229441820,0,0x0,8
tick,0x7fffe05afeb4,229457839,0,0x0,8
tick,0x7fffe05afeb4,229473779,0,0x0,8
tick,0x7fffe05afeb4,229489795,0,0x0,8
tick,0x7fffe05afeb4,229504825,0,0x0,8
tick,0x7fffe05afeb4,229520813,0,0x0,8
tick,0x7fffe05afeb4,229536796,0,0x0,8
tick,0x7fffe05afeb4,229552798,0,0x0,8
tick,0x7fffe05afeb4,229568849,0,0x0,8
tick,0x7fffe05afeb4,229584825,0,0x0,8
tick,0x7fffe05afeb4,229600872,0,0x0,8
tick,0x7fffe05afeb4,229616761,0,0x0,8
tick,0x7fffe05afeb4,229632859,0,0x0,8
tick,0x7fffe05afeb4,229648790,0,0x0,8
tick,0x7fffe05afeb4,229664826,0,0x0,8
tick,0x7fffe05afeb4,229679962,0,0x0,8
tick,0x7fffe05afeb4,229696086,0,0x0,8
tick,0x7fffe05afeb4,229711857,0,0x0,8
tick,0x7fffe05afeb4,229727796,0,0x0,8
tick,0x7fffe05afeb4,229743876,0,0x0,8
tick,0x7fffe05afeb4,229759950,0,0x0,8
tick,0x7fffe05afeb4,229775847,0,0x0,8
tick,0x7fffe05afeb4,229791772,0,0x0,8
tick,0x7fffe05afeb4,229807849,0,0x0,8
tick,0x7fffe05afeb4,229823771,0,0x0,8
tick,0x7fffe05afeb4,229839902,0,0x0,8
tick,0x7fffe05afeb4,229855809,0,0x0,8
tick,0x7fffe05afeb4,229871772,0,0x0,8
tick,0x7fffe05afeb4,229887780,0,0x0,8
tick,0x7fffe05afeb4,229903827,0,0x0,8
tick,0x7fffe05afeb4,229920231,0,0x0,8
tick,0x7fffe05afeb4,229935847,0,0x0,8
tick,0x7fffe05afeb4,229951778,0,0x0,8
tick,0x7fffe05afeb4,229967861,0,0x0,8
tick,0x7fffe05afeb4,229983810,0,0x0,8
tick,0x7fffe05afeb4,229999819,0,0x0,8
tick,0x7fffe05afeb4,230015773,0,0x0,8
tick,0x7fffe05afeb4,230031851,0,0x0,8
tick,0x7fffe05afeb4,230047788,0,0x0,8
tick,0x7fffe05afeb4,230063857,0,0x0,8
tick,0x7fffe05afeb4,230079846,0,0x0,8
tick,0x7fffe05afeb4,230095855,0,0x0,8
tick,0x7fffe05afeb4,230111861,0,0x0,8
tick,0x7fffe05afeb4,230127868,0,0x0,8
tick,0x7fffe05afeb4,230143766,0,0x0,8
tick,0x7fffe05afeb4,230159873,0,0x0,8
tick,0x7fffe05afeb4,230175848,0,0x0,8
tick,0x7fffe05afeb4,230191760,0,0x0,8
tick,0x7fffe05afeb4,230207775,0,0x0,8
tick,0x7fffe05afeb4,230223787,0,0x0,8
tick,0x7fffe05afeb4,230239853,0,0x0,8
tick,0x7fffe05afeb4,230255857,0,0x0,8
tick,0x7fffe05afeb4,230271810,0,0x0,8
tick,0x7fffe05afeb4,230287849,0,0x0,8
tick,0x7fffe05afeb4,230303768,0,0x0,8
tick,0x7fffe05afeb4,230318796,0,0x0,8
tick,0x7fffe05afeb4,230334778,0,0x0,8
tick,0x7fffe05afeb4,230350856,0,0x0,8
tick,0x7fffe05afeb4,230366789,0,0x0,8
tick,0x7fffe05afeb4,230382844,0,0x0,8
tick,0x7fffe05afeb4,230397833,0,0x0,8
tick,0x7fffe05afeb4,230413756,0,0x0,8
tick,0x7fffe05afeb4,230429829,0,0x0,8
tick,0x7fffe05afeb4,230446076,0,0x0,8
tick,0x7fffe05afeb4,230461839,0,0x0,8
tick,0x7fffe05afeb4,230478032,0,0x0,8
tick,0x7fffe05afeb4,230493778,0,0x0,8
tick,0x7fffe05afeb4,230510025,0,0x0,8
tick,0x7fffe05afeb4,230525853,0,0x0,8
tick,0x7fffe05afeb4,230541943,0,0x0,8
tick,0x7fffe05afeb4,230557829,0,0x0,8
tick,0x7fffe05afeb4,230573863,0,0x0,8
tick,0x7fffe05afeb4,230589925,0,0x0,8
tick,0x7fffe05afeb4,230605843,0,0x0,8
tick,0x7fffe05afeb4,230621851,0,0x0,8
tick,0x7fffe05afeb4,230636840,0,0x0,8
tick,0x7fffe05afeb4,230652795,0,0x0,8
tick,0x7fffe05afeb4,230668843,0,0x0,8
tick,0x7fffe05afeb4,230684858,0,0x0,8
tick,0x7fffe05afeb4,230701048,0,0x0,8
tick,0x7fffe05afeb4,230716763,0,0x0,8
tick,0x7fffe05afeb4,230731846,0,0x0,8
tick,0x7fffe05afeb4,230746952,0,0x0,8
tick,0x7fffe05afeb4,230762802,0,0x0,8
tick,0x7fffe05afeb4,230778797,0,0x0,8
tick,0x7fffe05afeb4,230794791,0,0x0,8
tick,0x7fffe05afeb4,230810840,0,0x0,8
tick,0x7fffe05afeb4,230826856,0,0x0,8
tick,0x7fffe05afeb4,230842863,0,0x0,8
tick,0x7fffe05afeb4,230858761,0,0x0,8
tick,0x7fffe05afeb4,230874772,0,0x0,8
tick,0x7fffe05afeb4,230889797,0,0x0,8
tick,0x7fffe05afeb4,230905844,0,0x0,8
tick,0x7fffe05afeb4,230921761,0,0x0,8
tick,0x7fffe05afeb4,230937857,0,0x0,8
tick,0x7fffe05afeb4,230953854,0,0x0,8
tick,0x7fffe05afeb4,230969878,0,0x0,8
tick,0x7fffe05afeb4,230985807,0,0x0,8
tick,0x7fffe05afeb4,231001765,0,0x0,8
tick,0x7fffe05afeb4,231017855,0,0x0,8
tick,0x7fffe05afeb4,231033851,0,0x0,8
tick,0x7fffe05afeb4,231048857,0,0x0,8
tick,0x7fffe05afeb4,231064864,0,0x0,8
tick,0x7fffe05afeb4,231080785,0,0x0,8
tick,0x7fffe05afeb4,231095827,0,0x0,8
tick,0x7fffe05afeb4,231111775,0,0x0,8
tick,0x7fffe05afeb4,231126855,0,0x0,8
tick,0x7fffe05afeb4,231142857,0,0x0,8
tick,0x7fffe05afeb4,231158875,0,0x0,8
tick,0x7fffe05afeb4,231174849,0,0x0,8
tick,0x7fffe05afeb4,231190760,0,0x0,8
tick,0x7fffe05afeb4,231206800,0,0x0,8
tick,0x7fffe05afeb4,231222787,0,0x0,8
tick,0x7fffe05afeb4,231238776,0,0x0,8
tick,0x7fffe05afeb4,231254788,0,0x0,8
tick,0x7fffe05afeb4,231270839,0,0x0,8
tick,0x7fffe05afeb4,231286880,0,0x0,8
tick,0x7fffe05afeb4,231302770,0,0x0,8
tick,0x7fffe05afeb4,231318816,0,0x0,8
tick,0x7fffe05afeb4,231334972,0,0x0,8
tick,0x7fffe05afeb4,231350866,0,0x0,8
tick,0x7fffe05afeb4,231366787,0,0x0,8
tick,0x7fffe05afeb4,231382857,0,0x0,8
tick,0x7fffe05afeb4,231398975,0,0x0,8
tick,0x7fffe05afeb4,231414898,0,0x0,8
tick,0x7fffe05afeb4,231429856,0,0x0,8
tick,0x7fffe05afeb4,231444925,0,0x0,8
tick,0x7fffe05afeb4,231460802,0,0x0,8
tick,0x7fffe05afeb4,231476778,0,0x0,8
tick,0x7fffe05afeb4,231491818,0,0x0,8
tick,0x7fffe05afeb4,231507838,0,0x0,8
tick,0x7fffe05afeb4,231523771,0,0x0,8
tick,0x7fffe05afeb4,231538836,0,0x0,8
tick,0x7fffe05afeb4,231554760,0,0x0,8
tick,0x7fffe05afeb4,231571329,0,0x0,8
tick,0x7fffe05afeb4,231586796,0,0x0,8
tick,0x7fffe05afeb4,231602901,0,0x0,8
tick,0x7fffe05afeb4,231618784,0,0x0,8
tick,0x7fffe05afeb4,231635130,0,0x0,8
tick,0x7fffe05afeb4,231650938,0,0x0,8
tick,0x7fffe05afeb4,231666810,0,0x0,8
tick,0x7fffe05afeb4,231682791,0,0x0,8
tick,0x7fffe05afeb4,231697998,0,0x0,8
tick,0x7fffe05afeb4,231713860,0,0x0,8
tick,0x7fffe05afeb4,231729828,0,0x0,8
tick,0x7fffe05afeb4,231745791,0,0x0,8
tick,0x7fffe05afeb4,231762221,0,0x0,8
tick,0x7fffe05afeb4,231777970,0,0x0,8
tick,0x7fffe05afeb4,231794006,0,0x0,8
tick,0x7fffe05afeb4,231808775,0,0x0,8
tick,0x7fffe05afeb4,231823759,0,0x0,8
tick,0x7fffe05afeb4,231838892,0,0x0,8
tick,0x7fffe05afeb4,231854873,0,0x0,8
tick,0x7fffe05afeb4,231870788,0,0x0,8
tick,0x7fffe05afeb4,231885887,0,0x0,8
tick,0x7fffe05afeb4,231901851,0,0x0,8
tick,0x7fffe05afeb4,231917853,0,0x0,8
tick,0x7fffe05afeb4,231933833,0,0x0,8
tick,0x7fffe05afeb4,231950004,0,0x0,8
tick,0x7fffe05afeb4,231965818,0,0x0,8
tick,0x7fffe05afeb4,231982601,0,0x0,8
tick,0x7fffe05afeb4,231998045,0,0x0,8
tick,0x7fffe05afeb4,232013801,0,0x0,8
tick,0x7fffe05afeb4,232029858,0,0x0,8
tick,0x7fffe05afeb4,232045817,0,0x0,8
tick,0x7fffe05afeb4,232061768,0,0x0,8
tick,0x7fffe05afeb4,232077961,0,0x0,8
tick,0x7fffe05afeb4,232093908,0,0x0,8
tick,0x7fffe05afeb4,232109897,0,0x0,8
tick,0x7fffe05afeb4,232125846,0,0x0,8
tick,0x7fffe05afeb4,232140805,0,0x0,8
tick,0x7fffe05afeb4,232156778,0,0x0,8
tick,0x7fffe05afeb4,232172768,0,0x0,8
tick,0x7fffe05afeb4,232188869,0,0x0,8
tick,0x7fffe05afeb4,232204881,0,0x0,8
tick,0x7fffe05afeb4,232220813,0,0x0,8
tick,0x7fffe05afeb4,232236890,0,0x0,8
tick,0x7fffe05afeb4,232252774,0,0x0,8
tick,0x7fffe05afeb4,232267821,0,0x0,8
tick,0x7fffe05afeb4,232283858,0,0x0,8
tick,0x7fffe05afeb4,232299855,0,0x0,8
tick,0x7fffe05afeb4,232315875,0,0x0,8
tick,0x7fffe05afeb4,232331925,0,0x0,8
tick,0x7fffe05afeb4,232347812,0,0x0,8
tick,0x7fffe05afeb4,232363785,0,0x0,8
tick,0x7fffe05afeb4,232379793,0,0x0,8
tick,0x7fffe05afeb4,232395826,0,0x0,8
tick,0x7fffe05afeb4,232411779,0,0x0,8
tick,0x7fffe05afeb4,232427866,0,0x0,8
tick,0x7fffe05afeb4,232443781,0,0x0,8
tick,0x7fffe05afeb4,232459847,0,0x0,8
tick,0x7fffe05afeb4,232475859,0,0x0,8
tick,0x7fffe05afeb4,232491774,0,0x0,8
tick,0x7fffe05afeb4,232507859,0,0x0,8
tick,0x7fffe05afeb4,232523878,0,0x0,8
tick,0x7fffe05afeb4,232541643,0,0x0,8
tick,0x7fffe05afeb4,232555763,0,0x0,8
tick,0x7fffe05afeb4,232571652,0,0x0,8
tick,0x7fffe05afeb4,232585849,0,0x0,8
tick,0x7fffe05afeb4,232601854,0,0x0,8
tick,0x7fffe05afeb4,232616816,0,0x0,8
tick,0x7fffe05afeb4,232632847,0,0x0,8
tick,0x7fffe05afeb4,232648821,0,0x0,8
tick,0x7fffe05afeb4,232664848,0,0x0,8
tick,0x7fffe05afeb4,232679880,0,0x0,8
tick,0x7fffe05afeb4,232696045,0,0x0,8
tick,0x7fffe05afeb4,232711842,0,0x0,8
tick,0x7fffe05afeb4,232727778,0,0x0,8
tick,0x7fffe05afeb4,232743846,0,0x0,8
tick,0x7fffe05afeb4,232759832,0,0x0,8
tick,0x7fffe05afeb4,232775817,0,0x0,8
tick,0x7fffe05afeb4,232791871,0,0x0,8
tick,0x7fffe05afeb4,232807852,0,0x0,8
tick,0x7fffe05afeb4,232823847,0,0x0,8
tick,0x7fffe05afeb4,232839888,0,0x0,8
tick,0x7fffe05afeb4,232855854,0,0x0,8
tick,0x7fffe05afeb4,232871770,0,0x0,8
tick,0x7fffe05afeb4,232887767,0,0x0,8
tick,0x7fffe05afeb4,232903936,0,0x0,8
tick,0x7fffe05afeb4,232919783,0,0x0,8
tick,0x7fffe05afeb4,232935937,0,0x0,8
tick,0x7fffe05afeb4,232951801,0,0x0,8
tick,0x7fffe05afeb4,232966757,0,0x0,8
tick,0x7fffe05afeb4,232982776,0,0x0,8
tick,0x7fffe05afeb4,232998792,0,0x0,8
tick,0x7fffe05afeb4,233014786,0,0x0,8
tick,0x7fffe05afeb4,233030768,0,0x0,8
tick,0x7fffe05afeb4,233045782,0,0x0,8
tick,0x7fffe05afeb4,233061855,0,0x0,8
tick,0x7fffe05afeb4,233077812,0,0x0,8
tick,0x7fffe05afeb4,233093855,0,0x0,8
tick,0x7fffe05afeb4,233109900,0,0x0,8
tick,0x7fffe05afeb4,233125850,0,0x0,8
tick,0x7fffe05afeb4,233141849,0,0x0,8
tick,0x7fffe05afeb4,233157799,0,0x0,8
tick,0x7fffe05afeb4,233173769,0,0x0,8
tick,0x7fffe05afeb4,233189782,0,0x0,8
tick,0x7fffe05afeb4,233205780,0,0x0,8
tick,0x7fffe05afeb4,233221844,0,0x0,8
tick,0x7fffe05afeb4,233236848,0,0x0,8
tick,0x7fffe05afeb4,233252815,0,0x0,8
tick,0x7fffe05afeb4,233268852,0,0x0,8
tick,0x7fffe05afeb4,233284774,0,0x0,8
tick,0x7fffe05afeb4,233300818,0,0x0,8
tick,0x7fffe05afeb4,233316775,0,0x0,8
tick,0x7fffe05afeb4,233331787,0,0x0,8
tick,0x7fffe05afeb4,233347835,0,0x0,8
tick,0x7fffe05afeb4,233363859,0,0x0,8
tick,0x7fffe05afeb4,233379817,0,0x0,8
tick,0x7fffe05afeb4,233395770,0,0x0,8
tick,0x7fffe05afeb4,233411866,0,0x0,8
tick,0x7fffe05afeb4,233427795,0,0x0,8
tick,0x7fffe05afeb4,233443777,0,0x0,8
tick,0x7fffe05afeb4,233459794,0,0x0,8
tick,0x7fffe05afeb4,233475862,0,0x0,8
tick,0x7fffe05afeb4,233491774,0,0x0,8
tick,0x7fffe05afeb4,233507885,0,0x0,8
tick,0x7fffe05afeb4,233523861,0,0x0,8
tick,0x7fffe05afeb4,233541053,0,0x0,8
tick,0x7fffe05afeb4,233554781,0,0x0,8
tick,0x7fffe05afeb4,233570931,0,0x0,8
tick,0x7fffe05afeb4,233585862,0,0x0,8
tick,0x7fffe05afeb4,233600858,0,0x0,8
tick,0x7fffe05afeb4,233616861,0,0x0,8
tick,0x7fffe05afeb4,233632824,0,0x0,8
tick,0x7fffe05afeb4,233648919,0,0x0,8
tick,0x7fffe05afeb4,233665760,0,0x0,8
tick,0x7fffe05afeb4,233679880,0,0x0,8
tick,0x7fffe05afeb4,233696719,0,0x0,8
tick,0x7fffe05afeb4,233712062,0,0x0,8
tick,0x7fffe05afeb4,233726858,0,0x0,8
tick,0x7fffe05afeb4,233742938,0,0x0,8
tick,0x7fffe05afeb4,233758873,0,0x0,8
tick,0x7fffe05afeb4,233773873,0,0x0,8
tick,0x7fffe05afeb4,233788921,0,0x0,8
tick,0x7fffe05afeb4,233805010,0,0x0,8
tick,0x7fffe05afeb4,233819777,0,0x0,8
tick,0x7fffe05afeb4,233835823,0,0x0,8
tick,0x7fffe05afeb4,233851776,0,0x0,8
tick,0x7fffe05afeb4,233866860,0,0x0,8
tick,0x7fffe05afeb4,233882904,0,0x0,8
tick,0x7fffe05afeb4,233898856,0,0x0,8
tick,0x7fffe05afeb4,233913850,0,0x0,8
tick,0x7fffe05afeb4,233929884,0,0x0,8
tick,0x7fffe05afeb4,233946717,0,0x0,8
tick,0x7fffe05afeb4,233961780,0,0x0,8
tick,0x7fffe05afeb4,233977908,0,0x0,8
tick,0x7fffe05afeb4,233992871,0,0x0,8
tick,0x7fffe05afeb4,234009304,0,0x0,8
tick,0x7fffe05afeb4,234024887,0,0x0,8
tick,0x7fffe05afeb4,234040997,0,0x0,8
tick,0x7fffe05afeb4,234056795,0,0x0,8
tick,0x7fffe05afeb4,234072786,0,0x0,8
tick,0x7fffe05afeb4,234088821,0,0x0,8
tick,0x7fffe05afeb4,234104830,0,0x0,8
tick,0x7fffe05afeb4,234119823,0,0x0,8
tick,0x7fffe05afeb4,234135368,0,0x0,8
tick,0x7fffe05afeb4,234150840,0,0x0,8
tick,0x7fffe05afeb4,234166853,0,0x0,8
tick,0x7fffe05afeb4,234182780,0,0x0,8
tick,0x7fffe05afeb4,234198854,0,0x0,8
tick,0x7fffe05afeb4,234214776,0,0x0,8
tick,0x7fffe05afeb4,234229969,0,0x0,8
tick,0x7fffe05afeb4,234245756,0,0x0,8
tick,0x7fffe05afeb4,234260769,0,0x0,8
tick,0x7fffe05afeb4,234275874,0,0x0,8
tick,0x7fffe05afeb4,234291773,0,0x0,8
tick,0x7fffe05afeb4,234308035,0,0x0,8
tick,0x7fffe05afeb4,234322775,0,0x0,8
tick,0x7fffe05afeb4,234338881,0,0x0,8
tick,0x7fffe05afeb4,234354343,0,0x0,8
tick,0x7fffe05afeb4,234369879,0,0x0,8
tick,0x7fffe05afeb4,234385815,0,0x0,8
tick,0x7fffe05afeb4,234401764,0,0x0,8
tick,0x7fffe05afeb4,234417794,0,0x0,8
tick,0x7fffe05afeb4,234433871,0,0x0,8
tick,0x7fffe05afeb4,234448808,0,0x0,8
tick,0x7fffe05afeb4,234463773,0,0x0,8
tick,0x7fffe05afeb4,234479794,0,0x0,8
tick,0x7fffe05afeb4,234495780,0,0x0,8
tick,0x7fffe05afeb4,234511789,0,0x0,8
tick,0x7fffe05afeb4,234527894,0,0x0,8
tick,0x7fffe05afeb4,234543780,0,0x0,8
tick,0x7fffe05afeb4,234559944,0,0x0,8
tick,0x7fffe05afeb4,234575804,0,0x0,8
tick,0x7fffe05afeb4,234591816,0,0x0,8
tick,0x7fffe05afeb4,234607773,0,0x0,8
tick,0x7fffe05afeb4,234623787,0,0x0,8
tick,0x7fffe05afeb4,234639827,0,0x0,8
tick,0x7fffe05afeb4,234655902,0,0x0,8
tick,0x7fffe05afeb4,234671870,0,0x0,8
tick,0x7fffe05afeb4,234687862,0,0x0,8
tick,0x7fffe05afeb4,234703780,0,0x0,8
tick,0x7fffe05afeb4,234719800,0,0x0,8
tick,0x7fffe05afeb4,234735792,0,0x0,8
tick,0x7fffe05afeb4,234751783,0,0x0,8
tick,0x7fffe05afeb4,234767768,0,0x0,8
tick,0x7fffe05afeb4,234783844,0,0x0,8
tick,0x7fffe05afeb4,234799931,0,0x0,8
tick,0x7fffe05afeb4,234815798,0,0x0,8
tick,0x7fffe05afeb4,234831772,0,0x0,8
tick,0x7fffe05afeb4,234847789,0,0x0,8
tick,0x7fffe05afeb4,234863769,0,0x0,8
tick,0x7fffe05afeb4,234878793,0,0x0,8
tick,0x7fffe05afeb4,234894769,0,0x0,8
tick,0x7fffe05afeb4,234910780,0,0x0,8
tick,0x7fffe05afeb4,234926773,0,0x0,8
tick,0x7fffe05afeb4,234942790,0,0x0,8
tick,0x7fffe05afeb4,234958803,0,0x0,8
tick,0x7fffe05afeb4,234974798,0,0x0,8
tick,0x7fffe05afeb4,234990799,0,0x0,8
tick,0x7fffe05afeb4,235005777,0,0x0,8
tick,0x7fffe05afeb4,235020778,0,0x0,8
tick,0x7fffe05afeb4,235036786,0,0x0,8
tick,0x7fffe05afeb4,235052836,0,0x0,8
tick,0x7fffe05afeb4,235068761,0,0x0,8
tick,0x7fffe05afeb4,235083839,0,0x0,8
tick,0x7fffe05afeb4,235099768,0,0x0,8
tick,0x7fffe05afeb4,235115779,0,0x0,8
tick,0x7fffe05afeb4,235131858,0,0x0,8
tick,0x7fffe05afeb4,235147854,0,0x0,8
tick,0x7fffe05afeb4,235163852,0,0x0,8
tick,0x7fffe05afeb4,235178874,0,0x0,8
tick,0x7fffe05afeb4,235194769,0,0x0,8
tick,0x7fffe05afeb4,235210767,0,0x0,8
tick,0x7fffe05afeb4,235226876,0,0x0,8
tick,0x7fffe05afeb4,235242783,0,0x0,8
tick,0x7fffe05afeb4,235258761,0,0x0,8
tick,0x7fffe05afeb4,235273841,0,0x0,8
tick,0x7fffe05afeb4,235288850,0,0x0,8
tick,0x7fffe05afeb4,235304821,0,0x0,8
tick,0x7fffe05afeb4,235320902,0,0x0,8
tick,0x7fffe05afeb4,235336859,0,0x0,8
tick,0x7fffe05afeb4,235352957,0,0x0,8
tick,0x7fffe05afeb4,235368859,0,0x0,8
tick,0x7fffe05afeb4,235384807,0,0x0,8
tick,0x7fffe05afeb4,235400770,0,0x0,8
tick,0x7fffe05afeb4,235416877,0,0x0,8
tick,0x7fffe05afeb4,235432775,0,0x0,8
tick,0x7fffe05afeb4,235448808,0,0x0,8
tick,0x7fffe05afeb4,235464814,0,0x0,8
tick,0x7fffe05afeb4,235479773,0,0x0,8
tick,0x7fffe05afeb4,235495834,0,0x0,8
tick,0x7fffe05afeb4,235511853,0,0x0,8
tick,0x7fffe05afeb4,235527815,0,0x0,8
tick,0x7fffe05afeb4,235543780,0,0x0,8
tick,0x7fffe05afeb4,235559928,0,0x0,8
tick,0x7fffe05afeb4,235575919,0,0x0,8
tick,0x7fffe05afeb4,235591777,0,0x0,8
tick,0x7fffe05afeb4,235607881,0,0x0,8
tick,0x7fffe05afeb4,235622838,0,0x0,8
tick,0x7fffe05afeb4,235638840,0,0x0,8
tick,0x7fffe05afeb4,235654770,0,0x0,8
tick,0x7fffe05afeb4,235670814,0,0x0,8
tick,0x7fffe05afeb4,235686765,0,0x0,8
tick,0x7fffe05afeb4,235702802,0,0x0,8
tick,0x7fffe05afeb4,235717854,0,0x0,8
tick,0x7fffe05afeb4,235733854,0,0x0,8
tick,0x7fffe05afeb4,235749868,0,0x0,8
tick,0x7fffe05afeb4,235765824,0,0x0,8
tick,0x7fffe05afeb4,235781770,0,0x0,8
tick,0x7fffe05afeb4,235797775,0,0x0,8
tick,0x7fffe05afeb4,235813840,0,0x0,8
tick,0x7fffe05afeb4,235829845,0,0x0,8
tick,0x7fffe05afeb4,235845847,0,0x0,8
tick,0x7fffe05afeb4,235861845,0,0x0,8
tick,0x7fffe05afeb4,235877843,0,0x0,8
tick,0x7fffe05afeb4,235893829,0,0x0,8
tick,0x7fffe05afeb4,235909791,0,0x0,8
tick,0x7fffe05afeb4,235925806,0,0x0,8
tick,0x7fffe05afeb4,235941847,0,0x0,8
tick,0x7fffe05afeb4,235957866,0,0x0,8
tick,0x7fffe05afeb4,235973846,0,0x0,8
tick,0x7fffe05afeb4,235989867,0,0x0,8
tick,0x7fffe05afeb4,236005768,0,0x0,8
tick,0x7fffe05afeb4,236021777,0,0x0,8
tick,0x7fffe05afeb4,236037855,0,0x0,8
tick,0x7fffe05afeb4,236053783,0,0x0,8
tick,0x7fffe05afeb4,236069779,0,0x0,8
tick,0x7fffe05afeb4,236085933,0,0x0,8
tick,0x7fffe05afeb4,236101791,0,0x0,8
tick,0x7fffe05afeb4,236116765,0,0x0,8
tick,0x7fffe05afeb4,236132772,0,0x0,8
tick,0x7fffe05afeb4,236148868,0,0x0,8
tick,0x7fffe05afeb4,236164808,0,0x0,8
tick,0x7fffe05afeb4,236179885,0,0x0,8
tick,0x7fffe05afeb4,236195781,0,0x0,8
tick,0x7fffe05afeb4,236211854,0,0x0,8
tick,0x7fffe05afeb4,236227832,0,0x0,8
tick,0x7fffe05afeb4,236243769,0,0x0,8
tick,0x7fffe05afeb4,236259820,0,0x0,8
tick,0x7fffe05afeb4,236275856,0,0x0,8
tick,0x7fffe05afeb4,236291771,0,0x0,8
tick,0x7fffe05afeb4,236306889,0,0x0,8
tick,0x7fffe05afeb4,236322808,0,0x0,8
tick,0x7fffe05afeb4,236338775,0,0x0,8
tick,0x7fffe05afeb4,236354779,0,0x0,8
tick,0x7fffe05afeb4,236370780,0,0x0,8
tick,0x7fffe05afeb4,236386848,0,0x0,8
tick,0x7fffe05afeb4,236402912,0,0x0,8
tick,0x7fffe05afeb4,236417852,0,0x0,8
tick,0x7fffe05afeb4,236433848,0,0x0,8
tick,0x7fffe05afeb4,236449852,0,0x0,8
tick,0x7fffe05afeb4,236465776,0,0x0,8
tick,0x7fffe05afeb4,236481799,0,0x0,8
tick,0x7fffe05afeb4,236497981,0,0x0,8
tick,0x7fffe05afeb4,236513786,0,0x0,8
tick,0x7fffe05afeb4,236528874,0,0x0,8
tick,0x7fffe05afeb4,236544803,0,0x0,8
tick,0x7fffe05afeb4,236560763,0,0x0,8
tick,0x7fffe05afeb4,236576776,0,0x0,8
tick,0x7fffe05afeb4,236592770,0,0x0,8
tick,0x7fffe05afeb4,236608860,0,0x0,8
tick,0x7fffe05afeb4,236624844,0,0x0,8
tick,0x7fffe05afeb4,236640880,0,0x0,8
tick,0x7fffe05afeb4,236655865,0,0x0,8
tick,0x7fffe05afeb4,236670775,0,0x0,8
tick,0x7fffe05afeb4,236686788,0,0x0,8
tick,0x7fffe05afeb4,236702782,0,0x0,8
tick,0x7fffe05afeb4,236718781,0,0x0,8
tick,0x7fffe05afeb4,236734811,0,0x0,8
tick,0x7fffe05afeb4,236750868,0,0x0,8
tick,0x7fffe05afeb4,236766849,0,0x0,8
tick,0x7fffe05afeb4,236782789,0,0x0,8
tick,0x7fffe05afeb4,236798807,0,0x0,8
tick,0x7fffe05afeb4,236814819,0,0x0,8
tick,0x7fffe05afeb4,236830826,0,0x0,8
tick,0x7fffe05afeb4,236845799,0,0x0,8
tick,0x7fffe05afeb4,236861853,0,0x0,8
tick,0x7fffe05afeb4,236877860,0,0x0,8
tick,0x7fffe05afeb4,236893851,0,0x0,8
tick,0x7fffe05afeb4,236909864,0,0x0,8
tick,0x7fffe05afeb4,236925769,0,0x0,8
tick,0x7fffe05afeb4,236941791,0,0x0,8
tick,0x7fffe05afeb4,236957865,0,0x0,8
tick,0x7fffe05afeb4,236973870,0,0x0,8
tick,0x7fffe05afeb4,236989848,0,0x0,8
tick,0x7fffe05afeb4,237005793,0,0x0,8
tick,0x7fffe05afeb4,237021822,0,0x0,8
tick,0x7fffe05afeb4,237037781,0,0x0,8
tick,0x7fffe05afeb4,237053781,0,0x0,8
tick,0x7fffe05afeb4,237069790,0,0x0,8
tick,0x7fffe05afeb4,237085837,0,0x0,8
tick,0x7fffe05afeb4,237101845,0,0x0,8
tick,0x7fffe05afeb4,237116769,0,0x0,8
tick,0x7fffe05afeb4,237132782,0,0x0,8
tick,0x7fffe05afeb4,237148784,0,0x0,8
tick,0x7fffe05afeb4,237164836,0,0x0,8
tick,0x7fffe05afeb4,237179887,0,0x0,8
tick,0x7fffe05afeb4,237194797,0,0x0,8
tick,0x7fffe05afeb4,237210767,0,0x0,8
tick,0x7fffe05afeb4,237226777,0,0x0,8
tick,0x7fffe05afeb4,237242848,0,0x0,8
tick,0x7fffe05afeb4,237258814,0,0x0,8
tick,0x7fffe05afeb4,237274848,0,0x0,8
tick,0x7fffe05afeb4,237290835,0,0x0,8
tick,0x7fffe05afeb4,237306852,0,0x0,8
tick,0x7fffe05afeb4,237322771,0,0x0,8
tick,0x7fffe05afeb4,237338852,0,0x0,8
tick,0x7fffe05afeb4,237354778,0,0x0,8
tick,0x7fffe05afeb4,237370772,0,0x0,8
tick,0x7fffe05afeb4,237385782,0,0x0,8
tick,0x7fffe05afeb4,237401851,0,0x0,8
tick,0x7fffe05afeb4,237417879,0,0x0,8
tick,0x7fffe05afeb4,237433842,0,0x0,8
tick,0x7fffe05afeb4,237449793,0,0x0,8
tick,0x7fffe05afeb4,237465848,0,0x0,8
tick,0x7fffe05afeb4,237481816,0,0x0,8
tick,0x7fffe05afeb4,237497828,0,0x0,8
tick,0x7fffe05afeb4,237513771,0,0x0,8
tick,0x7fffe05afeb4,237529960,0,0x0,8
tick,0x7fffe05afeb4,237545788,0,0x0,8
tick,0x7fffe05afeb4,237561847,0,0x0,8
tick,0x7fffe05afeb4,237577819,0,0x0,8
tick,0x7fffe05afeb4,237593758,0,0x0,8
tick,0x7fffe05afeb4,237609823,0,0x0,8
tick,0x7fffe05afeb4,237625860,0,0x0,8
tick,0x7fffe05afeb4,237641910,0,0x0,8
tick,0x7fffe05afeb4,237656852,0,0x0,8
tick,0x7fffe05afeb4,237672779,0,0x0,8
tick,0x7fffe05afeb4,237687859,0,0x0,8
tick,0x7fffe05afeb4,237703764,0,0x0,8
tick,0x7fffe05afeb4,237719778,0,0x0,8
tick,0x7fffe05afeb4,237735805,0,0x0,8
tick,0x7fffe05afeb4,237751854,0,0x0,8
tick,0x7fffe05afeb4,237767846,0,0x0,8
tick,0x7fffe05afeb4,237783776,0,0x0,8
tick,0x7fffe05afeb4,237799806,0,0x0,8
tick,0x7fffe05afeb4,237815851,0,0x0,8
tick,0x7fffe05afeb4,237831768,0,0x0,8
tick,0x7fffe05afeb4,237847776,0,0x0,8
tick,0x7fffe05afeb4,237863865,0,0x0,8
tick,0x7fffe05afeb4,237879791,0,0x0,8
tick,0x7fffe05afeb4,237895777,0,0x0,8
tick,0x7fffe05afeb4,237911787,0,0x0,8
tick,0x7fffe05afeb4,237927812,0,0x0,8
tick,0x7fffe05afeb4,237943779,0,0x0,8
tick,0x7fffe05afeb4,237959788,0,0x0,8
tick,0x7fffe05afeb4,237975868,0,0x0,8
tick,0x7fffe05afeb4,237991770,0,0x0,8
tick,0x7fffe05afeb4,238007774,0,0x0,8
tick,0x7fffe05afeb4,238023846,0,0x0,8
tick,0x7fffe05afeb4,238040106,0,0x0,8
tick,0x7fffe05afeb4,238055774,0,0x0,8
tick,0x7fffe05afeb4,238071775,0,0x0,8
tick,0x7fffe05afeb4,238087924,0,0x0,8
tick,0x7fffe05afeb4,238103760,0,0x0,8
tick,0x7fffe05afeb4,238119808,0,0x0,8
tick,0x7fffe05afeb4,238135773,0,0x0,8
tick,0x7fffe05afeb4,238151825,0,0x0,8
tick,0x7fffe05afeb4,238166774,0,0x0,8
tick,0x7fffe05afeb4,238182879,0,0x0,8
tick,0x7fffe05afeb4,238197883,0,0x0,8
tick,0x7fffe05afeb4,238213799,0,0x0,8
tick,0x7fffe05afeb4,238229898,0,0x0,8
tick,0x7fffe05afeb4,238245776,0,0x0,8
tick,0x7fffe05afeb4,238261802,0,0x0,8
tick,0x7fffe05afeb4,238276772,0,0x0,8
tick,0x7fffe05afeb4,238292762,0,0x0,8
tick,0x7fffe05afeb4,238308904,0,0x0,8
tick,0x7fffe05afeb4,238324773,0,0x0,8
tick,0x7fffe05afeb4,238339878,0,0x0,8
tick,0x7fffe05afeb4,238355855,0,0x0,8
tick,0x7fffe05afeb4,238371853,0,0x0,8
tick,0x7fffe05afeb4,238387759,0,0x0,8
tick,0x7fffe05afeb4,238403832,0,0x0,8
tick,0x7fffe05afeb4,238419822,0,0x0,8
tick,0x7fffe05afeb4,238435769,0,0x0,8
tick,0x7fffe05afeb4,238451850,0,0x0,8
tick,0x7fffe05afeb4,238467842,0,0x0,8
tick,0x7fffe05afeb4,238483831,0,0x0,8
tick,0x7fffe05afeb4,238499781,0,0x0,8
tick,0x7fffe05afeb4,238515776,0,0x0,8
tick,0x7fffe05afeb4,238531872,0,0x0,8
tick,0x7fffe05afeb4,238547863,0,0x0,8
tick,0x7fffe05afeb4,238563854,0,0x0,8
tick,0x7fffe05afeb4,238579860,0,0x0,8
tick,0x7fffe05afeb4,238595853,0,0x0,8
tick,0x7fffe05afeb4,238611768,0,0x0,8
tick,0x7fffe05afeb4,238626765,0,0x0,8
tick,0x7fffe05afeb4,238642884,0,0x0,8
tick,0x7fffe05afeb4,238658859,0,0x0,8
tick,0x7fffe05afeb4,238674844,0,0x0,8
tick,0x7fffe05afeb4,238690912,0,0x0,8
tick,0x7fffe05afeb4,238706851,0,0x0,8
tick,0x7fffe05afeb4,238722829,0,0x0,8
tick,0x7fffe05afeb4,238738765,0,0x0,8
tick,0x7fffe05afeb4,238754792,0,0x0,8
tick,0x7fffe05afeb4,238770783,0,0x0,8
tick,0x7fffe05afeb4,238786778,0,0x0,8
tick,0x7fffe05afeb4,238802866,0,0x0,8
tick,0x7fffe05afeb4,238818893,0,0x0,8
tick,0x7fffe05afeb4,238834849,0,0x0,8
tick,0x7fffe05afeb4,238850767,0,0x0,8
tick,0x7fffe05afeb4,238866794,0,0x0,8
tick,0x7fffe05afeb4,238882868,0,0x0,8
tick,0x7fffe05afeb4,238897869,0,0x0,8
tick,0x7fffe05afeb4,238913874,0,0x0,8
tick,0x7fffe05afeb4,238929887,0,0x0,8
tick,0x7fffe05afeb4,238945783,0,0x0,8
tick,0x7fffe05afeb4,238961769,0,0x0,8
tick,0x7fffe05afeb4,238977899,0,0x0,8
tick,0x7fffe05afeb4,238993835,0,0x0,8
tick,0x7fffe05afeb4,239009876,0,0x0,8
tick,0x7fffe05afeb4,239025855,0,0x0,8
tick,0x7fffe05afeb4,239041785,0,0x0,8
tick,0x7fffe05afeb4,239057846,0,0x0,8
tick,0x7fffe05afeb4,239073774,0,0x0,8
tick,0x7fffe05afeb4,239089882,0,0x0,8
tick,0x7fffe05afeb4,239105841,0,0x0,8
tick,0x7fffe05afeb4,239121876,0,0x0,8
tick,0x7fffe05afeb4,239137868,0,0x0,8
tick,0x7fffe05afeb4,239153978,0,0x0,8
tick,0x7fffe05afeb4,239169842,0,0x0,8
tick,0x7fffe05afeb4,239185773,0,0x0,8
tick,0x7fffe05afeb4,239201839,0,0x0,8
tick,0x7fffe05afeb4,239217840,0,0x0,8
tick,0x7fffe05afeb4,239233777,0,0x0,8
tick,0x7fffe05afeb4,239249859,0,0x0,8
tick,0x7fffe05afeb4,239264776,0,0x0,8
tick,0x7fffe05afeb4,239280841,0,0x0,8
tick,0x7fffe05afeb4,239296765,0,0x0,8
tick,0x7fffe05afeb4,239312774,0,0x0,8
tick,0x7fffe05afeb4,239328847,0,0x0,8
tick,0x7fffe05afeb4,239344769,0,0x0,8
tick,0x7fffe05afeb4,239360826,0,0x0,8
tick,0x7fffe05afeb4,239376852,0,0x0,8
tick,0x7fffe05afeb4,239392767,0,0x0,8
tick,0x7fffe05afeb4,239407799,0,0x0,8
tick,0x7fffe05afeb4,239423877,0,0x0,8
tick,0x7fffe05afeb4,239439865,0,0x0,8
tick,0x7fffe05afeb4,239455837,0,0x0,8
tick,0x7fffe05afeb4,239471882,0,0x0,8
tick,0x7fffe05afeb4,239487848,0,0x0,8
tick,0x7fffe05afeb4,239503867,0,0x0,8
tick,0x7fffe05afeb4,239519898,0,0x0,8
tick,0x7fffe05afeb4,239535774,0,0x0,8
tick,0x7fffe05afeb4,239551770,0,0x0,8
tick,0x7fffe05afeb4,239567789,0,0x0,8
tick,0x7fffe05afeb4,239583853,0,0x0,8
tick,0x7fffe05afeb4,239599803,0,0x0,8
tick,0x7fffe05afeb4,239615794,0,0x0,8
tick,0x7fffe05afeb4,239631763,0,0x0,8
tick,0x7fffe05afeb4,239646907,0,0x0,8
tick,0x7fffe05afeb4,239663076,0,0x0,8
tick,0x7fffe05afeb4,239678973,0,0x0,8
tick,0x7fffe05afeb4,239694785,0,0x0,8
tick,0x7fffe05afeb4,239709859,0,0x0,8
tick,0x7fffe05afeb4,239724851,0,0x0,8
tick,0x7fffe05afeb4,239740798,0,0x0,8
tick,0x7fffe05afeb4,239756829,0,0x0,8
tick,0x7fffe05afeb4,239772842,0,0x0,8
tick,0x7fffe05afeb4,239789373,0,0x0,8
tick,0x7fffe05afeb4,239804780,0,0x0,8
tick,0x7fffe05afeb4,239822157,0,0x0,8
tick,0x7fffe05afeb4,239835868,0,0x0,8
tick,0x7fffe05afeb4,239851882,0,0x0,8
tick,0x7fffe05afeb4,239867892,0,0x0,8
tick,0x7fffe05afeb4,239884023,0,0x0,8
tick,0x7fffe05afeb4,239898779,0,0x0,8
tick,0x7fffe05afeb4,239913778,0,0x0,8
tick,0x7fffe05afeb4,239929893,0,0x0,8
tick,0x7fffe05afeb4,239946758,0,0x0,8
tick,0x7fffe05afeb4,239960871,0,0x0,8
tick,0x7fffe05afeb4,239976900,0,0x0,8
tick,0x7fffe05afeb4,239991789,0,0x0,8
tick,0x7fffe05afeb4,240007824,0,0x0,8
tick,0x7fffe05afeb4,240023778,0,0x0,8
tick,0x7fffe05afeb4,240040004,0,0x0,8
tick,0x7fffe05afeb4,240054903,0,0x0,8
tick,0x7fffe05afeb4,240071246,0,0x0,8
tick,0x7fffe05afeb4,240085944,0,0x0,8
tick,0x7fffe05afeb4,240101840,0,0x0,8
tick,0x7fffe05afeb4,240117789,0,0x0,8
tick,0x7fffe05afeb4,240134233,0,0x0,8
tick,0x7fffe05afeb4,240149803,0,0x0,8
tick,0x7fffe05afeb4,240166010,0,0x0,8
tick,0x7fffe05afeb4,240181849,0,0x0,8
tick,0x7fffe05afeb4,240197949,0,0x0,8
tick,0x7fffe05afeb4,240213807,0,0x0,8
tick,0x7fffe05afeb4,240229873,0,0x0,8
tick,0x7fffe05afeb4,240245852,0,0x0,8
tick,0x7fffe05afeb4,240261772,0,0x0,8
tick,0x7fffe05afeb4,240277875,0,0x0,8
tick,0x7fffe05afeb4,240292886,0,0x0,8
tick,0x7fffe05afeb4,240308782,0,0x0,8
tick,0x7fffe05afeb4,240324764,0,0x0,8
tick,0x7fffe05afeb4,240339799,0,0x0,8
tick,0x7fffe05afeb4,240354803,0,0x0,8
tick,0x7fffe05afeb4,240370766,0,0x0,8
tick,0x7fffe05afeb4,240386856,0,0x0,8
tick,0x7fffe05afeb4,240402767,0,0x0,8
tick,0x7fffe05afeb4,240418854,0,0x0,8
tick,0x7fffe05afeb4,240434947,0,0x0,8
tick,0x7fffe05afeb4,240450795,0,0x0,8
tick,0x7fffe05afeb4,240466782,0,0x0,8
tick,0x7fffe05afeb4,240482845,0,0x0,8
tick,0x7fffe05afeb4,240498776,0,0x0,8
tick,0x7fffe05afeb4,240514796,0,0x0,8
tick,0x7fffe05afeb4,240530775,0,0x0,8
tick,0x7fffe05afeb4,240545789,0,0x0,8
tick,0x7fffe05afeb4,240561762,0,0x0,8
tick,0x7fffe05afeb4,240577979,0,0x0,8
tick,0x7fffe05afeb4,240593825,0,0x0,8
tick,0x7fffe05afeb4,240610270,0,0x0,8
tick,0x7fffe05afeb4,240629258,0,0x0,8
tick,0x7fffe05afeb4,240642621,0,0x0,8
tick,0x7fffe05afeb4,240656833,0,0x0,8
tick,0x7fffe05afeb4,240673812,0,0x0,8
tick,0x7fffe05afeb4,240688771,0,0x0,8
tick,0x7fffe05afeb4,240704865,0,0x0,8
tick,0x7fffe05afeb4,240720872,0,0x0,8
tick,0x7fffe05afeb4,240735826,0,0x0,8
tick,0x7fffe05afeb4,240750870,0,0x0,8
tick,0x7fffe05afeb4,240766874,0,0x0,8
tick,0x7fffe05afeb4,240782781,0,0x0,8
tick,0x7fffe05afeb4,240798883,0,0x0,8
tick,0x7fffe05afeb4,240814824,0,0x0,8
tick,0x7fffe05afeb4,240830797,0,0x0,8
tick,0x7fffe05afeb4,240846892,0,0x0,8
tick,0x7fffe05afeb4,240862967,0,0x0,8
tick,0x7fffe05afeb4,240878777,0,0x0,8
tick,0x7fffe05afeb4,240893784,0,0x0,8
tick,0x7fffe05afeb4,240908956,0,0x0,8
tick,0x7fffe05afeb4,240923817,0,0x0,8
tick,0x7fffe05afeb4,240939831,0,0x0,8
tick,0x7fffe05afeb4,240955867,0,0x0,8
tick,0x7fffe05afeb4,240971772,0,0x0,8
tick,0x7fffe05afeb4,240987905,0,0x0,8
tick,0x7fffe05afeb4,241003911,0,0x0,8
tick,0x7fffe05afeb4,241019844,0,0x0,8
tick,0x7fffe05afeb4,241035886,0,0x0,8
tick,0x7fffe05afeb4,241051778,0,0x0,8
tick,0x7fffe05afeb4,241067821,0,0x0,8
tick,0x7fffe05afeb4,241083787,0,0x0,8
tick,0x7fffe05afeb4,241099874,0,0x0,8
tick,0x7fffe05afeb4,241114842,0,0x0,8
tick,0x7fffe05afeb4,241130774,0,0x0,8
tick,0x7fffe05afeb4,241145868,0,0x0,8
tick,0x7fffe05afeb4,241161797,0,0x0,8
tick,0x7fffe05afeb4,241178300,0,0x0,8
tick,0x7fffe05afeb4,241193861,0,0x0,8
tick,0x7fffe05afeb4,241209843,0,0x0,8
tick,0x7fffe05afeb4,241224782,0,0x0,8
tick,0x7fffe05afeb4,241240925,0,0x0,8
tick,0x7fffe05afeb4,241256767,0,0x0,8
tick,0x7fffe05afeb4,241272787,0,0x0,8
tick,0x7fffe05afeb4,241288844,0,0x0,8
tick,0x7fffe05afeb4,241304776,0,0x0,8
tick,0x7fffe05afeb4,241320820,0,0x0,8
tick,0x7fffe05afeb4,241336836,0,0x0,8
tick,0x7fffe05afeb4,241353828,0,0x0,8
tick,0x7fffe05afeb4,241368821,0,0x0,8
tick,0x7fffe05afeb4,241384824,0,0x0,8
tick,0x7fffe05afeb4,241400783,0,0x0,8
tick,0x7fffe05afeb4,241416783,0,0x0,8
tick,0x7fffe05afeb4,241431810,0,0x0,8
tick,0x7fffe05afeb4,241447917,0,0x0,8
tick,0x7fffe05afeb4,241463767,0,0x0,8
tick,0x7fffe05afeb4,241479946,0,0x0,8
tick,0x7fffe05afeb4,241495776,0,0x0,8
tick,0x7fffe05afeb4,241511853,0,0x0,8
tick,0x7fffe05afeb4,241527784,0,0x0,8
tick,0x7fffe05afeb4,241543839,0,0x0,8
tick,0x7fffe05afeb4,241559997,0,0x0,8
tick,0x7fffe05afeb4,241574773,0,0x0,8
tick,0x7fffe05afeb4,241589805,0,0x0,8
tick,0x7fffe05afeb4,241605801,0,0x0,8
tick,0x7fffe05afeb4,241621797,0,0x0,8
tick,0x7fffe05afeb4,241637790,0,0x0,8
tick,0x7fffe05afeb4,241653846,0,0x0,8
tick,0x7fffe05afeb4,241670005,0,0x0,8
tick,0x7fffe05afeb4,241685868,0,0x0,8
tick,0x7fffe05afeb4,241701772,0,0x0,8
tick,0x7fffe05afeb4,241717930,0,0x0,8
tick,0x7fffe05afeb4,241733834,0,0x0,8
tick,0x7fffe05afeb4,241749775,0,0x0,8
tick,0x7fffe05afeb4,241765769,0,0x0,8
tick,0x7fffe05afeb4,241781767,0,0x0,8
tick,0x7fffe05afeb4,241797780,0,0x0,8
tick,0x7fffe05afeb4,241813767,0,0x0,8
tick,0x7fffe05afeb4,241829874,0,0x0,8
tick,0x7fffe05afeb4,241845877,0,0x0,8
tick,0x7fffe05afeb4,241861877,0,0x0,8
tick,0x7fffe05afeb4,241877846,0,0x0,8
tick,0x7fffe05afeb4,241893842,0,0x0,8
tick,0x7fffe05afeb4,241909869,0,0x0,8
tick,0x7fffe05afeb4,241925775,0,0x0,8
tick,0x7fffe05afeb4,241940787,0,0x0,8
tick,0x7fffe05afeb4,241956872,0,0x0,8
tick,0x7fffe05afeb4,241972774,0,0x0,8
tick,0x7fffe05afeb4,241988854,0,0x0,8
tick,0x7fffe05afeb4,242004816,0,0x0,8
tick,0x7fffe05afeb4,242020842,0,0x0,8
tick,0x7fffe05afeb4,242036777,0,0x0,8
tick,0x7fffe05afeb4,242052810,0,0x0,8
tick,0x7fffe05afeb4,242068786,0,0x0,8
tick,0x7fffe05afeb4,242084785,0,0x0,8
tick,0x7fffe05afeb4,242099825,0,0x0,8
tick,0x7fffe05afeb4,242115849,0,0x0,8
tick,0x7fffe05afeb4,242131850,0,0x0,8
tick,0x7fffe05afeb4,242147882,0,0x0,8
tick,0x7fffe05afeb4,242163788,0,0x0,8
tick,0x7fffe05afeb4,242179836,0,0x0,8
tick,0x7fffe05afeb4,242194767,0,0x0,8
tick,0x7fffe05afeb4,242210859,0,0x0,8
tick,0x7fffe05afeb4,242226864,0,0x0,8
tick,0x7fffe05afeb4,242241859,0,0x0,8
tick,0x7fffe05afeb4,242257850,0,0x0,8
tick,0x7fffe05afeb4,242273819,0,0x0,8
tick,0x7fffe05afeb4,242289816,0,0x0,8
tick,0x7fffe05afeb4,242305796,0,0x0,8
tick,0x7fffe05afeb4,242321768,0,0x0,8
tick,0x7fffe05afeb4,242337851,0,0x0,8
tick,0x7fffe05afeb4,242353905,0,0x0,8
tick,0x7fffe05afeb4,242368784,0,0x0,8
tick,0x7fffe05afeb4,242383995,0,0x0,8
tick,0x7fffe05afeb4,242399824,0,0x0,8
tick,0x7fffe05afeb4,242416633,0,0x0,8
tick,0x7fffe05afeb4,242431853,0,0x0,8
tick,0x7fffe05afeb4,242447865,0,0x0,8
tick,0x7fffe05afeb4,242463840,0,0x0,8
tick,0x7fffe05afeb4,242479910,0,0x0,8
tick,0x7fffe05afeb4,242495854,0,0x0,8
tick,0x7fffe05afeb4,242511843,0,0x0,8
tick,0x7fffe05afeb4,242527867,0,0x0,8
tick,0x7fffe05afeb4,242543771,0,0x0,8
tick,0x7fffe05afeb4,242559913,0,0x0,8
tick,0x7fffe05afeb4,242576314,0,0x0,8
tick,0x7fffe05afeb4,242591850,0,0x0,8
tick,0x7fffe05afeb4,242607906,0,0x0,8
tick,0x7fffe05afeb4,242623844,0,0x0,8
tick,0x7fffe05afeb4,242639886,0,0x0,8
tick,0x7fffe05afeb4,242655847,0,0x0,8
tick,0x7fffe05afeb4,242671863,0,0x0,8
tick,0x7fffe05afeb4,242687846,0,0x0,8
tick,0x7fffe05afeb4,242703810,0,0x0,8
tick,0x7fffe05afeb4,242719776,0,0x0,8
tick,0x7fffe05afeb4,242734859,0,0x0,8
tick,0x7fffe05afeb4,242750858,0,0x0,8
tick,0x7fffe05afeb4,242766855,0,0x0,8
tick,0x7fffe05afeb4,242782763,0,0x0,8
tick,0x7fffe05afeb4,242798771,0,0x0,8
tick,0x7fffe05afeb4,242814840,0,0x0,8
tick,0x7fffe05afeb4,242830777,0,0x0,8
tick,0x7fffe05afeb4,242845789,0,0x0,8
tick,0x7fffe05afeb4,242860826,0,0x0,8
tick,0x7fffe05afeb4,242876853,0,0x0,8
tick,0x7fffe05afeb4,242892971,0,0x0,8
tick,0x7fffe05afeb4,242908789,0,0x0,8
tick,0x7fffe05afeb4,242923874,0,0x0,8
tick,0x7fffe05afeb4,242939823,0,0x0,8
tick,0x7fffe05afeb4,242955857,0,0x0,8
tick,0x7fffe05afeb4,242971757,0,0x0,8
tick,0x7fffe05afeb4,242987926,0,0x0,8
tick,0x7fffe05afeb4,243003775,0,0x0,8
tick,0x7fffe05afeb4,243019871,0,0x0,8
tick,0x7fffe05afeb4,243035835,0,0x0,8
tick,0x7fffe05afeb4,243051762,0,0x0,8
tick,0x7fffe05afeb4,243066835,0,0x0,8
tick,0x7fffe05afeb4,243082926,0,0x0,8
tick,0x7fffe05afeb4,243097789,0,0x0,8
tick,0x7fffe05afeb4,243113825,0,0x0,8
tick,0x7fffe05afeb4,243129835,0,0x0,8
tick,0x7fffe05afeb4,243145864,0,0x0,8
tick,0x7fffe05afeb4,243161776,0,0x0,8
tick,0x7fffe05afeb4,243177794,0,0x0,8
tick,0x7fffe05afeb4,243193854,0,0x0,8
tick,0x7fffe05afeb4,243209857,0,0x0,8
tick,0x7fffe05afeb4,243225770,0,0x0,8
tick,0x7fffe05afeb4,243241786,0,0x0,8
tick,0x7fffe05afeb4,243257951,0,0x0,8
tick,0x7fffe05afeb4,243273793,0,0x0,8
tick,0x7fffe05afeb4,243289940,0,0x0,8
tick,0x7fffe05afeb4,243305852,0,0x0,8
tick,0x7fffe05afeb4,243322035,0,0x0,8
tick,0x7fffe05afeb4,243337787,0,0x0,8
tick,0x7fffe05afeb4,243354025,0,0x0,8
tick,0x7fffe05afeb4,243369828,0,0x0,8
tick,0x7fffe05afeb4,243385785,0,0x0,8
tick,0x7fffe05afeb4,243400779,0,0x0,8
tick,0x7fffe05afeb4,243417119,0,0x0,8
tick,0x7fffe05afeb4,243432785,0,0x0,8
tick,0x7fffe05afeb4,243448902,0,0x0,8
tick,0x7fffe05afeb4,243464773,0,0x0,8
tick,0x7fffe05afeb4,243479854,0,0x0,8
tick,0x7fffe05afeb4,243494806,0,0x0,8
tick,0x7fffe05afeb4,243510872,0,0x0,8
tick,0x7fffe05afeb4,243526854,0,0x0,8
tick,0x7fffe05afeb4,243541846,0,0x0,8
tick,0x7fffe05afeb4,243556861,0,0x0,8
tick,0x7fffe05afeb4,243572772,0,0x0,8
tick,0x7fffe05afeb4,243588972,0,0x0,8
tick,0x7fffe05afeb4,243604870,0,0x0,8
tick,0x7fffe05afeb4,243620809,0,0x0,8
tick,0x7fffe05afeb4,243636850,0,0x0,8
tick,0x7fffe05afeb4,243652848,0,0x0,8
tick,0x7fffe05afeb4,243668831,0,0x0,8
tick,0x7fffe05afeb4,243684801,0,0x0,8
tick,0x7fffe05afeb4,243699852,0,0x0,8
tick,0x7fffe05afeb4,243715845,0,0x0,8
tick,0x7fffe05afeb4,243731893,0,0x0,8
tick,0x7fffe05afeb4,243746932,0,0x0,8
tick,0x7fffe05afeb4,243762835,0,0x0,8
tick,0x7fffe05afeb4,243778124,0,0x0,8
tick,0x7fffe05afeb4,243792764,0,0x0,8
tick,0x7fffe05afeb4,243808964,0,0x0,8
tick,0x7fffe05afeb4,243825126,0,0x0,8
tick,0x7fffe05afeb4,243840927,0,0x0,8
tick,0x7fffe05afeb4,243856857,0,0x0,8
tick,0x7fffe05afeb4,243872973,0,0x0,8
tick,0x7fffe05afeb4,243888860,0,0x0,8
tick,0x7fffe05afeb4,243904943,0,0x0,8
tick,0x7fffe05afeb4,243920965,0,0x0,8
tick,0x7fffe05afeb4,243936858,0,0x0,8
tick,0x7fffe05afeb4,243952935,0,0x0,8
tick,0x7fffe05afeb4,243968887,0,0x0,8
tick,0x7fffe05afeb4,243984782,0,0x0,8
tick,0x7fffe05afeb4,244000946,0,0x0,8
tick,0x7fffe05afeb4,244016864,0,0x0,8
tick,0x7fffe05afeb4,244032889,0,0x0,8
tick,0x7fffe05afeb4,244047942,0,0x0,8
tick,0x7fffe05afeb4,244063801,0,0x0,8
tick,0x7fffe05afeb4,244080094,0,0x0,8
tick,0x7fffe05afeb4,244096120,0,0x0,8
tick,0x7fffe05afeb4,244111847,0,0x0,8
tick,0x7fffe05afeb4,244127916,0,0x0,8
tick,0x7fffe05afeb4,244144240,0,0x0,8
tick,0x7fffe05afeb4,244159975,0,0x0,8
tick,0x7fffe05afeb4,244175851,0,0x0,8
tick,0x7fffe05afeb4,244191945,0,0x0,8
tick,0x7fffe05afeb4,244207869,0,0x0,8
tick,0x7fffe05afeb4,244223849,0,0x0,8
tick,0x7fffe05afeb4,244239928,0,0x0,8
tick,0x7fffe05afeb4,244255918,0,0x0,8
tick,0x7fffe05afeb4,244271973,0,0x0,8
tick,0x7fffe05afeb4,244287907,0,0x0,8
tick,0x7fffe05afeb4,244303864,0,0x0,8
tick,0x7fffe05afeb4,244319818,0,0x0,8
tick,0x7fffe05afeb4,244335158,0,0x0,8
tick,0x7fffe05afeb4,244350959,0,0x0,8
tick,0x7fffe05afeb4,244366882,0,0x0,8
tick,0x7fffe05afeb4,244381815,0,0x0,8
tick,0x7fffe05afeb4,244397913,0,0x0,8
tick,0x7fffe05afeb4,244413892,0,0x0,8
tick,0x7fffe05afeb4,244429887,0,0x0,8
tick,0x7fffe05afeb4,244445943,0,0x0,8
tick,0x7fffe05afeb4,244460969,0,0x0,8
tick,0x7fffe05afeb4,244476975,0,0x0,8
tick,0x7fffe05afeb4,244492952,0,0x0,8
tick,0x7fffe05afeb4,244510017,0,0x0,8
tick,0x7fffe05afeb4,244524857,0,0x0,8
tick,0x7fffe05afeb4,244541366,0,0x0,8
tick,0x7fffe05afeb4,244556851,0,0x0,8
tick,0x7fffe05afeb4,244572990,0,0x0,8
tick,0x7fffe05afeb4,244588985,0,0x0,8
tick,0x7fffe05afeb4,244604779,0,0x0,8
tick,0x7fffe05afeb4,244620773,0,0x0,8
tick,0x7fffe05afeb4,244636080,0,0x0,8
tick,0x7fffe05afeb4,244651883,0,0x0,8
tick,0x7fffe05afeb4,244668155,0,0x0,8
tick,0x7fffe05afeb4,244683967,0,0x0,8
tick,0x7fffe05afeb4,244699905,0,0x0,8
tick,0x7fffe05afeb4,244715771,0,0x0,8
tick,0x7fffe05afeb4,244730922,0,0x0,8
tick,0x7fffe05afeb4,244745862,0,0x0,8
tick,0x7fffe05afeb4,244761862,0,0x0,8
tick,0x7fffe05afeb4,244777857,0,0x0,8
tick,0x7fffe05afeb4,244793879,0,0x0,8
tick,0x7fffe05afeb4,244810034,0,0x0,8
tick,0x7fffe05afeb4,244825973,0,0x0,8
tick,0x7fffe05afeb4,244841823,0,0x0,8
tick,0x7fffe05afeb4,244858010,0,0x0,8
tick,0x7fffe05afeb4,244873978,0,0x0,8
tick,0x7fffe05afeb4,244890151,0,0x0,8
tick,0x7fffe05afeb4,244906053,0,0x0,8
tick,0x7fffe05afeb4,244922013,0,0x0,8
tick,0x7fffe05afeb4,244937780,0,0x0,8
tick,0x7fffe05afeb4,244953798,0,0x0,8
tick,0x7fffe05afeb4,244969879,0,0x0,8
tick,0x7fffe05afeb4,244986069,0,0x0,8
tick,0x7fffe05afeb4,245001855,0,0x0,8
tick,0x7fffe05afeb4,245018049,0,0x0,8
tick,0x7fffe05afeb4,245034060,0,0x0,8
tick,0x7fffe05afeb4,245049800,0,0x0,8
tick,0x7fffe05afeb4,245065856,0,0x0,8
tick,0x7fffe05afeb4,245080940,0,0x0,8
tick,0x7fffe05afeb4,245095947,0,0x0,8
tick,0x7fffe05afeb4,245111057,0,0x0,8
tick,0x7fffe05afeb4,245126785,0,0x0,8
tick,0x7fffe05afeb4,245143069,0,0x0,8
tick,0x7fffe05afeb4,245158797,0,0x0,8
tick,0x7fffe05afeb4,245175430,0,0x0,8
tick,0x7fffe05afeb4,245190802,0,0x0,8
tick,0x7fffe05afeb4,245206774,0,0x0,8
tick,0x7fffe05afeb4,245221775,0,0x0,8
tick,0x7fffe05afeb4,245237902,0,0x0,8
tick,0x7fffe05afeb4,245253861,0,0x0,8
tick,0x7fffe05afeb4,245270048,0,0x0,8
tick,0x7fffe05afeb4,245284878,0,0x0,8
tick,0x7fffe05afeb4,245301207,0,0x0,8
tick,0x7fffe05afeb4,245316860,0,0x0,8
tick,0x7fffe05afeb4,245344904,0,0x0,8
tick,0x7fffe05afeb4,245348925,0,0x0,8
tick,0x7fffe05afeb4,245366392,0,0x0,8
tick,0x7fffe05afeb4,245380783,0,0x0,8
tick,0x7fffe05afeb4,245397009,0,0x0,8
tick,0x7fffe05afeb4,245413147,0,0x0,8
tick,0x7fffe05afeb4,245428775,0,0x0,8
tick,0x7fffe05afeb4,245444837,0,0x0,8
tick,0x7fffe05afeb4,245461089,0,0x0,8
tick,0x7fffe05afeb4,245476912,0,0x0,8
tick,0x7fffe05afeb4,245491971,0,0x0,8
tick,0x7fffe05afeb4,245507820,0,0x0,8
tick,0x7fffe05afeb4,245523849,0,0x0,8
tick,0x7fffe05afeb4,245538854,0,0x0,8
tick,0x7fffe05afeb4,245554798,0,0x0,8
tick,0x7fffe05afeb4,245571722,0,0x0,8
tick,0x7fffe05afeb4,245587069,0,0x0,8
tick,0x7fffe05afeb4,245603684,0,0x0,8
tick,0x7fffe05afeb4,245618788,0,0x0,8
tick,0x7fffe05afeb4,245635400,0,0x0,8
tick,0x7fffe05afeb4,245650872,0,0x0,8
tick,0x7fffe05afeb4,245666910,0,0x0,8
tick,0x7fffe05afeb4,245682947,0,0x0,8
tick,0x7fffe05afeb4,245699016,0,0x0,8
tick,0x7fffe05afeb4,245714960,0,0x0,8
tick,0x7fffe05afeb4,245730986,0,0x0,8
tick,0x7fffe05afeb4,245745857,0,0x0,8
tick,0x7fffe05afeb4,245761833,0,0x0,8
tick,0x7fffe05afeb4,245777919,0,0x0,8
tick,0x7fffe05afeb4,245794376,0,0x0,8
tick,0x7fffe05afeb4,245809978,0,0x0,8
tick,0x7fffe05afeb4,245825771,0,0x0,8
tick,0x7fffe05afeb4,245840894,0,0x0,8
tick,0x7fffe05afeb4,245857019,0,0x0,8
tick,0x7fffe05afeb4,245872855,0,0x0,8
tick,0x7fffe05afeb4,245889258,0,0x0,8
tick,0x7fffe05afeb4,245904931,0,0x0,8
tick,0x7fffe05afeb4,245921726,0,0x0,8
tick,0x7fffe05afeb4,245936857,0,0x0,8
tick,0x7fffe05afeb4,245952778,0,0x0,8
tick,0x7fffe05afeb4,245968946,0,0x0,8
tick,0x7fffe05afeb4,245984956,0,0x0,8
tick,0x7fffe05afeb4,246000859,0,0x0,8
tick,0x7fffe05afeb4,246016817,0,0x0,8
tick,0x7fffe05afeb4,246032868,0,0x0,8
tick,0x7fffe05afeb4,246047857,0,0x0,8
tick,0x7fffe05afeb4,246063779,0,0x0,8
tick,0x7fffe05afeb4,246079848,0,0x0,8
tick,0x7fffe05afeb4,246096086,0,0x0,8
tick,0x7fffe05afeb4,246111824,0,0x0,8
tick,0x7fffe05afeb4,246127850,0,0x0,8
tick,0x7fffe05afeb4,246142976,0,0x0,8
tick,0x7fffe05afeb4,246158936,0,0x0,8
tick,0x7fffe05afeb4,246174838,0,0x0,8
tick,0x7fffe05afeb4,246190988,0,0x0,8
tick,0x7fffe05afeb4,246206860,0,0x0,8
tick,0x7fffe05afeb4,246222872,0,0x0,8
tick,0x7fffe05afeb4,246238934,0,0x0,8
tick,0x7fffe05afeb4,246254988,0,0x0,8
tick,0x7fffe05afeb4,246271020,0,0x0,8
tick,0x7fffe05afeb4,246286960,0,0x0,8
tick,0x7fffe05afeb4,246302919,0,0x0,8
tick,0x7fffe05afeb4,246318782,0,0x0,8
tick,0x7fffe05afeb4,246334787,0,0x0,8
tick,0x7fffe05afeb4,246351044,0,0x0,8
tick,0x7fffe05afeb4,246366923,0,0x0,8
tick,0x7fffe05afeb4,246381802,0,0x0,8
tick,0x7fffe05afeb4,246397928,0,0x0,8
tick,0x7fffe05afeb4,246413854,0,0x0,8
tick,0x7fffe05afeb4,246429880,0,0x0,8
tick,0x7fffe05afeb4,246446055,0,0x0,8
tick,0x7fffe05afeb4,246461939,0,0x0,8
tick,0x7fffe05afeb4,246476890,0,0x0,8
tick,0x7fffe05afeb4,246492870,0,0x0,8
tick,0x7fffe05afeb4,246509534,0,0x0,8
tick,0x7fffe05afeb4,246524897,0,0x0,8
tick,0x7fffe05afeb4,246541338,0,0x0,8
tick,0x7fffe05afeb4,246556925,0,0x0,8
tick,0x7fffe05afeb4,246573074,0,0x0,8
tick,0x7fffe05afeb4,246588830,0,0x0,8
tick,0x7fffe05afeb4,246604959,0,0x0,8
tick,0x7fffe05afeb4,246620957,0,0x0,8
tick,0x7fffe05afeb4,246637086,0,0x0,8
tick,0x7fffe05afeb4,246651990,0,0x0,8
tick,0x7fffe05afeb4,246667972,0,0x0,8
tick,0x7fffe05afeb4,246683868,0,0x0,8
tick,0x7fffe05afeb4,246699510,0,0x0,8
tick,0x7fffe05afeb4,246713817,0,0x0,8
tick,0x7fffe05afeb4,246730039,0,0x0,8
tick,0x7fffe05afeb4,246746379,0,0x0,8
tick,0x7fffe05afeb4,246761773,0,0x0,8
tick,0x7fffe05afeb4,246777875,0,0x0,8
tick,0x7fffe05afeb4,246793885,0,0x0,8
tick,0x7fffe05afeb4,246810003,0,0x0,8
tick,0x7fffe05afeb4,246825762,0,0x0,8
tick,0x7fffe05afeb4,246840797,0,0x0,8
tick,0x7fffe05afeb4,246856942,0,0x0,8
tick,0x7fffe05afeb4,246872018,0,0x0,8
tick,0x7fffe05afeb4,246887861,0,0x0,8
tick,0x7fffe05afeb4,246904191,0,0x0,8
tick,0x7fffe05afeb4,246920162,0,0x0,8
tick,0x7fffe05afeb4,246935858,0,0x0,8
tick,0x7fffe05afeb4,246951962,0,0x0,8
tick,0x7fffe05afeb4,246967883,0,0x0,8
tick,0x7fffe05afeb4,246984063,0,0x0,8
tick,0x7fffe05afeb4,247000048,0,0x0,8
tick,0x7fffe05afeb4,247016113,0,0x0,8
tick,0x7fffe05afeb4,247031887,0,0x0,8
tick,0x7fffe05afeb4,247046866,0,0x0,8
tick,0x7fffe05afeb4,247061956,0,0x0,8
tick,0x7fffe05afeb4,247077865,0,0x0,8
tick,0x7fffe05afeb4,247093842,0,0x0,8
tick,0x7fffe05afeb4,247108767,0,0x0,8
tick,0x7fffe05afeb4,247125128,0,0x0,8
tick,0x7fffe05afeb4,247141012,0,0x0,8
tick,0x7fffe05afeb4,247156958,0,0x0,8
tick,0x7fffe05afeb4,247172899,0,0x0,8
tick,0x7fffe05afeb4,247188902,0,0x0,8
tick,0x7fffe05afeb4,247205010,0,0x0,8
tick,0x7fffe05afeb4,247220763,0,0x0,8
tick,0x7fffe05afeb4,247236052,0,0x0,8
tick,0x7fffe05afeb4,247251916,0,0x0,8
tick,0x7fffe05afeb4,247268310,0,0x0,8
tick,0x7fffe05afeb4,247283849,0,0x0,8
tick,0x7fffe05afeb4,247299868,0,0x0,8
tick,0x7fffe05afeb4,247315913,0,0x0,8
tick,0x7fffe05afeb4,247332051,0,0x0,8
tick,0x7fffe05afeb4,247347785,0,0x0,8
tick,0x7fffe05afeb4,247364858,0,0x0,8
tick,0x7fffe05afeb4,247378966,0,0x0,8
tick,0x7fffe05afeb4,247394947,0,0x0,8
tick,0x7fffe05afeb4,247410798,0,0x0,8
tick,0x7fffe05afeb4,247425842,0,0x0,8
tick,0x7fffe05afeb4,247442014,0,0x0,8
tick,0x7fffe05afeb4,247457826,0,0x0,8
tick,0x7fffe05afeb4,247473796,0,0x0,8
tick,0x7fffe05afeb4,247490255,0,0x0,8
tick,0x7fffe05afeb4,247509633,0,0x0,8
tick,0x7fffe05afeb4,247521907,0,0x0,8
tick,0x7fffe05afeb4,247536870,0,0x0,8
tick,0x7fffe05afeb4,247552805,0,0x0,8
tick,0x7fffe05afeb4,247569024,0,0x0,8
tick,0x7fffe05afeb4,247584884,0,0x0,8
tick,0x7fffe05afeb4,247600830,0,0x0,8
tick,0x7fffe05afeb4,247616934,0,0x0,8
tick,0x7fffe05afeb4,247632835,0,0x0,8
tick,0x7fffe05afeb4,247648899,0,0x0,8
tick,0x7fffe05afeb4,247663776,0,0x0,8
tick,0x7fffe05afeb4,247680565,0,0x0,8
tick,0x7fffe05afeb4,247697303,0,0x0,8
tick,0x7fffe05afeb4,247712558,0,0x0,8
tick,0x7fffe05afeb4,247726764,0,0x0,8
tick,0x7fffe05afeb4,247741829,0,0x0,8
tick,0x7fffe05afeb4,247756943,0,0x0,8
tick,0x7fffe05afeb4,247772983,0,0x0,8
tick,0x7fffe05afeb4,247788833,0,0x0,8
tick,0x7fffe05afeb4,247804810,0,0x0,8
tick,0x7fffe05afeb4,247820037,0,0x0,8
tick,0x7fffe05afeb4,247834929,0,0x0,8
tick,0x7fffe05afeb4,247850931,0,0x0,8
tick,0x7fffe05afeb4,247866867,0,0x0,8
tick,0x7fffe05afeb4,247882790,0,0x0,8
tick,0x7fffe05afeb4,247897811,0,0x0,8
tick,0x7fffe05afeb4,247914025,0,0x0,8
tick,0x7fffe05afeb4,247928938,0,0x0,8
tick,0x7fffe05afeb4,247943948,0,0x0,8
tick,0x7fffe05afeb4,247960010,0,0x0,8
tick,0x7fffe05afeb4,247975847,0,0x0,8
tick,0x7fffe05afeb4,247991857,0,0x0,8
tick,0x7fffe05afeb4,248007900,0,0x0,8
tick,0x7fffe05afeb4,248023916,0,0x0,8
tick,0x7fffe05afeb4,248040201,0,0x0,8
tick,0x7fffe05afeb4,248055907,0,0x0,8
tick,0x7fffe05afeb4,248071002,0,0x0,8
tick,0x7fffe05afeb4,248086981,0,0x0,8
tick,0x7fffe05afeb4,248103138,0,0x0,8
tick,0x7fffe05afeb4,248118870,0,0x0,8
tick,0x7fffe05afeb4,248135149,0,0x0,8
tick,0x7fffe05afeb4,248151065,0,0x0,8
tick,0x7fffe05afeb4,248166839,0,0x0,8
tick,0x7fffe05afeb4,248182966,0,0x0,8
tick,0x7fffe05afeb4,248198887,0,0x0,8
tick,0x7fffe05afeb4,248213932,0,0x0,8
tick,0x7fffe05afeb4,248229991,0,0x0,8
tick,0x7fffe05afeb4,248245919,0,0x0,8
tick,0x7fffe05afeb4,248261931,0,0x0,8
tick,0x7fffe05afeb4,248278079,0,0x0,8
tick,0x7fffe05afeb4,248293795,0,0x0,8
tick,0x7fffe05afeb4,248310009,0,0x0,8
tick,0x7fffe05afeb4,248325916,0,0x0,8
tick,0x7fffe05afeb4,248341899,0,0x0,8
tick,0x7fffe05afeb4,248356854,0,0x0,8
tick,0x7fffe05afeb4,248371854,0,0x0,8
tick,0x7fffe05afeb4,248388017,0,0x0,8
tick,0x7fffe05afeb4,248403835,0,0x0,8
tick,0x7fffe05afeb4,248419892,0,0x0,8
tick,0x7fffe05afeb4,248435936,0,0x0,8
tick,0x7fffe05afeb4,248451834,0,0x0,8
tick,0x7fffe05afeb4,248467854,0,0x0,8
tick,0x7fffe05afeb4,248482820,0,0x0,8
tick,0x7fffe05afeb4,248498931,0,0x0,8
tick,0x7fffe05afeb4,248514911,0,0x0,8
tick,0x7fffe05afeb4,248530956,0,0x0,8
tick,0x7fffe05afeb4,248546812,0,0x0,8
tick,0x7fffe05afeb4,248562867,0,0x0,8
tick,0x7fffe05afeb4,248578866,0,0x0,8
tick,0x7fffe05afeb4,248593931,0,0x0,8
tick,0x7fffe05afeb4,248609832,0,0x0,8
tick,0x7fffe05afeb4,248625981,0,0x0,8
tick,0x7fffe05afeb4,248641985,0,0x0,8
tick,0x7fffe05afeb4,248656905,0,0x0,8
tick,0x7fffe05afeb4,248672803,0,0x0,8
tick,0x7fffe05afeb4,248688922,0,0x0,8
tick,0x7fffe05afeb4,248704866,0,0x0,8
tick,0x7fffe05afeb4,248720779,0,0x0,8
tick,0x7fffe05afeb4,248736871,0,0x0,8
tick,0x7fffe05afeb4,248752897,0,0x0,8
tick,0x7fffe05afeb4,248767916,0,0x0,8
tick,0x7fffe05afeb4,248783875,0,0x0,8
tick,0x7fffe05afeb4,248799843,0,0x0,8
tick,0x7fffe05afeb4,248815908,0,0x0,8
tick,0x7fffe05afeb4,248831939,0,0x0,8
tick,0x7fffe05afeb4,248847756,0,0x0,8
tick,0x7fffe05afeb4,248863872,0,0x0,8
tick,0x7fffe05afeb4,248879898,0,0x0,8
tick,0x7fffe05afeb4,248895791,0,0x0,8
tick,0x7fffe05afeb4,248911856,0,0x0,8
tick,0x7fffe05afeb4,248927913,0,0x0,8
tick,0x7fffe05afeb4,248943914,0,0x0,8
tick,0x7fffe05afeb4,248959807,0,0x0,8
tick,0x7fffe05afeb4,248975873,0,0x0,8
tick,0x7fffe05afeb4,248991775,0,0x0,8
tick,0x7fffe05afeb4,249007917,0,0x0,8
tick,0x7fffe05afeb4,249023868,0,0x0,8
tick,0x7fffe05afeb4,249039782,0,0x0,8
tick,0x7fffe05afeb4,249054849,0,0x0,8
tick,0x7fffe05afeb4,249071016,0,0x0,8
tick,0x7fffe05afeb4,249085882,0,0x0,8
tick,0x7fffe05afeb4,249101768,0,0x0,8
tick,0x7fffe05afeb4,249117795,0,0x0,8
tick,0x7fffe05afeb4,249133782,0,0x0,8
tick,0x7fffe05afeb4,249149908,0,0x0,8
tick,0x7fffe05afeb4,249165805,0,0x0,8
tick,0x7fffe05afeb4,249181777,0,0x0,8
tick,0x7fffe05afeb4,249197773,0,0x0,8
tick,0x7fffe05afeb4,249212770,0,0x0,8
tick,0x7fffe05afeb4,249228779,0,0x0,8
tick,0x7fffe05afeb4,249244846,0,0x0,8
tick,0x7fffe05afeb4,249260890,0,0x0,8
tick,0x7fffe05afeb4,249276772,0,0x0,8
tick,0x7fffe05afeb4,249292828,0,0x0,8
tick,0x7fffe05afeb4,249307856,0,0x0,8
tick,0x7fffe05afeb4,249323786,0,0x0,8
tick,0x7fffe05afeb4,249339870,0,0x0,8
tick,0x7fffe05afeb4,249355982,0,0x0,8
tick,0x7fffe05afeb4,249370792,0,0x0,8
tick,0x7fffe05afeb4,249386910,0,0x0,8
tick,0x7fffe05afeb4,249401874,0,0x0,8
tick,0x7fffe05afeb4,249417866,0,0x0,8
tick,0x7fffe05afeb4,249433884,0,0x0,8
tick,0x7fffe05afeb4,249449838,0,0x0,8
tick,0x7fffe05afeb4,249465787,0,0x0,8
tick,0x7fffe05afeb4,249481783,0,0x0,8
tick,0x7fffe05afeb4,249497816,0,0x0,8
tick,0x7fffe05afeb4,249512833,0,0x0,8
tick,0x7fffe05afeb4,249528962,0,0x0,8
tick,0x7fffe05afeb4,249544972,0,0x0,8
tick,0x7fffe05afeb4,249563649,0,0x0,8
tick,0x7fffe05afeb4,249576068,0,0x0,8
tick,0x7fffe05afeb4,249591761,0,0x0,8
tick,0x7fffe05afeb4,249607912,0,0x0,8
tick,0x7fffe05afeb4,249622852,0,0x0,8
tick,0x7fffe05afeb4,249638777,0,0x0,8
tick,0x7fffe05afeb4,249654913,0,0x0,8
tick,0x7fffe05afeb4,249669809,0,0x0,8
tick,0x7fffe05afeb4,249685773,0,0x0,8
tick,0x7fffe05afeb4,249701858,0,0x0,8
tick,0x7fffe05afeb4,249717847,0,0x0,8
tick,0x7fffe05afeb4,249733887,0,0x0,8
tick,0x7fffe05afeb4,249749895,0,0x0,8
tick,0x7fffe05afeb4,249765922,0,0x0,8
tick,0x7fffe05afeb4,249781869,0,0x0,8
tick,0x7fffe05afeb4,249797801,0,0x0,8
tick,0x7fffe05afeb4,249812881,0,0x0,8
tick,0x7fffe05afeb4,249828871,0,0x0,8
tick,0x7fffe05afeb4,249844850,0,0x0,8
tick,0x7fffe05afeb4,249860778,0,0x0,8
tick,0x7fffe05afeb4,249876809,0,0x0,8
tick,0x7fffe05afeb4,249892773,0,0x0,8
tick,0x7fffe05afeb4,249908842,0,0x0,8
tick,0x7fffe05afeb4,249924843,0,0x0,8
tick,0x7fffe05afeb4,249940903,0,0x0,8
tick,0x7fffe05afeb4,249956793,0,0x0,8
tick,0x7fffe05afeb4,249972856,0,0x0,8
tick,0x7fffe05afeb4,249988881,0,0x0,8
tick,0x7fffe05afeb4,250004779,0,0x0,8
tick,0x7fffe05afeb4,250020872,0,0x0,8
tick,0x7fffe05afeb4,250036798,0,0x0,8
tick,0x7fffe05afeb4,250052778,0,0x0,8
tick,0x7fffe05afeb4,250067847,0,0x0,8
tick,0x7fffe05afeb4,250083870,0,0x0,8
tick,0x7fffe05afeb4,250099820,0,0x0,8
tick,0x7fffe05afeb4,250115772,0,0x0,8
tick,0x7fffe05afeb4,250131849,0,0x0,8
tick,0x7fffe05afeb4,250147869,0,0x0,8
tick,0x7fffe05afeb4,250163868,0,0x0,8
tick,0x7fffe05afeb4,250179884,0,0x0,8
tick,0x7fffe05afeb4,250195773,0,0x0,8
tick,0x7fffe05afeb4,250211789,0,0x0,8
tick,0x7fffe05afeb4,250227799,0,0x0,8
tick,0x7fffe05afeb4,250243866,0,0x0,8
tick,0x7fffe05afeb4,250260098,0,0x0,8
tick,0x7fffe05afeb4,250275855,0,0x0,8
tick,0x7fffe05afeb4,250291866,0,0x0,8
tick,0x7fffe05afeb4,250307851,0,0x0,8
tick,0x7fffe05afeb4,250323800,0,0x0,8
tick,0x7fffe05afeb4,250339813,0,0x0,8
tick,0x7fffe05afeb4,250354868,0,0x0,8
tick,0x7fffe05afeb4,250370778,0,0x0,8
tick,0x7fffe05afeb4,250386846,0,0x0,8
tick,0x7fffe05afeb4,250402844,0,0x0,8
tick,0x7fffe05afeb4,250418773,0,0x0,8
tick,0x7fffe05afeb4,250434928,0,0x0,8
tick,0x7fffe05afeb4,250450775,0,0x0,8
tick,0x7fffe05afeb4,250465851,0,0x0,8
tick,0x7fffe05afeb4,250481823,0,0x0,8
tick,0x7fffe05afeb4,250497761,0,0x0,8
tick,0x7fffe05afeb4,250512761,0,0x0,8
tick,0x7fffe05afeb4,250528835,0,0x0,8
tick,0x7fffe05afeb4,250544845,0,0x0,8
tick,0x7fffe05afeb4,250560994,0,0x0,8
tick,0x7fffe05afeb4,250576906,0,0x0,8
tick,0x7fffe05afeb4,250592828,0,0x0,8
tick,0x7fffe05afeb4,250608920,0,0x0,8
tick,0x7fffe05afeb4,250624856,0,0x0,8
tick,0x7fffe05afeb4,250640792,0,0x0,8
tick,0x7fffe05afeb4,250656964,0,0x0,8
tick,0x7fffe05afeb4,250671853,0,0x0,8
tick,0x7fffe05afeb4,250687842,0,0x0,8
tick,0x7fffe05afeb4,250703853,0,0x0,8
tick,0x7fffe05afeb4,250719948,0,0x0,8
tick,0x7fffe05afeb4,250735880,0,0x0,8
tick,0x7fffe05afeb4,250752082,0,0x0,8
tick,0x7fffe05afeb4,250767901,0,0x0,8
tick,0x7fffe05afeb4,250783828,0,0x0,8
tick,0x7fffe05afeb4,250799875,0,0x0,8
tick,0x7fffe05afeb4,250814856,0,0x0,8
tick,0x7fffe05afeb4,250830851,0,0x0,8
tick,0x7fffe05afeb4,250845890,0,0x0,8
tick,0x7fffe05afeb4,250861933,0,0x0,8
tick,0x7fffe05afeb4,250877905,0,0x0,8
tick,0x7fffe05afeb4,250893850,0,0x0,8
tick,0x7fffe05afeb4,250909946,0,0x0,8
tick,0x7fffe05afeb4,250925856,0,0x0,8
tick,0x7fffe05afeb4,250941969,0,0x0,8
tick,0x7fffe05afeb4,250957907,0,0x0,8
tick,0x7fffe05afeb4,250973868,0,0x0,8
tick,0x7fffe05afeb4,250989881,0,0x0,8
tick,0x7fffe05afeb4,251004754,0,0x0,8
tick,0x7fffe05afeb4,251020766,0,0x0,8
tick,0x7fffe05afeb4,251035860,0,0x0,8
tick,0x7fffe05afeb4,251051885,0,0x0,8
tick,0x7fffe05afeb4,251067922,0,0x0,8
tick,0x7fffe05afeb4,251083815,0,0x0,8
tick,0x7fffe05afeb4,251099962,0,0x0,8
tick,0x7fffe05afeb4,251114867,0,0x0,8
tick,0x7fffe05afeb4,251130814,0,0x0,8
tick,0x7fffe05afeb4,251145980,0,0x0,8
tick,0x7fffe05afeb4,251161869,0,0x0,8
tick,0x7fffe05afeb4,251176846,0,0x0,8
tick,0x7fffe05afeb4,251192973,0,0x0,8
tick,0x7fffe05afeb4,251207790,0,0x0,8
tick,0x7fffe05afeb4,251223776,0,0x0,8
tick,0x7fffe05afeb4,251239944,0,0x0,8
tick,0x7fffe05afeb4,251256019,0,0x0,8
tick,0x7fffe05afeb4,251271839,0,0x0,8
tick,0x7fffe05afeb4,251287961,0,0x0,8
tick,0x7fffe05afeb4,251303845,0,0x0,8
tick,0x7fffe05afeb4,251319991,0,0x0,8
tick,0x7fffe05afeb4,251335772,0,0x0,8
tick,0x7fffe05afeb4,251351913,0,0x0,8
tick,0x7fffe05afeb4,251367994,0,0x0,8
tick,0x7fffe05afeb4,251383890,0,0x0,8
tick,0x7fffe05afeb4,251399884,0,0x0,8
tick,0x7fffe05afeb4,251416283,0,0x0,8
tick,0x7fffe05afeb4,251431905,0,0x0,8
tick,0x7fffe05afeb4,251447763,0,0x0,8
tick,0x7fffe05afeb4,251463840,0,0x0,8
tick,0x7fffe05afeb4,251479849,0,0x0,8
tick,0x7fffe05afeb4,251494940,0,0x0,8
tick,0x7fffe05afeb4,251510761,0,0x0,8
tick,0x7fffe05afeb4,251526854,0,0x0,8
tick,0x7fffe05afeb4,251542884,0,0x0,8
tick,0x7fffe05afeb4,251558836,0,0x0,8
tick,0x7fffe05afeb4,251574945,0,0x0,8
tick,0x7fffe05afeb4,251590867,0,0x0,8
tick,0x7fffe05afeb4,251605921,0,0x0,8
tick,0x7fffe05afeb4,251621921,0,0x0,8
tick,0x7fffe05afeb4,251637851,0,0x0,8
tick,0x7fffe05afeb4,251653775,0,0x0,8
tick,0x7fffe05afeb4,251669892,0,0x0,8
tick,0x7fffe05afeb4,251685885,0,0x0,8
tick,0x7fffe05afeb4,251701931,0,0x0,8
tick,0x7fffe05afeb4,251717851,0,0x0,8
tick,0x7fffe05afeb4,251733863,0,0x0,8
tick,0x7fffe05afeb4,251749920,0,0x0,8
tick,0x7fffe05afeb4,251765024,0,0x0,8
tick,0x7fffe05afeb4,251779814,0,0x0,8
tick,0x7fffe05afeb4,251794885,0,0x0,8
tick,0x7fffe05afeb4,251810769,0,0x0,8
tick,0x7fffe05afeb4,251825861,0,0x0,8
tick,0x7fffe05afeb4,251841955,0,0x0,8
tick,0x7fffe05afeb4,251857771,0,0x0,8
tick,0x7fffe05afeb4,251873917,0,0x0,8
tick,0x7fffe05afeb4,251889875,0,0x0,8
tick,0x7fffe05afeb4,251905856,0,0x0,8
tick,0x7fffe05afeb4,251921911,0,0x0,8
tick,0x7fffe05afeb4,251937925,0,0x0,8
tick,0x7fffe05afeb4,251953953,0,0x0,8
tick,0x7fffe05afeb4,251969885,0,0x0,8
tick,0x7fffe05afeb4,251985874,0,0x0,8
tick,0x7fffe05afeb4,252001822,0,0x0,8
tick,0x7fffe05afeb4,252017852,0,0x0,8
tick,0x7fffe05afeb4,252033855,0,0x0,8
tick,0x7fffe05afeb4,252049945,0,0x0,8
tick,0x7fffe05afeb4,252065962,0,0x0,8
tick,0x7fffe05afeb4,252081793,0,0x0,8
tick,0x7fffe05afeb4,252096857,0,0x0,8
tick,0x7fffe05afeb4,252112830,0,0x0,8
tick,0x7fffe05afeb4,252128838,0,0x0,8
tick,0x7fffe05afeb4,252144984,0,0x0,8
tick,0x7fffe05afeb4,252160780,0,0x0,8
tick,0x7fffe05afeb4,252176852,0,0x0,8
tick,0x7fffe05afeb4,252192780,0,0x0,8
tick,0x7fffe05afeb4,252208816,0,0x0,8
tick,0x7fffe05afeb4,252224778,0,0x0,8
tick,0x7fffe05afeb4,252240787,0,0x0,8
tick,0x7fffe05afeb4,252256762,0,0x0,8
tick,0x7fffe05afeb4,252272785,0,0x0,8
tick,0x7fffe05afeb4,252288756,0,0x0,8
tick,0x7fffe05afeb4,252304787,0,0x0,8
tick,0x7fffe05afeb4,252320870,0,0x0,8
tick,0x7fffe05afeb4,252336784,0,0x0,8
tick,0x7fffe05afeb4,252352855,0,0x0,8
tick,0x7fffe05afeb4,252368766,0,0x0,8
tick,0x7fffe05afeb4,252384793,0,0x0,8
tick,0x7fffe05afeb4,252400814,0,0x0,8
tick,0x7fffe05afeb4,252416773,0,0x0,8
tick,0x7fffe05afeb4,252432777,0,0x0,8
tick,0x7fffe05afeb4,252448805,0,0x0,8
tick,0x7fffe05afeb4,252464767,0,0x0,8
tick,0x7fffe05afeb4,252479836,0,0x0,8
tick,0x7fffe05afeb4,252495849,0,0x0,8
tick,0x7fffe05afeb4,252511847,0,0x0,8
tick,0x7fffe05afeb4,252527864,0,0x0,8
tick,0x7fffe05afeb4,252543875,0,0x0,8
tick,0x7fffe05afeb4,252559939,0,0x0,8
tick,0x7fffe05afeb4,252575767,0,0x0,8
tick,0x7fffe05afeb4,252591783,0,0x0,8
tick,0x7fffe05afeb4,252607778,0,0x0,8
tick,0x7fffe05afeb4,252623837,0,0x0,8
tick,0x7fffe05afeb4,252639859,0,0x0,8
tick,0x7fffe05afeb4,252655998,0,0x0,8
tick,0x7fffe05afeb4,252671768,0,0x0,8
tick,0x7fffe05afeb4,252687754,0,0x0,8
tick,0x7fffe05afeb4,252703786,0,0x0,8
tick,0x7fffe05afeb4,252719972,0,0x0,8
tick,0x7fffe05afeb4,252735846,0,0x0,8
tick,0x7fffe05afeb4,252751890,0,0x0,8
tick,0x7fffe05afeb4,252766809,0,0x0,8
tick,0x7fffe05afeb4,252782771,0,0x0,8
tick,0x7fffe05afeb4,252798784,0,0x0,8
tick,0x7fffe05afeb4,252814758,0,0x0,8
tick,0x7fffe05afeb4,252830761,0,0x0,8
tick,0x7fffe05afeb4,252845844,0,0x0,8
tick,0x7fffe05afeb4,252861848,0,0x0,8
tick,0x7fffe05afeb4,252877856,0,0x0,8
tick,0x7fffe05afeb4,252893864,0,0x0,8
tick,0x7fffe05afeb4,252909803,0,0x0,8
tick,0x7fffe05afeb4,252925853,0,0x0,8
tick,0x7fffe05afeb4,252941783,0,0x0,8
tick,0x7fffe05afeb4,252957890,0,0x0,8
tick,0x7fffe05afeb4,252973816,0,0x0,8
tick,0x7fffe05afeb4,252989840,0,0x0,8
tick,0x7fffe05afeb4,253005770,0,0x0,8
tick,0x7fffe05afeb4,253021785,0,0x0,8
tick,0x7fffe05afeb4,253037860,0,0x0,8
tick,0x7fffe05afeb4,253053774,0,0x0,8
tick,0x7fffe05afeb4,253069806,0,0x0,8
tick,0x7fffe05afeb4,253085856,0,0x0,8
tick,0x7fffe05afeb4,253101873,0,0x0,8
tick,0x7fffe05afeb4,253116772,0,0x0,8
tick,0x7fffe05afeb4,253132777,0,0x0,8
tick,0x7fffe05afeb4,253148882,0,0x0,8
tick,0x7fffe05afeb4,253165025,0,0x0,8
tick,0x7fffe05afeb4,253179808,0,0x0,8
tick,0x7fffe05afeb4,253194786,0,0x0,8
tick,0x7fffe05afeb4,253210806,0,0x0,8
tick,0x7fffe05afeb4,253226802,0,0x0,8
tick,0x7fffe05afeb4,253242770,0,0x0,8
tick,0x7fffe05afeb4,253258775,0,0x0,8
tick,0x7fffe05afeb4,253273850,0,0x0,8
tick,0x7fffe05afeb4,253288784,0,0x0,8
tick,0x7fffe05afeb4,253304853,0,0x0,8
tick,0x7fffe05afeb4,253321350,0,0x0,8
tick,0x7fffe05afeb4,253335844,0,0x0,8
tick,0x7fffe05afeb4,253351775,0,0x0,8
tick,0x7fffe05afeb4,253367820,0,0x0,8
tick,0x7fffe05afeb4,253383852,0,0x0,8
tick,0x7fffe05afeb4,253398878,0,0x0,8
tick,0x7fffe05afeb4,253414770,0,0x0,8
tick,0x7fffe05afeb4,253430932,0,0x0,8
tick,0x7fffe05afeb4,253446755,0,0x0,8
tick,0x7fffe05afeb4,253462774,0,0x0,8
tick,0x7fffe05afeb4,253478781,0,0x0,8
tick,0x7fffe05afeb4,253494848,0,0x0,8
tick,0x7fffe05afeb4,253510775,0,0x0,8
tick,0x7fffe05afeb4,253526852,0,0x0,8
tick,0x7fffe05afeb4,253542859,0,0x0,8
tick,0x7fffe05afeb4,253557853,0,0x0,8
tick,0x7fffe05afeb4,253573771,0,0x0,8
tick,0x7fffe05afeb4,253589785,0,0x0,8
tick,0x7fffe05afeb4,253605850,0,0x0,8
tick,0x7fffe05afeb4,253621767,0,0x0,8
tick,0x7fffe05afeb4,253637836,0,0x0,8
tick,0x7fffe05afeb4,253653967,0,0x0,8
tick,0x7fffe05afeb4,253669884,0,0x0,8
tick,0x7fffe05afeb4,253685783,0,0x0,8
tick,0x7fffe05afeb4,253701763,0,0x0,8
tick,0x7fffe05afeb4,253716766,0,0x0,8
tick,0x7fffe05afeb4,253732805,0,0x0,8
tick,0x7fffe05afeb4,253748856,0,0x0,8
tick,0x7fffe05afeb4,253764771,0,0x0,8
tick,0x7fffe05afeb4,253779887,0,0x0,8
tick,0x7fffe05afeb4,253795811,0,0x0,8
tick,0x7fffe05afeb4,253811755,0,0x0,8
tick,0x7fffe05afeb4,253827926,0,0x0,8
tick,0x7fffe05afeb4,253843846,0,0x0,8
tick,0x7fffe05afeb4,253859876,0,0x0,8
tick,0x7fffe05afeb4,253875838,0,0x0,8
tick,0x7fffe05afeb4,253891845,0,0x0,8
tick,0x7fffe05afeb4,253907772,0,0x0,8
tick,0x7fffe05afeb4,253923778,0,0x0,8
tick,0x7fffe05afeb4,253939856,0,0x0,8
tick,0x7fffe05afeb4,253955859,0,0x0,8
tick,0x7fffe05afeb4,253971896,0,0x0,8
tick,0x7fffe05afeb4,253987884,0,0x0,8
tick,0x7fffe05afeb4,254003839,0,0x0,8
tick,0x7fffe05afeb4,254019868,0,0x0,8
tick,0x7fffe05afeb4,254035767,0,0x0,8
tick,0x7fffe05afeb4,254051774,0,0x0,8
tick,0x7fffe05afeb4,254067775,0,0x0,8
tick,0x7fffe05afeb4,254083795,0,0x0,8
tick,0x7fffe05afeb4,254099893,0,0x0,8
tick,0x7fffe05afeb4,254115777,0,0x0,8
tick,0x7fffe05afeb4,254131817,0,0x0,8
tick,0x7fffe05afeb4,254147776,0,0x0,8
tick,0x7fffe05afeb4,254163830,0,0x0,8
tick,0x7fffe05afeb4,254179848,0,0x0,8
tick,0x7fffe05afeb4,254194774,0,0x0,8
tick,0x7fffe05afeb4,254210786,0,0x0,8
tick,0x7fffe05afeb4,254226905,0,0x0,8
tick,0x7fffe05afeb4,254242819,0,0x0,8
tick,0x7fffe05afeb4,254258777,0,0x0,8
tick,0x7fffe05afeb4,254273792,0,0x0,8
tick,0x7fffe05afeb4,254289861,0,0x0,8
tick,0x7fffe05afeb4,254304862,0,0x0,8
tick,0x7fffe05afeb4,254320881,0,0x0,8
tick,0x7fffe05afeb4,254335856,0,0x0,8
tick,0x7fffe05afeb4,254350810,0,0x0,8
tick,0x7fffe05afeb4,254366781,0,0x0,8
tick,0x7fffe05afeb4,254382787,0,0x0,8
tick,0x7fffe05afeb4,254398770,0,0x0,8
tick,0x7fffe05afeb4,254414932,0,0x0,8
tick,0x7fffe05afeb4,254430799,0,0x0,8
tick,0x7fffe05afeb4,254446798,0,0x0,8
tick,0x7fffe05afeb4,254462769,0,0x0,8
tick,0x7fffe05afeb4,254479125,0,0x0,8
tick,0x7fffe05afeb4,254494992,0,0x0,8
tick,0x7fffe05afeb4,254510837,0,0x0,8
tick,0x7fffe05afeb4,254526785,0,0x0,8
tick,0x7fffe05afeb4,254542843,0,0x0,8
tick,0x7fffe05afeb4,254557868,0,0x0,8
tick,0x7fffe05afeb4,254573804,0,0x0,8
tick,0x7fffe05afeb4,254589780,0,0x0,8
tick,0x7fffe05afeb4,254605764,0,0x0,8
tick,0x7fffe05afeb4,254621854,0,0x0,8
tick,0x7fffe05afeb4,254637784,0,0x0,8
tick,0x7fffe05afeb4,254653945,0,0x0,8
tick,0x7fffe05afeb4,254670067,0,0x0,8
tick,0x7fffe05afeb4,254684784,0,0x0,8
tick,0x7fffe05afeb4,254700774,0,0x0,8
tick,0x7fffe05afeb4,254716774,0,0x0,8
tick,0x7fffe05afeb4,254732842,0,0x0,8
tick,0x7fffe05afeb4,254748783,0,0x0,8
tick,0x7fffe05afeb4,254763842,0,0x0,8
tick,0x7fffe05afeb4,254779821,0,0x0,8
tick,0x7fffe05afeb4,254794835,0,0x0,8
tick,0x7fffe05afeb4,254810817,0,0x0,8
tick,0x7fffe05afeb4,254826771,0,0x0,8
tick,0x7fffe05afeb4,254842878,0,0x0,8
tick,0x7fffe05afeb4,254857837,0,0x0,8
tick,0x7fffe05afeb4,254873907,0,0x0,8
tick,0x7fffe05afeb4,254889795,0,0x0,8
tick,0x7fffe05afeb4,254905797,0,0x0,8
tick,0x7fffe05afeb4,254921868,0,0x0,8
tick,0x7fffe05afeb4,254937867,0,0x0,8
tick,0x7fffe05afeb4,254952912,0,0x0,8
tick,0x7fffe05afeb4,254968856,0,0x0,8
tick,0x7fffe05afeb4,254984948,0,0x0,8
tick,0x7fffe05afeb4,255000833,0,0x0,8
tick,0x7fffe05afeb4,255016778,0,0x0,8
tick,0x7fffe05afeb4,255032794,0,0x0,8
tick,0x7fffe05afeb4,255047864,0,0x0,8
tick,0x7fffe05afeb4,255063914,0,0x0,8
tick,0x7fffe05afeb4,255079797,0,0x0,8
tick,0x7fffe05afeb4,255094778,0,0x0,8
tick,0x7fffe05afeb4,255109934,0,0x0,8
tick,0x7fffe05afeb4,255125768,0,0x0,8
tick,0x7fffe05afeb4,255141876,0,0x0,8
tick,0x7fffe05afeb4,255157804,0,0x0,8
tick,0x7fffe05afeb4,255173811,0,0x0,8
tick,0x7fffe05afeb4,255189786,0,0x0,8
tick,0x7fffe05afeb4,255205990,0,0x0,8
tick,0x7fffe05afeb4,255221844,0,0x0,8
tick,0x7fffe05afeb4,255237844,0,0x0,8
tick,0x7fffe05afeb4,255253839,0,0x0,8
tick,0x7fffe05afeb4,255269952,0,0x0,8
tick,0x7fffe05afeb4,255285794,0,0x0,8
tick,0x7fffe05afeb4,255301769,0,0x0,8
tick,0x7fffe05afeb4,255317944,0,0x0,8
tick,0x7fffe05afeb4,255333888,0,0x0,8
tick,0x7fffe05afeb4,255348770,0,0x0,8
tick,0x7fffe05afeb4,255364861,0,0x0,8
tick,0x7fffe05afeb4,255380777,0,0x0,8
tick,0x7fffe05afeb4,255395830,0,0x0,8
tick,0x7fffe05afeb4,255411858,0,0x0,8
tick,0x7fffe05afeb4,255427970,0,0x0,8
tick,0x7fffe05afeb4,255443840,0,0x0,8
tick,0x7fffe05afeb4,255459874,0,0x0,8
tick,0x7fffe05afeb4,255475857,0,0x0,8
tick,0x7fffe05afeb4,255491784,0,0x0,8
tick,0x7fffe05afeb4,255507800,0,0x0,8
tick,0x7fffe05afeb4,255523849,0,0x0,8
tick,0x7fffe05afeb4,255539836,0,0x0,8
tick,0x7fffe05afeb4,255555852,0,0x0,8
tick,0x7fffe05afeb4,255571772,0,0x0,8
tick,0x7fffe05afeb4,255587860,0,0x0,8
tick,0x7fffe05afeb4,255603773,0,0x0,8
tick,0x7fffe05afeb4,255619803,0,0x0,8
tick,0x7fffe05afeb4,255635773,0,0x0,8
tick,0x7fffe05afeb4,255651879,0,0x0,8
tick,0x7fffe05afeb4,255666869,0,0x0,8
tick,0x7fffe05afeb4,255682775,0,0x0,8
tick,0x7fffe05afeb4,255697761,0,0x0,8
tick,0x7fffe05afeb4,255713774,0,0x0,8
tick,0x7fffe05afeb4,255729814,0,0x0,8
tick,0x7fffe05afeb4,255745850,0,0x0,8
tick,0x7fffe05afeb4,255761856,0,0x0,8
tick,0x7fffe05afeb4,255777782,0,0x0,8
tick,0x7fffe05afeb4,255793766,0,0x0,8
tick,0x7fffe05afeb4,255809938,0,0x0,8
tick,0x7fffe05afeb4,255826104,0,0x0,8
tick,0x7fffe05afeb4,255841777,0,0x0,8
tick,0x7fffe05afeb4,255856837,0,0x0,8
tick,0x7fffe05afeb4,255872870,0,0x0,8
tick,0x7fffe05afeb4,255888784,0,0x0,8
tick,0x7fffe05afeb4,255904766,0,0x0,8
tick,0x7fffe05afeb4,255920827,0,0x0,8
tick,0x7fffe05afeb4,255936789,0,0x0,8
tick,0x7fffe05afeb4,255952815,0,0x0,8
tick,0x7fffe05afeb4,255968779,0,0x0,8
tick,0x7fffe05afeb4,255984938,0,0x0,8
tick,0x7fffe05afeb4,256000874,0,0x0,8
tick,0x7fffe05afeb4,256016848,0,0x0,8
tick,0x7fffe05afeb4,256032767,0,0x0,8
tick,0x7fffe05afeb4,256047797,0,0x0,8
tick,0x7fffe05afeb4,256063770,0,0x0,8
tick,0x7fffe05afeb4,256078827,0,0x0,8
tick,0x7fffe05afeb4,256094904,0,0x0,8
tick,0x7fffe05afeb4,256110802,0,0x0,8
tick,0x7fffe05afeb4,256126848,0,0x0,8
tick,0x7fffe05afeb4,256142865,0,0x0,8
tick,0x7fffe05afeb4,256157808,0,0x0,8
tick,0x7fffe05afeb4,256172824,0,0x0,8
tick,0x7fffe05afeb4,256187834,0,0x0,8
tick,0x7fffe05afeb4,256203865,0,0x0,8
tick,0x7fffe05afeb4,256219880,0,0x0,8
tick,0x7fffe05afeb4,256235847,0,0x0,8
tick,0x7fffe05afeb4,256251773,0,0x0,8
tick,0x7fffe05afeb4,256267846,0,0x0,8
tick,0x7fffe05afeb4,256283760,0,0x0,8
tick,0x7fffe05afeb4,256299880,0,0x0,8
tick,0x7fffe05afeb4,256315898,0,0x0,8
tick,0x7fffe05afeb4,256331858,0,0x0,8
tick,0x7fffe05afeb4,256347776,0,0x0,8
tick,0x7fffe05afeb4,256363848,0,0x0,8
tick,0x7fffe05afeb4,256378793,0,0x0,8
tick,0x7fffe05afeb4,256394772,0,0x0,8
tick,0x7fffe05afeb4,256410782,0,0x0,8
tick,0x7fffe05afeb4,256426880,0,0x0,8
tick,0x7fffe05afeb4,256442858,0,0x0,8
tick,0x7fffe05afeb4,256457861,0,0x0,8
tick,0x7fffe05afeb4,256473782,0,0x0,8
tick,0x7fffe05afeb4,256489796,0,0x0,8
tick,0x7fffe05afeb4,256505786,0,0x0,8
tick,0x7fffe05afeb4,256521775,0,0x0,8
tick,0x7fffe05afeb4,256537857,0,0x0,8
tick,0x7fffe05afeb4,256553820,0,0x0,8
tick,0x7fffe05afeb4,256569795,0,0x0,8
tick,0x7fffe05afeb4,256585782,0,0x0,8
tick,0x7fffe05afeb4,256601763,0,0x0,8
tick,0x7fffe05afeb4,256617773,0,0x0,8
tick,0x7fffe05afeb4,256633803,0,0x0,8
tick,0x7fffe05afeb4,256648799,0,0x0,8
tick,0x7fffe05afeb4,256664787,0,0x0,8
tick,0x7fffe05afeb4,256679862,0,0x0,8
tick,0x7fffe05afeb4,256695787,0,0x0,8
tick,0x7fffe05afeb4,256711766,0,0x0,8
tick,0x7fffe05afeb4,256727794,0,0x0,8
tick,0x7fffe05afeb4,256743853,0,0x0,8
tick,0x7fffe05afeb4,256759871,0,0x0,8
tick,0x7fffe05afeb4,256775854,0,0x0,8
tick,0x7fffe05afeb4,256791777,0,0x0,8
tick,0x7fffe05afeb4,256807851,0,0x0,8
tick,0x7fffe05afeb4,256823821,0,0x0,8
tick,0x7fffe05afeb4,256838773,0,0x0,8
tick,0x7fffe05afeb4,256854764,0,0x0,8
tick,0x7fffe05afeb4,256870965,0,0x0,8
tick,0x7fffe05afeb4,256886856,0,0x0,8
tick,0x7fffe05afeb4,256902846,0,0x0,8
tick,0x7fffe05afeb4,256918796,0,0x0,8
tick,0x7fffe05afeb4,256933771,0,0x0,8
tick,0x7fffe05afeb4,256949813,0,0x0,8
tick,0x7fffe05afeb4,256965767,0,0x0,8
tick,0x7fffe05afeb4,256981954,0,0x0,8
tick,0x7fffe05afeb4,256996864,0,0x0,8
tick,0x7fffe05afeb4,257012763,0,0x0,8
tick,0x7fffe05afeb4,257027860,0,0x0,8
tick,0x7fffe05afeb4,257043844,0,0x0,8
tick,0x7fffe05afeb4,257059883,0,0x0,8
tick,0x7fffe05afeb4,257075785,0,0x0,8
tick,0x7fffe05afeb4,257091877,0,0x0,8
tick,0x7fffe05afeb4,257107785,0,0x0,8
tick,0x7fffe05afeb4,257123849,0,0x0,8
tick,0x7fffe05afeb4,257139863,0,0x0,8
tick,0x7fffe05afeb4,257155774,0,0x0,8
tick,0x7fffe05afeb4,257171855,0,0x0,8
tick,0x7fffe05afeb4,257187761,0,0x0,8
tick,0x7fffe05afeb4,257203808,0,0x0,8
tick,0x7fffe05afeb4,257219826,0,0x0,8
tick,0x7fffe05afeb4,257234851,0,0x0,8
tick,0x7fffe05afeb4,257250762,0,0x0,8
tick,0x7fffe05afeb4,257266861,0,0x0,8
tick,0x7fffe05afeb4,257282798,0,0x0,8
tick,0x7fffe05afeb4,257298766,0,0x0,8
tick,0x7fffe05afeb4,257314795,0,0x0,8
tick,0x7fffe05afeb4,257330854,0,0x0,8
tick,0x7fffe05afeb4,257346846,0,0x0,8
tick,0x7fffe05afeb4,257362855,0,0x0,8
tick,0x7fffe05afeb4,257378867,0,0x0,8
tick,0x7fffe05afeb4,257394764,0,0x0,8
tick,0x7fffe05afeb4,257410792,0,0x0,8
tick,0x7fffe05afeb4,257426765,0,0x0,8
tick,0x7fffe05afeb4,257442854,0,0x0,8
tick,0x7fffe05afeb4,257457874,0,0x0,8
tick,0x7fffe05afeb4,257473780,0,0x0,8
tick,0x7fffe05afeb4,257489787,0,0x0,8
tick,0x7fffe05afeb4,257505775,0,0x0,8
tick,0x7fffe05afeb4,257521781,0,0x0,8
tick,0x7fffe05afeb4,257536772,0,0x0,8
tick,0x7fffe05afeb4,257552763,0,0x0,8
tick,0x7fffe05afeb4,257567835,0,0x0,8
tick,0x7fffe05afeb4,257583782,0,0x0,8
tick,0x7fffe05afeb4,257599879,0,0x0,8
tick,0x7fffe05afeb4,257615785,0,0x0,8
tick,0x7fffe05afeb4,257631802,0,0x0,8
tick,0x7fffe05afeb4,257646772,0,0x0,8
tick,0x7fffe05afeb4,257662768,0,0x0,8
tick,0x7fffe05afeb4,257677779,0,0x0,8
tick,0x7fffe05afeb4,257693849,0,0x0,8
tick,0x7fffe05afeb4,257709879,0,0x0,8
tick,0x7fffe05afeb4,257725846,0,0x0,8
tick,0x7fffe05afeb4,257741765,0,0x0,8
tick,0x7fffe05afeb4,257757789,0,0x0,8
tick,0x7fffe05afeb4,257773783,0,0x0,8
tick,0x7fffe05afeb4,257789808,0,0x0,8
tick,0x7fffe05afeb4,257805839,0,0x0,8
tick,0x7fffe05afeb4,257821777,0,0x0,8
tick,0x7fffe05afeb4,257837869,0,0x0,8
tick,0x7fffe05afeb4,257853794,0,0x0,8
tick,0x7fffe05afeb4,257869894,0,0x0,8
tick,0x7fffe05afeb4,257885775,0,0x0,8
tick,0x7fffe05afeb4,257901849,0,0x0,8
tick,0x7fffe05afeb4,257917850,0,0x0,8
tick,0x7fffe05afeb4,257933894,0,0x0,8
tick,0x7fffe05afeb4,257949874,0,0x0,8
tick,0x7fffe05afeb4,257965895,0,0x0,8
tick,0x7fffe05afeb4,257981897,0,0x0,8
tick,0x7fffe05afeb4,257996770,0,0x0,8
tick,0x7fffe05afeb4,258011798,0,0x0,8
tick,0x7fffe05afeb4,258027879,0,0x0,8
tick,0x7fffe05afeb4,258043851,0,0x0,8
tick,0x7fffe05afeb4,258059867,0,0x0,8
tick,0x7fffe05afeb4,258075818,0,0x0,8
tick,0x7fffe05afeb4,258091817,0,0x0,8
tick,0x7fffe05afeb4,258106766,0,0x0,8
tick,0x7fffe05afeb4,258122766,0,0x0,8
tick,0x7fffe05afeb4,258138776,0,0x0,8
tick,0x7fffe05afeb4,258154854,0,0x0,8
tick,0x7fffe05afeb4,258171003,0,0x0,8
tick,0x7fffe05afeb4,258186815,0,0x0,8
tick,0x7fffe05afeb4,258202777,0,0x0,8
tick,0x7fffe05afeb4,258217764,0,0x0,8
tick,0x7fffe05afeb4,258233771,0,0x0,8
tick,0x7fffe05afeb4,258249878,0,0x0,8
tick,0x7fffe05afeb4,258265868,0,0x0,8
tick,0x7fffe05afeb4,258281855,0,0x0,8
tick,0x7fffe05afeb4,258296851,0,0x0,8
tick,0x7fffe05afeb4,258312826,0,0x0,8
tick,0x7fffe05afeb4,258327773,0,0x0,8
tick,0x7fffe05afeb4,258343775,0,0x0,8
tick,0x7fffe05afeb4,258359914,0,0x0,8
tick,0x7fffe05afeb4,258375844,0,0x0,8
tick,0x7fffe05afeb4,258391857,0,0x0,8
tick,0x7fffe05afeb4,258407762,0,0x0,8
tick,0x7fffe05afeb4,258423856,0,0x0,8
tick,0x7fffe05afeb4,258439839,0,0x0,8
tick,0x7fffe05afeb4,258455757,0,0x0,8
tick,0x7fffe05afeb4,258471901,0,0x0,8
tick,0x7fffe05afeb4,258487846,0,0x0,8
tick,0x7fffe05afeb4,258503867,0,0x0,8
tick,0x7fffe05afeb4,258519849,0,0x0,8
tick,0x7fffe05afeb4,258535795,0,0x0,8
tick,0x7fffe05afeb4,258551763,0,0x0,8
tick,0x7fffe05afeb4,258567788,0,0x0,8
tick,0x7fffe05afeb4,258583798,0,0x0,8
tick,0x7fffe05afeb4,258599852,0,0x0,8
tick,0x7fffe05afeb4,258614793,0,0x0,8
tick,0x7fffe05afeb4,258630780,0,0x0,8
tick,0x7fffe05afeb4,258645830,0,0x0,8
tick,0x7fffe05afeb4,258661801,0,0x0,8
tick,0x7fffe05afeb4,258677806,0,0x0,8
tick,0x7fffe05afeb4,258693795,0,0x0,8
tick,0x7fffe05afeb4,258709809,0,0x0,8
tick,0x7fffe05afeb4,258725876,0,0x0,8
tick,0x7fffe05afeb4,258741771,0,0x0,8
tick,0x7fffe05afeb4,258757880,0,0x0,8
tick,0x7fffe05afeb4,258773770,0,0x0,8
tick,0x7fffe05afeb4,258789833,0,0x0,8
tick,0x7fffe05afeb4,258805856,0,0x0,8
tick,0x7fffe05afeb4,258821794,0,0x0,8
tick,0x7fffe05afeb4,258837784,0,0x0,8
tick,0x7fffe05afeb4,258852821,0,0x0,8
tick,0x7fffe05afeb4,258868797,0,0x0,8
tick,0x7fffe05afeb4,258884791,0,0x0,8
tick,0x7fffe05afeb4,258900768,0,0x0,8
tick,0x7fffe05afeb4,258916768,0,0x0,8
tick,0x7fffe05afeb4,258932841,0,0x0,8
tick,0x7fffe05afeb4,258948782,0,0x0,8
tick,0x7fffe05afeb4,258964766,0,0x0,8
tick,0x7fffe05afeb4,258980830,0,0x0,8
tick,0x7fffe05afeb4,258995771,0,0x0,8
tick,0x7fffe05afeb4,259011785,0,0x0,8
tick,0x7fffe05afeb4,259027906,0,0x0,8
tick,0x7fffe05afeb4,259043790,0,0x0,8
tick,0x7fffe05afeb4,259059978,0,0x0,8
tick,0x7fffe05afeb4,259074783,0,0x0,8
tick,0x7fffe05afeb4,259090907,0,0x0,8
tick,0x7fffe05afeb4,259105830,0,0x0,8
tick,0x7fffe05afeb4,259121848,0,0x0,8
tick,0x7fffe05afeb4,259137860,0,0x0,8
tick,0x7fffe05afeb4,259153934,0,0x0,8
tick,0x7fffe05afeb4,259168934,0,0x0,8
tick,0x7fffe05afeb4,259185034,0,0x0,8
tick,0x7fffe05afeb4,259200912,0,0x0,8
tick,0x7fffe05afeb4,259216877,0,0x0,8
tick,0x7fffe05afeb4,259232909,0,0x0,8
tick,0x7fffe05afeb4,259248831,0,0x0,8
tick,0x7fffe05afeb4,259265035,0,0x0,8
tick,0x7fffe05afeb4,259279920,0,0x0,8
tick,0x7fffe05afeb4,259295849,0,0x0,8
tick,0x7fffe05afeb4,259311863,0,0x0,8
tick,0x7fffe05afeb4,259327983,0,0x0,8
tick,0x7fffe05afeb4,259343846,0,0x0,8
tick,0x7fffe05afeb4,259360010,0,0x0,8
tick,0x7fffe05afeb4,259375988,0,0x0,8
tick,0x7fffe05afeb4,259391916,0,0x0,8
tick,0x7fffe05afeb4,259407000,0,0x0,8
tick,0x7fffe05afeb4,259422904,0,0x0,8
tick,0x7fffe05afeb4,259438855,0,0x0,8
tick,0x7fffe05afeb4,259454809,0,0x0,8
tick,0x7fffe05afeb4,259470894,0,0x0,8
tick,0x7fffe05afeb4,259486991,0,0x0,8
tick,0x7fffe05afeb4,259502851,0,0x0,8
tick,0x7fffe05afeb4,259518965,0,0x0,8
tick,0x7fffe05afeb4,259534880,0,0x0,8
tick,0x7fffe05afeb4,259550907,0,0x0,8
tick,0x7fffe05afeb4,259565920,0,0x0,8
tick,0x7fffe05afeb4,259581761,0,0x0,8
tick,0x7fffe05afeb4,259596918,0,0x0,8
tick,0x7fffe05afeb4,259612986,0,0x0,8
tick,0x7fffe05afeb4,259628795,0,0x0,8
tick,0x7fffe05afeb4,259644898,0,0x0,8
tick,0x7fffe05afeb4,259660833,0,0x0,8
tick,0x7fffe05afeb4,259676877,0,0x0,8
tick,0x7fffe05afeb4,259692833,0,0x0,8
tick,0x7fffe05afeb4,259707911,0,0x0,8
tick,0x7fffe05afeb4,259755182,0,0x0,8
tick,0x7fffe05afeb4,259769954,0,0x0,8
tick,0x7fffe05afeb4,259796055,0,0x0,8
tick,0x7fffe05afeb4,259800851,0,0x0,8
tick,0x7fffe05afeb4,259817033,0,0x0,8
tick,0x7fffe05afeb4,259832030,0,0x0,8
tick,0x7fffe05afeb4,259847860,0,0x0,8
tick,0x7fffe05afeb4,259864003,0,0x0,8
tick,0x7fffe05afeb4,259880013,0,0x0,8
tick,0x7fffe05afeb4,259895805,0,0x0,8
tick,0x7fffe05afeb4,259911774,0,0x0,8
tick,0x7fffe05afeb4,259927773,0,0x0,8
tick,0x7fffe05afeb4,259943963,0,0x0,8
tick,0x7fffe05afeb4,259959909,0,0x0,8
tick,0x7fffe05afeb4,259975930,0,0x0,8
tick,0x7fffe05afeb4,259991859,0,0x0,8
tick,0x7fffe05afeb4,260008003,0,0x0,8
tick,0x7fffe05afeb4,260023785,0,0x0,8
tick,0x7fffe05afeb4,260040437,0,0x0,8
tick,0x7fffe05afeb4,260056051,0,0x0,8
tick,0x7fffe05afeb4,260072539,0,0x0,8
tick,0x7fffe05afeb4,260087880,0,0x0,8
tick,0x7fffe05afeb4,260104494,0,0x0,8
tick,0x7fffe05afeb4,260119868,0,0x0,8
tick,0x7fffe05afeb4,260136117,0,0x0,8
tick,0x7fffe05afeb4,260151841,0,0x0,8
tick,0x7fffe05afeb4,260168036,0,0x0,8
tick,0x7fffe05afeb4,260183846,0,0x0,8
tick,0x7fffe05afeb4,260200691,0,0x0,8
tick,0x7fffe05afeb4,260215856,0,0x0,8
tick,0x7fffe05afeb4,260232074,0,0x0,8
tick,0x7fffe05afeb4,260247861,0,0x0,8
tick,0x7fffe05afeb4,260263903,0,0x0,8
tick,0x7fffe05afeb4,260279830,0,0x0,8
tick,0x7fffe05afeb4,260295902,0,0x0,8
tick,0x7fffe05afeb4,260312001,0,0x0,8
tick,0x7fffe05afeb4,260328046,0,0x0,8
tick,0x7fffe05afeb4,260343858,0,0x0,8
tick,0x7fffe05afeb4,260359973,0,0x0,8
tick,0x7fffe05afeb4,260375816,0,0x0,8
tick,0x7fffe05afeb4,260391978,0,0x0,8
tick,0x7fffe05afeb4,260407780,0,0x0,8
tick,0x7fffe05afeb4,260424348,0,0x0,8
tick,0x7fffe05afeb4,260439840,0,0x0,8
tick,0x7fffe05afeb4,260454882,0,0x0,8
tick,0x7fffe05afeb4,260470834,0,0x0,8
tick,0x7fffe05afeb4,260486953,0,0x0,8
tick,0x7fffe05afeb4,260502772,0,0x0,8
tick,0x7fffe05afeb4,260518985,0,0x0,8
tick,0x7fffe05afeb4,260534899,0,0x0,8
tick,0x7fffe05afeb4,260550797,0,0x0,8
tick,0x7fffe05afeb4,260565928,0,0x0,8
tick,0x7fffe05afeb4,260581879,0,0x0,8
tick,0x7fffe05afeb4,260597809,0,0x0,8
tick,0x7fffe05afeb4,260613760,0,0x0,8
tick,0x7fffe05afeb4,260629836,0,0x0,8
tick,0x7fffe05afeb4,260646037,0,0x0,8
tick,0x7fffe05afeb4,260661777,0,0x0,8
tick,0x7fffe05afeb4,260677871,0,0x0,8
tick,0x7fffe05afeb4,260693777,0,0x0,8
tick,0x7fffe05afeb4,260709953,0,0x0,8
tick,0x7fffe05afeb4,260724768,0,0x0,8
tick,0x7fffe05afeb4,260740803,0,0x0,8
tick,0x7fffe05afeb4,260756850,0,0x0,8
tick,0x7fffe05afeb4,260772935,0,0x0,8
tick,0x7fffe05afeb4,260788759,0,0x0,8
tick,0x7fffe05afeb4,260803936,0,0x0,8
tick,0x7fffe05afeb4,260819797,0,0x0,8
tick,0x7fffe05afeb4,260836087,0,0x0,8
tick,0x7fffe05afeb4,260851757,0,0x0,8
tick,0x7fffe05afeb4,260867954,0,0x0,8
tick,0x7fffe05afeb4,260883898,0,0x0,8
tick,0x7fffe05afeb4,260899978,0,0x0,8
tick,0x7fffe05afeb4,260915039,0,0x0,8
tick,0x7fffe05afeb4,260930842,0,0x0,8
tick,0x7fffe05afeb4,260945826,0,0x0,8
tick,0x7fffe05afeb4,260960854,0,0x0,8
tick,0x7fffe05afeb4,260977002,0,0x0,8
tick,0x7fffe05afeb4,260994249,0,0x0,8
tick,0x7fffe05afeb4,261010837,0,0x0,8
tick,0x7fffe05afeb4,261024882,0,0x0,8
tick,0x7fffe05afeb4,261041039,0,0x0,8
tick,0x7fffe05afeb4,261057106,0,0x0,8
tick,0x7fffe05afeb4,261072083,0,0x0,8
tick,0x7fffe05afeb4,261087924,0,0x0,8
tick,0x7fffe05afeb4,261104546,0,0x0,8
tick,0x7fffe05afeb4,261119853,0,0x0,8
tick,0x7fffe05afeb4,261135771,0,0x0,8
tick,0x7fffe05afeb4,261151957,0,0x0,8
tick,0x7fffe05afeb4,261167844,0,0x0,8
tick,0x7fffe05afeb4,261183931,0,0x0,8
tick,0x7fffe05afeb4,261199974,0,0x0,8
tick,0x7fffe05afeb4,261214999,0,0x0,8
tick,0x7fffe05afeb4,261230796,0,0x0,8
tick,0x7fffe05afeb4,261245856,0,0x0,8
tick,0x7fffe05afeb4,261261836,0,0x0,8
tick,0x7fffe05afeb4,261277975,0,0x0,8
tick,0x7fffe05afeb4,261293850,0,0x0,8
tick,0x7fffe05afeb4,261310009,0,0x0,8
tick,0x7fffe05afeb4,261325799,0,0x0,8
tick,0x7fffe05afeb4,261341982,0,0x0,8
tick,0x7fffe05afeb4,261357875,0,0x0,8
tick,0x7fffe05afeb4,261373866,0,0x0,8
tick,0x7fffe05afeb4,261389821,0,0x0,8
tick,0x7fffe05afeb4,261406056,0,0x0,8
tick,0x7fffe05afeb4,261421934,0,0x0,8
tick,0x7fffe05afeb4,261438008,0,0x0,8
tick,0x7fffe05afeb4,261453762,0,0x0,8
tick,0x7fffe05afeb4,261470067,0,0x0,8
tick,0x7fffe05afeb4,261485859,0,0x0,8
tick,0x7fffe05afeb4,261501764,0,0x0,8
tick,0x7fffe05afeb4,261517855,0,0x0,8
tick,0x7fffe05afeb4,261532994,0,0x0,8
tick,0x7fffe05afeb4,261548776,0,0x0,8
tick,0x7fffe05afeb4,261564765,0,0x0,8
tick,0x7fffe05afeb4,261579786,0,0x0,8
tick,0x7fffe05afeb4,261594938,0,0x0,8
tick,0x7fffe05afeb4,261610776,0,0x0,8
tick,0x7fffe05afeb4,261626916,0,0x0,8
tick,0x7fffe05afeb4,261642978,0,0x0,8
tick,0x7fffe05afeb4,261658863,0,0x0,8
tick,0x7fffe05afeb4,261673773,0,0x0,8
tick,0x7fffe05afeb4,261689799,0,0x0,8
tick,0x7fffe05afeb4,261705851,0,0x0,8
tick,0x7fffe05afeb4,261721960,0,0x0,8
tick,0x7fffe05afeb4,261737783,0,0x0,8
tick,0x7fffe05afeb4,261753929,0,0x0,8
tick,0x7fffe05afeb4,261769993,0,0x0,8
tick,0x7fffe05afeb4,261785896,0,0x0,8
tick,0x7fffe05afeb4,261801764,0,0x0,8
tick,0x7fffe05afeb4,261817811,0,0x0,8
tick,0x7fffe05afeb4,261833788,0,0x0,8
tick,0x7fffe05afeb4,261850036,0,0x0,8
tick,0x7fffe05afeb4,261864920,0,0x0,8
tick,0x7fffe05afeb4,261879824,0,0x0,8
tick,0x7fffe05afeb4,261895770,0,0x0,8
tick,0x7fffe05afeb4,261912001,0,0x0,8
tick,0x7fffe05afeb4,261927826,0,0x0,8
tick,0x7fffe05afeb4,261943852,0,0x0,8
tick,0x7fffe05afeb4,261959811,0,0x0,8
tick,0x7fffe05afeb4,261976028,0,0x0,8
tick,0x7fffe05afeb4,261991809,0,0x0,8
tick,0x7fffe05afeb4,262007787,0,0x0,8
tick,0x7fffe05afeb4,262023768,0,0x0,8
tick,0x7fffe05afeb4,262040416,0,0x0,8
tick,0x7fffe05afeb4,262054891,0,0x0,8
tick,0x7fffe05afeb4,262071226,0,0x0,8
tick,0x7fffe05afeb4,262086877,0,0x0,8
tick,0x7fffe05afeb4,262102916,0,0x0,8
tick,0x7fffe05afeb4,262118777,0,0x0,8
tick,0x7fffe05afeb4,262135208,0,0x0,8
tick,0x7fffe05afeb4,262150880,0,0x0,8
tick,0x7fffe05afeb4,262166866,0,0x0,8
tick,0x7fffe05afeb4,262182935,0,0x0,8
tick,0x7fffe05afeb4,262198965,0,0x0,8
tick,0x7fffe05afeb4,262214768,0,0x0,8
tick,0x7fffe05afeb4,262230927,0,0x0,8
tick,0x7fffe05afeb4,262245873,0,0x0,8
tick,0x7fffe05afeb4,262261956,0,0x0,8
tick,0x7fffe05afeb4,262277873,0,0x0,8
tick,0x7fffe05afeb4,262293875,0,0x0,8
tick,0x7fffe05afeb4,262309930,0,0x0,8
tick,0x7fffe05afeb4,262325904,0,0x0,8
tick,0x7fffe05afeb4,262341853,0,0x0,8
tick,0x7fffe05afeb4,262358095,0,0x0,8
tick,0x7fffe05afeb4,262373886,0,0x0,8
tick,0x7fffe05afeb4,262389905,0,0x0,8
tick,0x7fffe05afeb4,262405846,0,0x0,8
tick,0x7fffe05afeb4,262422064,0,0x0,8
tick,0x7fffe05afeb4,262437859,0,0x0,8
tick,0x7fffe05afeb4,262453936,0,0x0,8
tick,0x7fffe05afeb4,262470009,0,0x0,8
tick,0x7fffe05afeb4,262485940,0,0x0,8
tick,0x7fffe05afeb4,262501837,0,0x0,8
tick,0x7fffe05afeb4,262516766,0,0x0,8
tick,0x7fffe05afeb4,262532857,0,0x0,8
tick,0x7fffe05afeb4,262548863,0,0x0,8
tick,0x7fffe05afeb4,262564823,0,0x0,8
tick,0x7fffe05afeb4,262579853,0,0x0,8
tick,0x7fffe05afeb4,262595835,0,0x0,8
tick,0x7fffe05afeb4,262611935,0,0x0,8
tick,0x7fffe05afeb4,262627851,0,0x0,8
tick,0x7fffe05afeb4,262644018,0,0x0,8
tick,0x7fffe05afeb4,262659820,0,0x0,8
tick,0x7fffe05afeb4,262675947,0,0x0,8
tick,0x7fffe05afeb4,262691818,0,0x0,8
tick,0x7fffe05afeb4,262707800,0,0x0,8
tick,0x7fffe05afeb4,262723780,0,0x0,8
tick,0x7fffe05afeb4,262739967,0,0x0,8
tick,0x7fffe05afeb4,262755802,0,0x0,8
tick,0x7fffe05afeb4,262771950,0,0x0,8
tick,0x7fffe05afeb4,262787855,0,0x0,8
tick,0x7fffe05afeb4,262804007,0,0x0,8
tick,0x7fffe05afeb4,262819823,0,0x0,8
tick,0x7fffe05afeb4,262835857,0,0x0,8
tick,0x7fffe05afeb4,262851859,0,0x0,8
tick,0x7fffe05afeb4,262868165,0,0x0,8
tick,0x7fffe05afeb4,262884114,0,0x0,8
tick,0x7fffe05afeb4,262899793,0,0x0,8
tick,0x7fffe05afeb4,262914839,0,0x0,8
tick,0x7fffe05afeb4,262931213,0,0x0,8
tick,0x7fffe05afeb4,262946053,0,0x0,8
tick,0x7fffe05afeb4,262961852,0,0x0,8
tick,0x7fffe05afeb4,262976865,0,0x0,8
tick,0x7fffe05afeb4,262992867,0,0x0,8
tick,0x7fffe05afeb4,263009305,0,0x0,8
tick,0x7fffe05afeb4,263024862,0,0x0,8
tick,0x7fffe05afeb4,263040950,0,0x0,8
tick,0x7fffe05afeb4,263057030,0,0x0,8
tick,0x7fffe05afeb4,263072920,0,0x0,8
tick,0x7fffe05afeb4,263088962,0,0x0,8
tick,0x7fffe05afeb4,263104792,0,0x0,8
tick,0x7fffe05afeb4,263119964,0,0x0,8
tick,0x7fffe05afeb4,263135788,0,0x0,8
tick,0x7fffe05afeb4,263151976,0,0x0,8
tick,0x7fffe05afeb4,263167891,0,0x0,8
tick,0x7fffe05afeb4,263183996,0,0x0,8
tick,0x7fffe05afeb4,263199950,0,0x0,8
tick,0x7fffe05afeb4,263215883,0,0x0,8
tick,0x7fffe05afeb4,263231774,0,0x0,8
tick,0x7fffe05afeb4,263247985,0,0x0,8
tick,0x7fffe05afeb4,263263753,0,0x0,8
tick,0x7fffe05afeb4,263280012,0,0x0,8
tick,0x7fffe05afeb4,263295849,0,0x0,8
tick,0x7fffe05afeb4,263311924,0,0x0,8
tick,0x7fffe05afeb4,263327766,0,0x0,8
tick,0x7fffe05afeb4,263342773,0,0x0,8
tick,0x7fffe05afeb4,263358868,0,0x0,8
tick,0x7fffe05afeb4,263375060,0,0x0,8
tick,0x7fffe05afeb4,263390847,0,0x0,8
tick,0x7fffe05afeb4,263406836,0,0x0,8
tick,0x7fffe05afeb4,263422775,0,0x0,8
tick,0x7fffe05afeb4,263439127,0,0x0,8
tick,0x7fffe05afeb4,263455008,0,0x0,8
tick,0x7fffe05afeb4,263470053,0,0x0,8
tick,0x7fffe05afeb4,263485807,0,0x0,8
tick,0x7fffe05afeb4,263501887,0,0x0,8
tick,0x7fffe05afeb4,263516788,0,0x0,8
tick,0x7fffe05afeb4,263532832,0,0x0,8
tick,0x7fffe05afeb4,263547778,0,0x0,8
tick,0x7fffe05afeb4,263563771,0,0x0,8
tick,0x7fffe05afeb4,263578871,0,0x0,8
tick,0x7fffe05afeb4,263594828,0,0x0,8
tick,0x7fffe05afeb4,263610778,0,0x0,8
tick,0x7fffe05afeb4,263626842,0,0x0,8
tick,0x7fffe05afeb4,263642771,0,0x0,8
tick,0x7fffe05afeb4,263658773,0,0x0,8
tick,0x7fffe05afeb4,263673796,0,0x0,8
tick,0x7fffe05afeb4,263689871,0,0x0,8
tick,0x7fffe05afeb4,263705859,0,0x0,8
tick,0x7fffe05afeb4,263721847,0,0x0,8
tick,0x7fffe05afeb4,263737853,0,0x0,8
tick,0x7fffe05afeb4,263753802,0,0x0,8
tick,0x7fffe05afeb4,263769779,0,0x0,8
tick,0x7fffe05afeb4,263785832,0,0x0,8
tick,0x7fffe05afeb4,263801854,0,0x0,8
tick,0x7fffe05afeb4,263816856,0,0x0,8
tick,0x7fffe05afeb4,263832772,0,0x0,8
tick,0x7fffe05afeb4,263847846,0,0x0,8
tick,0x7fffe05afeb4,263863776,0,0x0,8
tick,0x7fffe05afeb4,263879802,0,0x0,8
tick,0x7fffe05afeb4,263895790,0,0x0,8
tick,0x7fffe05afeb4,263911854,0,0x0,8
tick,0x7fffe05afeb4,263927779,0,0x0,8
tick,0x7fffe05afeb4,263943771,0,0x0,8
tick,0x7fffe05afeb4,263958866,0,0x0,8
tick,0x7fffe05afeb4,263974804,0,0x0,8
tick,0x7fffe05afeb4,263990810,0,0x0,8
tick,0x7fffe05afeb4,264006765,0,0x0,8
tick,0x7fffe05afeb4,264022806,0,0x0,8
tick,0x7fffe05afeb4,264038802,0,0x0,8
tick,0x7fffe05afeb4,264054779,0,0x0,8
tick,0x7fffe05afeb4,264070863,0,0x0,8
tick,0x7fffe05afeb4,264086854,0,0x0,8
tick,0x7fffe05afeb4,264102960,0,0x0,8
tick,0x7fffe05afeb4,264118983,0,0x0,8
tick,0x7fffe05afeb4,264134848,0,0x0,8
tick,0x7fffe05afeb4,264150864,0,0x0,8
tick,0x7fffe05afeb4,264166827,0,0x0,8
tick,0x7fffe05afeb4,264182779,0,0x0,8
tick,0x7fffe05afeb4,264197775,0,0x0,8
tick,0x7fffe05afeb4,264213840,0,0x0,8
tick,0x7fffe05afeb4,264229845,0,0x0,8
tick,0x7fffe05afeb4,264245852,0,0x0,8
tick,0x7fffe05afeb4,264261844,0,0x0,8
tick,0x7fffe05afeb4,264277822,0,0x0,8
tick,0x7fffe05afeb4,264293768,0,0x0,8
tick,0x7fffe05afeb4,264308796,0,0x0,8
tick,0x7fffe05afeb4,264323810,0,0x0,8
tick,0x7fffe05afeb4,264339856,0,0x0,8
tick,0x7fffe05afeb4,264354777,0,0x0,8
tick,0x7fffe05afeb4,264369802,0,0x0,8
tick,0x7fffe05afeb4,264385772,0,0x0,8
tick,0x7fffe05afeb4,264401877,0,0x0,8
tick,0x7fffe05afeb4,264417847,0,0x0,8
tick,0x7fffe05afeb4,264432772,0,0x0,8
tick,0x7fffe05afeb4,264448860,0,0x0,8
tick,0x7fffe05afeb4,264464785,0,0x0,8
tick,0x7fffe05afeb4,264480854,0,0x0,8
tick,0x7fffe05afeb4,264496763,0,0x0,8
tick,0x7fffe05afeb4,264512850,0,0x0,8
tick,0x7fffe05afeb4,264528900,0,0x0,8
tick,0x7fffe05afeb4,264544854,0,0x0,8
tick,0x7fffe05afeb4,264560880,0,0x0,8
tick,0x7fffe05afeb4,264576861,0,0x0,8
tick,0x7fffe05afeb4,264592804,0,0x0,8
tick,0x7fffe05afeb4,264608781,0,0x0,8
tick,0x7fffe05afeb4,264624853,0,0x0,8
tick,0x7fffe05afeb4,264640854,0,0x0,8
tick,0x7fffe05afeb4,264656857,0,0x0,8
tick,0x7fffe05afeb4,264672846,0,0x0,8
tick,0x7fffe05afeb4,264688842,0,0x0,8
tick,0x7fffe05afeb4,264704777,0,0x0,8
tick,0x7fffe05afeb4,264720764,0,0x0,8
tick,0x7fffe05afeb4,264736845,0,0x0,8
tick,0x7fffe05afeb4,264752797,0,0x0,8
tick,0x7fffe05afeb4,264768870,0,0x0,8
tick,0x7fffe05afeb4,264784866,0,0x0,8
tick,0x7fffe05afeb4,264800866,0,0x0,8
tick,0x7fffe05afeb4,264816788,0,0x0,8
tick,0x7fffe05afeb4,264832798,0,0x0,8
tick,0x7fffe05afeb4,264848842,0,0x0,8
tick,0x7fffe05afeb4,264864841,0,0x0,8
tick,0x7fffe05afeb4,264880840,0,0x0,8
tick,0x7fffe05afeb4,264895784,0,0x0,8
tick,0x7fffe05afeb4,264910815,0,0x0,8
tick,0x7fffe05afeb4,264926805,0,0x0,8
tick,0x7fffe05afeb4,264942768,0,0x0,8
tick,0x7fffe05afeb4,264958817,0,0x0,8
tick,0x7fffe05afeb4,264974825,0,0x0,8
tick,0x7fffe05afeb4,264989782,0,0x0,8
tick,0x7fffe05afeb4,265005837,0,0x0,8
tick,0x7fffe05afeb4,265021848,0,0x0,8
tick,0x7fffe05afeb4,265037797,0,0x0,8
tick,0x7fffe05afeb4,265053778,0,0x0,8
tick,0x7fffe05afeb4,265069861,0,0x0,8
tick,0x7fffe05afeb4,265086038,0,0x0,8
tick,0x7fffe05afeb4,265101833,0,0x0,8
tick,0x7fffe05afeb4,265116770,0,0x0,8
tick,0x7fffe05afeb4,265132825,0,0x0,8
tick,0x7fffe05afeb4,265148775,0,0x0,8
tick,0x7fffe05afeb4,265165265,0,0x0,8
tick,0x7fffe05afeb4,265180869,0,0x0,8
tick,0x7fffe05afeb4,265196899,0,0x0,8
tick,0x7fffe05afeb4,265212929,0,0x0,8
tick,0x7fffe05afeb4,265228979,0,0x0,8
tick,0x7fffe05afeb4,265244824,0,0x0,8
tick,0x7fffe05afeb4,265259784,0,0x0,8
tick,0x7fffe05afeb4,265275777,0,0x0,8
tick,0x7fffe05afeb4,265291767,0,0x0,8
tick,0x7fffe05afeb4,265306856,0,0x0,8
tick,0x7fffe05afeb4,265322850,0,0x0,8
tick,0x7fffe05afeb4,265338868,0,0x0,8
tick,0x7fffe05afeb4,265354869,0,0x0,8
tick,0x7fffe05afeb4,265370760,0,0x0,8
tick,0x7fffe05afeb4,265386773,0,0x0,8
tick,0x7fffe05afeb4,265401846,0,0x0,8
tick,0x7fffe05afeb4,265417851,0,0x0,8
tick,0x7fffe05afeb4,265433769,0,0x0,8
tick,0x7fffe05afeb4,265449821,0,0x0,8
tick,0x7fffe05afeb4,265465901,0,0x0,8
tick,0x7fffe05afeb4,265481783,0,0x0,8
tick,0x7fffe05afeb4,265496848,0,0x0,8
tick,0x7fffe05afeb4,265512804,0,0x0,8
tick,0x7fffe05afeb4,265529171,0,0x0,8
tick,0x7fffe05afeb4,265544865,0,0x0,8
tick,0x7fffe05afeb4,265560799,0,0x0,8
tick,0x7fffe05afeb4,265576893,0,0x0,8
tick,0x7fffe05afeb4,265592883,0,0x0,8
tick,0x7fffe05afeb4,265607754,0,0x0,8
tick,0x7fffe05afeb4,265623763,0,0x0,8
tick,0x7fffe05afeb4,265639951,0,0x0,8
tick,0x7fffe05afeb4,265655984,0,0x0,8
tick,0x7fffe05afeb4,265670775,0,0x0,8
tick,0x7fffe05afeb4,265686983,0,0x0,8
tick,0x7fffe05afeb4,265702772,0,0x0,8
tick,0x7fffe05afeb4,265718850,0,0x0,8
tick,0x7fffe05afeb4,265733781,0,0x0,8
tick,0x7fffe05afeb4,265749888,0,0x0,8
tick,0x7fffe05afeb4,265765918,0,0x0,8
tick,0x7fffe05afeb4,265781997,0,0x0,8
tick,0x7fffe05afeb4,265796774,0,0x0,8
tick,0x7fffe05afeb4,265812914,0,0x0,8
tick,0x7fffe05afeb4,265828840,0,0x0,8
tick,0x7fffe05afeb4,265844904,0,0x0,8
tick,0x7fffe05afeb4,265861008,0,0x0,8
tick,0x7fffe05afeb4,265876865,0,0x0,8
tick,0x7fffe05afeb4,265892786,0,0x0,8
tick,0x7fffe05afeb4,265909040,0,0x0,8
tick,0x7fffe05afeb4,265924776,0,0x0,8
tick,0x7fffe05afeb4,265939841,0,0x0,8
tick,0x7fffe05afeb4,265955762,0,0x0,8
tick,0x7fffe05afeb4,265972188,0,0x0,8
tick,0x7fffe05afeb4,265987921,0,0x0,8
tick,0x7fffe05afeb4,266004149,0,0x0,8
tick,0x7fffe05afeb4,266019790,0,0x0,8
tick,0x7fffe05afeb4,266035969,0,0x0,8
tick,0x7fffe05afeb4,266050773,0,0x0,8
tick,0x7fffe05afeb4,266066828,0,0x0,8
tick,0x7fffe05afeb4,266082948,0,0x0,8
tick,0x7fffe05afeb4,266098954,0,0x0,8
tick,0x7fffe05afeb4,266114853,0,0x0,8
tick,0x7fffe05afeb4,266130948,0,0x0,8
tick,0x7fffe05afeb4,266145785,0,0x0,8
tick,0x7fffe05afeb4,266161829,0,0x0,8
tick,0x7fffe05afeb4,266177773,0,0x0,8
tick,0x7fffe05afeb4,266194158,0,0x0,8
tick,0x7fffe05afeb4,266209941,0,0x0,8
tick,0x7fffe05afeb4,266225969,0,0x0,8
tick,0x7fffe05afeb4,266240848,0,0x0,8
tick,0x7fffe05afeb4,266256797,0,0x0,8
tick,0x7fffe05afeb4,266272835,0,0x0,8
tick,0x7fffe05afeb4,266288844,0,0x0,8
tick,0x7fffe05afeb4,266304851,0,0x0,8
tick,0x7fffe05afeb4,266320947,0,0x0,8
tick,0x7fffe05afeb4,266336783,0,0x0,8
tick,0x7fffe05afeb4,266352937,0,0x0,8
tick,0x7fffe05afeb4,266368823,0,0x0,8
tick,0x7fffe05afeb4,266384132,0,0x0,8
tick,0x7fffe05afeb4,266399879,0,0x0,8
tick,0x7fffe05afeb4,266416158,0,0x0,8
tick,0x7fffe05afeb4,266431834,0,0x0,8
tick,0x7fffe05afeb4,266446766,0,0x0,8
tick,0x7fffe05afeb4,266462835,0,0x0,8
tick,0x7fffe05afeb4,266479112,0,0x0,8
tick,0x7fffe05afeb4,266494775,0,0x0,8
tick,0x7fffe05afeb4,266510860,0,0x0,8
tick,0x7fffe05afeb4,266526851,0,0x0,8
tick,0x7fffe05afeb4,266543036,0,0x0,8
tick,0x7fffe05afeb4,266558853,0,0x0,8
tick,0x7fffe05afeb4,266574916,0,0x0,8
tick,0x7fffe05afeb4,266590841,0,0x0,8
tick,0x7fffe05afeb4,266605863,0,0x0,8
tick,0x7fffe05afeb4,266621921,0,0x0,8
tick,0x7fffe05afeb4,266637962,0,0x0,8
tick,0x7fffe05afeb4,266653936,0,0x0,8
tick,0x7fffe05afeb4,266670147,0,0x0,8
tick,0x7fffe05afeb4,266685825,0,0x0,8
tick,0x7fffe05afeb4,266701811,0,0x0,8
tick,0x7fffe05afeb4,266717757,0,0x0,8
tick,0x7fffe05afeb4,266733921,0,0x0,8
tick,0x7fffe05afeb4,266749903,0,0x0,8
tick,0x7fffe05afeb4,266765820,0,0x0,8
tick,0x7fffe05afeb4,266781850,0,0x0,8
tick,0x7fffe05afeb4,266797929,0,0x0,8
tick,0x7fffe05afeb4,266813799,0,0x0,8
tick,0x7fffe05afeb4,266829812,0,0x0,8
tick,0x7fffe05afeb4,266845857,0,0x0,8
tick,0x7fffe05afeb4,266861969,0,0x0,8
tick,0x7fffe05afeb4,266877858,0,0x0,8
tick,0x7fffe05afeb4,266893853,0,0x0,8
tick,0x7fffe05afeb4,266909897,0,0x0,8
tick,0x7fffe05afeb4,266926067,0,0x0,8
tick,0x7fffe05afeb4,266941773,0,0x0,8
tick,0x7fffe05afeb4,266956772,0,0x0,8
tick,0x7fffe05afeb4,266972930,0,0x0,8
tick,0x7fffe05afeb4,266989097,0,0x0,8
tick,0x7fffe05afeb4,267004834,0,0x0,8
tick,0x7fffe05afeb4,267019914,0,0x0,8
tick,0x7fffe05afeb4,267035998,0,0x0,8
tick,0x7fffe05afeb4,267050856,0,0x0,8
tick,0x7fffe05afeb4,267066814,0,0x0,8
tick,0x7fffe05afeb4,267083241,0,0x0,8
tick,0x7fffe05afeb4,267098901,0,0x0,8
tick,0x7fffe05afeb4,267115147,0,0x0,8
tick,0x7fffe05afeb4,267130816,0,0x0,8
tick,0x7fffe05afeb4,267145788,0,0x0,8
tick,0x7fffe05afeb4,267161759,0,0x0,8
tick,0x7fffe05afeb4,267177954,0,0x0,8
tick,0x7fffe05afeb4,267193960,0,0x0,8
tick,0x7fffe05afeb4,267209929,0,0x0,8
tick,0x7fffe05afeb4,267225875,0,0x0,8
tick,0x7fffe05afeb4,267241874,0,0x0,8
tick,0x7fffe05afeb4,267257829,0,0x0,8
tick,0x7fffe05afeb4,267273886,0,0x0,8
tick,0x7fffe05afeb4,267290028,0,0x0,8
tick,0x7fffe05afeb4,267306030,0,0x0,8
tick,0x7fffe05afeb4,267322295,0,0x0,8
tick,0x7fffe05afeb4,267336941,0,0x0,8
tick,0x7fffe05afeb4,267353516,0,0x0,8
tick,0x7fffe05afeb4,267367878,0,0x0,8
tick,0x7fffe05afeb4,267382773,0,0x0,8
tick,0x7fffe05afeb4,267397855,0,0x0,8
tick,0x7fffe05afeb4,267413822,0,0x0,8
tick,0x7fffe05afeb4,267430024,0,0x0,8
tick,0x7fffe05afeb4,267446374,0,0x0,8
tick,0x7fffe05afeb4,267460855,0,0x0,8
tick,0x7fffe05afeb4,267476870,0,0x0,8
tick,0x7fffe05afeb4,267492124,0,0x0,8
tick,0x7fffe05afeb4,267507760,0,0x0,8
tick,0x7fffe05afeb4,267523877,0,0x0,8
tick,0x7fffe05afeb4,267539848,0,0x0,8
tick,0x7fffe05afeb4,267555992,0,0x0,8
tick,0x7fffe05afeb4,267571797,0,0x0,8
tick,0x7fffe05afeb4,267587786,0,0x0,8
tick,0x7fffe05afeb4,267603853,0,0x0,8
tick,0x7fffe05afeb4,267619915,0,0x0,8
tick,0x7fffe05afeb4,267635833,0,0x0,8
tick,0x7fffe05afeb4,267651765,0,0x0,8
tick,0x7fffe05afeb4,267667852,0,0x0,8
tick,0x7fffe05afeb4,267683909,0,0x0,8
tick,0x7fffe05afeb4,267699791,0,0x0,8
tick,0x7fffe05afeb4,267714791,0,0x0,8
tick,0x7fffe05afeb4,267730903,0,0x0,8
tick,0x7fffe05afeb4,267746940,0,0x0,8
tick,0x7fffe05afeb4,267762877,0,0x0,8
tick,0x7fffe05afeb4,267779046,0,0x0,8
tick,0x7fffe05afeb4,267794882,0,0x0,8
tick,0x7fffe05afeb4,267810942,0,0x0,8
tick,0x7fffe05afeb4,267826769,0,0x0,8
tick,0x7fffe05afeb4,267842817,0,0x0,8
tick,0x7fffe05afeb4,267858887,0,0x0,8
tick,0x7fffe05afeb4,267874859,0,0x0,8
tick,0x7fffe05afeb4,267890803,0,0x0,8
tick,0x7fffe05afeb4,267906846,0,0x0,8
tick,0x7fffe05afeb4,267922754,0,0x0,8
tick,0x7fffe05afeb4,267938999,0,0x0,8
tick,0x7fffe05afeb4,267954769,0,0x0,8
tick,0x7fffe05afeb4,267970920,0,0x0,8
tick,0x7fffe05afeb4,267986908,0,0x0,8
tick,0x7fffe05afeb4,268003045,0,0x0,8
tick,0x7fffe05afeb4,268017851,0,0x0,8
tick,0x7fffe05afeb4,268032775,0,0x0,8
tick,0x7fffe05afeb4,268047781,0,0x0,8
tick,0x7fffe05afeb4,268063760,0,0x0,8
tick,0x7fffe05afeb4,268079806,0,0x0,8
tick,0x7fffe05afeb4,268095878,0,0x0,8
tick,0x7fffe05afeb4,268111928,0,0x0,8
tick,0x7fffe05afeb4,268127871,0,0x0,8
tick,0x7fffe05afeb4,268143832,0,0x0,8
tick,0x7fffe05afeb4,268159825,0,0x0,8
tick,0x7fffe05afeb4,268175951,0,0x0,8
tick,0x7fffe05afeb4,268191879,0,0x0,8
tick,0x7fffe05afeb4,268207861,0,0x0,8
tick,0x7fffe05afeb4,268223841,0,0x0,8
tick,0x7fffe05afeb4,268239877,0,0x0,8
tick,0x7fffe05afeb4,268255797,0,0x0,8
tick,0x7fffe05afeb4,268271839,0,0x0,8
tick,0x7fffe05afeb4,268288674,0,0x0,8
tick,0x7fffe05afeb4,268305896,0,0x0,8
tick,0x7fffe05afeb4,268319786,0,0x0,8
tick,0x7fffe05afeb4,268335838,0,0x0,8
tick,0x7fffe05afeb4,268350940,0,0x0,8
tick,0x7fffe05afeb4,268365770,0,0x0,8
tick,0x7fffe05afeb4,268380951,0,0x0,8
tick,0x7fffe05afeb4,268395812,0,0x0,8
tick,0x7fffe05afeb4,268411865,0,0x0,8
tick,0x7fffe05afeb4,268427784,0,0x0,8
tick,0x7fffe05afeb4,268443770,0,0x0,8
tick,0x7fffe05afeb4,268459807,0,0x0,8
tick,0x7fffe05afeb4,268475771,0,0x0,8
tick,0x7fffe05afeb4,268491775,0,0x0,8
tick,0x7fffe05afeb4,268506781,0,0x0,8
tick,0x7fffe05afeb4,268522783,0,0x0,8
tick,0x7fffe05afeb4,268538784,0,0x0,8
tick,0x7fffe05afeb4,268554760,0,0x0,8
tick,0x7fffe05afeb4,268570811,0,0x0,8
tick,0x7fffe05afeb4,268586777,0,0x0,8
tick,0x7fffe05afeb4,268602796,0,0x0,8
tick,0x7fffe05afeb4,268618803,0,0x0,8
tick,0x7fffe05afeb4,268635085,0,0x0,8
tick,0x7fffe05afeb4,268650792,0,0x0,8
tick,0x7fffe05afeb4,268666776,0,0x0,8
tick,0x7fffe05afeb4,268682782,0,0x0,8
tick,0x7fffe05afeb4,268698851,0,0x0,8
tick,0x7fffe05afeb4,268714844,0,0x0,8
tick,0x7fffe05afeb4,268730856,0,0x0,8
tick,0x7fffe05afeb4,268746919,0,0x0,8
tick,0x7fffe05afeb4,268762754,0,0x0,8
tick,0x7fffe05afeb4,268777810,0,0x0,8
tick,0x7fffe05afeb4,268792762,0,0x0,8
tick,0x7fffe05afeb4,268808851,0,0x0,8
tick,0x7fffe05afeb4,268824864,0,0x0,8
tick,0x7fffe05afeb4,268840768,0,0x0,8
tick,0x7fffe05afeb4,268856864,0,0x0,8
tick,0x7fffe05afeb4,268872844,0,0x0,8
tick,0x7fffe05afeb4,268888891,0,0x0,8
tick,0x7fffe05afeb4,268904771,0,0x0,8
tick,0x7fffe05afeb4,268920778,0,0x0,8
tick,0x7fffe05afeb4,268936842,0,0x0,8
tick,0x7fffe05afeb4,268952804,0,0x0,8
tick,0x7fffe05afeb4,268968831,0,0x0,8
tick,0x7fffe05afeb4,268984784,0,0x0,8
tick,0x7fffe05afeb4,269000764,0,0x0,8
tick,0x7fffe05afeb4,269016787,0,0x0,8
tick,0x7fffe05afeb4,269032766,0,0x0,8
tick,0x7fffe05afeb4,269047794,0,0x0,8
tick,0x7fffe05afeb4,269063773,0,0x0,8
tick,0x7fffe05afeb4,269079844,0,0x0,8
tick,0x7fffe05afeb4,269095856,0,0x0,8
tick,0x7fffe05afeb4,269111812,0,0x0,8
tick,0x7fffe05afeb4,269127792,0,0x0,8
tick,0x7fffe05afeb4,269142850,0,0x0,8
tick,0x7fffe05afeb4,269158774,0,0x0,8
tick,0x7fffe05afeb4,269173772,0,0x0,8
tick,0x7fffe05afeb4,269189810,0,0x0,8
tick,0x7fffe05afeb4,269204768,0,0x0,8
tick,0x7fffe05afeb4,269220784,0,0x0,8
tick,0x7fffe05afeb4,269236772,0,0x0,8
tick,0x7fffe05afeb4,269252768,0,0x0,8
tick,0x7fffe05afeb4,269268779,0,0x0,8
tick,0x7fffe05afeb4,269284759,0,0x0,8
tick,0x7fffe05afeb4,269300902,0,0x0,8
tick,0x7fffe05afeb4,269315768,0,0x0,8
tick,0x7fffe05afeb4,269331799,0,0x0,8
tick,0x7fffe05afeb4,269347777,0,0x0,8
tick,0x7fffe05afeb4,269363944,0,0x0,8
tick,0x7fffe05afeb4,269379792,0,0x0,8
tick,0x7fffe05afeb4,269395786,0,0x0,8
tick,0x7fffe05afeb4,269411792,0,0x0,8
tick,0x7fffe05afeb4,269427822,0,0x0,8
tick,0x7fffe05afeb4,269443781,0,0x0,8
tick,0x7fffe05afeb4,269458834,0,0x0,8
tick,0x7fffe05afeb4,269474781,0,0x0,8
tick,0x7fffe05afeb4,269490798,0,0x0,8
tick,0x7fffe05afeb4,269505785,0,0x0,8
tick,0x7fffe05afeb4,269520838,0,0x0,8
tick,0x7fffe05afeb4,269536760,0,0x0,8
tick,0x7fffe05afeb4,269552907,0,0x0,8
tick,0x7fffe05afeb4,269568768,0,0x0,8
tick,0x7fffe05afeb4,269584772,0,0x0,8
tick,0x7fffe05afeb4,269600768,0,0x0,8
tick,0x7fffe05afeb4,269616775,0,0x0,8
tick,0x7fffe05afeb4,269632842,0,0x0,8
tick,0x7fffe05afeb4,269648850,0,0x0,8
tick,0x7fffe05afeb4,269664799,0,0x0,8
tick,0x7fffe05afeb4,269679842,0,0x0,8
tick,0x7fffe05afeb4,269695925,0,0x0,8
tick,0x7fffe05afeb4,269711775,0,0x0,8
tick,0x7fffe05afeb4,269727818,0,0x0,8
tick,0x7fffe05afeb4,269742859,0,0x0,8
tick,0x7fffe05afeb4,269758858,0,0x0,8
tick,0x7fffe05afeb4,269773865,0,0x0,8
tick,0x7fffe05afeb4,269789956,0,0x0,8
tick,0x7fffe05afeb4,269805795,0,0x0,8
tick,0x7fffe05afeb4,269821929,0,0x0,8
tick,0x7fffe05afeb4,269837854,0,0x0,8
tick,0x7fffe05afeb4,269853861,0,0x0,8
tick,0x7fffe05afeb4,269869875,0,0x0,8
tick,0x7fffe05afeb4,269885773,0,0x0,8
tick,0x7fffe05afeb4,269901795,0,0x0,8
tick,0x7fffe05afeb4,269917773,0,0x0,8
tick,0x7fffe05afeb4,269933855,0,0x0,8
tick,0x7fffe05afeb4,269949873,0,0x0,8
tick,0x7fffe05afeb4,269965860,0,0x0,8
tick,0x7fffe05afeb4,269981775,0,0x0,8
tick,0x7fffe05afeb4,269997848,0,0x0,8
tick,0x7fffe05afeb4,270013765,0,0x0,8
tick,0x7fffe05afeb4,270029784,0,0x0,8
tick,0x7fffe05afeb4,270044845,0,0x0,8
tick,0x7fffe05afeb4,270060764,0,0x0,8
tick,0x7fffe05afeb4,270076872,0,0x0,8
tick,0x7fffe05afeb4,270092863,0,0x0,8
tick,0x7fffe05afeb4,270108844,0,0x0,8
tick,0x7fffe05afeb4,270124879,0,0x0,8
tick,0x7fffe05afeb4,270139814,0,0x0,8
tick,0x7fffe05afeb4,270155924,0,0x0,8
tick,0x7fffe05afeb4,270171848,0,0x0,8
tick,0x7fffe05afeb4,270187891,0,0x0,8
tick,0x7fffe05afeb4,270203770,0,0x0,8
tick,0x7fffe05afeb4,270219790,0,0x0,8
tick,0x7fffe05afeb4,270234768,0,0x0,8
tick,0x7fffe05afeb4,270250796,0,0x0,8
tick,0x7fffe05afeb4,270266863,0,0x0,8
tick,0x7fffe05afeb4,270282783,0,0x0,8
tick,0x7fffe05afeb4,270298933,0,0x0,8
tick,0x7fffe05afeb4,270314860,0,0x0,8
tick,0x7fffe05afeb4,270330833,0,0x0,8
tick,0x7fffe05afeb4,270346772,0,0x0,8
tick,0x7fffe05afeb4,270362799,0,0x0,8
tick,0x7fffe05afeb4,270378857,0,0x0,8
tick,0x7fffe05afeb4,270394866,0,0x0,8
tick,0x7fffe05afeb4,270410776,0,0x0,8
tick,0x7fffe05afeb4,270426846,0,0x0,8
tick,0x7fffe05afeb4,270442762,0,0x0,8
tick,0x7fffe05afeb4,270458771,0,0x0,8
tick,0x7fffe05afeb4,270474767,0,0x0,8
tick,0x7fffe05afeb4,270490854,0,0x0,8
tick,0x7fffe05afeb4,270506856,0,0x0,8
tick,0x7fffe05afeb4,270522936,0,0x0,8
tick,0x7fffe05afeb4,270538770,0,0x0,8
tick,0x7fffe05afeb4,270554840,0,0x0,8
tick,0x7fffe05afeb4,270570783,0,0x0,8
tick,0x7fffe05afeb4,270586779,0,0x0,8
tick,0x7fffe05afeb4,270602780,0,0x0,8
tick,0x7fffe05afeb4,270618894,0,0x0,8
tick,0x7fffe05afeb4,270634794,0,0x0,8
tick,0x7fffe05afeb4,270650868,0,0x0,8
tick,0x7fffe05afeb4,270666796,0,0x0,8
tick,0x7fffe05afeb4,270682775,0,0x0,8
tick,0x7fffe05afeb4,270698767,0,0x0,8
tick,0x7fffe05afeb4,270714840,0,0x0,8
tick,0x7fffe05afeb4,270730777,0,0x0,8
tick,0x7fffe05afeb4,270746861,0,0x0,8
tick,0x7fffe05afeb4,270762853,0,0x0,8
tick,0x7fffe05afeb4,270778911,0,0x0,8
tick,0x7fffe05afeb4,270794807,0,0x0,8
tick,0x7fffe05afeb4,270810767,0,0x0,8
tick,0x7fffe05afeb4,270826770,0,0x0,8
tick,0x7fffe05afeb4,270842814,0,0x0,8
tick,0x7fffe05afeb4,270858774,0,0x0,8
tick,0x7fffe05afeb4,270874850,0,0x0,8
tick,0x7fffe05afeb4,270890770,0,0x0,8
tick,0x7fffe05afeb4,270906769,0,0x0,8
tick,0x7fffe05afeb4,270922799,0,0x0,8
tick,0x7fffe05afeb4,270938861,0,0x0,8
tick,0x7fffe05afeb4,270954796,0,0x0,8
tick,0x7fffe05afeb4,270970775,0,0x0,8
tick,0x7fffe05afeb4,270986878,0,0x0,8
tick,0x7fffe05afeb4,271002767,0,0x0,8
tick,0x7fffe05afeb4,271018769,0,0x0,8
tick,0x7fffe05afeb4,271034771,0,0x0,8
tick,0x7fffe05afeb4,271050854,0,0x0,8
tick,0x7fffe05afeb4,271066872,0,0x0,8
tick,0x7fffe05afeb4,271082863,0,0x0,8
tick,0x7fffe05afeb4,271097850,0,0x0,8
tick,0x7fffe05afeb4,271113763,0,0x0,8
tick,0x7fffe05afeb4,271128785,0,0x0,8
tick,0x7fffe05afeb4,271144856,0,0x0,8
tick,0x7fffe05afeb4,271159957,0,0x0,8
tick,0x7fffe05afeb4,271175870,0,0x0,8
tick,0x7fffe05afeb4,271191852,0,0x0,8
tick,0x7fffe05afeb4,271207869,0,0x0,8
tick,0x7fffe05afeb4,271223833,0,0x0,8
tick,0x7fffe05afeb4,271239820,0,0x0,8
tick,0x7fffe05afeb4,271255830,0,0x0,8
tick,0x7fffe05afeb4,271270807,0,0x0,8
tick,0x7fffe05afeb4,271286893,0,0x0,8
tick,0x7fffe05afeb4,271302835,0,0x0,8
tick,0x7fffe05afeb4,271317776,0,0x0,8
tick,0x7fffe05afeb4,271333803,0,0x0,8
tick,0x7fffe05afeb4,271349801,0,0x0,8
tick,0x7fffe05afeb4,271365829,0,0x0,8
tick,0x7fffe05afeb4,271381855,0,0x0,8
tick,0x7fffe05afeb4,271397870,0,0x0,8
tick,0x7fffe05afeb4,271413762,0,0x0,8
tick,0x7fffe05afeb4,271429817,0,0x0,8
tick,0x7fffe05afeb4,271445857,0,0x0,8
tick,0x7fffe05afeb4,271461788,0,0x0,8
tick,0x7fffe05afeb4,271476779,0,0x0,8
tick,0x7fffe05afeb4,271491779,0,0x0,8
tick,0x7fffe05afeb4,271506874,0,0x0,8
tick,0x7fffe05afeb4,271522787,0,0x0,8
tick,0x7fffe05afeb4,271538788,0,0x0,8
tick,0x7fffe05afeb4,271554783,0,0x0,8
tick,0x7fffe05afeb4,271570766,0,0x0,8
tick,0x7fffe05afeb4,271585775,0,0x0,8
tick,0x7fffe05afeb4,271601755,0,0x0,8
tick,0x7fffe05afeb4,271617862,0,0x0,8
tick,0x7fffe05afeb4,271633813,0,0x0,8
tick,0x7fffe05afeb4,271649885,0,0x0,8
tick,0x7fffe05afeb4,271665846,0,0x0,8
tick,0x7fffe05afeb4,271681778,0,0x0,8
tick,0x7fffe05afeb4,271697779,0,0x0,8
tick,0x7fffe05afeb4,271713810,0,0x0,8
tick,0x7fffe05afeb4,271729900,0,0x0,8
tick,0x7fffe05afeb4,271745852,0,0x0,8
tick,0x7fffe05afeb4,271761764,0,0x0,8
tick,0x7fffe05afeb4,271777848,0,0x0,8
tick,0x7fffe05afeb4,271793814,0,0x0,8
tick,0x7fffe05afeb4,271809927,0,0x0,8
tick,0x7fffe05afeb4,271825867,0,0x0,8
tick,0x7fffe05afeb4,271841781,0,0x0,8
tick,0x7fffe05afeb4,271856800,0,0x0,8
tick,0x7fffe05afeb4,271872763,0,0x0,8
tick,0x7fffe05afeb4,271888777,0,0x0,8
tick,0x7fffe05afeb4,271904782,0,0x0,8
tick,0x7fffe05afeb4,271920763,0,0x0,8
tick,0x7fffe05afeb4,271936790,0,0x0,8
tick,0x7fffe05afeb4,271952782,0,0x0,8
tick,0x7fffe05afeb4,271968801,0,0x0,8
tick,0x7fffe05afeb4,271984777,0,0x0,8
tick,0x7fffe05afeb4,272000840,0,0x0,8
tick,0x7fffe05afeb4,272016767,0,0x0,8
tick,0x7fffe05afeb4,272031770,0,0x0,8
tick,0x7fffe05afeb4,272047772,0,0x0,8
tick,0x7fffe05afeb4,272063777,0,0x0,8
tick,0x7fffe05afeb4,272079787,0,0x0,8
tick,0x7fffe05afeb4,272095807,0,0x0,8
tick,0x7fffe05afeb4,272111907,0,0x0,8
tick,0x7fffe05afeb4,272127793,0,0x0,8
tick,0x7fffe05afeb4,272143790,0,0x0,8
tick,0x7fffe05afeb4,272159912,0,0x0,8
tick,0x7fffe05afeb4,272174941,0,0x0,8
tick,0x7fffe05afeb4,272190846,0,0x0,8
tick,0x7fffe05afeb4,272206850,0,0x0,8
tick,0x7fffe05afeb4,272222859,0,0x0,8
tick,0x7fffe05afeb4,272238776,0,0x0,8
tick,0x7fffe05afeb4,272254762,0,0x0,8
tick,0x7fffe05afeb4,272270788,0,0x0,8
tick,0x7fffe05afeb4,272286879,0,0x0,8
tick,0x7fffe05afeb4,272302847,0,0x0,8
tick,0x7fffe05afeb4,272317853,0,0x0,8
tick,0x7fffe05afeb4,272333776,0,0x0,8
tick,0x7fffe05afeb4,272349881,0,0x0,8
tick,0x7fffe05afeb4,272365791,0,0x0,8
tick,0x7fffe05afeb4,272381860,0,0x0,8
tick,0x7fffe05afeb4,272397778,0,0x0,8
tick,0x7fffe05afeb4,272413784,0,0x0,8
tick,0x7fffe05afeb4,272428868,0,0x0,8
tick,0x7fffe05afeb4,272444772,0,0x0,8
tick,0x7fffe05afeb4,272460768,0,0x0,8
tick,0x7fffe05afeb4,272476769,0,0x0,8
tick,0x7fffe05afeb4,272492902,0,0x0,8
tick,0x7fffe05afeb4,272509606,0,0x0,8
tick,0x7fffe05afeb4,272523841,0,0x0,8
tick,0x7fffe05afeb4,272540509,0,0x0,8
tick,0x7fffe05afeb4,272555813,0,0x0,8
tick,0x7fffe05afeb4,272571976,0,0x0,8
tick,0x7fffe05afeb4,272587846,0,0x0,8
tick,0x7fffe05afeb4,272604420,0,0x0,8
tick,0x7fffe05afeb4,272619892,0,0x0,8
tick,0x7fffe05afeb4,272635925,0,0x0,8
tick,0x7fffe05afeb4,272651909,0,0x0,8
tick,0x7fffe05afeb4,272666837,0,0x0,8
tick,0x7fffe05afeb4,272682798,0,0x0,8
tick,0x7fffe05afeb4,272698902,0,0x0,8
tick,0x7fffe05afeb4,272714854,0,0x0,8
tick,0x7fffe05afeb4,272730782,0,0x0,8
tick,0x7fffe05afeb4,272746924,0,0x0,8
tick,0x7fffe05afeb4,272762778,0,0x0,8
tick,0x7fffe05afeb4,272778813,0,0x0,8
tick,0x7fffe05afeb4,272794778,0,0x0,8
tick,0x7fffe05afeb4,272810813,0,0x0,8
tick,0x7fffe05afeb4,272826867,0,0x0,8
tick,0x7fffe05afeb4,272842843,0,0x0,8
tick,0x7fffe05afeb4,272858790,0,0x0,8
tick,0x7fffe05afeb4,272874762,0,0x0,8
tick,0x7fffe05afeb4,272890824,0,0x0,8
tick,0x7fffe05afeb4,272906757,0,0x0,8
tick,0x7fffe05afeb4,272922794,0,0x0,8
tick,0x7fffe05afeb4,272938882,0,0x0,8
tick,0x7fffe05afeb4,272954772,0,0x0,8
tick,0x7fffe05afeb4,272970767,0,0x0,8
tick,0x7fffe05afeb4,272986775,0,0x0,8
tick,0x7fffe05afeb4,273002776,0,0x0,8
tick,0x7fffe05afeb4,273017825,0,0x0,8
tick,0x7fffe05afeb4,273033818,0,0x0,8
tick,0x7fffe05afeb4,273050009,0,0x0,8
tick,0x7fffe05afeb4,273065845,0,0x0,8
tick,0x7fffe05afeb4,273081823,0,0x0,8
tick,0x7fffe05afeb4,273097774,0,0x0,8
tick,0x7fffe05afeb4,273113853,0,0x0,8
tick,0x7fffe05afeb4,273129799,0,0x0,8
tick,0x7fffe05afeb4,273146004,0,0x0,8
tick,0x7fffe05afeb4,273161918,0,0x0,8
tick,0x7fffe05afeb4,273177936,0,0x0,8
tick,0x7fffe05afeb4,273193772,0,0x0,8
tick,0x7fffe05afeb4,273209888,0,0x0,8
tick,0x7fffe05afeb4,273225777,0,0x0,8
tick,0x7fffe05afeb4,273242038,0,0x0,8
tick,0x7fffe05afeb4,273257807,0,0x0,8
tick,0x7fffe05afeb4,273273855,0,0x0,8
tick,0x7fffe05afeb4,273288772,0,0x0,8
tick,0x7fffe05afeb4,273303907,0,0x0,8
tick,0x7fffe05afeb4,273319789,0,0x0,8
tick,0x7fffe05afeb4,273334811,0,0x0,8
tick,0x7fffe05afeb4,273350792,0,0x0,8
tick,0x7fffe05afeb4,273365823,0,0x0,8
tick,0x7fffe05afeb4,273381847,0,0x0,8
tick,0x7fffe05afeb4,273397875,0,0x0,8
tick,0x7fffe05afeb4,273413842,0,0x0,8
tick,0x7fffe05afeb4,273429809,0,0x0,8
tick,0x7fffe05afeb4,273445798,0,0x0,8
tick,0x7fffe05afeb4,273461811,0,0x0,8
tick,0x7fffe05afeb4,273477774,0,0x0,8
tick,0x7fffe05afeb4,273493863,0,0x0,8
tick,0x7fffe05afeb4,273509968,0,0x0,8
tick,0x7fffe05afeb4,273525777,0,0x0,8
tick,0x7fffe05afeb4,273541772,0,0x0,8
tick,0x7fffe05afeb4,273556800,0,0x0,8
tick,0x7fffe05afeb4,273572758,0,0x0,8
tick,0x7fffe05afeb4,273588855,0,0x0,8
tick,0x7fffe05afeb4,273604868,0,0x0,8
tick,0x7fffe05afeb4,273621003,0,0x0,8
tick,0x7fffe05afeb4,273635762,0,0x0,8
tick,0x7fffe05afeb4,273650774,0,0x0,8
tick,0x7fffe05afeb4,273665888,0,0x0,8
tick,0x7fffe05afeb4,273681920,0,0x0,8
tick,0x7fffe05afeb4,273697884,0,0x0,8
tick,0x7fffe05afeb4,273713774,0,0x0,8
tick,0x7fffe05afeb4,273728783,0,0x0,8
tick,0x7fffe05afeb4,273744845,0,0x0,8
tick,0x7fffe05afeb4,273760767,0,0x0,8
tick,0x7fffe05afeb4,273776772,0,0x0,8
tick,0x7fffe05afeb4,273792857,0,0x0,8
tick,0x7fffe05afeb4,273808778,0,0x0,8
tick,0x7fffe05afeb4,273824876,0,0x0,8
tick,0x7fffe05afeb4,273840896,0,0x0,8
tick,0x7fffe05afeb4,273856823,0,0x0,8
tick,0x7fffe05afeb4,273872801,0,0x0,8
tick,0x7fffe05afeb4,273888774,0,0x0,8
tick,0x7fffe05afeb4,273904851,0,0x0,8
tick,0x7fffe05afeb4,273920771,0,0x0,8
tick,0x7fffe05afeb4,273936876,0,0x0,8
tick,0x7fffe05afeb4,273952766,0,0x0,8
tick,0x7fffe05afeb4,273967849,0,0x0,8
tick,0x7fffe05afeb4,273983771,0,0x0,8
tick,0x7fffe05afeb4,273999767,0,0x0,8
tick,0x7fffe05afeb4,274015770,0,0x0,8
tick,0x7fffe05afeb4,274031795,0,0x0,8
tick,0x7fffe05afeb4,274047876,0,0x0,8
tick,0x7fffe05afeb4,274065887,0,0x0,8
tick,0x7fffe05afeb4,274079898,0,0x0,8
tick,0x7fffe05afeb4,274094886,0,0x0,8
tick,0x7fffe05afeb4,274110795,0,0x0,8
tick,0x7fffe05afeb4,274125840,0,0x0,8
tick,0x7fffe05afeb4,274141851,0,0x0,8
tick,0x7fffe05afeb4,274156962,0,0x0,8
tick,0x7fffe05afeb4,274172776,0,0x0,8
tick,0x7fffe05afeb4,274188962,0,0x0,8
tick,0x7fffe05afeb4,274204768,0,0x0,8
tick,0x7fffe05afeb4,274219794,0,0x0,8
tick,0x7fffe05afeb4,274235854,0,0x0,8
tick,0x7fffe05afeb4,274251833,0,0x0,8
tick,0x7fffe05afeb4,274267803,0,0x0,8
tick,0x7fffe05afeb4,274283856,0,0x0,8
tick,0x7fffe05afeb4,274299836,0,0x0,8
tick,0x7fffe05afeb4,274314894,0,0x0,8
tick,0x7fffe05afeb4,274361259,0,0x0,8
tick,0x7fffe05afeb4,274361895,0,0x0,8
tick,0x7fffe05afeb4,274378148,0,0x0,8
tick,0x7fffe05afeb4,274399011,0,0x0,8
tick,0x7fffe05afeb4,274409449,0,0x0,8
tick,0x7fffe05afeb4,274423823,0,0x0,8
tick,0x7fffe05afeb4,274439834,0,0x0,8
tick,0x7fffe05afeb4,274455844,0,0x0,8
tick,0x7fffe05afeb4,274471927,0,0x0,8
tick,0x7fffe05afeb4,274487865,0,0x0,8
tick,0x7fffe05afeb4,274503753,0,0x0,8
tick,0x7fffe05afeb4,274518775,0,0x0,8
tick,0x7fffe05afeb4,274534775,0,0x0,8
tick,0x7fffe05afeb4,274550771,0,0x0,8
tick,0x7fffe05afeb4,274566840,0,0x0,8
tick,0x7fffe05afeb4,274582856,0,0x0,8
tick,0x7fffe05afeb4,274598851,0,0x0,8
tick,0x7fffe05afeb4,274614783,0,0x0,8
tick,0x7fffe05afeb4,274630776,0,0x0,8
tick,0x7fffe05afeb4,274645777,0,0x0,8
tick,0x7fffe05afeb4,274661756,0,0x0,8
tick,0x7fffe05afeb4,274677851,0,0x0,8
tick,0x7fffe05afeb4,274693843,0,0x0,8
tick,0x7fffe05afeb4,274709943,0,0x0,8
tick,0x7fffe05afeb4,274725813,0,0x0,8
tick,0x7fffe05afeb4,274741771,0,0x0,8
tick,0x7fffe05afeb4,274757777,0,0x0,8
tick,0x7fffe05afeb4,274773833,0,0x0,8
tick,0x7fffe05afeb4,274789808,0,0x0,8
tick,0x7fffe05afeb4,274805853,0,0x0,8
tick,0x7fffe05afeb4,274821794,0,0x0,8
tick,0x7fffe05afeb4,274837868,0,0x0,8
tick,0x7fffe05afeb4,274853775,0,0x0,8
tick,0x7fffe05afeb4,274869861,0,0x0,8
tick,0x7fffe05afeb4,274885767,0,0x0,8
tick,0x7fffe05afeb4,274901841,0,0x0,8
tick,0x7fffe05afeb4,274918310,0,0x0,8
tick,0x7fffe05afeb4,274934009,0,0x0,8
tick,0x7fffe05afeb4,274949944,0,0x0,8
tick,0x7fffe05afeb4,274965908,0,0x0,8
tick,0x7fffe05afeb4,274981038,0,0x0,8
tick,0x7fffe05afeb4,274995823,0,0x0,8
tick,0x7fffe05afeb4,275011848,0,0x0,8
tick,0x7fffe05afeb4,275027857,0,0x0,8
tick,0x7fffe05afeb4,275043883,0,0x0,8
tick,0x7fffe05afeb4,275060078,0,0x0,8
tick,0x7fffe05afeb4,275075815,0,0x0,8
tick,0x7fffe05afeb4,275091785,0,0x0,8
tick,0x7fffe05afeb4,275106766,0,0x0,8
tick,0x7fffe05afeb4,275122853,0,0x0,8
tick,0x7fffe05afeb4,275138890,0,0x0,8
tick,0x7fffe05afeb4,275154995,0,0x0,8
tick,0x7fffe05afeb4,275170908,0,0x0,8
tick,0x7fffe05afeb4,275195126,0,0x0,8
tick,0x7fffe05afeb4,275217825,0,0x0,8
tick,0x7fffe05afeb4,275218888,0,0x0,8
tick,0x7fffe05afeb4,275235028,0,0x0,8
tick,0x7fffe05afeb4,275249925,0,0x0,8
tick,0x7fffe05afeb4,275265925,0,0x0,8
tick,0x7fffe05afeb4,275281777,0,0x0,8
tick,0x7fffe05afeb4,275296777,0,0x0,8
tick,0x7fffe05afeb4,275312766,0,0x0,8
tick,0x7fffe05afeb4,275328823,0,0x0,8
tick,0x7fffe05afeb4,275344797,0,0x0,8
tick,0x7fffe05afeb4,275360789,0,0x0,8
tick,0x7fffe05afeb4,275376815,0,0x0,8
tick,0x7fffe05afeb4,275392778,0,0x0,8
tick,0x7fffe05afeb4,275407817,0,0x0,8
tick,0x7fffe05afeb4,275423785,0,0x0,8
tick,0x7fffe05afeb4,275439830,0,0x0,8
tick,0x7fffe05afeb4,275454773,0,0x0,8
tick,0x7fffe05afeb4,275470771,0,0x0,8
tick,0x7fffe05afeb4,275486877,0,0x0,8
tick,0x7fffe05afeb4,275502784,0,0x0,8
tick,0x7fffe05afeb4,275517866,0,0x0,8
tick,0x7fffe05afeb4,275533783,0,0x0,8
tick,0x7fffe05afeb4,275549907,0,0x0,8
tick,0x7fffe05afeb4,275565795,0,0x0,8
tick,0x7fffe05afeb4,275581762,0,0x0,8
tick,0x7fffe05afeb4,275597791,0,0x0,8
tick,0x7fffe05afeb4,275613772,0,0x0,8
tick,0x7fffe05afeb4,275629786,0,0x0,8
tick,0x7fffe05afeb4,275645791,0,0x0,8
tick,0x7fffe05afeb4,275661775,0,0x0,8
tick,0x7fffe05afeb4,275677770,0,0x0,8
tick,0x7fffe05afeb4,275693768,0,0x0,8
tick,0x7fffe05afeb4,275709877,0,0x0,8
tick,0x7fffe05afeb4,275725847,0,0x0,8
tick,0x7fffe05afeb4,275740781,0,0x0,8
tick,0x7fffe05afeb4,275756843,0,0x0,8
tick,0x7fffe05afeb4,275772843,0,0x0,8
tick,0x7fffe05afeb4,275788767,0,0x0,8
tick,0x7fffe05afeb4,275804852,0,0x0,8
tick,0x7fffe05afeb4,275820789,0,0x0,8
tick,0x7fffe05afeb4,275836818,0,0x0,8
tick,0x7fffe05afeb4,275852925,0,0x0,8
tick,0x7fffe05afeb4,275868860,0,0x0,8
tick,0x7fffe05afeb4,275884811,0,0x0,8
tick,0x7fffe05afeb4,275900854,0,0x0,8
tick,0x7fffe05afeb4,275916772,0,0x0,8
tick,0x7fffe05afeb4,275932880,0,0x0,8
tick,0x7fffe05afeb4,275947767,0,0x0,8
tick,0x7fffe05afeb4,275963769,0,0x0,8
tick,0x7fffe05afeb4,275979789,0,0x0,8
tick,0x7fffe05afeb4,275995777,0,0x0,8
tick,0x7fffe05afeb4,276011844,0,0x0,8
tick,0x7fffe05afeb4,276026860,0,0x0,8
tick,0x7fffe05afeb4,276042816,0,0x0,8
tick,0x7fffe05afeb4,276058770,0,0x0,8
tick,0x7fffe05afeb4,276074781,0,0x0,8
tick,0x7fffe05afeb4,276090773,0,0x0,8
tick,0x7fffe05afeb4,276106849,0,0x0,8
tick,0x7fffe05afeb4,276122847,0,0x0,8
tick,0x7fffe05afeb4,276138781,0,0x0,8
tick,0x7fffe05afeb4,276154945,0,0x0,8
tick,0x7fffe05afeb4,276170782,0,0x0,8
tick,0x7fffe05afeb4,276186799,0,0x0,8
tick,0x7fffe05afeb4,276202844,0,0x0,8
tick,0x7fffe05afeb4,276217899,0,0x0,8
tick,0x7fffe05afeb4,276233861,0,0x0,8
tick,0x7fffe05afeb4,276249858,0,0x0,8
tick,0x7fffe05afeb4,276265799,0,0x0,8
tick,0x7fffe05afeb4,276281808,0,0x0,8
tick,0x7fffe05afeb4,276297796,0,0x0,8
tick,0x7fffe05afeb4,276313848,0,0x0,8
tick,0x7fffe05afeb4,276329810,0,0x0,8
tick,0x7fffe05afeb4,276345793,0,0x0,8
tick,0x7fffe05afeb4,276361872,0,0x0,8
tick,0x7fffe05afeb4,276377851,0,0x0,8
tick,0x7fffe05afeb4,276393771,0,0x0,8
tick,0x7fffe05afeb4,276409798,0,0x0,8
tick,0x7fffe05afeb4,276425850,0,0x0,8
tick,0x7fffe05afeb4,276441786,0,0x0,8
tick,0x7fffe05afeb4,276457855,0,0x0,8
tick,0x7fffe05afeb4,276473853,0,0x0,8
tick,0x7fffe05afeb4,276489839,0,0x0,8
tick,0x7fffe05afeb4,276505801,0,0x0,8
tick,0x7fffe05afeb4,276521763,0,0x0,8
tick,0x7fffe05afeb4,276537850,0,0x0,8
tick,0x7fffe05afeb4,276553798,0,0x0,8
tick,0x7fffe05afeb4,276569848,0,0x0,8
tick,0x7fffe05afeb4,276585764,0,0x0,8
tick,0x7fffe05afeb4,276600867,0,0x0,8
tick,0x7fffe05afeb4,276616782,0,0x0,8
tick,0x7fffe05afeb4,276632777,0,0x0,8
tick,0x7fffe05afeb4,276648860,0,0x0,8
tick,0x7fffe05afeb4,276664779,0,0x0,8
tick,0x7fffe05afeb4,276679815,0,0x0,8
tick,0x7fffe05afeb4,276695822,0,0x0,8
tick,0x7fffe05afeb4,276711793,0,0x0,8
tick,0x7fffe05afeb4,276727814,0,0x0,8
tick,0x7fffe05afeb4,276743858,0,0x0,8
tick,0x7fffe05afeb4,276759781,0,0x0,8
tick,0x7fffe05afeb4,276775781,0,0x0,8
tick,0x7fffe05afeb4,276791774,0,0x0,8
tick,0x7fffe05afeb4,276807779,0,0x0,8
tick,0x7fffe05afeb4,276823783,0,0x0,8
tick,0x7fffe05afeb4,276839834,0,0x0,8
tick,0x7fffe05afeb4,276855768,0,0x0,8
tick,0x7fffe05afeb4,276871768,0,0x0,8
tick,0x7fffe05afeb4,276887774,0,0x0,8
tick,0x7fffe05afeb4,276903798,0,0x0,8
tick,0x7fffe05afeb4,276919770,0,0x0,8
tick,0x7fffe05afeb4,276935810,0,0x0,8
tick,0x7fffe05afeb4,276951779,0,0x0,8
tick,0x7fffe05afeb4,276966768,0,0x0,8
tick,0x7fffe05afeb4,276982774,0,0x0,8
tick,0x7fffe05afeb4,276997780,0,0x0,8
tick,0x7fffe05afeb4,277013782,0,0x0,8
tick,0x7fffe05afeb4,277029787,0,0x0,8
tick,0x7fffe05afeb4,277045834,0,0x0,8
tick,0x7fffe05afeb4,277061821,0,0x0,8
tick,0x7fffe05afeb4,277077803,0,0x0,8
tick,0x7fffe05afeb4,277093779,0,0x0,8
tick,0x7fffe05afeb4,277109815,0,0x0,8
tick,0x7fffe05afeb4,277125780,0,0x0,8
tick,0x7fffe05afeb4,277141772,0,0x0,8
tick,0x7fffe05afeb4,277157867,0,0x0,8
tick,0x7fffe05afeb4,277173796,0,0x0,8
tick,0x7fffe05afeb4,277189940,0,0x0,8
tick,0x7fffe05afeb4,277205847,0,0x0,8
tick,0x7fffe05afeb4,277221819,0,0x0,8
tick,0x7fffe05afeb4,277237772,0,0x0,8
tick,0x7fffe05afeb4,277253797,0,0x0,8
tick,0x7fffe05afeb4,277269888,0,0x0,8
tick,0x7fffe05afeb4,277285803,0,0x0,8
tick,0x7fffe05afeb4,277301786,0,0x0,8
tick,0x7fffe05afeb4,277316886,0,0x0,8
tick,0x7fffe05afeb4,277332867,0,0x0,8
tick,0x7fffe05afeb4,277348781,0,0x0,8
tick,0x7fffe05afeb4,277363808,0,0x0,8
tick,0x7fffe05afeb4,277379904,0,0x0,8
tick,0x7fffe05afeb4,277395798,0,0x0,8
tick,0x7fffe05afeb4,277411784,0,0x0,8
tick,0x7fffe05afeb4,277427772,0,0x0,8
tick,0x7fffe05afeb4,277443787,0,0x0,8
tick,0x7fffe05afeb4,277459858,0,0x0,8
tick,0x7fffe05afeb4,277475770,0,0x0,8
tick,0x7fffe05afeb4,277491811,0,0x0,8
tick,0x7fffe05afeb4,277507772,0,0x0,8
tick,0x7fffe05afeb4,277523782,0,0x0,8
tick,0x7fffe05afeb4,277540087,0,0x0,8
tick,0x7fffe05afeb4,277555776,0,0x0,8
tick,0x7fffe05afeb4,277571808,0,0x0,8
tick,0x7fffe05afeb4,277587859,0,0x0,8
tick,0x7fffe05afeb4,277603784,0,0x0,8
tick,0x7fffe05afeb4,277619840,0,0x0,8
tick,0x7fffe05afeb4,277635772,0,0x0,8
tick,0x7fffe05afeb4,277651854,0,0x0,8
tick,0x7fffe05afeb4,277667783,0,0x0,8
tick,0x7fffe05afeb4,277683846,0,0x0,8
tick,0x7fffe05afeb4,277699884,0,0x0,8
tick,0x7fffe05afeb4,277715888,0,0x0,8
tick,0x7fffe05afeb4,277731891,0,0x0,8
tick,0x7fffe05afeb4,277747766,0,0x0,8
tick,0x7fffe05afeb4,277763797,0,0x0,8
tick,0x7fffe05afeb4,277779857,0,0x0,8
tick,0x7fffe05afeb4,277795783,0,0x0,8
tick,0x7fffe05afeb4,277811776,0,0x0,8
tick,0x7fffe05afeb4,277827825,0,0x0,8
tick,0x7fffe05afeb4,277843783,0,0x0,8
tick,0x7fffe05afeb4,277859791,0,0x0,8
tick,0x7fffe05afeb4,277875773,0,0x0,8
tick,0x7fffe05afeb4,277891769,0,0x0,8
tick,0x7fffe05afeb4,277907783,0,0x0,8
tick,0x7fffe05afeb4,277923852,0,0x0,8
tick,0x7fffe05afeb4,277939879,0,0x0,8
tick,0x7fffe05afeb4,277955824,0,0x0,8
tick,0x7fffe05afeb4,277971797,0,0x0,8
tick,0x7fffe05afeb4,277987786,0,0x0,8
tick,0x7fffe05afeb4,278003806,0,0x0,8
tick,0x7fffe05afeb4,278019807,0,0x0,8
tick,0x7fffe05afeb4,278035781,0,0x0,8
tick,0x7fffe05afeb4,278051778,0,0x0,8
tick,0x7fffe05afeb4,278067794,0,0x0,8
tick,0x7fffe05afeb4,278083813,0,0x0,8
tick,0x7fffe05afeb4,278099813,0,0x0,8
tick,0x7fffe05afeb4,278115785,0,0x0,8
tick,0x7fffe05afeb4,278130912,0,0x0,8
tick,0x7fffe05afeb4,278145792,0,0x0,8
tick,0x7fffe05afeb4,278161887,0,0x0,8
tick,0x7fffe05afeb4,278177776,0,0x0,8
tick,0x7fffe05afeb4,278193848,0,0x0,8
tick,0x7fffe05afeb4,278208871,0,0x0,8
tick,0x7fffe05afeb4,278224815,0,0x0,8
tick,0x7fffe05afeb4,278240797,0,0x0,8
tick,0x7fffe05afeb4,278256776,0,0x0,8
tick,0x7fffe05afeb4,278272811,0,0x0,8
tick,0x7fffe05afeb4,278288788,0,0x0,8
tick,0x7fffe05afeb4,278304893,0,0x0,8
tick,0x7fffe05afeb4,278320813,0,0x0,8
tick,0x7fffe05afeb4,278336858,0,0x0,8
tick,0x7fffe05afeb4,278352943,0,0x0,8
tick,0x7fffe05afeb4,278368818,0,0x0,8
tick,0x7fffe05afeb4,278384909,0,0x0,8
tick,0x7fffe05afeb4,278399872,0,0x0,8
tick,0x7fffe05afeb4,278415838,0,0x0,8
tick,0x7fffe05afeb4,278431826,0,0x0,8
tick,0x7fffe05afeb4,278447810,0,0x0,8
tick,0x7fffe05afeb4,278463869,0,0x0,8
tick,0x7fffe05afeb4,278479876,0,0x0,8
tick,0x7fffe05afeb4,278495888,0,0x0,8
tick,0x7fffe05afeb4,278511795,0,0x0,8
tick,0x7fffe05afeb4,278527783,0,0x0,8
tick,0x7fffe05afeb4,278543898,0,0x0,8
tick,0x7fffe05afeb4,278559993,0,0x0,8
tick,0x7fffe05afeb4,278576000,0,0x0,8
tick,0x7fffe05afeb4,278591811,0,0x0,8
tick,0x7fffe05afeb4,278607801,0,0x0,8
tick,0x7fffe05afeb4,278623785,0,0x0,8
tick,0x7fffe05afeb4,278639840,0,0x0,8
tick,0x7fffe05afeb4,278655777,0,0x0,8
tick,0x7fffe05afeb4,278671839,0,0x0,8
tick,0x7fffe05afeb4,278687785,0,0x0,8
tick,0x7fffe05afeb4,278703768,0,0x0,8
tick,0x7fffe05afeb4,278719853,0,0x0,8
tick,0x7fffe05afeb4,278735851,0,0x0,8
tick,0x7fffe05afeb4,278751761,0,0x0,8
tick,0x7fffe05afeb4,278767763,0,0x0,8
tick,0x7fffe05afeb4,278783819,0,0x0,8
tick,0x7fffe05afeb4,278799912,0,0x0,8
tick,0x7fffe05afeb4,278814770,0,0x0,8
tick,0x7fffe05afeb4,278830838,0,0x0,8
tick,0x7fffe05afeb4,278845841,0,0x0,8
tick,0x7fffe05afeb4,278861777,0,0x0,8
tick,0x7fffe05afeb4,278877761,0,0x0,8
tick,0x7fffe05afeb4,278893857,0,0x0,8
tick,0x7fffe05afeb4,278909800,0,0x0,8
tick,0x7fffe05afeb4,278925869,0,0x0,8
tick,0x7fffe05afeb4,278941810,0,0x0,8
tick,0x7fffe05afeb4,278956954,0,0x0,8
tick,0x7fffe05afeb4,278972800,0,0x0,8
tick,0x7fffe05afeb4,278988821,0,0x0,8
tick,0x7fffe05afeb4,279004858,0,0x0,8
tick,0x7fffe05afeb4,279020774,0,0x0,8
tick,0x7fffe05afeb4,279036789,0,0x0,8
tick,0x7fffe05afeb4,279052792,0,0x0,8
tick,0x7fffe05afeb4,279067784,0,0x0,8
tick,0x7fffe05afeb4,279083836,0,0x0,8
tick,0x7fffe05afeb4,279099831,0,0x0,8
tick,0x7fffe05afeb4,279115781,0,0x0,8
tick,0x7fffe05afeb4,279131787,0,0x0,8
tick,0x7fffe05afeb4,279147871,0,0x0,8
tick,0x7fffe05afeb4,279163806,0,0x0,8
tick,0x7fffe05afeb4,279179796,0,0x0,8
tick,0x7fffe05afeb4,279194988,0,0x0,8
tick,0x7fffe05afeb4,279210781,0,0x0,8
tick,0x7fffe05afeb4,279226912,0,0x0,8
tick,0x7fffe05afeb4,279242790,0,0x0,8
tick,0x7fffe05afeb4,279258904,0,0x0,8
tick,0x7fffe05afeb4,279274816,0,0x0,8
tick,0x7fffe05afeb4,279290811,0,0x0,8
tick,0x7fffe05afeb4,279306882,0,0x0,8
tick,0x7fffe05afeb4,279322762,0,0x0,8
tick,0x7fffe05afeb4,279338865,0,0x0,8
tick,0x7fffe05afeb4,279354785,0,0x0,8
tick,0x7fffe05afeb4,279370875,0,0x0,8
tick,0x7fffe05afeb4,279386788,0,0x0,8
tick,0x7fffe05afeb4,279402770,0,0x0,8
tick,0x7fffe05afeb4,279417865,0,0x0,8
tick,0x7fffe05afeb4,279433852,0,0x0,8
tick,0x7fffe05afeb4,279449901,0,0x0,8
tick,0x7fffe05afeb4,279465864,0,0x0,8
tick,0x7fffe05afeb4,279481932,0,0x0,8
tick,0x7fffe05afeb4,279496761,0,0x0,8
tick,0x7fffe05afeb4,279512843,0,0x0,8
tick,0x7fffe05afeb4,279528869,0,0x0,8
tick,0x7fffe05afeb4,279544991,0,0x0,8
tick,0x7fffe05afeb4,279560771,0,0x0,8
tick,0x7fffe05afeb4,279576953,0,0x0,8
tick,0x7fffe05afeb4,279592827,0,0x0,8
tick,0x7fffe05afeb4,279608917,0,0x0,8
tick,0x7fffe05afeb4,279625221,0,0x0,8
tick,0x7fffe05afeb4,279640895,0,0x0,8
tick,0x7fffe05afeb4,279655845,0,0x0,8
tick,0x7fffe05afeb4,279671957,0,0x0,8
tick,0x7fffe05afeb4,279687783,0,0x0,8
tick,0x7fffe05afeb4,279702953,0,0x0,8
tick,0x7fffe05afeb4,279717852,0,0x0,8
tick,0x7fffe05afeb4,279734025,0,0x0,8
tick,0x7fffe05afeb4,279749975,0,0x0,8
tick,0x7fffe05afeb4,279765900,0,0x0,8
tick,0x7fffe05afeb4,279781807,0,0x0,8
tick,0x7fffe05afeb4,279797937,0,0x0,8
tick,0x7fffe05afeb4,279813759,0,0x0,8
tick,0x7fffe05afeb4,279829873,0,0x0,8
tick,0x7fffe05afeb4,279845968,0,0x0,8
tick,0x7fffe05afeb4,279861930,0,0x0,8
tick,0x7fffe05afeb4,279877912,0,0x0,8
tick,0x7fffe05afeb4,279893837,0,0x0,8
tick,0x7fffe05afeb4,279909807,0,0x0,8
tick,0x7fffe05afeb4,279925929,0,0x0,8
tick,0x7fffe05afeb4,279941794,0,0x0,8
tick,0x7fffe05afeb4,279957024,0,0x0,8
tick,0x7fffe05afeb4,279972839,0,0x0,8
tick,0x7fffe05afeb4,279987954,0,0x0,8
tick,0x7fffe05afeb4,280003852,0,0x0,8
tick,0x7fffe05afeb4,280019864,0,0x0,8
tick,0x7fffe05afeb4,280035783,0,0x0,8
tick,0x7fffe05afeb4,280052042,0,0x0,8
tick,0x7fffe05afeb4,280068086,0,0x0,8
tick,0x7fffe05afeb4,280083823,0,0x0,8
tick,0x7fffe05afeb4,280099881,0,0x0,8
tick,0x7fffe05afeb4,280115888,0,0x0,8
tick,0x7fffe05afeb4,280132034,0,0x0,8
tick,0x7fffe05afeb4,280147805,0,0x0,8
tick,0x7fffe05afeb4,280163797,0,0x0,8
tick,0x7fffe05afeb4,280179982,0,0x0,8
tick,0x7fffe05afeb4,280194982,0,0x0,8
tick,0x7fffe05afeb4,280210934,0,0x0,8
tick,0x7fffe05afeb4,280226844,0,0x0,8
tick,0x7fffe05afeb4,280242043,0,0x0,8
tick,0x7fffe05afeb4,280257947,0,0x0,8
tick,0x7fffe05afeb4,280272883,0,0x0,8
tick,0x7fffe05afeb4,280288790,0,0x0,8
tick,0x7fffe05afeb4,280304927,0,0x0,8
tick,0x7fffe05afeb4,280320772,0,0x0,8
tick,0x7fffe05afeb4,280336840,0,0x0,8
tick,0x7fffe05afeb4,280352968,0,0x0,8
tick,0x7fffe05afeb4,280367888,0,0x0,8
tick,0x7fffe05afeb4,280383859,0,0x0,8
tick,0x7fffe05afeb4,280400131,0,0x0,8
tick,0x7fffe05afeb4,280415993,0,0x0,8
tick,0x7fffe05afeb4,280431948,0,0x0,8
tick,0x7fffe05afeb4,280447778,0,0x0,8
tick,0x7fffe05afeb4,280463806,0,0x0,8
tick,0x7fffe05afeb4,280480006,0,0x0,8
tick,0x7fffe05afeb4,280496106,0,0x0,8
tick,0x7fffe05afeb4,280511852,0,0x0,8
tick,0x7fffe05afeb4,280527914,0,0x0,8
tick,0x7fffe05afeb4,280543842,0,0x0,8
tick,0x7fffe05afeb4,280559996,0,0x0,8
tick,0x7fffe05afeb4,280575843,0,0x0,8
tick,0x7fffe05afeb4,280591978,0,0x0,8
tick,0x7fffe05afeb4,280607874,0,0x0,8
tick,0x7fffe05afeb4,280623937,0,0x0,8
tick,0x7fffe05afeb4,280639884,0,0x0,8
tick,0x7fffe05afeb4,280655849,0,0x0,8
tick,0x7fffe05afeb4,280671833,0,0x0,8
tick,0x7fffe05afeb4,280687850,0,0x0,8
tick,0x7fffe05afeb4,280703778,0,0x0,8
tick,0x7fffe05afeb4,280720119,0,0x0,8
tick,0x7fffe05afeb4,280735889,0,0x0,8
tick,0x7fffe05afeb4,280752031,0,0x0,8
tick,0x7fffe05afeb4,280767816,0,0x0,8
tick,0x7fffe05afeb4,280783769,0,0x0,8
tick,0x7fffe05afeb4,280799797,0,0x0,8
tick,0x7fffe05afeb4,280815935,0,0x0,8
tick,0x7fffe05afeb4,280831897,0,0x0,8
tick,0x7fffe05afeb4,280847847,0,0x0,8
tick,0x7fffe05afeb4,280863857,0,0x0,8
tick,0x7fffe05afeb4,280880011,0,0x0,8
tick,0x7fffe05afeb4,280895772,0,0x0,8
tick,0x7fffe05afeb4,280910791,0,0x0,8
tick,0x7fffe05afeb4,280926854,0,0x0,8
tick,0x7fffe05afeb4,280943002,0,0x0,8
tick,0x7fffe05afeb4,280957845,0,0x0,8
tick,0x7fffe05afeb4,280972939,0,0x0,8
tick,0x7fffe05afeb4,280988763,0,0x0,8
tick,0x7fffe05afeb4,281004909,0,0x0,8
tick,0x7fffe05afeb4,281020799,0,0x0,8
tick,0x7fffe05afeb4,281036823,0,0x0,8
tick,0x7fffe05afeb4,281052922,0,0x0,8
tick,0x7fffe05afeb4,281068948,0,0x0,8
tick,0x7fffe05afeb4,281084810,0,0x0,8
tick,0x7fffe05afeb4,281100768,0,0x0,8
tick,0x7fffe05afeb4,281116771,0,0x0,8
tick,0x7fffe05afeb4,281133024,0,0x0,8
tick,0x7fffe05afeb4,281147997,0,0x0,8
tick,0x7fffe05afeb4,281163783,0,0x0,8
tick,0x7fffe05afeb4,281179889,0,0x0,8
tick,0x7fffe05afeb4,281194953,0,0x0,8
tick,0x7fffe05afeb4,281210798,0,0x0,8
tick,0x7fffe05afeb4,281225839,0,0x0,8
tick,0x7fffe05afeb4,281241796,0,0x0,8
tick,0x7fffe05afeb4,281256909,0,0x0,8
tick,0x7fffe05afeb4,281272881,0,0x0,8
tick,0x7fffe05afeb4,281287867,0,0x0,8
tick,0x7fffe05afeb4,281303856,0,0x0,8
tick,0x7fffe05afeb4,281319975,0,0x0,8
tick,0x7fffe05afeb4,281335779,0,0x0,8
tick,0x7fffe05afeb4,281351837,0,0x0,8
tick,0x7fffe05afeb4,281367898,0,0x0,8
tick,0x7fffe05afeb4,281384518,0,0x0,8
tick,0x7fffe05afeb4,281398768,0,0x0,8
tick,0x7fffe05afeb4,281414776,0,0x0,8
tick,0x7fffe05afeb4,281430781,0,0x0,8
tick,0x7fffe05afeb4,281445999,0,0x0,8
tick,0x7fffe05afeb4,281461764,0,0x0,8
tick,0x7fffe05afeb4,281478181,0,0x0,8
tick,0x7fffe05afeb4,281493868,0,0x0,8
tick,0x7fffe05afeb4,281510412,0,0x0,8
tick,0x7fffe05afeb4,281525985,0,0x0,8
tick,0x7fffe05afeb4,281541837,0,0x0,8
tick,0x7fffe05afeb4,281557766,0,0x0,8
tick,0x7fffe05afeb4,281573986,0,0x0,8
tick,0x7fffe05afeb4,281589895,0,0x0,8
tick,0x7fffe05afeb4,281609243,0,0x0,8
tick,0x7fffe05afeb4,281621845,0,0x0,8
tick,0x7fffe05afeb4,281638033,0,0x0,8
tick,0x7fffe05afeb4,281653920,0,0x0,8
tick,0x7fffe05afeb4,281670104,0,0x0,8
tick,0x7fffe05afeb4,281685796,0,0x0,8
tick,0x7fffe05afeb4,281701988,0,0x0,8
tick,0x7fffe05afeb4,281717930,0,0x0,8
tick,0x7fffe05afeb4,281734003,0,0x0,8
tick,0x7fffe05afeb4,281749801,0,0x0,8
tick,0x7fffe05afeb4,281765853,0,0x0,8
tick,0x7fffe05afeb4,281780972,0,0x0,8
tick,0x7fffe05afeb4,281795862,0,0x0,8
tick,0x7fffe05afeb4,281811760,0,0x0,8
tick,0x7fffe05afeb4,281828034,0,0x0,8
tick,0x7fffe05afeb4,281843856,0,0x0,8
tick,0x7fffe05afeb4,281859930,0,0x0,8
tick,0x7fffe05afeb4,281875814,0,0x0,8
tick,0x7fffe05afeb4,281891895,0,0x0,8
tick,0x7fffe05afeb4,281906873,0,0x0,8
tick,0x7fffe05afeb4,281922853,0,0x0,8
tick,0x7fffe05afeb4,281938923,0,0x0,8
tick,0x7fffe05afeb4,281954852,0,0x0,8
tick,0x7fffe05afeb4,281970865,0,0x0,8
tick,0x7fffe05afeb4,281986799,0,0x0,8
tick,0x7fffe05afeb4,282001762,0,0x0,8
tick,0x7fffe05afeb4,282017941,0,0x0,8
tick,0x7fffe05afeb4,282033826,0,0x0,8
tick,0x7fffe05afeb4,282050409,0,0x0,8
tick,0x7fffe05afeb4,282065799,0,0x0,8
tick,0x7fffe05afeb4,282081913,0,0x0,8
tick,0x7fffe05afeb4,282097776,0,0x0,8
tick,0x7fffe05afeb4,282113776,0,0x0,8
tick,0x7fffe05afeb4,282129910,0,0x0,8
tick,0x7fffe05afeb4,282145938,0,0x0,8
tick,0x7fffe05afeb4,282162052,0,0x0,8
tick,0x7fffe05afeb4,282177919,0,0x0,8
tick,0x7fffe05afeb4,282192869,0,0x0,8
tick,0x7fffe05afeb4,282208868,0,0x0,8
tick,0x7fffe05afeb4,282224929,0,0x0,8
tick,0x7fffe05afeb4,282240925,0,0x0,8
tick,0x7fffe05afeb4,282256777,0,0x0,8
tick,0x7fffe05afeb4,282273144,0,0x0,8
tick,0x7fffe05afeb4,282288775,0,0x0,8
tick,0x7fffe05afeb4,282304925,0,0x0,8
tick,0x7fffe05afeb4,282320756,0,0x0,8
tick,0x7fffe05afeb4,282337049,0,0x0,8
tick,0x7fffe05afeb4,282353021,0,0x0,8
tick,0x7fffe05afeb4,282368934,0,0x0,8
tick,0x7fffe05afeb4,282384875,0,0x0,8
tick,0x7fffe05afeb4,282400947,0,0x0,8
tick,0x7fffe05afeb4,282416818,0,0x0,8
tick,0x7fffe05afeb4,282432827,0,0x0,8
tick,0x7fffe05afeb4,282448838,0,0x0,8
tick,0x7fffe05afeb4,282464948,0,0x0,8
tick,0x7fffe05afeb4,282479803,0,0x0,8
tick,0x7fffe05afeb4,282495980,0,0x0,8
tick,0x7fffe05afeb4,282511837,0,0x0,8
tick,0x7fffe05afeb4,282527988,0,0x0,8
tick,0x7fffe05afeb4,282543786,0,0x0,8
tick,0x7fffe05afeb4,282560034,0,0x0,8
tick,0x7fffe05afeb4,282575864,0,0x0,8
tick,0x7fffe05afeb4,282590902,0,0x0,8
tick,0x7fffe05afeb4,282606843,0,0x0,8
tick,0x7fffe05afeb4,282622919,0,0x0,8
tick,0x7fffe05afeb4,282638766,0,0x0,8
tick,0x7fffe05afeb4,282654869,0,0x0,8
tick,0x7fffe05afeb4,282670932,0,0x0,8
tick,0x7fffe05afeb4,282686867,0,0x0,8
tick,0x7fffe05afeb4,282702769,0,0x0,8
tick,0x7fffe05afeb4,282719000,0,0x0,8
tick,0x7fffe05afeb4,282735073,0,0x0,8
tick,0x7fffe05afeb4,282750934,0,0x0,8
tick,0x7fffe05afeb4,282766788,0,0x0,8
tick,0x7fffe05afeb4,282782913,0,0x0,8
tick,0x7fffe05afeb4,282798860,0,0x0,8
tick,0x7fffe05afeb4,282814919,0,0x0,8
tick,0x7fffe05afeb4,282830878,0,0x0,8
tick,0x7fffe05afeb4,282845977,0,0x0,8
tick,0x7fffe05afeb4,282861764,0,0x0,8
tick,0x7fffe05afeb4,282877868,0,0x0,8
tick,0x7fffe05afeb4,282893772,0,0x0,8
tick,0x7fffe05afeb4,282909952,0,0x0,8
tick,0x7fffe05afeb4,282925852,0,0x0,8
tick,0x7fffe05afeb4,282941931,0,0x0,8
tick,0x7fffe05afeb4,282957852,0,0x0,8
tick,0x7fffe05afeb4,282973864,0,0x0,8
tick,0x7fffe05afeb4,282989812,0,0x0,8
tick,0x7fffe05afeb4,283005839,0,0x0,8
tick,0x7fffe05afeb4,283021847,0,0x0,8
tick,0x7fffe05afeb4,283037937,0,0x0,8
tick,0x7fffe05afeb4,283053882,0,0x0,8
tick,0x7fffe05afeb4,283070079,0,0x0,8
tick,0x7fffe05afeb4,283085926,0,0x0,8
tick,0x7fffe05afeb4,283101872,0,0x0,8
tick,0x7fffe05afeb4,283116768,0,0x0,8
tick,0x7fffe05afeb4,283132983,0,0x0,8
tick,0x7fffe05afeb4,283148860,0,0x0,8
tick,0x7fffe05afeb4,283165006,0,0x0,8
tick,0x7fffe05afeb4,283180129,0,0x0,8
tick,0x7fffe05afeb4,283195957,0,0x0,8
tick,0x7fffe05afeb4,283211766,0,0x0,8
tick,0x7fffe05afeb4,283227906,0,0x0,8
tick,0x7fffe05afeb4,283244077,0,0x0,8
tick,0x7fffe05afeb4,283259918,0,0x0,8
tick,0x7fffe05afeb4,283275014,0,0x0,8
tick,0x7fffe05afeb4,283290937,0,0x0,8
tick,0x7fffe05afeb4,283306775,0,0x0,8
tick,0x7fffe05afeb4,283322758,0,0x0,8
tick,0x7fffe05afeb4,283338915,0,0x0,8
tick,0x7fffe05afeb4,283357174,0,0x0,8
tick,0x7fffe05afeb4,283370852,0,0x0,8
tick,0x7fffe05afeb4,283387000,0,0x0,8
tick,0x7fffe05afeb4,283402849,0,0x0,8
tick,0x7fffe05afeb4,283418950,0,0x0,8
tick,0x7fffe05afeb4,283434799,0,0x0,8
tick,0x7fffe05afeb4,283450779,0,0x0,8
tick,0x7fffe05afeb4,283466847,0,0x0,8
tick,0x7fffe05afeb4,283482951,0,0x0,8
tick,0x7fffe05afeb4,283498936,0,0x0,8
tick,0x7fffe05afeb4,283514934,0,0x0,8
tick,0x7fffe05afeb4,283530810,0,0x0,8
tick,0x7fffe05afeb4,283545874,0,0x0,8
tick,0x7fffe05afeb4,283561781,0,0x0,8
tick,0x7fffe05afeb4,283577868,0,0x0,8
tick,0x7fffe05afeb4,283593851,0,0x0,8
tick,0x7fffe05afeb4,283610118,0,0x0,8
tick,0x7fffe05afeb4,283625905,0,0x0,8
tick,0x7fffe05afeb4,283641833,0,0x0,8
tick,0x7fffe05afeb4,283657765,0,0x0,8
tick,0x7fffe05afeb4,283673866,0,0x0,8
tick,0x7fffe05afeb4,283690056,0,0x0,8
tick,0x7fffe05afeb4,283705779,0,0x0,8
tick,0x7fffe05afeb4,283721860,0,0x0,8
tick,0x7fffe05afeb4,283737931,0,0x0,8
tick,0x7fffe05afeb4,283753831,0,0x0,8
tick,0x7fffe05afeb4,283768888,0,0x0,8
tick,0x7fffe05afeb4,283784768,0,0x0,8
tick,0x7fffe05afeb4,283800927,0,0x0,8
tick,0x7fffe05afeb4,283816779,0,0x0,8
tick,0x7fffe05afeb4,283832908,0,0x0,8
tick,0x7fffe05afeb4,283848771,0,0x0,8
tick,0x7fffe05afeb4,283865154,0,0x0,8
tick,0x7fffe05afeb4,283880761,0,0x0,8
tick,0x7fffe05afeb4,283895917,0,0x0,8
tick,0x7fffe05afeb4,283911844,0,0x0,8
tick,0x7fffe05afeb4,283927933,0,0x0,8
tick,0x7fffe05afeb4,283943868,0,0x0,8
tick,0x7fffe05afeb4,283959807,0,0x0,8
tick,0x7fffe05afeb4,283975882,0,0x0,8
tick,0x7fffe05afeb4,283995911,0,0x0,8
tick,0x7fffe05afeb4,284007802,0,0x0,8
tick,0x7fffe05afeb4,284023861,0,0x0,8
tick,0x7fffe05afeb4,284040256,0,0x0,8
tick,0x7fffe05afeb4,284056023,0,0x0,8
tick,0x7fffe05afeb4,284071824,0,0x0,8
tick,0x7fffe05afeb4,284087918,0,0x0,8
tick,0x7fffe05afeb4,284103792,0,0x0,8
tick,0x7fffe05afeb4,284119974,0,0x0,8
tick,0x7fffe05afeb4,284135870,0,0x0,8
tick,0x7fffe05afeb4,284151973,0,0x0,8
tick,0x7fffe05afeb4,284167916,0,0x0,8
tick,0x7fffe05afeb4,284183940,0,0x0,8
tick,0x7fffe05afeb4,284200024,0,0x0,8
tick,0x7fffe05afeb4,284215775,0,0x0,8
tick,0x7fffe05afeb4,284231896,0,0x0,8
tick,0x7fffe05afeb4,284247947,0,0x0,8
tick,0x7fffe05afeb4,284263886,0,0x0,8
tick,0x7fffe05afeb4,284280281,0,0x0,8
tick,0x7fffe05afeb4,284295852,0,0x0,8
tick,0x7fffe05afeb4,284311841,0,0x0,8
tick,0x7fffe05afeb4,284327858,0,0x0,8
tick,0x7fffe05afeb4,284343928,0,0x0,8
tick,0x7fffe05afeb4,284360000,0,0x0,8
tick,0x7fffe05afeb4,284376076,0,0x0,8
tick,0x7fffe05afeb4,284390855,0,0x0,8
tick,0x7fffe05afeb4,284406851,0,0x0,8
tick,0x7fffe05afeb4,284422832,0,0x0,8
tick,0x7fffe05afeb4,284437936,0,0x0,8
tick,0x7fffe05afeb4,284453817,0,0x0,8
tick,0x7fffe05afeb4,284469907,0,0x0,8
tick,0x7fffe05afeb4,284485854,0,0x0,8
tick,0x7fffe05afeb4,284502120,0,0x0,8
tick,0x7fffe05afeb4,284517769,0,0x0,8
tick,0x7fffe05afeb4,284533908,0,0x0,8
tick,0x7fffe05afeb4,284549795,0,0x0,8
tick,0x7fffe05afeb4,284565876,0,0x0,8
tick,0x7fffe05afeb4,284581833,0,0x0,8
tick,0x7fffe05afeb4,284597763,0,0x0,8
tick,0x7fffe05afeb4,284613826,0,0x0,8
tick,0x7fffe05afeb4,284630068,0,0x0,8
tick,0x7fffe05afeb4,284645866,0,0x0,8
tick,0x7fffe05afeb4,284661774,0,0x0,8
tick,0x7fffe05afeb4,284676834,0,0x0,8
tick,0x7fffe05afeb4,284692907,0,0x0,8
tick,0x7fffe05afeb4,284707822,0,0x0,8
tick,0x7fffe05afeb4,284723929,0,0x0,8
tick,0x7fffe05afeb4,284739875,0,0x0,8
tick,0x7fffe05afeb4,284755928,0,0x0,8
tick,0x7fffe05afeb4,284772018,0,0x0,8
tick,0x7fffe05afeb4,284787829,0,0x0,8
tick,0x7fffe05afeb4,284803781,0,0x0,8
tick,0x7fffe05afeb4,284819930,0,0x0,8
tick,0x7fffe05afeb4,284835812,0,0x0,8
tick,0x7fffe05afeb4,284851873,0,0x0,8
tick,0x7fffe05afeb4,284867855,0,0x0,8
tick,0x7fffe05afeb4,284883872,0,0x0,8
tick,0x7fffe05afeb4,284899935,0,0x0,8
tick,0x7fffe05afeb4,284915788,0,0x0,8
tick,0x7fffe05afeb4,284931973,0,0x0,8
tick,0x7fffe05afeb4,284948017,0,0x0,8
tick,0x7fffe05afeb4,284963864,0,0x0,8
tick,0x7fffe05afeb4,284979858,0,0x0,8
tick,0x7fffe05afeb4,284995779,0,0x0,8
tick,0x7fffe05afeb4,285011877,0,0x0,8
tick,0x7fffe05afeb4,285027857,0,0x0,8
tick,0x7fffe05afeb4,285043905,0,0x0,8
tick,0x7fffe05afeb4,285060923,0,0x0,8
tick,0x7fffe05afeb4,285076850,0,0x0,8
tick,0x7fffe05afeb4,285092012,0,0x0,8
tick,0x7fffe05afeb4,285108170,0,0x0,8
tick,0x7fffe05afeb4,285123845,0,0x0,8
tick,0x7fffe05afeb4,285140016,0,0x0,8
tick,0x7fffe05afeb4,285156023,0,0x0,8
tick,0x7fffe05afeb4,285171908,0,0x0,8
tick,0x7fffe05afeb4,285186851,0,0x0,8
tick,0x7fffe05afeb4,285202846,0,0x0,8
tick,0x7fffe05afeb4,285217766,0,0x0,8
tick,0x7fffe05afeb4,285233921,0,0x0,8
tick,0x7fffe05afeb4,285249848,0,0x0,8
tick,0x7fffe05afeb4,285265113,0,0x0,8
tick,0x7fffe05afeb4,285281162,0,0x0,8
tick,0x7fffe05afeb4,285296856,0,0x0,8
tick,0x7fffe05afeb4,285312774,0,0x0,8
tick,0x7fffe05afeb4,285328974,0,0x0,8
tick,0x7fffe05afeb4,285344772,0,0x0,8
tick,0x7fffe05afeb4,285360948,0,0x0,8
tick,0x7fffe05afeb4,285376869,0,0x0,8
tick,0x7fffe05afeb4,285392923,0,0x0,8
tick,0x7fffe05afeb4,285407768,0,0x0,8
tick,0x7fffe05afeb4,285423859,0,0x0,8
tick,0x7fffe05afeb4,285440167,0,0x0,8
tick,0x7fffe05afeb4,285455878,0,0x0,8
tick,0x7fffe05afeb4,285471800,0,0x0,8
tick,0x7fffe05afeb4,285487787,0,0x0,8
tick,0x7fffe05afeb4,285504049,0,0x0,8
tick,0x7fffe05afeb4,285519912,0,0x0,8
tick,0x7fffe05afeb4,285534790,0,0x0,8
tick,0x7fffe05afeb4,285550776,0,0x0,8
tick,0x7fffe05afeb4,285566881,0,0x0,8
tick,0x7fffe05afeb4,285582908,0,0x0,8
tick,0x7fffe05afeb4,285597952,0,0x0,8
tick,0x7fffe05afeb4,285613789,0,0x0,8
tick,0x7fffe05afeb4,285629877,0,0x0,8
tick,0x7fffe05afeb4,285645894,0,0x0,8
tick,0x7fffe05afeb4,285661873,0,0x0,8
tick,0x7fffe05afeb4,285677987,0,0x0,8
tick,0x7fffe05afeb4,285693435,0,0x0,8
tick,0x7fffe05afeb4,285708876,0,0x0,8
tick,0x7fffe05afeb4,285725205,0,0x0,8
tick,0x7fffe05afeb4,285740781,0,0x0,8
tick,0x7fffe05afeb4,285756766,0,0x0,8
tick,0x7fffe05afeb4,285772911,0,0x0,8
tick,0x7fffe05afeb4,285787894,0,0x0,8
tick,0x7fffe05afeb4,285803996,0,0x0,8
tick,0x7fffe05afeb4,285819778,0,0x0,8
tick,0x7fffe05afeb4,285836069,0,0x0,8
tick,0x7fffe05afeb4,285851856,0,0x0,8
tick,0x7fffe05afeb4,285866830,0,0x0,8
tick,0x7fffe05afeb4,285881840,0,0x0,8
tick,0x7fffe05afeb4,285897924,0,0x0,8
tick,0x7fffe05afeb4,285913818,0,0x0,8
tick,0x7fffe05afeb4,285929887,0,0x0,8
tick,0x7fffe05afeb4,285948023,0,0x0,8
tick,0x7fffe05afeb4,285961844,0,0x0,8
tick,0x7fffe05afeb4,285976931,0,0x0,8
tick,0x7fffe05afeb4,285992829,0,0x0,8
tick,0x7fffe05afeb4,286007921,0,0x0,8
tick,0x7fffe05afeb4,286023914,0,0x0,8
tick,0x7fffe05afeb4,286041251,0,0x0,8
tick,0x7fffe05afeb4,286056245,0,0x0,8
tick,0x7fffe05afeb4,286073126,0,0x0,8
tick,0x7fffe05afeb4,286087913,0,0x0,8
tick,0x7fffe05afeb4,286104546,0,0x0,8
tick,0x7fffe05afeb4,286119877,0,0x0,8
tick,0x7fffe05afeb4,286135969,0,0x0,8
tick,0x7fffe05afeb4,286151956,0,0x0,8
tick,0x7fffe05afeb4,286169035,0,0x0,8
tick,0x7fffe05afeb4,286184020,0,0x0,8
tick,0x7fffe05afeb4,286201119,0,0x0,8
tick,0x7fffe05afeb4,286216008,0,0x0,8
tick,0x7fffe05afeb4,286231088,0,0x0,8
tick,0x7fffe05afeb4,286245902,0,0x0,8
tick,0x7fffe05afeb4,286261785,0,0x0,8
tick,0x7fffe05afeb4,286277971,0,0x0,8
tick,0x7fffe05afeb4,286294339,0,0x0,8
tick,0x7fffe05afeb4,286309841,0,0x0,8
tick,0x7fffe05afeb4,286326055,0,0x0,8
tick,0x7fffe05afeb4,286341872,0,0x0,8
tick,0x7fffe05afeb4,286357907,0,0x0,8
tick,0x7fffe05afeb4,286373787,0,0x0,8
tick,0x7fffe05afeb4,286391583,0,0x0,8
tick,0x7fffe05afeb4,286406043,0,0x0,8
tick,0x7fffe05afeb4,286421869,0,0x0,8
tick,0x7fffe05afeb4,286437840,0,0x0,8
tick,0x7fffe05afeb4,286453845,0,0x0,8
tick,0x7fffe05afeb4,286470093,0,0x0,8
tick,0x7fffe05afeb4,286485047,0,0x0,8
tick,0x7fffe05afeb4,286500869,0,0x0,8
tick,0x7fffe05afeb4,286516990,0,0x0,8
tick,0x7fffe05afeb4,286532939,0,0x0,8
tick,0x7fffe05afeb4,286548811,0,0x0,8
tick,0x7fffe05afeb4,286564821,0,0x0,8
tick,0x7fffe05afeb4,286579900,0,0x0,8
tick,0x7fffe05afeb4,286595867,0,0x0,8
tick,0x7fffe05afeb4,286611904,0,0x0,8
tick,0x7fffe05afeb4,286627865,0,0x0,8
tick,0x7fffe05afeb4,286643799,0,0x0,8
tick,0x7fffe05afeb4,286658797,0,0x0,8
tick,0x7fffe05afeb4,286674949,0,0x0,8
tick,0x7fffe05afeb4,286690768,0,0x0,8
tick,0x7fffe05afeb4,286706860,0,0x0,8
tick,0x7fffe05afeb4,286722805,0,0x0,8
tick,0x7fffe05afeb4,286738980,0,0x0,8
tick,0x7fffe05afeb4,286754855,0,0x0,8
tick,0x7fffe05afeb4,286770816,0,0x0,8
tick,0x7fffe05afeb4,286786873,0,0x0,8
tick,0x7fffe05afeb4,286802815,0,0x0,8
tick,0x7fffe05afeb4,286818868,0,0x0,8
tick,0x7fffe05afeb4,286834778,0,0x0,8
tick,0x7fffe05afeb4,286850766,0,0x0,8
tick,0x7fffe05afeb4,286866778,0,0x0,8
tick,0x7fffe05afeb4,286882799,0,0x0,8
tick,0x7fffe05afeb4,286898858,0,0x0,8
tick,0x7fffe05afeb4,286914881,0,0x0,8
tick,0x7fffe05afeb4,286930807,0,0x0,8
tick,0x7fffe05afeb4,286945809,0,0x0,8
tick,0x7fffe05afeb4,286961816,0,0x0,8
tick,0x7fffe05afeb4,286976763,0,0x0,8
tick,0x7fffe05afeb4,286992859,0,0x0,8
tick,0x7fffe05afeb4,287008815,0,0x0,8
tick,0x7fffe05afeb4,287024802,0,0x0,8
tick,0x7fffe05afeb4,287040795,0,0x0,8
tick,0x7fffe05afeb4,287056957,0,0x0,8
tick,0x7fffe05afeb4,287072811,0,0x0,8
tick,0x7fffe05afeb4,287088795,0,0x0,8
tick,0x7fffe05afeb4,287104833,0,0x0,8
tick,0x7fffe05afeb4,287120867,0,0x0,8
tick,0x7fffe05afeb4,287136837,0,0x0,8
tick,0x7fffe05afeb4,287152892,0,0x0,8
tick,0x7fffe05afeb4,287168969,0,0x0,8
tick,0x7fffe05afeb4,287184789,0,0x0,8
tick,0x7fffe05afeb4,287200808,0,0x0,8
tick,0x7fffe05afeb4,287216801,0,0x0,8
tick,0x7fffe05afeb4,287232765,0,0x0,8
tick,0x7fffe05afeb4,287248878,0,0x0,8
tick,0x7fffe05afeb4,287264859,0,0x0,8
tick,0x7fffe05afeb4,287280836,0,0x0,8
tick,0x7fffe05afeb4,287296820,0,0x0,8
tick,0x7fffe05afeb4,287312835,0,0x0,8
tick,0x7fffe05afeb4,287328861,0,0x0,8
tick,0x7fffe05afeb4,287344775,0,0x0,8
tick,0x7fffe05afeb4,287360763,0,0x0,8
tick,0x7fffe05afeb4,287376797,0,0x0,8
tick,0x7fffe05afeb4,287392817,0,0x0,8
tick,0x7fffe05afeb4,287408766,0,0x0,8
tick,0x7fffe05afeb4,287424865,0,0x0,8
tick,0x7fffe05afeb4,287440783,0,0x0,8
tick,0x7fffe05afeb4,287456811,0,0x0,8
tick,0x7fffe05afeb4,287471864,0,0x0,8
tick,0x7fffe05afeb4,287487863,0,0x0,8
tick,0x7fffe05afeb4,287502793,0,0x0,8
tick,0x7fffe05afeb4,287518891,0,0x0,8
tick,0x7fffe05afeb4,287534775,0,0x0,8
tick,0x7fffe05afeb4,287550771,0,0x0,8
tick,0x7fffe05afeb4,287566824,0,0x0,8
tick,0x7fffe05afeb4,287582957,0,0x0,8
tick,0x7fffe05afeb4,287598854,0,0x0,8
tick,0x7fffe05afeb4,287614857,0,0x0,8
tick,0x7fffe05afeb4,287630819,0,0x0,8
tick,0x7fffe05afeb4,287645786,0,0x0,8
tick,0x7fffe05afeb4,287661770,0,0x0,8
tick,0x7fffe05afeb4,287677802,0,0x0,8
tick,0x7fffe05afeb4,287693761,0,0x0,8
tick,0x7fffe05afeb4,287709800,0,0x0,8
tick,0x7fffe05afeb4,287725798,0,0x0,8
tick,0x7fffe05afeb4,287741800,0,0x0,8
tick,0x7fffe05afeb4,287757834,0,0x0,8
tick,0x7fffe05afeb4,287773802,0,0x0,8
tick,0x7fffe05afeb4,287789793,0,0x0,8
tick,0x7fffe05afeb4,287805780,0,0x0,8
tick,0x7fffe05afeb4,287821804,0,0x0,8
tick,0x7fffe05afeb4,287837790,0,0x0,8
tick,0x7fffe05afeb4,287852994,0,0x0,8
tick,0x7fffe05afeb4,287868806,0,0x0,8
tick,0x7fffe05afeb4,287884839,0,0x0,8
tick,0x7fffe05afeb4,287900773,0,0x0,8
tick,0x7fffe05afeb4,287915764,0,0x0,8
tick,0x7fffe05afeb4,287931870,0,0x0,8
tick,0x7fffe05afeb4,287947827,0,0x0,8
tick,0x7fffe05afeb4,287963783,0,0x0,8
tick,0x7fffe05afeb4,287979782,0,0x0,8
tick,0x7fffe05afeb4,287995848,0,0x0,8
tick,0x7fffe05afeb4,288011845,0,0x0,8
tick,0x7fffe05afeb4,288027853,0,0x0,8
tick,0x7fffe05afeb4,288043868,0,0x0,8
tick,0x7fffe05afeb4,288060013,0,0x0,8
tick,0x7fffe05afeb4,288074879,0,0x0,8
tick,0x7fffe05afeb4,288090765,0,0x0,8
tick,0x7fffe05afeb4,288106901,0,0x0,8
tick,0x7fffe05afeb4,288122846,0,0x0,8
tick,0x7fffe05afeb4,288138761,0,0x0,8
tick,0x7fffe05afeb4,288153878,0,0x0,8
tick,0x7fffe05afeb4,288168828,0,0x0,8
tick,0x7fffe05afeb4,288185124,0,0x0,8
tick,0x7fffe05afeb4,288200819,0,0x0,8
tick,0x7fffe05afeb4,288216805,0,0x0,8
tick,0x7fffe05afeb4,288232792,0,0x0,8
tick,0x7fffe05afeb4,288248882,0,0x0,8
tick,0x7fffe05afeb4,288264954,0,0x0,8
tick,0x7fffe05afeb4,288279848,0,0x0,8
tick,0x7fffe05afeb4,288296083,0,0x0,8
tick,0x7fffe05afeb4,288312063,0,0x0,8
tick,0x7fffe05afeb4,288328056,0,0x0,8
tick,0x7fffe05afeb4,288343922,0,0x0,8
tick,0x7fffe05afeb4,288359939,0,0x0,8
tick,0x7fffe05afeb4,288375975,0,0x0,8
tick,0x7fffe05afeb4,288391827,0,0x0,8
tick,0x7fffe05afeb4,288407900,0,0x0,8
tick,0x7fffe05afeb4,288423765,0,0x0,8
tick,0x7fffe05afeb4,288440086,0,0x0,8
tick,0x7fffe05afeb4,288455861,0,0x0,8
tick,0x7fffe05afeb4,288471827,0,0x0,8
tick,0x7fffe05afeb4,288486775,0,0x0,8
tick,0x7fffe05afeb4,288502836,0,0x0,8
tick,0x7fffe05afeb4,288518903,0,0x0,8
tick,0x7fffe05afeb4,288534021,0,0x0,8
tick,0x7fffe05afeb4,288549886,0,0x0,8
tick,0x7fffe05afeb4,288565967,0,0x0,8
tick,0x7fffe05afeb4,288581786,0,0x0,8
tick,0x7fffe05afeb4,288597854,0,0x0,8
tick,0x7fffe05afeb4,288612845,0,0x0,8
tick,0x7fffe05afeb4,288629109,0,0x0,8
tick,0x7fffe05afeb4,288643839,0,0x0,8
tick,0x7fffe05afeb4,288659983,0,0x0,8
tick,0x7fffe05afeb4,288675894,0,0x0,8
tick,0x7fffe05afeb4,288691995,0,0x0,8
tick,0x7fffe05afeb4,288707849,0,0x0,8
tick,0x7fffe05afeb4,288723804,0,0x0,8
tick,0x7fffe05afeb4,288739847,0,0x0,8
tick,0x7fffe05afeb4,288755957,0,0x0,8
tick,0x7fffe05afeb4,288771943,0,0x0,8
tick,0x7fffe05afeb4,288787953,0,0x0,8
tick,0x7fffe05afeb4,288802844,0,0x0,8
tick,0x7fffe05afeb4,288818939,0,0x0,8
tick,0x7fffe05afeb4,288835033,0,0x0,8
tick,0x7fffe05afeb4,288850773,0,0x0,8
tick,0x7fffe05afeb4,288866832,0,0x0,8
tick,0x7fffe05afeb4,288882980,0,0x0,8
tick,0x7fffe05afeb4,288898883,0,0x0,8
tick,0x7fffe05afeb4,288915059,0,0x0,8
tick,0x7fffe05afeb4,288929834,0,0x0,8
tick,0x7fffe05afeb4,288946251,0,0x0,8
tick,0x7fffe05afeb4,288961814,0,0x0,8
tick,0x7fffe05afeb4,288978148,0,0x0,8
tick,0x7fffe05afeb4,288993843,0,0x0,8
tick,0x7fffe05afeb4,289010295,0,0x0,8
tick,0x7fffe05afeb4,289025850,0,0x0,8
tick,0x7fffe05afeb4,289041844,0,0x0,8
tick,0x7fffe05afeb4,289057829,0,0x0,8
tick,0x7fffe05afeb4,289073895,0,0x0,8
tick,0x7fffe05afeb4,289089877,0,0x0,8
tick,0x7fffe05afeb4,289106061,0,0x0,8
tick,0x7fffe05afeb4,289121833,0,0x0,8
tick,0x7fffe05afeb4,289137961,0,0x0,8
tick,0x7fffe05afeb4,289153923,0,0x0,8
tick,0x7fffe05afeb4,289168980,0,0x0,8
tick,0x7fffe05afeb4,289184903,0,0x0,8
tick,0x7fffe05afeb4,289200850,0,0x0,8
tick,0x7fffe05afeb4,289216851,0,0x0,8
tick,0x7fffe05afeb4,289232942,0,0x0,8
tick,0x7fffe05afeb4,289248864,0,0x0,8
tick,0x7fffe05afeb4,289265006,0,0x0,8
tick,0x7fffe05afeb4,289280076,0,0x0,8
tick,0x7fffe05afeb4,289294931,0,0x0,8
tick,0x7fffe05afeb4,289310767,0,0x0,8
tick,0x7fffe05afeb4,289327064,0,0x0,8
tick,0x7fffe05afeb4,289343046,0,0x0,8
tick,0x7fffe05afeb4,289358869,0,0x0,8
tick,0x7fffe05afeb4,289373791,0,0x0,8
tick,0x7fffe05afeb4,289389910,0,0x0,8
tick,0x7fffe05afeb4,289404856,0,0x0,8
tick,0x7fffe05afeb4,289420820,0,0x0,8
tick,0x7fffe05afeb4,289436874,0,0x0,8
tick,0x7fffe05afeb4,289452905,0,0x0,8
tick,0x7fffe05afeb4,289468830,0,0x0,8
tick,0x7fffe05afeb4,289484772,0,0x0,8
tick,0x7fffe05afeb4,289499833,0,0x0,8
tick,0x7fffe05afeb4,289515894,0,0x0,8
tick,0x7fffe05afeb4,289531822,0,0x0,8
tick,0x7fffe05afeb4,289547883,0,0x0,8
tick,0x7fffe05afeb4,289563777,0,0x0,8
tick,0x7fffe05afeb4,289579865,0,0x0,8
tick,0x7fffe05afeb4,289595795,0,0x0,8
tick,0x7fffe05afeb4,289611804,0,0x0,8
tick,0x7fffe05afeb4,289627958,0,0x0,8
tick,0x7fffe05afeb4,289642930,0,0x0,8
tick,0x7fffe05afeb4,289658893,0,0x0,8
tick,0x7fffe05afeb4,289674870,0,0x0,8
tick,0x7fffe05afeb4,289690921,0,0x0,8
tick,0x7fffe05afeb4,289706948,0,0x0,8
tick,0x7fffe05afeb4,289722780,0,0x0,8
tick,0x7fffe05afeb4,289738882,0,0x0,8
tick,0x7fffe05afeb4,289754763,0,0x0,8
tick,0x7fffe05afeb4,289770899,0,0x0,8
tick,0x7fffe05afeb4,289786976,0,0x0,8
tick,0x7fffe05afeb4,289802807,0,0x0,8
tick,0x7fffe05afeb4,289818855,0,0x0,8
tick,0x7fffe05afeb4,289834918,0,0x0,8
tick,0x7fffe05afeb4,289850159,0,0x0,8
tick,0x7fffe05afeb4,289865879,0,0x0,8
tick,0x7fffe05afeb4,289881788,0,0x0,8
tick,0x7fffe05afeb4,289897936,0,0x0,8
tick,0x7fffe05afeb4,289913793,0,0x0,8
tick,0x7fffe05afeb4,289929884,0,0x0,8
tick,0x7fffe05afeb4,289945784,0,0x0,8
tick,0x7fffe05afeb4,289961907,0,0x0,8
tick,0x7fffe05afeb4,289978006,0,0x0,8
tick,0x7fffe05afeb4,289993830,0,0x0,8
tick,0x7fffe05afeb4,290009852,0,0x0,8
tick,0x7fffe05afeb4,290025837,0,0x0,8
tick,0x7fffe05afeb4,290041822,0,0x0,8
tick,0x7fffe05afeb4,290056922,0,0x0,8
tick,0x7fffe05afeb4,290072839,0,0x0,8
tick,0x7fffe05afeb4,290088058,0,0x0,8
tick,0x7fffe05afeb4,290104235,0,0x0,8
tick,0x7fffe05afeb4,290119918,0,0x0,8
tick,0x7fffe05afeb4,290135773,0,0x0,8
tick,0x7fffe05afeb4,290150992,0,0x0,8
tick,0x7fffe05afeb4,290166869,0,0x0,8
tick,0x7fffe05afeb4,290182881,0,0x0,8
tick,0x7fffe05afeb4,290198775,0,0x0,8
tick,0x7fffe05afeb4,290214957,0,0x0,8
tick,0x7fffe05afeb4,290230889,0,0x0,8
tick,0x7fffe05afeb4,290245770,0,0x0,8
tick,0x7fffe05afeb4,290261857,0,0x0,8
tick,0x7fffe05afeb4,290278012,0,0x0,8
tick,0x7fffe05afeb4,290294175,0,0x0,8
tick,0x7fffe05afeb4,290310066,0,0x0,8
tick,0x7fffe05afeb4,290325885,0,0x0,8
tick,0x7fffe05afeb4,290341976,0,0x0,8
tick,0x7fffe05afeb4,290357995,0,0x0,8
tick,0x7fffe05afeb4,290373890,0,0x0,8
tick,0x7fffe05afeb4,290389841,0,0x0,8
tick,0x7fffe05afeb4,290405934,0,0x0,8
tick,0x7fffe05afeb4,290422030,0,0x0,8
tick,0x7fffe05afeb4,290437900,0,0x0,8
tick,0x7fffe05afeb4,290452769,0,0x0,8
tick,0x7fffe05afeb4,290468921,0,0x0,8
tick,0x7fffe05afeb4,290484787,0,0x0,8
tick,0x7fffe05afeb4,290500766,0,0x0,8
tick,0x7fffe05afeb4,290515787,0,0x0,8
tick,0x7fffe05afeb4,290532048,0,0x0,8
tick,0x7fffe05afeb4,290547861,0,0x0,8
tick,0x7fffe05afeb4,290563769,0,0x0,8
tick,0x7fffe05afeb4,290579787,0,0x0,8
tick,0x7fffe05afeb4,290595964,0,0x0,8
tick,0x7fffe05afeb4,290611757,0,0x0,8
tick,0x7fffe05afeb4,290627910,0,0x0,8
tick,0x7fffe05afeb4,290643879,0,0x0,8
tick,0x7fffe05afeb4,290659989,0,0x0,8
tick,0x7fffe05afeb4,290675922,0,0x0,8
tick,0x7fffe05afeb4,290691842,0,0x0,8
tick,0x7fffe05afeb4,290706853,0,0x0,8
tick,0x7fffe05afeb4,290722882,0,0x0,8
tick,0x7fffe05afeb4,290737853,0,0x0,8
tick,0x7fffe05afeb4,290753855,0,0x0,8
tick,0x7fffe05afeb4,290768906,0,0x0,8
tick,0x7fffe05afeb4,290783922,0,0x0,8
tick,0x7fffe05afeb4,290800328,0,0x0,8
tick,0x7fffe05afeb4,290815944,0,0x0,8
tick,0x7fffe05afeb4,290831857,0,0x0,8
tick,0x7fffe05afeb4,290847937,0,0x0,8
tick,0x7fffe05afeb4,290864091,0,0x0,8
tick,0x7fffe05afeb4,290879912,0,0x0,8
tick,0x7fffe05afeb4,290895814,0,0x0,8
tick,0x7fffe05afeb4,290911934,0,0x0,8
tick,0x7fffe05afeb4,290927774,0,0x0,8
tick,0x7fffe05afeb4,290943894,0,0x0,8
tick,0x7fffe05afeb4,290959858,0,0x0,8
tick,0x7fffe05afeb4,290975870,0,0x0,8
tick,0x7fffe05afeb4,290991844,0,0x0,8
tick,0x7fffe05afeb4,291006856,0,0x0,8
tick,0x7fffe05afeb4,291022768,0,0x0,8
tick,0x7fffe05afeb4,291038858,0,0x0,8
tick,0x7fffe05afeb4,291054846,0,0x0,8
tick,0x7fffe05afeb4,291070850,0,0x0,8
tick,0x7fffe05afeb4,291086796,0,0x0,8
tick,0x7fffe05afeb4,291101930,0,0x0,8
tick,0x7fffe05afeb4,291117896,0,0x0,8
tick,0x7fffe05afeb4,291134413,0,0x0,8
tick,0x7fffe05afeb4,291149984,0,0x0,8
tick,0x7fffe05afeb4,291165853,0,0x0,8
tick,0x7fffe05afeb4,291181896,0,0x0,8
tick,0x7fffe05afeb4,291196778,0,0x0,8
tick,0x7fffe05afeb4,291211858,0,0x0,8
tick,0x7fffe05afeb4,291227895,0,0x0,8
tick,0x7fffe05afeb4,291243894,0,0x0,8
tick,0x7fffe05afeb4,291259916,0,0x0,8
tick,0x7fffe05afeb4,291275852,0,0x0,8
tick,0x7fffe05afeb4,291291983,0,0x0,8
tick,0x7fffe05afeb4,291307928,0,0x0,8
tick,0x7fffe05afeb4,291323875,0,0x0,8
tick,0x7fffe05afeb4,291339945,0,0x0,8
tick,0x7fffe05afeb4,291356080,0,0x0,8
tick,0x7fffe05afeb4,291372077,0,0x0,8
tick,0x7fffe05afeb4,291386834,0,0x0,8
tick,0x7fffe05afeb4,291402777,0,0x0,8
tick,0x7fffe05afeb4,291418950,0,0x0,8
tick,0x7fffe05afeb4,291434965,0,0x0,8
tick,0x7fffe05afeb4,291450776,0,0x0,8
tick,0x7fffe05afeb4,291466864,0,0x0,8
tick,0x7fffe05afeb4,291482984,0,0x0,8
tick,0x7fffe05afeb4,291499054,0,0x0,8
tick,0x7fffe05afeb4,291514850,0,0x0,8
tick,0x7fffe05afeb4,291530917,0,0x0,8
tick,0x7fffe05afeb4,291545939,0,0x0,8
tick,0x7fffe05afeb4,291561867,0,0x0,8
tick,0x7fffe05afeb4,291577938,0,0x0,8
tick,0x7fffe05afeb4,291593868,0,0x0,8
tick,0x7fffe05afeb4,291610140,0,0x0,8
tick,0x7fffe05afeb4,291625872,0,0x0,8
tick,0x7fffe05afeb4,291641927,0,0x0,8
tick,0x7fffe05afeb4,291657770,0,0x0,8
tick,0x7fffe05afeb4,291674030,0,0x0,8
tick,0x7fffe05afeb4,291689932,0,0x0,8
tick,0x7fffe05afeb4,291705984,0,0x0,8
tick,0x7fffe05afeb4,291721774,0,0x0,8
tick,0x7fffe05afeb4,291737944,0,0x0,8
tick,0x7fffe05afeb4,291753867,0,0x0,8
tick,0x7fffe05afeb4,291769963,0,0x0,8
tick,0x7fffe05afeb4,291785878,0,0x0,8
tick,0x7fffe05afeb4,291801920,0,0x0,8
tick,0x7fffe05afeb4,291817860,0,0x0,8
tick,0x7fffe05afeb4,291833860,0,0x0,8
tick,0x7fffe05afeb4,291849833,0,0x0,8
tick,0x7fffe05afeb4,291865995,0,0x0,8
tick,0x7fffe05afeb4,291882017,0,0x0,8
tick,0x7fffe05afeb4,291897865,0,0x0,8
tick,0x7fffe05afeb4,291913756,0,0x0,8
tick,0x7fffe05afeb4,291929018,0,0x0,8
tick,0x7fffe05afeb4,291944795,0,0x0,8
tick,0x7fffe05afeb4,291960774,0,0x0,8
tick,0x7fffe05afeb4,291976828,0,0x0,8
tick,0x7fffe05afeb4,291992942,0,0x0,8
tick,0x7fffe05afeb4,292008898,0,0x0,8
tick,0x7fffe05afeb4,292024772,0,0x0,8
tick,0x7fffe05afeb4,292040027,0,0x0,8
tick,0x7fffe05afeb4,292055939,0,0x0,8
tick,0x7fffe05afeb4,292072098,0,0x0,8
tick,0x7fffe05afeb4,292087874,0,0x0,8
tick,0x7fffe05afeb4,292103770,0,0x0,8
tick,0x7fffe05afeb4,292119037,0,0x0,8
tick,0x7fffe05afeb4,292134879,0,0x0,8
tick,0x7fffe05afeb4,292150869,0,0x0,8
tick,0x7fffe05afeb4,292166872,0,0x0,8
tick,0x7fffe05afeb4,292182972,0,0x0,8
tick,0x7fffe05afeb4,292197769,0,0x0,8
tick,0x7fffe05afeb4,292213864,0,0x0,8
tick,0x7fffe05afeb4,292229861,0,0x0,8
tick,0x7fffe05afeb4,292245860,0,0x0,8
tick,0x7fffe05afeb4,292261880,0,0x0,8
tick,0x7fffe05afeb4,292277943,0,0x0,8
tick,0x7fffe05afeb4,292293865,0,0x0,8
tick,0x7fffe05afeb4,292309908,0,0x0,8
tick,0x7fffe05afeb4,292325081,0,0x0,8
tick,0x7fffe05afeb4,292340872,0,0x0,8
tick,0x7fffe05afeb4,292356964,0,0x0,8
tick,0x7fffe05afeb4,292372852,0,0x0,8
tick,0x7fffe05afeb4,292388032,0,0x0,8
tick,0x7fffe05afeb4,292403854,0,0x0,8
tick,0x7fffe05afeb4,292418769,0,0x0,8
tick,0x7fffe05afeb4,292434992,0,0x0,8
tick,0x7fffe05afeb4,292449956,0,0x0,8
tick,0x7fffe05afeb4,292465932,0,0x0,8
tick,0x7fffe05afeb4,292481868,0,0x0,8
tick,0x7fffe05afeb4,292496964,0,0x0,8
tick,0x7fffe05afeb4,292512794,0,0x0,8
tick,0x7fffe05afeb4,292527928,0,0x0,8
tick,0x7fffe05afeb4,292543849,0,0x0,8
tick,0x7fffe05afeb4,292559988,0,0x0,8
tick,0x7fffe05afeb4,292575896,0,0x0,8
tick,0x7fffe05afeb4,292591815,0,0x0,8
tick,0x7fffe05afeb4,292607851,0,0x0,8
tick,0x7fffe05afeb4,292623862,0,0x0,8
tick,0x7fffe05afeb4,292638869,0,0x0,8
tick,0x7fffe05afeb4,292654880,0,0x0,8
tick,0x7fffe05afeb4,292670785,0,0x0,8
tick,0x7fffe05afeb4,292686940,0,0x0,8
tick,0x7fffe05afeb4,292702906,0,0x0,8
tick,0x7fffe05afeb4,292718947,0,0x0,8
tick,0x7fffe05afeb4,292734773,0,0x0,8
tick,0x7fffe05afeb4,292750913,0,0x0,8
tick,0x7fffe05afeb4,292766883,0,0x0,8
tick,0x7fffe05afeb4,292782907,0,0x0,8
tick,0x7fffe05afeb4,292797803,0,0x0,8
tick,0x7fffe05afeb4,292813933,0,0x0,8
tick,0x7fffe05afeb4,292829935,0,0x0,8
tick,0x7fffe05afeb4,292845826,0,0x0,8
tick,0x7fffe05afeb4,292861767,0,0x0,8
tick,0x7fffe05afeb4,292877851,0,0x0,8
tick,0x7fffe05afeb4,292893848,0,0x0,8
tick,0x7fffe05afeb4,292909875,0,0x0,8
tick,0x7fffe05afeb4,292925851,0,0x0,8
tick,0x7fffe05afeb4,292941851,0,0x0,8
tick,0x7fffe05afeb4,292957815,0,0x0,8
tick,0x7fffe05afeb4,292973783,0,0x0,8
tick,0x7fffe05afeb4,292989793,0,0x0,8
tick,0x7fffe05afeb4,293005863,0,0x0,8
tick,0x7fffe05afeb4,293021771,0,0x0,8
tick,0x7fffe05afeb4,293037874,0,0x0,8
tick,0x7fffe05afeb4,293053777,0,0x0,8
tick,0x7fffe05afeb4,293068862,0,0x0,8
tick,0x7fffe05afeb4,293084820,0,0x0,8
tick,0x7fffe05afeb4,293100770,0,0x0,8
tick,0x7fffe05afeb4,293116770,0,0x0,8
tick,0x7fffe05afeb4,293132787,0,0x0,8
tick,0x7fffe05afeb4,293148865,0,0x0,8
tick,0x7fffe05afeb4,293163766,0,0x0,8
tick,0x7fffe05afeb4,293178775,0,0x0,8
tick,0x7fffe05afeb4,293194787,0,0x0,8
tick,0x7fffe05afeb4,293209924,0,0x0,8
tick,0x7fffe05afeb4,293225861,0,0x0,8
tick,0x7fffe05afeb4,293241768,0,0x0,8
tick,0x7fffe05afeb4,293257866,0,0x0,8
tick,0x7fffe05afeb4,293272863,0,0x0,8
tick,0x7fffe05afeb4,293288785,0,0x0,8
tick,0x7fffe05afeb4,293305070,0,0x0,8
tick,0x7fffe05afeb4,293320814,0,0x0,8
tick,0x7fffe05afeb4,293336821,0,0x0,8
tick,0x7fffe05afeb4,293352945,0,0x0,8
tick,0x7fffe05afeb4,293368823,0,0x0,8
tick,0x7fffe05afeb4,293385160,0,0x0,8
tick,0x7fffe05afeb4,293400796,0,0x0,8
tick,0x7fffe05afeb4,293418730,0,0x0,8
tick,0x7fffe05afeb4,293432766,0,0x0,8
tick,0x7fffe05afeb4,293448779,0,0x0,8
tick,0x7fffe05afeb4,293464821,0,0x0,8
tick,0x7fffe05afeb4,293480877,0,0x0,8
tick,0x7fffe05afeb4,293496778,0,0x0,8
tick,0x7fffe05afeb4,293512779,0,0x0,8
tick,0x7fffe05afeb4,293528921,0,0x0,8
tick,0x7fffe05afeb4,293545014,0,0x0,8
tick,0x7fffe05afeb4,293560768,0,0x0,8
tick,0x7fffe05afeb4,293576864,0,0x0,8
tick,0x7fffe05afeb4,293592855,0,0x0,8
tick,0x7fffe05afeb4,293608776,0,0x0,8
tick,0x7fffe05afeb4,293624766,0,0x0,8
tick,0x7fffe05afeb4,293640880,0,0x0,8
tick,0x7fffe05afeb4,293656795,0,0x0,8
tick,0x7fffe05afeb4,293672790,0,0x0,8
tick,0x7fffe05afeb4,293688853,0,0x0,8
tick,0x7fffe05afeb4,293704775,0,0x0,8
tick,0x7fffe05afeb4,293720780,0,0x0,8
tick,0x7fffe05afeb4,293736776,0,0x0,8
tick,0x7fffe05afeb4,293752856,0,0x0,8
tick,0x7fffe05afeb4,293767856,0,0x0,8
tick,0x7fffe05afeb4,293783893,0,0x0,8
tick,0x7fffe05afeb4,293799863,0,0x0,8
tick,0x7fffe05afeb4,293815775,0,0x0,8
tick,0x7fffe05afeb4,293831779,0,0x0,8
tick,0x7fffe05afeb4,293847851,0,0x0,8
tick,0x7fffe05afeb4,293863900,0,0x0,8
tick,0x7fffe05afeb4,293879862,0,0x0,8
tick,0x7fffe05afeb4,293895850,0,0x0,8
tick,0x7fffe05afeb4,293911854,0,0x0,8
tick,0x7fffe05afeb4,293927796,0,0x0,8
tick,0x7fffe05afeb4,293943767,0,0x0,8
tick,0x7fffe05afeb4,293959896,0,0x0,8
tick,0x7fffe05afeb4,293975862,0,0x0,8
tick,0x7fffe05afeb4,293991806,0,0x0,8
tick,0x7fffe05afeb4,294006779,0,0x0,8
tick,0x7fffe05afeb4,294022789,0,0x0,8
tick,0x7fffe05afeb4,294038782,0,0x0,8
tick,0x7fffe05afeb4,294054776,0,0x0,8
tick,0x7fffe05afeb4,294069937,0,0x0,8
tick,0x7fffe05afeb4,294085857,0,0x0,8
tick,0x7fffe05afeb4,294101794,0,0x0,8
tick,0x7fffe05afeb4,294116855,0,0x0,8
tick,0x7fffe05afeb4,294132984,0,0x0,8
tick,0x7fffe05afeb4,294148797,0,0x0,8
tick,0x7fffe05afeb4,294163826,0,0x0,8
tick,0x7fffe05afeb4,294179799,0,0x0,8
tick,0x7fffe05afeb4,294195904,0,0x0,8
tick,0x7fffe05afeb4,294210779,0,0x0,8
tick,0x7fffe05afeb4,294226794,0,0x0,8
tick,0x7fffe05afeb4,294242774,0,0x0,8
tick,0x7fffe05afeb4,294257776,0,0x0,8
tick,0x7fffe05afeb4,294272776,0,0x0,8
tick,0x7fffe05afeb4,294287775,0,0x0,8
tick,0x7fffe05afeb4,294303791,0,0x0,8
tick,0x7fffe05afeb4,294318788,0,0x0,8
tick,0x7fffe05afeb4,294334791,0,0x0,8
tick,0x7fffe05afeb4,294350811,0,0x0,8
tick,0x7fffe05afeb4,294366790,0,0x0,8
tick,0x7fffe05afeb4,294382785,0,0x0,8
tick,0x7fffe05afeb4,294397872,0,0x0,8
tick,0x7fffe05afeb4,294412842,0,0x0,8
tick,0x7fffe05afeb4,294428770,0,0x0,8
tick,0x7fffe05afeb4,294444782,0,0x0,8
tick,0x7fffe05afeb4,294460801,0,0x0,8
tick,0x7fffe05afeb4,294476773,0,0x0,8
tick,0x7fffe05afeb4,294492766,0,0x0,8
tick,0x7fffe05afeb4,294507803,0,0x0,8
tick,0x7fffe05afeb4,294523936,0,0x0,8
tick,0x7fffe05afeb4,294539840,0,0x0,8
tick,0x7fffe05afeb4,294555798,0,0x0,8
tick,0x7fffe05afeb4,294571792,0,0x0,8
tick,0x7fffe05afeb4,294587770,0,0x0,8
tick,0x7fffe05afeb4,294603861,0,0x0,8
tick,0x7fffe05afeb4,294619846,0,0x0,8
tick,0x7fffe05afeb4,294635874,0,0x0,8
tick,0x7fffe05afeb4,294651848,0,0x0,8
tick,0x7fffe05afeb4,294667858,0,0x0,8
tick,0x7fffe05afeb4,294683764,0,0x0,8
tick,0x7fffe05afeb4,294699883,0,0x0,8
tick,0x7fffe05afeb4,294715755,0,0x0,8
tick,0x7fffe05afeb4,294731915,0,0x0,8
tick,0x7fffe05afeb4,294747938,0,0x0,8
tick,0x7fffe05afeb4,294763772,0,0x0,8
tick,0x7fffe05afeb4,294779873,0,0x0,8
tick,0x7fffe05afeb4,294795859,0,0x0,8
tick,0x7fffe05afeb4,294811846,0,0x0,8
tick,0x7fffe05afeb4,294827895,0,0x0,8
tick,0x7fffe05afeb4,294843772,0,0x0,8
tick,0x7fffe05afeb4,294859944,0,0x0,8
tick,0x7fffe05afeb4,294875786,0,0x0,8
tick,0x7fffe05afeb4,294891844,0,0x0,8
tick,0x7fffe05afeb4,294907826,0,0x0,8
tick,0x7fffe05afeb4,294922856,0,0x0,8
tick,0x7fffe05afeb4,294938806,0,0x0,8
tick,0x7fffe05afeb4,294954778,0,0x0,8
tick,0x7fffe05afeb4,294970865,0,0x0,8
tick,0x7fffe05afeb4,294986856,0,0x0,8
tick,0x7fffe05afeb4,295002861,0,0x0,8
tick,0x7fffe05afeb4,295018855,0,0x0,8
tick,0x7fffe05afeb4,295034861,0,0x0,8
tick,0x7fffe05afeb4,295050762,0,0x0,8
tick,0x7fffe05afeb4,295066821,0,0x0,8
tick,0x7fffe05afeb4,295082908,0,0x0,8
tick,0x7fffe05afeb4,295098846,0,0x0,8
tick,0x7fffe05afeb4,295114778,0,0x0,8
tick,0x7fffe05afeb4,295130851,0,0x0,8
tick,0x7fffe05afeb4,295145887,0,0x0,8
tick,0x7fffe05afeb4,295161769,0,0x0,8
tick,0x7fffe05afeb4,295177787,0,0x0,8
tick,0x7fffe05afeb4,295193769,0,0x0,8
tick,0x7fffe05afeb4,295208880,0,0x0,8
tick,0x7fffe05afeb4,295224831,0,0x0,8
tick,0x7fffe05afeb4,295240784,0,0x0,8
tick,0x7fffe05afeb4,295255843,0,0x0,8
tick,0x7fffe05afeb4,295271774,0,0x0,8
tick,0x7fffe05afeb4,295287762,0,0x0,8
tick,0x7fffe05afeb4,295303843,0,0x0,8
tick,0x7fffe05afeb4,295319962,0,0x0,8
tick,0x7fffe05afeb4,295335765,0,0x0,8
tick,0x7fffe05afeb4,295351853,0,0x0,8
tick,0x7fffe05afeb4,295367792,0,0x0,8
tick,0x7fffe05afeb4,295383824,0,0x0,8
tick,0x7fffe05afeb4,295399946,0,0x0,8
tick,0x7fffe05afeb4,295415825,0,0x0,8
tick,0x7fffe05afeb4,295431872,0,0x0,8
tick,0x7fffe05afeb4,295447812,0,0x0,8
tick,0x7fffe05afeb4,295463800,0,0x0,8
tick,0x7fffe05afeb4,295479780,0,0x0,8
tick,0x7fffe05afeb4,295495775,0,0x0,8
tick,0x7fffe05afeb4,295511859,0,0x0,8
tick,0x7fffe05afeb4,295527955,0,0x0,8
tick,0x7fffe05afeb4,295543949,0,0x0,8
tick,0x7fffe05afeb4,295559915,0,0x0,8
tick,0x7fffe05afeb4,295575852,0,0x0,8
tick,0x7fffe05afeb4,295591780,0,0x0,8
tick,0x7fffe05afeb4,295606881,0,0x0,8
tick,0x7fffe05afeb4,295622944,0,0x0,8
tick,0x7fffe05afeb4,295638775,0,0x0,8
tick,0x7fffe05afeb4,295654849,0,0x0,8
tick,0x7fffe05afeb4,295670867,0,0x0,8
tick,0x7fffe05afeb4,295686805,0,0x0,8
tick,0x7fffe05afeb4,295702764,0,0x0,8
tick,0x7fffe05afeb4,295718836,0,0x0,8
tick,0x7fffe05afeb4,295734855,0,0x0,8
tick,0x7fffe05afeb4,295750780,0,0x0,8
tick,0x7fffe05afeb4,295766847,0,0x0,8
tick,0x7fffe05afeb4,295782842,0,0x0,8
tick,0x7fffe05afeb4,295797841,0,0x0,8
tick,0x7fffe05afeb4,295813767,0,0x0,8
tick,0x7fffe05afeb4,295829824,0,0x0,8
tick,0x7fffe05afeb4,295845775,0,0x0,8
tick,0x7fffe05afeb4,295861859,0,0x0,8
tick,0x7fffe05afeb4,295877861,0,0x0,8
tick,0x7fffe05afeb4,295893855,0,0x0,8
tick,0x7fffe05afeb4,295909932,0,0x0,8
tick,0x7fffe05afeb4,295925769,0,0x0,8
tick,0x7fffe05afeb4,295941776,0,0x0,8
tick,0x7fffe05afeb4,295956839,0,0x0,8
tick,0x7fffe05afeb4,295972860,0,0x0,8
tick,0x7fffe05afeb4,295988848,0,0x0,8
tick,0x7fffe05afeb4,296004855,0,0x0,8
tick,0x7fffe05afeb4,296020776,0,0x0,8
tick,0x7fffe05afeb4,296036816,0,0x0,8
tick,0x7fffe05afeb4,296052769,0,0x0,8
tick,0x7fffe05afeb4,296067854,0,0x0,8
tick,0x7fffe05afeb4,296083872,0,0x0,8
tick,0x7fffe05afeb4,296099868,0,0x0,8
tick,0x7fffe05afeb4,296115783,0,0x0,8
tick,0x7fffe05afeb4,296131855,0,0x0,8
tick,0x7fffe05afeb4,296146778,0,0x0,8
tick,0x7fffe05afeb4,296162765,0,0x0,8
tick,0x7fffe05afeb4,296178813,0,0x0,8
tick,0x7fffe05afeb4,296194857,0,0x0,8
tick,0x7fffe05afeb4,296210763,0,0x0,8
tick,0x7fffe05afeb4,296226863,0,0x0,8
tick,0x7fffe05afeb4,296242869,0,0x0,8
tick,0x7fffe05afeb4,296258784,0,0x0,8
tick,0x7fffe05afeb4,296274779,0,0x0,8
tick,0x7fffe05afeb4,296290770,0,0x0,8
tick,0x7fffe05afeb4,296306867,0,0x0,8
tick,0x7fffe05afeb4,296322809,0,0x0,8
tick,0x7fffe05afeb4,296338780,0,0x0,8
tick,0x7fffe05afeb4,296354761,0,0x0,8
tick,0x7fffe05afeb4,296370777,0,0x0,8
tick,0x7fffe05afeb4,296386821,0,0x0,8
tick,0x7fffe05afeb4,296402772,0,0x0,8
tick,0x7fffe05afeb4,296418876,0,0x0,8
tick,0x7fffe05afeb4,296434966,0,0x0,8
tick,0x7fffe05afeb4,296450796,0,0x0,8
tick,0x7fffe05afeb4,296466803,0,0x0,8
tick,0x7fffe05afeb4,296482782,0,0x0,8
tick,0x7fffe05afeb4,296498776,0,0x0,8
tick,0x7fffe05afeb4,296514851,0,0x0,8
tick,0x7fffe05afeb4,296530768,0,0x0,8
tick,0x7fffe05afeb4,296545917,0,0x0,8
tick,0x7fffe05afeb4,296561883,0,0x0,8
tick,0x7fffe05afeb4,296577848,0,0x0,8
tick,0x7fffe05afeb4,296593765,0,0x0,8
tick,0x7fffe05afeb4,296609817,0,0x0,8
tick,0x7fffe05afeb4,296625780,0,0x0,8
tick,0x7fffe05afeb4,296641861,0,0x0,8
tick,0x7fffe05afeb4,296657843,0,0x0,8
tick,0x7fffe05afeb4,296673851,0,0x0,8
tick,0x7fffe05afeb4,296689876,0,0x0,8
tick,0x7fffe05afeb4,296705767,0,0x0,8
tick,0x7fffe05afeb4,296721842,0,0x0,8
tick,0x7fffe05afeb4,296737863,0,0x0,8
tick,0x7fffe05afeb4,296753879,0,0x0,8
tick,0x7fffe05afeb4,296769813,0,0x0,8
tick,0x7fffe05afeb4,296785850,0,0x0,8
tick,0x7fffe05afeb4,296801774,0,0x0,8
tick,0x7fffe05afeb4,296817767,0,0x0,8
tick,0x7fffe05afeb4,296833808,0,0x0,8
tick,0x7fffe05afeb4,296849856,0,0x0,8
tick,0x7fffe05afeb4,296865787,0,0x0,8
tick,0x7fffe05afeb4,296881843,0,0x0,8
tick,0x7fffe05afeb4,296897852,0,0x0,8
tick,0x7fffe05afeb4,296913758,0,0x0,8
tick,0x7fffe05afeb4,296929808,0,0x0,8
tick,0x7fffe05afeb4,296945979,0,0x0,8
tick,0x7fffe05afeb4,296961897,0,0x0,8
tick,0x7fffe05afeb4,296976938,0,0x0,8
tick,0x7fffe05afeb4,296992780,0,0x0,8
tick,0x7fffe05afeb4,297008864,0,0x0,8
tick,0x7fffe05afeb4,297024789,0,0x0,8
tick,0x7fffe05afeb4,297040798,0,0x0,8
tick,0x7fffe05afeb4,297056774,0,0x0,8
tick,0x7fffe05afeb4,297072782,0,0x0,8
tick,0x7fffe05afeb4,297088865,0,0x0,8
tick,0x7fffe05afeb4,297104808,0,0x0,8
tick,0x7fffe05afeb4,297120771,0,0x0,8
tick,0x7fffe05afeb4,297136798,0,0x0,8
tick,0x7fffe05afeb4,297152781,0,0x0,8
tick,0x7fffe05afeb4,297168778,0,0x0,8
tick,0x7fffe05afeb4,297184776,0,0x0,8
tick,0x7fffe05afeb4,297200768,0,0x0,8
tick,0x7fffe05afeb4,297216765,0,0x0,8
tick,0x7fffe05afeb4,297232827,0,0x0,8
tick,0x7fffe05afeb4,297248770,0,0x0,8
tick,0x7fffe05afeb4,297264771,0,0x0,8
tick,0x7fffe05afeb4,297279799,0,0x0,8
tick,0x7fffe05afeb4,297295792,0,0x0,8
tick,0x7fffe05afeb4,297311854,0,0x0,8
tick,0x7fffe05afeb4,297326862,0,0x0,8
tick,0x7fffe05afeb4,297342854,0,0x0,8
tick,0x7fffe05afeb4,297358844,0,0x0,8
tick,0x7fffe05afeb4,297374855,0,0x0,8
tick,0x7fffe05afeb4,297390799,0,0x0,8
tick,0x7fffe05afeb4,297405790,0,0x0,8
tick,0x7fffe05afeb4,297421853,0,0x0,8
tick,0x7fffe05afeb4,297437780,0,0x0,8
tick,0x7fffe05afeb4,297452772,0,0x0,8
tick,0x7fffe05afeb4,297468756,0,0x0,8
tick,0x7fffe05afeb4,297484773,0,0x0,8
tick,0x7fffe05afeb4,297499770,0,0x0,8
tick,0x7fffe05afeb4,297515768,0,0x0,8
tick,0x7fffe05afeb4,297531864,0,0x0,8
tick,0x7fffe05afeb4,297547856,0,0x0,8
tick,0x7fffe05afeb4,297563779,0,0x0,8
tick,0x7fffe05afeb4,297579820,0,0x0,8
tick,0x7fffe05afeb4,297595776,0,0x0,8
tick,0x7fffe05afeb4,297611771,0,0x0,8
tick,0x7fffe05afeb4,297626769,0,0x0,8
tick,0x7fffe05afeb4,297642879,0,0x0,8
tick,0x7fffe05afeb4,297658845,0,0x0,8
tick,0x7fffe05afeb4,297674846,0,0x0,8
tick,0x7fffe05afeb4,297690759,0,0x0,8
tick,0x7fffe05afeb4,297706856,0,0x0,8
tick,0x7fffe05afeb4,297722799,0,0x0,8
tick,0x7fffe05afeb4,297738783,0,0x0,8
tick,0x7fffe05afeb4,297754869,0,0x0,8
tick,0x7fffe05afeb4,297770809,0,0x0,8
tick,0x7fffe05afeb4,297787510,0,0x0,8
tick,0x7fffe05afeb4,297803997,0,0x0,8
tick,0x7fffe05afeb4,297818784,0,0x0,8
tick,0x7fffe05afeb4,297833761,0,0x0,8
tick,0x7fffe05afeb4,297848787,0,0x0,8
tick,0x7fffe05afeb4,297864879,0,0x0,8
tick,0x7fffe05afeb4,297880789,0,0x0,8
tick,0x7fffe05afeb4,297895790,0,0x0,8
tick,0x7fffe05afeb4,297911849,0,0x0,8
tick,0x7fffe05afeb4,297926846,0,0x0,8
tick,0x7fffe05afeb4,297942774,0,0x0,8
tick,0x7fffe05afeb4,297958794,0,0x0,8
tick,0x7fffe05afeb4,297974860,0,0x0,8
tick,0x7fffe05afeb4,297990782,0,0x0,8
tick,0x7fffe05afeb4,298006856,0,0x0,8
tick,0x7fffe05afeb4,298022867,0,0x0,8
tick,0x7fffe05afeb4,298038823,0,0x0,8
tick,0x7fffe05afeb4,298054817,0,0x0,8
tick,0x7fffe05afeb4,298070774,0,0x0,8
tick,0x7fffe05afeb4,298087018,0,0x0,8
tick,0x7fffe05afeb4,298102799,0,0x0,8
tick,0x7fffe05afeb4,298118853,0,0x0,8
tick,0x7fffe05afeb4,298134799,0,0x0,8
tick,0x7fffe05afeb4,298150872,0,0x0,8
tick,0x7fffe05afeb4,298166781,0,0x0,8
tick,0x7fffe05afeb4,298182783,0,0x0,8
tick,0x7fffe05afeb4,298198880,0,0x0,8
tick,0x7fffe05afeb4,298214839,0,0x0,8
tick,0x7fffe05afeb4,298230830,0,0x0,8
tick,0x7fffe05afeb4,298245843,0,0x0,8
tick,0x7fffe05afeb4,298261847,0,0x0,8
tick,0x7fffe05afeb4,298277804,0,0x0,8
tick,0x7fffe05afeb4,298293808,0,0x0,8
tick,0x7fffe05afeb4,298310185,0,0x0,8
tick,0x7fffe05afeb4,298325852,0,0x0,8
tick,0x7fffe05afeb4,298341863,0,0x0,8
tick,0x7fffe05afeb4,298357781,0,0x0,8
tick,0x7fffe05afeb4,298373847,0,0x0,8
tick,0x7fffe05afeb4,298389826,0,0x0,8
tick,0x7fffe05afeb4,298405829,0,0x0,8
tick,0x7fffe05afeb4,298421862,0,0x0,8
tick,0x7fffe05afeb4,298437779,0,0x0,8
tick,0x7fffe05afeb4,298452767,0,0x0,8
tick,0x7fffe05afeb4,298468851,0,0x0,8
tick,0x7fffe05afeb4,298484856,0,0x0,8
tick,0x7fffe05afeb4,298500787,0,0x0,8
tick,0x7fffe05afeb4,298516783,0,0x0,8
tick,0x7fffe05afeb4,298532775,0,0x0,8
tick,0x7fffe05afeb4,298548855,0,0x0,8
tick,0x7fffe05afeb4,298564860,0,0x0,8
tick,0x7fffe05afeb4,298579783,0,0x0,8
tick,0x7fffe05afeb4,298595807,0,0x0,8
tick,0x7fffe05afeb4,298610788,0,0x0,8
tick,0x7fffe05afeb4,298626777,0,0x0,8
tick,0x7fffe05afeb4,298642865,0,0x0,8
tick,0x7fffe05afeb4,298658866,0,0x0,8
tick,0x7fffe05afeb4,298674849,0,0x0,8
tick,0x7fffe05afeb4,298690844,0,0x0,8
tick,0x7fffe05afeb4,298706877,0,0x0,8
tick,0x7fffe05afeb4,298722820,0,0x0,8
tick,0x7fffe05afeb4,298738773,0,0x0,8
tick,0x7fffe05afeb4,298753790,0,0x0,8
tick,0x7fffe05afeb4,298769868,0,0x0,8
tick,0x7fffe05afeb4,298785854,0,0x0,8
tick,0x7fffe05afeb4,298801805,0,0x0,8
tick,0x7fffe05afeb4,298816784,0,0x0,8
tick,0x7fffe05afeb4,298832804,0,0x0,8
tick,0x7fffe05afeb4,298848820,0,0x0,8
tick,0x7fffe05afeb4,298864779,0,0x0,8
tick,0x7fffe05afeb4,298879889,0,0x0,8
tick,0x7fffe05afeb4,298895776,0,0x0,8
tick,0x7fffe05afeb4,298911758,0,0x0,8
tick,0x7fffe05afeb4,298926763,0,0x0,8
tick,0x7fffe05afeb4,298942805,0,0x0,8
tick,0x7fffe05afeb4,298957767,0,0x0,8
tick,0x7fffe05afeb4,298973859,0,0x0,8
tick,0x7fffe05afeb4,298989914,0,0x0,8
tick,0x7fffe05afeb4,299005838,0,0x0,8
tick,0x7fffe05afeb4,299021787,0,0x0,8
tick,0x7fffe05afeb4,299037814,0,0x0,8
tick,0x7fffe05afeb4,299053824,0,0x0,8
tick,0x7fffe05afeb4,299069957,0,0x0,8
tick,0x7fffe05afeb4,299085906,0,0x0,8
tick,0x7fffe05afeb4,299101917,0,0x0,8
tick,0x7fffe05afeb4,299116774,0,0x0,8
tick,0x7fffe05afeb4,299131824,0,0x0,8
tick,0x7fffe05afeb4,299146793,0,0x0,8
tick,0x7fffe05afeb4,299162783,0,0x0,8
tick,0x7fffe05afeb4,299178797,0,0x0,8
tick,0x7fffe05afeb4,299194816,0,0x0,8
tick,0x7fffe05afeb4,299210844,0,0x0,8
tick,0x7fffe05afeb4,299226858,0,0x0,8
tick,0x7fffe05afeb4,299242785,0,0x0,8
tick,0x7fffe05afeb4,299257764,0,0x0,8
tick,0x7fffe05afeb4,299273786,0,0x0,8
tick,0x7fffe05afeb4,299290693,0,0x0,8
tick,0x7fffe05afeb4,299305809,0,0x0,8
tick,0x7fffe05afeb4,299322346,0,0x0,8
tick,0x7fffe05afeb4,299337848,0,0x0,8
tick,0x7fffe05afeb4,299354166,0,0x0,8
tick,0x7fffe05afeb4,299369823,0,0x0,8
tick,0x7fffe05afeb4,299385929,0,0x0,8
tick,0x7fffe05afeb4,299400858,0,0x0,8
tick,0x7fffe05afeb4,299417030,0,0x0,8
tick,0x7fffe05afeb4,299432874,0,0x0,8
tick,0x7fffe05afeb4,299448828,0,0x0,8
tick,0x7fffe05afeb4,299464852,0,0x0,8
tick,0x7fffe05afeb4,299479877,0,0x0,8
tick,0x7fffe05afeb4,299494978,0,0x0,8
tick,0x7fffe05afeb4,299510796,0,0x0,8
tick,0x7fffe05afeb4,299526929,0,0x0,8
tick,0x7fffe05afeb4,299542874,0,0x0,8
tick,0x7fffe05afeb4,299558899,0,0x0,8
tick,0x7fffe05afeb4,299574815,0,0x0,8
tick,0x7fffe05afeb4,299591085,0,0x0,8
tick,0x7fffe05afeb4,299606951,0,0x0,8
tick,0x7fffe05afeb4,299621769,0,0x0,8
tick,0x7fffe05afeb4,299638303,0,0x0,8
tick,0x7fffe05afeb4,299653762,0,0x0,8
tick,0x7fffe05afeb4,299670616,0,0x0,8
tick,0x7fffe05afeb4,299685800,0,0x0,8
tick,0x7fffe05afeb4,299702124,0,0x0,8
tick,0x7fffe05afeb4,299716830,0,0x0,8
tick,0x7fffe05afeb4,299733028,0,0x0,8
tick,0x7fffe05afeb4,299748861,0,0x0,8
tick,0x7fffe05afeb4,299764880,0,0x0,8
tick,0x7fffe05afeb4,299780844,0,0x0,8
tick,0x7fffe05afeb4,299795961,0,0x0,8
tick,0x7fffe05afeb4,299811846,0,0x0,8
tick,0x7fffe05afeb4,299827868,0,0x0,8
tick,0x7fffe05afeb4,299843819,0,0x0,8
tick,0x7fffe05afeb4,299860201,0,0x0,8
tick,0x7fffe05afeb4,299875886,0,0x0,8
tick,0x7fffe05afeb4,299891942,0,0x0,8
tick,0x7fffe05afeb4,299907851,0,0x0,8
tick,0x7fffe05afeb4,299923930,0,0x0,8
tick,0x7fffe05afeb4,299940086,0,0x0,8
tick,0x7fffe05afeb4,299955805,0,0x0,8
tick,0x7fffe05afeb4,299971854,0,0x0,8
tick,0x7fffe05afeb4,299988027,0,0x0,8
tick,0x7fffe05afeb4,300003883,0,0x0,8
tick,0x7fffe05afeb4,300019952,0,0x0,8
tick,0x7fffe05afeb4,300035844,0,0x0,8
tick,0x7fffe05afeb4,300051952,0,0x0,8
tick,0x7fffe05afeb4,300067811,0,0x0,8
tick,0x7fffe05afeb4,300084114,0,0x0,8
tick,0x7fffe05afeb4,300099905,0,0x0,8
tick,0x7fffe05afeb4,300114981,0,0x0,8
tick,0x7fffe05afeb4,300130943,0,0x0,8
tick,0x7fffe05afeb4,300145975,0,0x0,8
tick,0x7fffe05afeb4,300161771,0,0x0,8
tick,0x7fffe05afeb4,300177877,0,0x0,8
tick,0x7fffe05afeb4,300193878,0,0x0,8
tick,0x7fffe05afeb4,300208832,0,0x0,8
tick,0x7fffe05afeb4,300224855,0,0x0,8
tick,0x7fffe05afeb4,300240889,0,0x0,8
tick,0x7fffe05afeb4,300256785,0,0x0,8
tick,0x7fffe05afeb4,300272952,0,0x0,8
tick,0x7fffe05afeb4,300288776,0,0x0,8
tick,0x7fffe05afeb4,300303946,0,0x0,8
tick,0x7fffe05afeb4,300319887,0,0x0,8
tick,0x7fffe05afeb4,300335850,0,0x0,8
tick,0x7fffe05afeb4,300351937,0,0x0,8
tick,0x7fffe05afeb4,300366935,0,0x0,8
tick,0x7fffe05afeb4,300382863,0,0x0,8
tick,0x7fffe05afeb4,300398813,0,0x0,8
tick,0x7fffe05afeb4,300415203,0,0x0,8
tick,0x7fffe05afeb4,300430943,0,0x0,8
tick,0x7fffe05afeb4,300445940,0,0x0,8
tick,0x7fffe05afeb4,300461855,0,0x0,8
tick,0x7fffe05afeb4,300477817,0,0x0,8
tick,0x7fffe05afeb4,300493867,0,0x0,8
tick,0x7fffe05afeb4,300510517,0,0x0,8
tick,0x7fffe05afeb4,300525934,0,0x0,8
tick,0x7fffe05afeb4,300541772,0,0x0,8
tick,0x7fffe05afeb4,300557940,0,0x0,8
tick,0x7fffe05afeb4,300573880,0,0x0,8
tick,0x7fffe05afeb4,300589958,0,0x0,8
tick,0x7fffe05afeb4,300605751,0,0x0,8
tick,0x7fffe05afeb4,300621886,0,0x0,8
tick,0x7fffe05afeb4,300637837,0,0x0,8
tick,0x7fffe05afeb4,300653996,0,0x0,8
tick,0x7fffe05afeb4,300669865,0,0x0,8
tick,0x7fffe05afeb4,300684842,0,0x0,8
tick,0x7fffe05afeb4,300700783,0,0x0,8
tick,0x7fffe05afeb4,300716756,0,0x0,8
tick,0x7fffe05afeb4,300732844,0,0x0,8
tick,0x7fffe05afeb4,300748886,0,0x0,8
tick,0x7fffe05afeb4,300763835,0,0x0,8
tick,0x7fffe05afeb4,300780057,0,0x0,8
tick,0x7fffe05afeb4,300795892,0,0x0,8
tick,0x7fffe05afeb4,300811950,0,0x0,8
tick,0x7fffe05afeb4,300827896,0,0x0,8
tick,0x7fffe05afeb4,300843916,0,0x0,8
tick,0x7fffe05afeb4,300859807,0,0x0,8
tick,0x7fffe05afeb4,300874904,0,0x0,8
tick,0x7fffe05afeb4,300890847,0,0x0,8
tick,0x7fffe05afeb4,300906870,0,0x0,8
tick,0x7fffe05afeb4,300922884,0,0x0,8
tick,0x7fffe05afeb4,300938908,0,0x0,8
tick,0x7fffe05afeb4,300954770,0,0x0,8
tick,0x7fffe05afeb4,300970935,0,0x0,8
tick,0x7fffe05afeb4,300986784,0,0x0,8
tick,0x7fffe05afeb4,301002911,0,0x0,8
tick,0x7fffe05afeb4,301018887,0,0x0,8
tick,0x7fffe05afeb4,301034894,0,0x0,8
tick,0x7fffe05afeb4,301049767,0,0x0,8
tick,0x7fffe05afeb4,301064949,0,0x0,8
tick,0x7fffe05afeb4,301079923,0,0x0,8
tick,0x7fffe05afeb4,301095866,0,0x0,8
tick,0x7fffe05afeb4,301111849,0,0x0,8
tick,0x7fffe05afeb4,301127957,0,0x0,8
tick,0x7fffe05afeb4,301143871,0,0x0,8
tick,0x7fffe05afeb4,301159974,0,0x0,8
tick,0x7fffe05afeb4,301176002,0,0x0,8
tick,0x7fffe05afeb4,301192110,0,0x0,8
tick,0x7fffe05afeb4,301207766,0,0x0,8
tick,0x7fffe05afeb4,301223874,0,0x0,8
tick,0x7fffe05afeb4,301239961,0,0x0,8
tick,0x7fffe05afeb4,301255982,0,0x0,8
tick,0x7fffe05afeb4,301271897,0,0x0,8
tick,0x7fffe05afeb4,301287897,0,0x0,8
tick,0x7fffe05afeb4,301304124,0,0x0,8
tick,0x7fffe05afeb4,301320018,0,0x0,8
tick,0x7fffe05afeb4,301336012,0,0x0,8
tick,0x7fffe05afeb4,301351839,0,0x0,8
tick,0x7fffe05afeb4,301367951,0,0x0,8
tick,0x7fffe05afeb4,301384324,0,0x0,8
tick,0x7fffe05afeb4,301398778,0,0x0,8
tick,0x7fffe05afeb4,301415599,0,0x0,8
tick,0x7fffe05afeb4,301430874,0,0x0,8
tick,0x7fffe05afeb4,301446640,0,0x0,8
tick,0x7fffe05afeb4,301462054,0,0x0,8
tick,0x7fffe05afeb4,301478000,0,0x0,8
tick,0x7fffe05afeb4,301493830,0,0x0,8
tick,0x7fffe05afeb4,301510594,0,0x0,8
tick,0x7fffe05afeb4,301526143,0,0x0,8
tick,0x7fffe05afeb4,301542065,0,0x0,8
tick,0x7fffe05afeb4,301556802,0,0x0,8
tick,0x7fffe05afeb4,301573342,0,0x0,8
tick,0x7fffe05afeb4,301588859,0,0x0,8
tick,0x7fffe05afeb4,301604768,0,0x0,8
tick,0x7fffe05afeb4,301620757,0,0x0,8
tick,0x7fffe05afeb4,301637209,0,0x0,8
tick,0x7fffe05afeb4,301652891,0,0x0,8
tick,0x7fffe05afeb4,301668959,0,0x0,8
tick,0x7fffe05afeb4,301684879,0,0x0,8
tick,0x7fffe05afeb4,301700982,0,0x0,8
tick,0x7fffe05afeb4,301716770,0,0x0,8
tick,0x7fffe05afeb4,301732938,0,0x0,8
tick,0x7fffe05afeb4,301748864,0,0x0,8
tick,0x7fffe05afeb4,301765003,0,0x0,8
tick,0x7fffe05afeb4,301780002,0,0x0,8
tick,0x7fffe05afeb4,301794981,0,0x0,8
tick,0x7fffe05afeb4,301810766,0,0x0,8
tick,0x7fffe05afeb4,301825919,0,0x0,8
tick,0x7fffe05afeb4,301841843,0,0x0,8
tick,0x7fffe05afeb4,301857879,0,0x0,8
tick,0x7fffe05afeb4,301873825,0,0x0,8
tick,0x7fffe05afeb4,301890019,0,0x0,8
tick,0x7fffe05afeb4,301905866,0,0x0,8
tick,0x7fffe05afeb4,301921837,0,0x0,8
tick,0x7fffe05afeb4,301936931,0,0x0,8
tick,0x7fffe05afeb4,301953046,0,0x0,8
tick,0x7fffe05afeb4,301969099,0,0x0,8
tick,0x7fffe05afeb4,301984930,0,0x0,8
tick,0x7fffe05afeb4,302000810,0,0x0,8
tick,0x7fffe05afeb4,302017162,0,0x0,8
tick,0x7fffe05afeb4,302033004,0,0x0,8
tick,0x7fffe05afeb4,302047912,0,0x0,8
tick,0x7fffe05afeb4,302063763,0,0x0,8
tick,0x7fffe05afeb4,302080952,0,0x0,8
tick,0x7fffe05afeb4,302096033,0,0x0,8
tick,0x7fffe05afeb4,302111866,0,0x0,8
tick,0x7fffe05afeb4,302127888,0,0x0,8
tick,0x7fffe05afeb4,302144202,0,0x0,8
tick,0x7fffe05afeb4,302159998,0,0x0,8
tick,0x7fffe05afeb4,302178940,0,0x0,8
tick,0x7fffe05afeb4,302191104,0,0x0,8
tick,0x7fffe05afeb4,302205944,0,0x0,8
tick,0x7fffe05afeb4,302221915,0,0x0,8
tick,0x7fffe05afeb4,302238040,0,0x0,8
tick,0x7fffe05afeb4,302254078,0,0x0,8
tick,0x7fffe05afeb4,302270085,0,0x0,8
tick,0x7fffe05afeb4,302285974,0,0x0,8
tick,0x7fffe05afeb4,302301934,0,0x0,8
tick,0x7fffe05afeb4,302318033,0,0x0,8
tick,0x7fffe05afeb4,302333912,0,0x0,8
tick,0x7fffe05afeb4,302349930,0,0x0,8
tick,0x7fffe05afeb4,302367379,0,0x0,8
tick,0x7fffe05afeb4,302381901,0,0x0,8
tick,0x7fffe05afeb4,302398055,0,0x0,8
tick,0x7fffe05afeb4,302413793,0,0x0,8
tick,0x7fffe05afeb4,302430103,0,0x0,8
tick,0x7fffe05afeb4,302446032,0,0x0,8
tick,0x7fffe05afeb4,302460987,0,0x0,8
tick,0x7fffe05afeb4,302476038,0,0x0,8
tick,0x7fffe05afeb4,302491844,0,0x0,8
tick,0x7fffe05afeb4,302507763,0,0x0,8
tick,0x7fffe05afeb4,302522960,0,0x0,8
tick,0x7fffe05afeb4,302538067,0,0x0,8
tick,0x7fffe05afeb4,302552843,0,0x0,8
tick,0x7fffe05afeb4,302568856,0,0x0,8
tick,0x7fffe05afeb4,302584919,0,0x0,8
tick,0x7fffe05afeb4,302600809,0,0x0,8
tick,0x7fffe05afeb4,302616931,0,0x0,8
tick,0x7fffe05afeb4,302632889,0,0x0,8
tick,0x7fffe05afeb4,302648954,0,0x0,8
tick,0x7fffe05afeb4,302665170,0,0x0,8
tick,0x7fffe05afeb4,302679945,0,0x0,8
tick,0x7fffe05afeb4,302694851,0,0x0,8
tick,0x7fffe05afeb4,302710855,0,0x0,8
tick,0x7fffe05afeb4,302726864,0,0x0,8
tick,0x7fffe05afeb4,302742077,0,0x0,8
tick,0x7fffe05afeb4,302757853,0,0x0,8
tick,0x7fffe05afeb4,302774016,0,0x0,8
tick,0x7fffe05afeb4,302788837,0,0x0,8
tick,0x7fffe05afeb4,302805867,0,0x0,8
tick,0x7fffe05afeb4,302820929,0,0x0,8
tick,0x7fffe05afeb4,302837404,0,0x0,8
tick,0x7fffe05afeb4,302851865,0,0x0,8
tick,0x7fffe05afeb4,302868186,0,0x0,8
tick,0x7fffe05afeb4,302881792,0,0x0,8
tick,0x7fffe05afeb4,302902011,0,0x0,8
tick,0x7fffe05afeb4,302912854,0,0x0,8
tick,0x7fffe05afeb4,302929128,0,0x0,8
tick,0x7fffe05afeb4,302944776,0,0x0,8
tick,0x7fffe05afeb4,302960836,0,0x0,8
tick,0x7fffe05afeb4,302976764,0,0x0,8
tick,0x7fffe05afeb4,302991783,0,0x0,8
tick,0x7fffe05afeb4,303007861,0,0x0,8
tick,0x7fffe05afeb4,303023782,0,0x0,8
tick,0x7fffe05afeb4,303038782,0,0x0,8
tick,0x7fffe05afeb4,303054772,0,0x0,8
tick,0x7fffe05afeb4,303070866,0,0x0,8
tick,0x7fffe05afeb4,303085850,0,0x0,8
tick,0x7fffe05afeb4,303101802,0,0x0,8
tick,0x7fffe05afeb4,303117861,0,0x0,8
tick,0x7fffe05afeb4,303132778,0,0x0,8
tick,0x7fffe05afeb4,303148768,0,0x0,8
tick,0x7fffe05afeb4,303163845,0,0x0,8
tick,0x7fffe05afeb4,303180042,0,0x0,8
tick,0x7fffe05afeb4,303195818,0,0x0,8
tick,0x7fffe05afeb4,303211868,0,0x0,8
tick,0x7fffe05afeb4,303227921,0,0x0,8
tick,0x7fffe05afeb4,303243882,0,0x0,8
tick,0x7fffe05afeb4,303260248,0,0x0,8
tick,0x7fffe05afeb4,303275796,0,0x0,8
tick,0x7fffe05afeb4,303291920,0,0x0,8
tick,0x7fffe05afeb4,303307844,0,0x0,8
tick,0x7fffe05afeb4,303323890,0,0x0,8
tick,0x7fffe05afeb4,303339868,0,0x0,8
tick,0x7fffe05afeb4,303355787,0,0x0,8
tick,0x7fffe05afeb4,303371806,0,0x0,8
tick,0x7fffe05afeb4,303387887,0,0x0,8
tick,0x7fffe05afeb4,303402859,0,0x0,8
tick,0x7fffe05afeb4,303418823,0,0x0,8
tick,0x7fffe05afeb4,303434768,0,0x0,8
tick,0x7fffe05afeb4,303450771,0,0x0,8
tick,0x7fffe05afeb4,303465876,0,0x0,8
tick,0x7fffe05afeb4,303487582,0,0x0,8
tick,0x7fffe05afeb4,303497837,0,0x0,8
tick,0x7fffe05afeb4,303512928,0,0x0,8
tick,0x7fffe05afeb4,303528952,0,0x0,8
tick,0x7fffe05afeb4,303545103,0,0x0,8
tick,0x7fffe05afeb4,303560795,0,0x0,8
tick,0x7fffe05afeb4,303576796,0,0x0,8
tick,0x7fffe05afeb4,303593272,0,0x0,8
tick,0x7fffe05afeb4,303608861,0,0x0,8
tick,0x7fffe05afeb4,303624905,0,0x0,8
tick,0x7fffe05afeb4,303640854,0,0x0,8
tick,0x7fffe05afeb4,303655934,0,0x0,8
tick,0x7fffe05afeb4,303671852,0,0x0,8
tick,0x7fffe05afeb4,303687836,0,0x0,8
tick,0x7fffe05afeb4,303703909,0,0x0,8
tick,0x7fffe05afeb4,303720027,0,0x0,8
tick,0x7fffe05afeb4,303734936,0,0x0,8
tick,0x7fffe05afeb4,303750838,0,0x0,8
tick,0x7fffe05afeb4,303766818,0,0x0,8
tick,0x7fffe05afeb4,303782889,0,0x0,8
tick,0x7fffe05afeb4,303798771,0,0x0,8
tick,0x7fffe05afeb4,303814923,0,0x0,8
tick,0x7fffe05afeb4,303830825,0,0x0,8
tick,0x7fffe05afeb4,303845960,0,0x0,8
tick,0x7fffe05afeb4,303861851,0,0x0,8
tick,0x7fffe05afeb4,303877865,0,0x0,8
tick,0x7fffe05afeb4,303893907,0,0x0,8
tick,0x7fffe05afeb4,303909942,0,0x0,8
tick,0x7fffe05afeb4,303926479,0,0x0,8
tick,0x7fffe05afeb4,303941894,0,0x0,8
tick,0x7fffe05afeb4,303958025,0,0x0,8
tick,0x7fffe05afeb4,303973958,0,0x0,8
tick,0x7fffe05afeb4,303990383,0,0x0,8
tick,0x7fffe05afeb4,304005976,0,0x0,8
tick,0x7fffe05afeb4,304020843,0,0x0,8
tick,0x7fffe05afeb4,304036981,0,0x0,8
tick,0x7fffe05afeb4,304052966,0,0x0,8
tick,0x7fffe05afeb4,304068846,0,0x0,8
tick,0x7fffe05afeb4,304084951,0,0x0,8
tick,0x7fffe05afeb4,304100892,0,0x0,8
tick,0x7fffe05afeb4,304116844,0,0x0,8
tick,0x7fffe05afeb4,304131946,0,0x0,8
tick,0x7fffe05afeb4,304147867,0,0x0,8
tick,0x7fffe05afeb4,304163870,0,0x0,8
tick,0x7fffe05afeb4,304179966,0,0x0,8
tick,0x7fffe05afeb4,304194926,0,0x0,8
tick,0x7fffe05afeb4,304210808,0,0x0,8
tick,0x7fffe05afeb4,304226856,0,0x0,8
tick,0x7fffe05afeb4,304242996,0,0x0,8
tick,0x7fffe05afeb4,304258948,0,0x0,8
tick,0x7fffe05afeb4,304273774,0,0x0,8
tick,0x7fffe05afeb4,304289583,0,0x0,8
tick,0x7fffe05afeb4,304304877,0,0x0,8
tick,0x7fffe05afeb4,304322071,0,0x0,8
tick,0x7fffe05afeb4,304335971,0,0x0,8
tick,0x7fffe05afeb4,304352086,0,0x0,8
tick,0x7fffe05afeb4,304368183,0,0x0,8
tick,0x7fffe05afeb4,304382798,0,0x0,8
tick,0x7fffe05afeb4,304399153,0,0x0,8
tick,0x7fffe05afeb4,304416011,0,0x0,8
tick,0x7fffe05afeb4,304430778,0,0x0,8
tick,0x7fffe05afeb4,304446884,0,0x0,8
tick,0x7fffe05afeb4,304461789,0,0x0,8
tick,0x7fffe05afeb4,304478935,0,0x0,8
tick,0x7fffe05afeb4,304494105,0,0x0,8
tick,0x7fffe05afeb4,304510482,0,0x0,8
tick,0x7fffe05afeb4,304524768,0,0x0,8
tick,0x7fffe05afeb4,304540189,0,0x0,8
tick,0x7fffe05afeb4,304556004,0,0x0,8
tick,0x7fffe05afeb4,304572067,0,0x0,8
tick,0x7fffe05afeb4,304586920,0,0x0,8
tick,0x7fffe05afeb4,304603043,0,0x0,8
tick,0x7fffe05afeb4,304618885,0,0x0,8
tick,0x7fffe05afeb4,304635560,0,0x0,8
tick,0x7fffe05afeb4,304650811,0,0x0,8
tick,0x7fffe05afeb4,304665977,0,0x0,8
tick,0x7fffe05afeb4,304681778,0,0x0,8
tick,0x7fffe05afeb4,304697917,0,0x0,8
tick,0x7fffe05afeb4,304713859,0,0x0,8
tick,0x7fffe05afeb4,304729876,0,0x0,8
tick,0x7fffe05afeb4,304744765,0,0x0,8
tick,0x7fffe05afeb4,304760845,0,0x0,8
tick,0x7fffe05afeb4,304775850,0,0x0,8
tick,0x7fffe05afeb4,304791805,0,0x0,8
tick,0x7fffe05afeb4,304807803,0,0x0,8
tick,0x7fffe05afeb4,304824008,0,0x0,8
tick,0x7fffe05afeb4,304839896,0,0x0,8
tick,0x7fffe05afeb4,304855872,0,0x0,8
tick,0x7fffe05afeb4,304870780,0,0x0,8
tick,0x7fffe05afeb4,304886836,0,0x0,8
tick,0x7fffe05afeb4,304902773,0,0x0,8
tick,0x7fffe05afeb4,304918833,0,0x0,8
tick,0x7fffe05afeb4,304934890,0,0x0,8
tick,0x7fffe05afeb4,304950862,0,0x0,8
tick,0x7fffe05afeb4,304966862,0,0x0,8
tick,0x7fffe05afeb4,304982844,0,0x0,8
tick,0x7fffe05afeb4,304998783,0,0x0,8
tick,0x7fffe05afeb4,305014763,0,0x0,8
tick,0x7fffe05afeb4,305030788,0,0x0,8
tick,0x7fffe05afeb4,305045849,0,0x0,8
tick,0x7fffe05afeb4,305061875,0,0x0,8
tick,0x7fffe05afeb4,305077782,0,0x0,8
tick,0x7fffe05afeb4,305093880,0,0x0,8
tick,0x7fffe05afeb4,305109784,0,0x0,8
tick,0x7fffe05afeb4,305124761,0,0x0,8
tick,0x7fffe05afeb4,305139839,0,0x0,8
tick,0x7fffe05afeb4,305155866,0,0x0,8
tick,0x7fffe05afeb4,305171878,0,0x0,8
tick,0x7fffe05afeb4,305187941,0,0x0,8
tick,0x7fffe05afeb4,305203794,0,0x0,8
tick,0x7fffe05afeb4,305219805,0,0x0,8
tick,0x7fffe05afeb4,305235970,0,0x0,8
tick,0x7fffe05afeb4,305251771,0,0x0,8
tick,0x7fffe05afeb4,305268025,0,0x0,8
tick,0x7fffe05afeb4,305283890,0,0x0,8
tick,0x7fffe05afeb4,305299785,0,0x0,8
tick,0x7fffe05afeb4,305315812,0,0x0,8
tick,0x7fffe05afeb4,305332052,0,0x0,8
tick,0x7fffe05afeb4,305347805,0,0x0,8
tick,0x7fffe05afeb4,305363804,0,0x0,8
tick,0x7fffe05afeb4,305379941,0,0x0,8
tick,0x7fffe05afeb4,305396112,0,0x0,8
tick,0x7fffe05afeb4,305411820,0,0x0,8
tick,0x7fffe05afeb4,305429297,0,0x0,8
tick,0x7fffe05afeb4,305443778,0,0x0,8
tick,0x7fffe05afeb4,305459919,0,0x0,8
tick,0x7fffe05afeb4,305475777,0,0x0,8
tick,0x7fffe05afeb4,305492342,0,0x0,8
tick,0x7fffe05afeb4,305507849,0,0x0,8
tick,0x7fffe05afeb4,305522779,0,0x0,8
tick,0x7fffe05afeb4,305544328,0,0x0,8
tick,0x7fffe05afeb4,305555612,0,0x0,8
tick,0x7fffe05afeb4,305573080,0,0x0,8
tick,0x7fffe05afeb4,305586795,0,0x0,8
tick,0x7fffe05afeb4,305608853,0,0x0,8
tick,0x7fffe05afeb4,305620417,0,0x0,8
tick,0x7fffe05afeb4,305635443,0,0x0,8
tick,0x7fffe05afeb4,305648933,0,0x0,8
tick,0x7fffe05afeb4,305667896,0,0x0,8
tick,0x7fffe05afeb4,305679889,0,0x0,8
tick,0x7fffe05afeb4,305696900,0,0x0,8
tick,0x7fffe05afeb4,305711807,0,0x0,8
tick,0x7fffe05afeb4,305728143,0,0x0,8
tick,0x7fffe05afeb4,305744030,0,0x0,8
tick,0x7fffe05afeb4,305760055,0,0x0,8
tick,0x7fffe05afeb4,305775840,0,0x0,8
tick,0x7fffe05afeb4,305792218,0,0x0,8
tick,0x7fffe05afeb4,305807857,0,0x0,8
tick,0x7fffe05afeb4,305824026,0,0x0,8
tick,0x7fffe05afeb4,305839951,0,0x0,8
tick,0x7fffe05afeb4,305855854,0,0x0,8
tick,0x7fffe05afeb4,305871836,0,0x0,8
tick,0x7fffe05afeb4,305887860,0,0x0,8
tick,0x7fffe05afeb4,305904205,0,0x0,8
tick,0x7fffe05afeb4,305919918,0,0x0,8
tick,0x7fffe05afeb4,305935904,0,0x0,8
tick,0x7fffe05afeb4,305955280,0,0x0,8
tick,0x7fffe05afeb4,305967782,0,0x0,8
tick,0x7fffe05afeb4,305983858,0,0x0,8
tick,0x7fffe05afeb4,305999880,0,0x0,8
tick,0x7fffe05afeb4,306016000,0,0x0,8
tick,0x7fffe05afeb4,306030789,0,0x0,8
tick,0x7fffe05afeb4,306045901,0,0x0,8
tick,0x7fffe05afeb4,306061995,0,0x0,8
tick,0x7fffe05afeb4,306077862,0,0x0,8
tick,0x7fffe05afeb4,306093909,0,0x0,8
tick,0x7fffe05afeb4,306109796,0,0x0,8
tick,0x7fffe05afeb4,306126019,0,0x0,8
tick,0x7fffe05afeb4,306141898,0,0x0,8
tick,0x7fffe05afeb4,306157929,0,0x0,8
tick,0x7fffe05afeb4,306174001,0,0x0,8
tick,0x7fffe05afeb4,306190028,0,0x0,8
tick,0x7fffe05afeb4,306205816,0,0x0,8
tick,0x7fffe05afeb4,306221765,0,0x0,8
tick,0x7fffe05afeb4,306237760,0,0x0,8
tick,0x7fffe05afeb4,306253934,0,0x0,8
tick,0x7fffe05afeb4,306269928,0,0x0,8
tick,0x7fffe05afeb4,306285887,0,0x0,8
tick,0x7fffe05afeb4,306301763,0,0x0,8
tick,0x7fffe05afeb4,306317850,0,0x0,8
tick,0x7fffe05afeb4,306333907,0,0x0,8
tick,0x7fffe05afeb4,306349889,0,0x0,8
tick,0x7fffe05afeb4,306365833,0,0x0,8
tick,0x7fffe05afeb4,306381978,0,0x0,8
tick,0x7fffe05afeb4,306398123,0,0x0,8
tick,0x7fffe05afeb4,306413927,0,0x0,8
tick,0x7fffe05afeb4,306429987,0,0x0,8
tick,0x7fffe05afeb4,306445953,0,0x0,8
tick,0x7fffe05afeb4,306461907,0,0x0,8
tick,0x7fffe05afeb4,306478542,0,0x0,8
tick,0x7fffe05afeb4,306493049,0,0x0,8
tick,0x7fffe05afeb4,306510789,0,0x0,8
tick,0x7fffe05afeb4,306525025,0,0x0,8
tick,0x7fffe05afeb4,306541506,0,0x0,8
tick,0x7fffe05afeb4,306556860,0,0x0,8
tick,0x7fffe05afeb4,306573097,0,0x0,8
tick,0x7fffe05afeb4,306588864,0,0x0,8
tick,0x7fffe05afeb4,306604794,0,0x0,8
tick,0x7fffe05afeb4,306621071,0,0x0,8
tick,0x7fffe05afeb4,306637091,0,0x0,8
tick,0x7fffe05afeb4,306652886,0,0x0,8
tick,0x7fffe05afeb4,306668954,0,0x0,8
tick,0x7fffe05afeb4,306683904,0,0x0,8
tick,0x7fffe05afeb4,306700837,0,0x0,8
tick,0x7fffe05afeb4,306715789,0,0x0,8
tick,0x7fffe05afeb4,306732236,0,0x0,8
tick,0x7fffe05afeb4,306747899,0,0x0,8
tick,0x7fffe05afeb4,306763871,0,0x0,8
tick,0x7fffe05afeb4,306779950,0,0x0,8
tick,0x7fffe05afeb4,306794967,0,0x0,8
tick,0x7fffe05afeb4,306810764,0,0x0,8
tick,0x7fffe05afeb4,306827021,0,0x0,8
tick,0x7fffe05afeb4,306843105,0,0x0,8
tick,0x7fffe05afeb4,306859331,0,0x0,8
tick,0x7fffe05afeb4,306874794,0,0x0,8
tick,0x7fffe05afeb4,306891064,0,0x0,8
tick,0x7fffe05afeb4,306906848,0,0x0,8
tick,0x7fffe05afeb4,306922813,0,0x0,8
tick,0x7fffe05afeb4,306938905,0,0x0,8
tick,0x7fffe05afeb4,306955873,0,0x0,8
tick,0x7fffe05afeb4,306969884,0,0x0,8
tick,0x7fffe05afeb4,306984989,0,0x0,8
tick,0x7fffe05afeb4,306999847,0,0x0,8
tick,0x7fffe05afeb4,307015922,0,0x0,8
tick,0x7fffe05afeb4,307031828,0,0x0,8
tick,0x7fffe05afeb4,307048160,0,0x0,8
tick,0x7fffe05afeb4,307063789,0,0x0,8
tick,0x7fffe05afeb4,307080303,0,0x0,8
tick,0x7fffe05afeb4,307096281,0,0x0,8
tick,0x7fffe05afeb4,307113102,0,0x0,8
tick,0x7fffe05afeb4,307126774,0,0x0,8
tick,0x7fffe05afeb4,307143274,0,0x0,8
tick,0x7fffe05afeb4,307158975,0,0x0,8
tick,0x7fffe05afeb4,307175362,0,0x0,8
tick,0x7fffe05afeb4,307191045,0,0x0,8
tick,0x7fffe05afeb4,307207095,0,0x0,8
tick,0x7fffe05afeb4,307223199,0,0x0,8
tick,0x7fffe05afeb4,307238893,0,0x0,8
tick,0x7fffe05afeb4,307253907,0,0x0,8
tick,0x7fffe05afeb4,307269888,0,0x0,8
tick,0x7fffe05afeb4,307284860,0,0x0,8
tick,0x7fffe05afeb4,307300995,0,0x0,8
tick,0x7fffe05afeb4,307316857,0,0x0,8
tick,0x7fffe05afeb4,307332947,0,0x0,8
tick,0x7fffe05afeb4,307348776,0,0x0,8
tick,0x7fffe05afeb4,307364830,0,0x0,8
tick,0x7fffe05afeb4,307380782,0,0x0,8
tick,0x7fffe05afeb4,307395966,0,0x0,8
tick,0x7fffe05afeb4,307411898,0,0x0,8
tick,0x7fffe05afeb4,307427869,0,0x0,8
tick,0x7fffe05afeb4,307443839,0,0x0,8
tick,0x7fffe05afeb4,307460226,0,0x0,8
tick,0x7fffe05afeb4,307475786,0,0x0,8
tick,0x7fffe05afeb4,307490967,0,0x0,8
tick,0x7fffe05afeb4,307506974,0,0x0,8
tick,0x7fffe05afeb4,307522859,0,0x0,8
tick,0x7fffe05afeb4,307538851,0,0x0,8
tick,0x7fffe05afeb4,307554765,0,0x0,8
tick,0x7fffe05afeb4,307571455,0,0x0,8
tick,0x7fffe05afeb4,307587038,0,0x0,8
tick,0x7fffe05afeb4,307602814,0,0x0,8
tick,0x7fffe05afeb4,307618231,0,0x0,8
tick,0x7fffe05afeb4,307633969,0,0x0,8
tick,0x7fffe05afeb4,307650062,0,0x0,8
tick,0x7fffe05afeb4,307666224,0,0x0,8
tick,0x7fffe05afeb4,307681818,0,0x0,8
tick,0x7fffe05afeb4,307697849,0,0x0,8
tick,0x7fffe05afeb4,307713958,0,0x0,8
tick,0x7fffe05afeb4,307729791,0,0x0,8
tick,0x7fffe05afeb4,307744865,0,0x0,8
tick,0x7fffe05afeb4,307761313,0,0x0,8
tick,0x7fffe05afeb4,307776984,0,0x0,8
tick,0x7fffe05afeb4,307792808,0,0x0,8
tick,0x7fffe05afeb4,307807859,0,0x0,8
tick,0x7fffe05afeb4,307822848,0,0x0,8
tick,0x7fffe05afeb4,307839205,0,0x0,8
tick,0x7fffe05afeb4,307854961,0,0x0,8
tick,0x7fffe05afeb4,307870851,0,0x0,8
tick,0x7fffe05afeb4,307886893,0,0x0,8
tick,0x7fffe05afeb4,307902999,0,0x0,8
tick,0x7fffe05afeb4,307918973,0,0x0,8
tick,0x7fffe05afeb4,307934041,0,0x0,8
tick,0x7fffe05afeb4,307949899,0,0x0,8
tick,0x7fffe05afeb4,307965946,0,0x0,8
tick,0x7fffe05afeb4,307981867,0,0x0,8
tick,0x7fffe05afeb4,307997870,0,0x0,8
tick,0x7fffe05afeb4,308014108,0,0x0,8
tick,0x7fffe05afeb4,308030118,0,0x0,8
tick,0x7fffe05afeb4,308046062,0,0x0,8
tick,0x7fffe05afeb4,308062087,0,0x0,8
tick,0x7fffe05afeb4,308077850,0,0x0,8
tick,0x7fffe05afeb4,308094056,0,0x0,8
tick,0x7fffe05afeb4,308109894,0,0x0,8
tick,0x7fffe05afeb4,308126051,0,0x0,8
tick,0x7fffe05afeb4,308141961,0,0x0,8
tick,0x7fffe05afeb4,308158020,0,0x0,8
tick,0x7fffe05afeb4,308173975,0,0x0,8
tick,0x7fffe05afeb4,308189967,0,0x0,8
tick,0x7fffe05afeb4,308205858,0,0x0,8
tick,0x7fffe05afeb4,308220905,0,0x0,8
tick,0x7fffe05afeb4,308236986,0,0x0,8
tick,0x7fffe05afeb4,308252928,0,0x0,8
tick,0x7fffe05afeb4,308268937,0,0x0,8
tick,0x7fffe05afeb4,308284894,0,0x0,8
tick,0x7fffe05afeb4,308300815,0,0x0,8
tick,0x7fffe05afeb4,308315864,0,0x0,8
tick,0x7fffe05afeb4,308331925,0,0x0,8
tick,0x7fffe05afeb4,308347978,0,0x0,8
tick,0x7fffe05afeb4,308363910,0,0x0,8
tick,0x7fffe05afeb4,308379935,0,0x0,8
tick,0x7fffe05afeb4,308395864,0,0x0,8
tick,0x7fffe05afeb4,308411950,0,0x0,8
tick,0x7fffe05afeb4,308427913,0,0x0,8
tick,0x7fffe05afeb4,308443922,0,0x0,8
tick,0x7fffe05afeb4,308459835,0,0x0,8
tick,0x7fffe05afeb4,308475875,0,0x0,8
tick,0x7fffe05afeb4,308491770,0,0x0,8
tick,0x7fffe05afeb4,308508061,0,0x0,8
tick,0x7fffe05afeb4,308523825,0,0x0,8
tick,0x7fffe05afeb4,308540953,0,0x0,8
tick,0x7fffe05afeb4,308556161,0,0x0,8
tick,0x7fffe05afeb4,308571827,0,0x0,8
tick,0x7fffe05afeb4,308587849,0,0x0,8
tick,0x7fffe05afeb4,308603420,0,0x0,8
tick,0x7fffe05afeb4,308618879,0,0x0,8
tick,0x7fffe05afeb4,308635389,0,0x0,8
tick,0x7fffe05afeb4,308649869,0,0x0,8
tick,0x7fffe05afeb4,308665630,0,0x0,8
tick,0x7fffe05afeb4,308680815,0,0x0,8
tick,0x7fffe05afeb4,308697364,0,0x0,8
tick,0x7fffe05afeb4,308712778,0,0x0,8
tick,0x7fffe05afeb4,308729687,0,0x0,8
tick,0x7fffe05afeb4,308744872,0,0x0,8
tick,0x7fffe05afeb4,308760780,0,0x0,8
tick,0x7fffe05afeb4,308776788,0,0x0,8
tick,0x7fffe05afeb4,308792907,0,0x0,8
tick,0x7fffe05afeb4,308808849,0,0x0,8
tick,0x7fffe05afeb4,308824772,0,0x0,8
tick,0x7fffe05afeb4,308840894,0,0x0,8
tick,0x7fffe05afeb4,308856830,0,0x0,8
tick,0x7fffe05afeb4,308872863,0,0x0,8
tick,0x7fffe05afeb4,308888809,0,0x0,8
tick,0x7fffe05afeb4,308904764,0,0x0,8
tick,0x7fffe05afeb4,308920848,0,0x0,8
tick,0x7fffe05afeb4,308937051,0,0x0,8
tick,0x7fffe05afeb4,308951902,0,0x0,8
tick,0x7fffe05afeb4,308967893,0,0x0,8
tick,0x7fffe05afeb4,308983934,0,0x0,8
tick,0x7fffe05afeb4,308999896,0,0x0,8
tick,0x7fffe05afeb4,309015855,0,0x0,8
tick,0x7fffe05afeb4,309031826,0,0x0,8
tick,0x7fffe05afeb4,309047896,0,0x0,8
tick,0x7fffe05afeb4,309063872,0,0x0,8
tick,0x7fffe05afeb4,309079853,0,0x0,8
tick,0x7fffe05afeb4,309094838,0,0x0,8
tick,0x7fffe05afeb4,309111032,0,0x0,8
tick,0x7fffe05afeb4,309126859,0,0x0,8
tick,0x7fffe05afeb4,309143035,0,0x0,8
tick,0x7fffe05afeb4,309158893,0,0x0,8
tick,0x7fffe05afeb4,309174907,0,0x0,8
tick,0x7fffe05afeb4,309190949,0,0x0,8
tick,0x7fffe05afeb4,309206873,0,0x0,8
tick,0x7fffe05afeb4,309222845,0,0x0,8
tick,0x7fffe05afeb4,309238931,0,0x0,8
tick,0x7fffe05afeb4,309254864,0,0x0,8
tick,0x7fffe05afeb4,309271088,0,0x0,8
tick,0x7fffe05afeb4,309286771,0,0x0,8
tick,0x7fffe05afeb4,309302949,0,0x0,8
tick,0x7fffe05afeb4,309318881,0,0x0,8
tick,0x7fffe05afeb4,309334850,0,0x0,8
tick,0x7fffe05afeb4,309350817,0,0x0,8
tick,0x7fffe05afeb4,309366859,0,0x0,8
tick,0x7fffe05afeb4,309382829,0,0x0,8
tick,0x7fffe05afeb4,309398855,0,0x0,8
tick,0x7fffe05afeb4,309415579,0,0x0,8
tick,0x7fffe05afeb4,309430857,0,0x0,8
tick,0x7fffe05afeb4,309447113,0,0x0,8
tick,0x7fffe05afeb4,309462846,0,0x0,8
tick,0x7fffe05afeb4,309478975,0,0x0,8
tick,0x7fffe05afeb4,309494950,0,0x0,8
tick,0x7fffe05afeb4,309510895,0,0x0,8
tick,0x7fffe05afeb4,309525828,0,0x0,8
tick,0x7fffe05afeb4,309541758,0,0x0,8
tick,0x7fffe05afeb4,309557884,0,0x0,8
tick,0x7fffe05afeb4,309574102,0,0x0,8
tick,0x7fffe05afeb4,309589900,0,0x0,8
tick,0x7fffe05afeb4,309605993,0,0x0,8
tick,0x7fffe05afeb4,309621908,0,0x0,8
tick,0x7fffe05afeb4,309637854,0,0x0,8
tick,0x7fffe05afeb4,309653989,0,0x0,8
tick,0x7fffe05afeb4,309670140,0,0x0,8
tick,0x7fffe05afeb4,309685834,0,0x0,8
tick,0x7fffe05afeb4,309701800,0,0x0,8
tick,0x7fffe05afeb4,309718120,0,0x0,8
tick,0x7fffe05afeb4,309733962,0,0x0,8
tick,0x7fffe05afeb4,309750081,0,0x0,8
tick,0x7fffe05afeb4,309765935,0,0x0,8
tick,0x7fffe05afeb4,309781863,0,0x0,8
tick,0x7fffe05afeb4,309797888,0,0x0,8
tick,0x7fffe05afeb4,309812853,0,0x0,8
tick,0x7fffe05afeb4,309828774,0,0x0,8
tick,0x7fffe05afeb4,309844005,0,0x0,8
tick,0x7fffe05afeb4,309859935,0,0x0,8
tick,0x7fffe05afeb4,309875946,0,0x0,8
tick,0x7fffe05afeb4,309891915,0,0x0,8
tick,0x7fffe05afeb4,309907791,0,0x0,8
tick,0x7fffe05afeb4,309923837,0,0x0,8
tick,0x7fffe05afeb4,309938967,0,0x0,8
tick,0x7fffe05afeb4,309953816,0,0x0,8
tick,0x7fffe05afeb4,309969853,0,0x0,8
tick,0x7fffe05afeb4,309985858,0,0x0,8
tick,0x7fffe05afeb4,310001894,0,0x0,8
tick,0x7fffe05afeb4,310017851,0,0x0,8
tick,0x7fffe05afeb4,310033857,0,0x0,8
tick,0x7fffe05afeb4,310049833,0,0x0,8
tick,0x7fffe05afeb4,310065897,0,0x0,8
tick,0x7fffe05afeb4,310081807,0,0x0,8
tick,0x7fffe05afeb4,310097951,0,0x0,8
tick,0x7fffe05afeb4,310113945,0,0x0,8
tick,0x7fffe05afeb4,310130079,0,0x0,8
tick,0x7fffe05afeb4,310144837,0,0x0,8
tick,0x7fffe05afeb4,310160250,0,0x0,8
tick,0x7fffe05afeb4,310175837,0,0x0,8
tick,0x7fffe05afeb4,310191985,0,0x0,8
tick,0x7fffe05afeb4,310207850,0,0x0,8
tick,0x7fffe05afeb4,310222969,0,0x0,8
tick,0x7fffe05afeb4,310238857,0,0x0,8
tick,0x7fffe05afeb4,310254861,0,0x0,8
tick,0x7fffe05afeb4,310270860,0,0x0,8
tick,0x7fffe05afeb4,310286773,0,0x0,8
tick,0x7fffe05afeb4,310302853,0,0x0,8
tick,0x7fffe05afeb4,310317932,0,0x0,8
tick,0x7fffe05afeb4,310333853,0,0x0,8
tick,0x7fffe05afeb4,310349874,0,0x0,8
tick,0x7fffe05afeb4,310366000,0,0x0,8
tick,0x7fffe05afeb4,310381982,0,0x0,8
tick,0x7fffe05afeb4,310397826,0,0x0,8
tick,0x7fffe05afeb4,310413831,0,0x0,8
tick,0x7fffe05afeb4,310429888,0,0x0,8
tick,0x7fffe05afeb4,310445104,0,0x0,8
tick,0x7fffe05afeb4,310460831,0,0x0,8
tick,0x7fffe05afeb4,310476906,0,0x0,8
tick,0x7fffe05afeb4,310492778,0,0x0,8
tick,0x7fffe05afeb4,310509194,0,0x0,8
tick,0x7fffe05afeb4,310524995,0,0x0,8
tick,0x7fffe05afeb4,310540876,0,0x0,8
tick,0x7fffe05afeb4,310555919,0,0x0,8
tick,0x7fffe05afeb4,310572171,0,0x0,8
tick,0x7fffe05afeb4,310587925,0,0x0,8
tick,0x7fffe05afeb4,310603942,0,0x0,8
tick,0x7fffe05afeb4,310619802,0,0x0,8
tick,0x7fffe05afeb4,310636075,0,0x0,8
tick,0x7fffe05afeb4,310651771,0,0x0,8
tick,0x7fffe05afeb4,310668095,0,0x0,8
tick,0x7fffe05afeb4,310683779,0,0x0,8
tick,0x7fffe05afeb4,310699885,0,0x0,8
tick,0x7fffe05afeb4,310715849,0,0x0,8
tick,0x7fffe05afeb4,310731986,0,0x0,8
tick,0x7fffe05afeb4,310746877,0,0x0,8
tick,0x7fffe05afeb4,310762961,0,0x0,8
tick,0x7fffe05afeb4,310778907,0,0x0,8
tick,0x7fffe05afeb4,310793928,0,0x0,8
tick,0x7fffe05afeb4,310809913,0,0x0,8
tick,0x7fffe05afeb4,310825899,0,0x0,8
tick,0x7fffe05afeb4,310841865,0,0x0,8
tick,0x7fffe05afeb4,310857904,0,0x0,8
tick,0x7fffe05afeb4,310873871,0,0x0,8
tick,0x7fffe05afeb4,310889941,0,0x0,8
tick,0x7fffe05afeb4,310905873,0,0x0,8
tick,0x7fffe05afeb4,310921807,0,0x0,8
tick,0x7fffe05afeb4,310937887,0,0x0,8
tick,0x7fffe05afeb4,310953861,0,0x0,8
tick,0x7fffe05afeb4,310969947,0,0x0,8
tick,0x7fffe05afeb4,310985853,0,0x0,8
tick,0x7fffe05afeb4,311001778,0,0x0,8
tick,0x7fffe05afeb4,311017902,0,0x0,8
tick,0x7fffe05afeb4,311033825,0,0x0,8
tick,0x7fffe05afeb4,311048809,0,0x0,8
tick,0x7fffe05afeb4,311064896,0,0x0,8
tick,0x7fffe05afeb4,311080852,0,0x0,8
tick,0x7fffe05afeb4,311097026,0,0x0,8
tick,0x7fffe05afeb4,311112843,0,0x0,8
tick,0x7fffe05afeb4,311128807,0,0x0,8
tick,0x7fffe05afeb4,311144872,0,0x0,8
tick,0x7fffe05afeb4,311160044,0,0x0,8
tick,0x7fffe05afeb4,311176174,0,0x0,8
tick,0x7fffe05afeb4,311191863,0,0x0,8
tick,0x7fffe05afeb4,311207927,0,0x0,8
tick,0x7fffe05afeb4,311223857,0,0x0,8
tick,0x7fffe05afeb4,311239809,0,0x0,8
tick,0x7fffe05afeb4,311254812,0,0x0,8
tick,0x7fffe05afeb4,311270887,0,0x0,8
tick,0x7fffe05afeb4,311285883,0,0x0,8
tick,0x7fffe05afeb4,311301768,0,0x0,8
tick,0x7fffe05afeb4,311317777,0,0x0,8
tick,0x7fffe05afeb4,311334003,0,0x0,8
tick,0x7fffe05afeb4,311348787,0,0x0,8
tick,0x7fffe05afeb4,311363865,0,0x0,8
tick,0x7fffe05afeb4,311379878,0,0x0,8
tick,0x7fffe05afeb4,311396034,0,0x0,8
tick,0x7fffe05afeb4,311411911,0,0x0,8
tick,0x7fffe05afeb4,311427939,0,0x0,8
tick,0x7fffe05afeb4,311443853,0,0x0,8
tick,0x7fffe05afeb4,311459044,0,0x0,8
tick,0x7fffe05afeb4,311474834,0,0x0,8
tick,0x7fffe05afeb4,311490793,0,0x0,8
tick,0x7fffe05afeb4,311506838,0,0x0,8
tick,0x7fffe05afeb4,311522937,0,0x0,8
tick,0x7fffe05afeb4,311538877,0,0x0,8
tick,0x7fffe05afeb4,311553913,0,0x0,8
tick,0x7fffe05afeb4,311569848,0,0x0,8
tick,0x7fffe05afeb4,311585911,0,0x0,8
tick,0x7fffe05afeb4,311602383,0,0x0,8
tick,0x7fffe05afeb4,311617932,0,0x0,8
tick,0x7fffe05afeb4,311632938,0,0x0,8
tick,0x7fffe05afeb4,311648955,0,0x0,8
tick,0x7fffe05afeb4,311665522,0,0x0,8
tick,0x7fffe05afeb4,311680778,0,0x0,8
tick,0x7fffe05afeb4,311696831,0,0x0,8
tick,0x7fffe05afeb4,311712117,0,0x0,8
tick,0x7fffe05afeb4,311728872,0,0x0,8
tick,0x7fffe05afeb4,311743873,0,0x0,8
tick,0x7fffe05afeb4,311760053,0,0x0,8
tick,0x7fffe05afeb4,311775070,0,0x0,8
tick,0x7fffe05afeb4,311791166,0,0x0,8
tick,0x7fffe05afeb4,311807028,0,0x0,8
tick,0x7fffe05afeb4,311822931,0,0x0,8
tick,0x7fffe05afeb4,311838945,0,0x0,8
tick,0x7fffe05afeb4,311854886,0,0x0,8
tick,0x7fffe05afeb4,311870996,0,0x0,8
tick,0x7fffe05afeb4,311886918,0,0x0,8
tick,0x7fffe05afeb4,311902978,0,0x0,8
tick,0x7fffe05afeb4,311917802,0,0x0,8
tick,0x7fffe05afeb4,311933992,0,0x0,8
tick,0x7fffe05afeb4,311950190,0,0x0,8
tick,0x7fffe05afeb4,311966125,0,0x0,8
tick,0x7fffe05afeb4,311981995,0,0x0,8
tick,0x7fffe05afeb4,311997797,0,0x0,8
tick,0x7fffe05afeb4,312013776,0,0x0,8
tick,0x7fffe05afeb4,312028941,0,0x0,8
tick,0x7fffe05afeb4,312045030,0,0x0,8
tick,0x7fffe05afeb4,312060772,0,0x0,8
tick,0x7fffe05afeb4,312076992,0,0x0,8
tick,0x7fffe05afeb4,312092991,0,0x0,8
tick,0x7fffe05afeb4,312108783,0,0x0,8
tick,0x7fffe05afeb4,312124858,0,0x0,8
tick,0x7fffe05afeb4,312140867,0,0x0,8
tick,0x7fffe05afeb4,312157078,0,0x0,8
tick,0x7fffe05afeb4,312171866,0,0x0,8
tick,0x7fffe05afeb4,312188041,0,0x0,8
tick,0x7fffe05afeb4,312203835,0,0x0,8
tick,0x7fffe05afeb4,312219873,0,0x0,8
tick,0x7fffe05afeb4,312235856,0,0x0,8
tick,0x7fffe05afeb4,312251977,0,0x0,8
tick,0x7fffe05afeb4,312267924,0,0x0,8
tick,0x7fffe05afeb4,312284002,0,0x0,8
tick,0x7fffe05afeb4,312299946,0,0x0,8
tick,0x7fffe05afeb4,312315888,0,0x0,8
tick,0x7fffe05afeb4,312331770,0,0x0,8
tick,0x7fffe05afeb4,312347935,0,0x0,8
tick,0x7fffe05afeb4,312363887,0,0x0,8
tick,0x7fffe05afeb4,312378953,0,0x0,8
tick,0x7fffe05afeb4,312394856,0,0x0,8
tick,0x7fffe05afeb4,312410955,0,0x0,8
tick,0x7fffe05afeb4,312426966,0,0x0,8
tick,0x7fffe05afeb4,312442851,0,0x0,8
tick,0x7fffe05afeb4,312457873,0,0x0,8
tick,0x7fffe05afeb4,312473969,0,0x0,8
tick,0x7fffe05afeb4,312490262,0,0x0,8
tick,0x7fffe05afeb4,312505838,0,0x0,8
tick,0x7fffe05afeb4,312520816,0,0x0,8
tick,0x7fffe05afeb4,312536864,0,0x0,8
tick,0x7fffe05afeb4,312552893,0,0x0,8
tick,0x7fffe05afeb4,312568883,0,0x0,8
tick,0x7fffe05afeb4,312584849,0,0x0,8
tick,0x7fffe05afeb4,312600873,0,0x0,8
tick,0x7fffe05afeb4,312616976,0,0x0,8
tick,0x7fffe05afeb4,312632932,0,0x0,8
tick,0x7fffe05afeb4,312648779,0,0x0,8
tick,0x7fffe05afeb4,312666034,0,0x0,8
tick,0x7fffe05afeb4,312679812,0,0x0,8
tick,0x7fffe05afeb4,312696041,0,0x0,8
tick,0x7fffe05afeb4,312711869,0,0x0,8
tick,0x7fffe05afeb4,312728047,0,0x0,8
tick,0x7fffe05afeb4,312743908,0,0x0,8
tick,0x7fffe05afeb4,312760681,0,0x0,8
tick,0x7fffe05afeb4,312775906,0,0x0,8
tick,0x7fffe05afeb4,312791925,0,0x0,8
tick,0x7fffe05afeb4,312807949,0,0x0,8
tick,0x7fffe05afeb4,312824073,0,0x0,8
tick,0x7fffe05afeb4,312839890,0,0x0,8
tick,0x7fffe05afeb4,312855863,0,0x0,8
tick,0x7fffe05afeb4,312871893,0,0x0,8
tick,0x7fffe05afeb4,312887955,0,0x0,8
tick,0x7fffe05afeb4,312903870,0,0x0,8
tick,0x7fffe05afeb4,312919864,0,0x0,8
tick,0x7fffe05afeb4,312935776,0,0x0,8
tick,0x7fffe05afeb4,312951843,0,0x0,8
tick,0x7fffe05afeb4,312967768,0,0x0,8
tick,0x7fffe05afeb4,312983807,0,0x0,8
tick,0x7fffe05afeb4,312999976,0,0x0,8
tick,0x7fffe05afeb4,313015772,0,0x0,8
tick,0x7fffe05afeb4,313031773,0,0x0,8
tick,0x7fffe05afeb4,313047821,0,0x0,8
tick,0x7fffe05afeb4,313063823,0,0x0,8
tick,0x7fffe05afeb4,313079780,0,0x0,8
tick,0x7fffe05afeb4,313095787,0,0x0,8
tick,0x7fffe05afeb4,313111860,0,0x0,8
tick,0x7fffe05afeb4,313127857,0,0x0,8
tick,0x7fffe05afeb4,313143842,0,0x0,8
tick,0x7fffe05afeb4,313159877,0,0x0,8
tick,0x7fffe05afeb4,313174786,0,0x0,8
tick,0x7fffe05afeb4,313190854,0,0x0,8
tick,0x7fffe05afeb4,313206842,0,0x0,8
tick,0x7fffe05afeb4,313222771,0,0x0,8
tick,0x7fffe05afeb4,313238853,0,0x0,8
tick,0x7fffe05afeb4,313254808,0,0x0,8
tick,0x7fffe05afeb4,313270803,0,0x0,8
tick,0x7fffe05afeb4,313286799,0,0x0,8
tick,0x7fffe05afeb4,313302771,0,0x0,8
tick,0x7fffe05afeb4,313317837,0,0x0,8
tick,0x7fffe05afeb4,313333784,0,0x0,8
tick,0x7fffe05afeb4,313349890,0,0x0,8
tick,0x7fffe05afeb4,313365850,0,0x0,8
tick,0x7fffe05afeb4,313381825,0,0x0,8
tick,0x7fffe05afeb4,313396777,0,0x0,8
tick,0x7fffe05afeb4,313412779,0,0x0,8
tick,0x7fffe05afeb4,313428803,0,0x0,8
tick,0x7fffe05afeb4,313444883,0,0x0,8
tick,0x7fffe05afeb4,313460803,0,0x0,8
tick,0x7fffe05afeb4,313476871,0,0x0,8
tick,0x7fffe05afeb4,313492777,0,0x0,8
tick,0x7fffe05afeb4,313507789,0,0x0,8
tick,0x7fffe05afeb4,313523901,0,0x0,8
tick,0x7fffe05afeb4,313540104,0,0x0,8
tick,0x7fffe05afeb4,313555923,0,0x0,8
tick,0x7fffe05afeb4,313572034,0,0x0,8
tick,0x7fffe05afeb4,313587789,0,0x0,8
tick,0x7fffe05afeb4,313604665,0,0x0,8
tick,0x7fffe05afeb4,313619899,0,0x0,8
tick,0x7fffe05afeb4,313635998,0,0x0,8
tick,0x7fffe05afeb4,313651841,0,0x0,8
tick,0x7fffe05afeb4,313667874,0,0x0,8
tick,0x7fffe05afeb4,313683849,0,0x0,8
tick,0x7fffe05afeb4,313699854,0,0x0,8
tick,0x7fffe05afeb4,313715804,0,0x0,8
tick,0x7fffe05afeb4,313730855,0,0x0,8
tick,0x7fffe05afeb4,313745822,0,0x0,8
tick,0x7fffe05afeb4,313761786,0,0x0,8
tick,0x7fffe05afeb4,313777787,0,0x0,8
tick,0x7fffe05afeb4,313794073,0,0x0,8
tick,0x7fffe05afeb4,313809905,0,0x0,8
tick,0x7fffe05afeb4,313824884,0,0x0,8
tick,0x7fffe05afeb4,313839964,0,0x0,8
tick,0x7fffe05afeb4,313855856,0,0x0,8
tick,0x7fffe05afeb4,313871769,0,0x0,8
tick,0x7fffe05afeb4,313886950,0,0x0,8
tick,0x7fffe05afeb4,313902828,0,0x0,8
tick,0x7fffe05afeb4,313918762,0,0x0,8
tick,0x7fffe05afeb4,313935033,0,0x0,8
tick,0x7fffe05afeb4,313950874,0,0x0,8
tick,0x7fffe05afeb4,313966872,0,0x0,8
tick,0x7fffe05afeb4,313982822,0,0x0,8
tick,0x7fffe05afeb4,313998936,0,0x0,8
tick,0x7fffe05afeb4,314014834,0,0x0,8
tick,0x7fffe05afeb4,314030781,0,0x0,8
tick,0x7fffe05afeb4,314045882,0,0x0,8
tick,0x7fffe05afeb4,314061778,0,0x0,8
tick,0x7fffe05afeb4,314077895,0,0x0,8
tick,0x7fffe05afeb4,314093835,0,0x0,8
tick,0x7fffe05afeb4,314110157,0,0x0,8
tick,0x7fffe05afeb4,314124778,0,0x0,8
tick,0x7fffe05afeb4,314140035,0,0x0,8
tick,0x7fffe05afeb4,314155978,0,0x0,8
tick,0x7fffe05afeb4,314171881,0,0x0,8
tick,0x7fffe05afeb4,314187802,0,0x0,8
tick,0x7fffe05afeb4,314203841,0,0x0,8
tick,0x7fffe05afeb4,314219811,0,0x0,8
tick,0x7fffe05afeb4,314235843,0,0x0,8
tick,0x7fffe05afeb4,314251786,0,0x0,8
tick,0x7fffe05afeb4,314267968,0,0x0,8
tick,0x7fffe05afeb4,314283865,0,0x0,8
tick,0x7fffe05afeb4,314300061,0,0x0,8
tick,0x7fffe05afeb4,314315768,0,0x0,8
tick,0x7fffe05afeb4,314331991,0,0x0,8
tick,0x7fffe05afeb4,314347826,0,0x0,8
tick,0x7fffe05afeb4,314363883,0,0x0,8
tick,0x7fffe05afeb4,314379897,0,0x0,8
tick,0x7fffe05afeb4,314394791,0,0x0,8
tick,0x7fffe05afeb4,314409820,0,0x0,8
tick,0x7fffe05afeb4,314424959,0,0x0,8
tick,0x7fffe05afeb4,314440861,0,0x0,8
tick,0x7fffe05afeb4,314456861,0,0x0,8
tick,0x7fffe05afeb4,314472888,0,0x0,8
tick,0x7fffe05afeb4,314488919,0,0x0,8
tick,0x7fffe05afeb4,314504797,0,0x0,8
tick,0x7fffe05afeb4,314520809,0,0x0,8
tick,0x7fffe05afeb4,314536864,0,0x0,8
tick,0x7fffe05afeb4,314552814,0,0x0,8
tick,0x7fffe05afeb4,314568820,0,0x0,8
tick,0x7fffe05afeb4,314584880,0,0x0,8
tick,0x7fffe05afeb4,314600829,0,0x0,8
tick,0x7fffe05afeb4,314616779,0,0x0,8
tick,0x7fffe05afeb4,314632787,0,0x0,8
tick,0x7fffe05afeb4,314648853,0,0x0,8
tick,0x7fffe05afeb4,314664878,0,0x0,8
tick,0x7fffe05afeb4,314679812,0,0x0,8
tick,0x7fffe05afeb4,314694798,0,0x0,8
tick,0x7fffe05afeb4,314710827,0,0x0,8
tick,0x7fffe05afeb4,314725885,0,0x0,8
tick,0x7fffe05afeb4,314741783,0,0x0,8
tick,0x7fffe05afeb4,314757835,0,0x0,8
tick,0x7fffe05afeb4,314773919,0,0x0,8
tick,0x7fffe05afeb4,314790673,0,0x0,8
tick,0x7fffe05afeb4,314805889,0,0x0,8
tick,0x7fffe05afeb4,314821797,0,0x0,8
tick,0x7fffe05afeb4,314837812,0,0x0,8
tick,0x7fffe05afeb4,314854261,0,0x0,8
tick,0x7fffe05afeb4,314869781,0,0x0,8
tick,0x7fffe05afeb4,314885838,0,0x0,8
tick,0x7fffe05afeb4,314901850,0,0x0,8
tick,0x7fffe05afeb4,314917858,0,0x0,8
tick,0x7fffe05afeb4,314933787,0,0x0,8
tick,0x7fffe05afeb4,314949960,0,0x0,8
tick,0x7fffe05afeb4,314965822,0,0x0,8
tick,0x7fffe05afeb4,314981778,0,0x0,8
tick,0x7fffe05afeb4,314997805,0,0x0,8
tick,0x7fffe05afeb4,315012859,0,0x0,8
tick,0x7fffe05afeb4,315028884,0,0x0,8
tick,0x7fffe05afeb4,315043956,0,0x0,8
tick,0x7fffe05afeb4,315059756,0,0x0,8
tick,0x7fffe05afeb4,315075940,0,0x0,8
tick,0x7fffe05afeb4,315091838,0,0x0,8
tick,0x7fffe05afeb4,315107876,0,0x0,8
tick,0x7fffe05afeb4,315122805,0,0x0,8
tick,0x7fffe05afeb4,315139224,0,0x0,8
tick,0x7fffe05afeb4,315155001,0,0x0,8
tick,0x7fffe05afeb4,315170789,0,0x0,8
tick,0x7fffe05afeb4,315185910,0,0x0,8
tick,0x7fffe05afeb4,315201861,0,0x0,8
tick,0x7fffe05afeb4,315216802,0,0x0,8
tick,0x7fffe05afeb4,315232837,0,0x0,8
tick,0x7fffe05afeb4,315248815,0,0x0,8
tick,0x7fffe05afeb4,315264949,0,0x0,8
tick,0x7fffe05afeb4,315280778,0,0x0,8
tick,0x7fffe05afeb4,315295772,0,0x0,8
tick,0x7fffe05afeb4,315311800,0,0x0,8
tick,0x7fffe05afeb4,315327815,0,0x0,8
tick,0x7fffe05afeb4,315343824,0,0x0,8
tick,0x7fffe05afeb4,315360173,0,0x0,8
tick,0x7fffe05afeb4,315375057,0,0x0,8
tick,0x7fffe05afeb4,315390841,0,0x0,8
tick,0x7fffe05afeb4,315407024,0,0x0,8
tick,0x7fffe05afeb4,315422805,0,0x0,8
tick,0x7fffe05afeb4,315438909,0,0x0,8
tick,0x7fffe05afeb4,315453802,0,0x0,8
tick,0x7fffe05afeb4,315469837,0,0x0,8
tick,0x7fffe05afeb4,315485861,0,0x0,8
tick,0x7fffe05afeb4,315500784,0,0x0,8
tick,0x7fffe05afeb4,315516783,0,0x0,8
tick,0x7fffe05afeb4,315532788,0,0x0,8
tick,0x7fffe05afeb4,315548835,0,0x0,8
tick,0x7fffe05afeb4,315564797,0,0x0,8
tick,0x7fffe05afeb4,315580926,0,0x0,8
tick,0x7fffe05afeb4,315596920,0,0x0,8
tick,0x7fffe05afeb4,315611907,0,0x0,8
tick,0x7fffe05afeb4,315627859,0,0x0,8
tick,0x7fffe05afeb4,315643802,0,0x0,8
tick,0x7fffe05afeb4,315659857,0,0x0,8
tick,0x7fffe05afeb4,315675793,0,0x0,8
tick,0x7fffe05afeb4,315691810,0,0x0,8
tick,0x7fffe05afeb4,315706832,0,0x0,8
tick,0x7fffe05afeb4,315722916,0,0x0,8
tick,0x7fffe05afeb4,315738814,0,0x0,8
tick,0x7fffe05afeb4,315754798,0,0x0,8
tick,0x7fffe05afeb4,315770792,0,0x0,8
tick,0x7fffe05afeb4,315786851,0,0x0,8
tick,0x7fffe05afeb4,315802812,0,0x0,8
tick,0x7fffe05afeb4,315818855,0,0x0,8
tick,0x7fffe05afeb4,315834783,0,0x0,8
tick,0x7fffe05afeb4,315850809,0,0x0,8
tick,0x7fffe05afeb4,315866821,0,0x0,8
tick,0x7fffe05afeb4,315882790,0,0x0,8
tick,0x7fffe05afeb4,315898872,0,0x0,8
tick,0x7fffe05afeb4,315914913,0,0x0,8
tick,0x7fffe05afeb4,315930856,0,0x0,8
tick,0x7fffe05afeb4,315946771,0,0x0,8
tick,0x7fffe05afeb4,315962864,0,0x0,8
tick,0x7fffe05afeb4,315978982,0,0x0,8
tick,0x7fffe05afeb4,315994767,0,0x0,8
tick,0x7fffe05afeb4,316010766,0,0x0,8
tick,0x7fffe05afeb4,316026817,0,0x0,8
tick,0x7fffe05afeb4,316041781,0,0x0,8
tick,0x7fffe05afeb4,316057845,0,0x0,8
tick,0x7fffe05afeb4,316073855,0,0x0,8
tick,0x7fffe05afeb4,316089871,0,0x0,8
tick,0x7fffe05afeb4,316105780,0,0x0,8
tick,0x7fffe05afeb4,316121844,0,0x0,8
tick,0x7fffe05afeb4,316137871,0,0x0,8
tick,0x7fffe05afeb4,316153970,0,0x0,8
tick,0x7fffe05afeb4,316169834,0,0x0,8
tick,0x7fffe05afeb4,316185801,0,0x0,8
tick,0x7fffe05afeb4,316201802,0,0x0,8
tick,0x7fffe05afeb4,316217777,0,0x0,8
tick,0x7fffe05afeb4,316233881,0,0x0,8
tick,0x7fffe05afeb4,316249947,0,0x0,8
tick,0x7fffe05afeb4,316265865,0,0x0,8
tick,0x7fffe05afeb4,316281790,0,0x0,8
tick,0x7fffe05afeb4,316297790,0,0x0,8
tick,0x7fffe05afeb4,316313768,0,0x0,8
tick,0x7fffe05afeb4,316329803,0,0x0,8
tick,0x7fffe05afeb4,316345780,0,0x0,8
tick,0x7fffe05afeb4,316362009,0,0x0,8
tick,0x7fffe05afeb4,316377889,0,0x0,8
tick,0x7fffe05afeb4,316392781,0,0x0,8
tick,0x7fffe05afeb4,316415463,0,0x0,8
tick,0x7fffe05afeb4,316426945,0,0x0,8
tick,0x7fffe05afeb4,316439934,0,0x0,8
tick,0x7fffe05afeb4,316456339,0,0x0,8
tick,0x7fffe05afeb4,316470821,0,0x0,8
tick,0x7fffe05afeb4,316486773,0,0x0,8
tick,0x7fffe05afeb4,316502778,0,0x0,8
tick,0x7fffe05afeb4,316518765,0,0x0,8
tick,0x7fffe05afeb4,316534852,0,0x0,8
tick,0x7fffe05afeb4,316550867,0,0x0,8
tick,0x7fffe05afeb4,316566848,0,0x0,8
tick,0x7fffe05afeb4,316583009,0,0x0,8
tick,0x7fffe05afeb4,316598831,0,0x0,8
tick,0x7fffe05afeb4,316614779,0,0x0,8
tick,0x7fffe05afeb4,316630867,0,0x0,8
tick,0x7fffe05afeb4,316646908,0,0x0,8
tick,0x7fffe05afeb4,316662874,0,0x0,8
tick,0x7fffe05afeb4,316678860,0,0x0,8
tick,0x7fffe05afeb4,316694960,0,0x0,8
tick,0x7fffe05afeb4,316710774,0,0x0,8
tick,0x7fffe05afeb4,316725874,0,0x0,8
tick,0x7fffe05afeb4,316741786,0,0x0,8
tick,0x7fffe05afeb4,316757860,0,0x0,8
tick,0x7fffe05afeb4,316773766,0,0x0,8
tick,0x7fffe05afeb4,316789889,0,0x0,8
tick,0x7fffe05afeb4,316806057,0,0x0,8
tick,0x7fffe05afeb4,316822019,0,0x0,8
tick,0x7fffe05afeb4,316837782,0,0x0,8
tick,0x7fffe05afeb4,316853959,0,0x0,8
tick,0x7fffe05afeb4,316869937,0,0x0,8
tick,0x7fffe05afeb4,316885819,0,0x0,8
tick,0x7fffe05afeb4,316901766,0,0x0,8
tick,0x7fffe05afeb4,316917876,0,0x0,8
tick,0x7fffe05afeb4,316933899,0,0x0,8
tick,0x7fffe05afeb4,316949885,0,0x0,8
tick,0x7fffe05afeb4,316964774,0,0x0,8
tick,0x7fffe05afeb4,316979880,0,0x0,8
tick,0x7fffe05afeb4,316994847,0,0x0,8
tick,0x7fffe05afeb4,317010925,0,0x0,8
tick,0x7fffe05afeb4,317026766,0,0x0,8
tick,0x7fffe05afeb4,317042852,0,0x0,8
tick,0x7fffe05afeb4,317058869,0,0x0,8
tick,0x7fffe05afeb4,317074856,0,0x0,8
tick,0x7fffe05afeb4,317090791,0,0x0,8
tick,0x7fffe05afeb4,317107112,0,0x0,8
tick,0x7fffe05afeb4,317122773,0,0x0,8
tick,0x7fffe05afeb4,317138873,0,0x0,8
tick,0x7fffe05afeb4,317153842,0,0x0,8
tick,0x7fffe05afeb4,317169890,0,0x0,8
tick,0x7fffe05afeb4,317185770,0,0x0,8
tick,0x7fffe05afeb4,317201842,0,0x0,8
tick,0x7fffe05afeb4,317217962,0,0x0,8
tick,0x7fffe05afeb4,317233778,0,0x0,8
tick,0x7fffe05afeb4,317249834,0,0x0,8
tick,0x7fffe05afeb4,317265805,0,0x0,8
tick,0x7fffe05afeb4,317281792,0,0x0,8
tick,0x7fffe05afeb4,317297869,0,0x0,8
tick,0x7fffe05afeb4,317312828,0,0x0,8
tick,0x7fffe05afeb4,317327885,0,0x0,8
tick,0x7fffe05afeb4,317342782,0,0x0,8
tick,0x7fffe05afeb4,317359803,0,0x0,8
tick,0x7fffe05afeb4,317373964,0,0x0,8
tick,0x7fffe05afeb4,317389921,0,0x0,8
tick,0x7fffe05afeb4,317405866,0,0x0,8
tick,0x7fffe05afeb4,317421795,0,0x0,8
tick,0x7fffe05afeb4,317437784,0,0x0,8
tick,0x7fffe05afeb4,317453802,0,0x0,8
tick,0x7fffe05afeb4,317469923,0,0x0,8
tick,0x7fffe05afeb4,317484831,0,0x0,8
tick,0x7fffe05afeb4,317500773,0,0x0,8
tick,0x7fffe05afeb4,317516970,0,0x0,8
tick,0x7fffe05afeb4,317532849,0,0x0,8
tick,0x7fffe05afeb4,317548771,0,0x0,8
tick,0x7fffe05afeb4,317564783,0,0x0,8
tick,0x7fffe05afeb4,317579844,0,0x0,8
tick,0x7fffe05afeb4,317595829,0,0x0,8
tick,0x7fffe05afeb4,317611869,0,0x0,8
tick,0x7fffe05afeb4,317627868,0,0x0,8
tick,0x7fffe05afeb4,317643852,0,0x0,8
tick,0x7fffe05afeb4,317658787,0,0x0,8
tick,0x7fffe05afeb4,317674786,0,0x0,8
tick,0x7fffe05afeb4,317690779,0,0x0,8
tick,0x7fffe05afeb4,317706849,0,0x0,8
tick,0x7fffe05afeb4,317721777,0,0x0,8
tick,0x7fffe05afeb4,317737962,0,0x0,8
tick,0x7fffe05afeb4,317753844,0,0x0,8
tick,0x7fffe05afeb4,317769812,0,0x0,8
tick,0x7fffe05afeb4,317785835,0,0x0,8
tick,0x7fffe05afeb4,317802265,0,0x0,8
tick,0x7fffe05afeb4,317817873,0,0x0,8
tick,0x7fffe05afeb4,317833788,0,0x0,8
tick,0x7fffe05afeb4,317849940,0,0x0,8
tick,0x7fffe05afeb4,317865783,0,0x0,8
tick,0x7fffe05afeb4,317881875,0,0x0,8
tick,0x7fffe05afeb4,317897813,0,0x0,8
tick,0x7fffe05afeb4,317913775,0,0x0,8
tick,0x7fffe05afeb4,317929879,0,0x0,8
tick,0x7fffe05afeb4,317944852,0,0x0,8
tick,0x7fffe05afeb4,317960810,0,0x0,8
tick,0x7fffe05afeb4,317976775,0,0x0,8
tick,0x7fffe05afeb4,317992772,0,0x0,8
tick,0x7fffe05afeb4,318008792,0,0x0,8
tick,0x7fffe05afeb4,318024874,0,0x0,8
tick,0x7fffe05afeb4,318040789,0,0x0,8
tick,0x7fffe05afeb4,318055853,0,0x0,8
tick,0x7fffe05afeb4,318071053,0,0x0,8
tick,0x7fffe05afeb4,318086824,0,0x0,8
tick,0x7fffe05afeb4,318103098,0,0x0,8
tick,0x7fffe05afeb4,318118850,0,0x0,8
tick,0x7fffe05afeb4,318134926,0,0x0,8
tick,0x7fffe05afeb4,318150816,0,0x0,8
tick,0x7fffe05afeb4,318166872,0,0x0,8
tick,0x7fffe05afeb4,318182843,0,0x0,8
tick,0x7fffe05afeb4,318198760,0,0x0,8
tick,0x7fffe05afeb4,318213803,0,0x0,8
tick,0x7fffe05afeb4,318229812,0,0x0,8
tick,0x7fffe05afeb4,318245123,0,0x0,8
tick,0x7fffe05afeb4,318260778,0,0x0,8
tick,0x7fffe05afeb4,318276864,0,0x0,8
tick,0x7fffe05afeb4,318292807,0,0x0,8
tick,0x7fffe05afeb4,318307792,0,0x0,8
tick,0x7fffe05afeb4,318322796,0,0x0,8
tick,0x7fffe05afeb4,318338793,0,0x0,8
tick,0x7fffe05afeb4,318354977,0,0x0,8
tick,0x7fffe05afeb4,318370770,0,0x0,8
tick,0x7fffe05afeb4,318386891,0,0x0,8
tick,0x7fffe05afeb4,318402767,0,0x0,8
tick,0x7fffe05afeb4,318418781,0,0x0,8
tick,0x7fffe05afeb4,318434980,0,0x0,8
tick,0x7fffe05afeb4,318450836,0,0x0,8
tick,0x7fffe05afeb4,318466788,0,0x0,8
tick,0x7fffe05afeb4,318482804,0,0x0,8
tick,0x7fffe05afeb4,318497848,0,0x0,8
tick,0x7fffe05afeb4,318513781,0,0x0,8
tick,0x7fffe05afeb4,318529832,0,0x0,8
tick,0x7fffe05afeb4,318545846,0,0x0,8
tick,0x7fffe05afeb4,318561847,0,0x0,8
tick,0x7fffe05afeb4,318577783,0,0x0,8
tick,0x7fffe05afeb4,318593851,0,0x0,8
tick,0x7fffe05afeb4,318609930,0,0x0,8
tick,0x7fffe05afeb4,318625813,0,0x0,8
tick,0x7fffe05afeb4,318641775,0,0x0,8
tick,0x7fffe05afeb4,318657887,0,0x0,8
tick,0x7fffe05afeb4,318673771,0,0x0,8
tick,0x7fffe05afeb4,318689961,0,0x0,8
tick,0x7fffe05afeb4,318705880,0,0x0,8
tick,0x7fffe05afeb4,318721838,0,0x0,8
tick,0x7fffe05afeb4,318737775,0,0x0,8
tick,0x7fffe05afeb4,318753819,0,0x0,8
tick,0x7fffe05afeb4,318769952,0,0x0,8
tick,0x7fffe05afeb4,318785856,0,0x0,8
tick,0x7fffe05afeb4,318801850,0,0x0,8
tick,0x7fffe05afeb4,318817852,0,0x0,8
tick,0x7fffe05afeb4,318833874,0,0x0,8
tick,0x7fffe05afeb4,318849981,0,0x0,8
tick,0x7fffe05afeb4,318865860,0,0x0,8
tick,0x7fffe05afeb4,318881816,0,0x0,8
tick,0x7fffe05afeb4,318897788,0,0x0,8
tick,0x7fffe05afeb4,318913868,0,0x0,8
tick,0x7fffe05afeb4,318929855,0,0x0,8
tick,0x7fffe05afeb4,318946331,0,0x0,8
tick,0x7fffe05afeb4,318961857,0,0x0,8
tick,0x7fffe05afeb4,318977842,0,0x0,8
tick,0x7fffe05afeb4,318993860,0,0x0,8
tick,0x7fffe05afeb4,319009868,0,0x0,8
tick,0x7fffe05afeb4,319025874,0,0x0,8
tick,0x7fffe05afeb4,319041779,0,0x0,8
tick,0x7fffe05afeb4,319057818,0,0x0,8
tick,0x7fffe05afeb4,319073803,0,0x0,8
tick,0x7fffe05afeb4,319089850,0,0x0,8
tick,0x7fffe05afeb4,319104770,0,0x0,8
tick,0x7fffe05afeb4,319119921,0,0x0,8
tick,0x7fffe05afeb4,319135880,0,0x0,8
tick,0x7fffe05afeb4,319151881,0,0x0,8
tick,0x7fffe05afeb4,319167814,0,0x0,8
tick,0x7fffe05afeb4,319183774,0,0x0,8
tick,0x7fffe05afeb4,319199873,0,0x0,8
tick,0x7fffe05afeb4,319215776,0,0x0,8
tick,0x7fffe05afeb4,319232038,0,0x0,8
tick,0x7fffe05afeb4,319246905,0,0x0,8
tick,0x7fffe05afeb4,319263093,0,0x0,8
tick,0x7fffe05afeb4,319279066,0,0x0,8
tick,0x7fffe05afeb4,319294778,0,0x0,8
tick,0x7fffe05afeb4,319310767,0,0x0,8
tick,0x7fffe05afeb4,319326810,0,0x0,8
tick,0x7fffe05afeb4,319342856,0,0x0,8
tick,0x7fffe05afeb4,319358874,0,0x0,8
tick,0x7fffe05afeb4,319374841,0,0x0,8
tick,0x7fffe05afeb4,319390834,0,0x0,8
tick,0x7fffe05afeb4,319405794,0,0x0,8
tick,0x7fffe05afeb4,319421783,0,0x0,8
tick,0x7fffe05afeb4,319436788,0,0x0,8
tick,0x7fffe05afeb4,319452792,0,0x0,8
tick,0x7fffe05afeb4,319468791,0,0x0,8
tick,0x7fffe05afeb4,319484778,0,0x0,8
tick,0x7fffe05afeb4,319500788,0,0x0,8
tick,0x7fffe05afeb4,319516863,0,0x0,8
tick,0x7fffe05afeb4,319532834,0,0x0,8
tick,0x7fffe05afeb4,319547883,0,0x0,8
tick,0x7fffe05afeb4,319563782,0,0x0,8
tick,0x7fffe05afeb4,319579848,0,0x0,8
tick,0x7fffe05afeb4,319595780,0,0x0,8
tick,0x7fffe05afeb4,319611909,0,0x0,8
tick,0x7fffe05afeb4,319627763,0,0x0,8
tick,0x7fffe05afeb4,319644091,0,0x0,8
tick,0x7fffe05afeb4,319659961,0,0x0,8
tick,0x7fffe05afeb4,319675901,0,0x0,8
tick,0x7fffe05afeb4,319691971,0,0x0,8
tick,0x7fffe05afeb4,319707845,0,0x0,8
tick,0x7fffe05afeb4,319723766,0,0x0,8
tick,0x7fffe05afeb4,319739915,0,0x0,8
tick,0x7fffe05afeb4,319754860,0,0x0,8
tick,0x7fffe05afeb4,319770807,0,0x0,8
tick,0x7fffe05afeb4,319786848,0,0x0,8
tick,0x7fffe05afeb4,319802780,0,0x0,8
tick,0x7fffe05afeb4,319818899,0,0x0,8
tick,0x7fffe05afeb4,319834779,0,0x0,8
tick,0x7fffe05afeb4,319850768,0,0x0,8
tick,0x7fffe05afeb4,319866824,0,0x0,8
tick,0x7fffe05afeb4,319882807,0,0x0,8
tick,0x7fffe05afeb4,319898860,0,0x0,8
tick,0x7fffe05afeb4,319917199,0,0x0,8
tick,0x7fffe05afeb4,319930774,0,0x0,8
tick,0x7fffe05afeb4,319945809,0,0x0,8
tick,0x7fffe05afeb4,319960788,0,0x0,8
tick,0x7fffe05afeb4,319976887,0,0x0,8
tick,0x7fffe05afeb4,319992856,0,0x0,8
tick,0x7fffe05afeb4,320008804,0,0x0,8
tick,0x7fffe05afeb4,320024859,0,0x0,8
tick,0x7fffe05afeb4,320040786,0,0x0,8
tick,0x7fffe05afeb4,320056905,0,0x0,8
tick,0x7fffe05afeb4,320072765,0,0x0,8
tick,0x7fffe05afeb4,320088911,0,0x0,8
tick,0x7fffe05afeb4,320104852,0,0x0,8
tick,0x7fffe05afeb4,320120818,0,0x0,8
tick,0x7fffe05afeb4,320136853,0,0x0,8
tick,0x7fffe05afeb4,320152954,0,0x0,8
tick,0x7fffe05afeb4,320168875,0,0x0,8
tick,0x7fffe05afeb4,320184983,0,0x0,8
tick,0x7fffe05afeb4,320200830,0,0x0,8
tick,0x7fffe05afeb4,320216780,0,0x0,8
tick,0x7fffe05afeb4,320232801,0,0x0,8
tick,0x7fffe05afeb4,320248809,0,0x0,8
tick,0x7fffe05afeb4,320264753,0,0x0,8
tick,0x7fffe05afeb4,320279890,0,0x0,8
tick,0x7fffe05afeb4,320295850,0,0x0,8
tick,0x7fffe05afeb4,320311841,0,0x0,8
tick,0x7fffe05afeb4,320327849,0,0x0,8
tick,0x7fffe05afeb4,320343932,0,0x0,8
tick,0x7fffe05afeb4,320359888,0,0x0,8
tick,0x7fffe05afeb4,320375762,0,0x0,8
tick,0x7fffe05afeb4,320391845,0,0x0,8
tick,0x7fffe05afeb4,320407780,0,0x0,8
tick,0x7fffe05afeb4,320423836,0,0x0,8
tick,0x7fffe05afeb4,320439834,0,0x0,8
tick,0x7fffe05afeb4,320455842,0,0x0,8
tick,0x7fffe05afeb4,320471773,0,0x0,8
tick,0x7fffe05afeb4,320487759,0,0x0,8
tick,0x7fffe05afeb4,320503844,0,0x0,8
tick,0x7fffe05afeb4,320519820,0,0x0,8
tick,0x7fffe05afeb4,320535871,0,0x0,8
tick,0x7fffe05afeb4,320551853,0,0x0,8
tick,0x7fffe05afeb4,320566846,0,0x0,8
tick,0x7fffe05afeb4,320582885,0,0x0,8
tick,0x7fffe05afeb4,320598763,0,0x0,8
tick,0x7fffe05afeb4,320614843,0,0x0,8
tick,0x7fffe05afeb4,320630863,0,0x0,8
tick,0x7fffe05afeb4,320645783,0,0x0,8
tick,0x7fffe05afeb4,320661841,0,0x0,8
tick,0x7fffe05afeb4,320677789,0,0x0,8
tick,0x7fffe05afeb4,320693823,0,0x0,8
tick,0x7fffe05afeb4,320709810,0,0x0,8
tick,0x7fffe05afeb4,320725775,0,0x0,8
tick,0x7fffe05afeb4,320740797,0,0x0,8
tick,0x7fffe05afeb4,320755853,0,0x0,8
tick,0x7fffe05afeb4,320771847,0,0x0,8
tick,0x7fffe05afeb4,320787793,0,0x0,8
tick,0x7fffe05afeb4,320803757,0,0x0,8
tick,0x7fffe05afeb4,320818784,0,0x0,8
tick,0x7fffe05afeb4,320834775,0,0x0,8
tick,0x7fffe05afeb4,320850783,0,0x0,8
tick,0x7fffe05afeb4,320866810,0,0x0,8
tick,0x7fffe05afeb4,320882813,0,0x0,8
tick,0x7fffe05afeb4,320898869,0,0x0,8
tick,0x7fffe05afeb4,320915001,0,0x0,8
tick,0x7fffe05afeb4,320930784,0,0x0,8
tick,0x7fffe05afeb4,320945784,0,0x0,8
tick,0x7fffe05afeb4,320961841,0,0x0,8
tick,0x7fffe05afeb4,320977866,0,0x0,8
tick,0x7fffe05afeb4,320993841,0,0x0,8
tick,0x7fffe05afeb4,321009928,0,0x0,8
tick,0x7fffe05afeb4,321026075,0,0x0,8
tick,0x7fffe05afeb4,321041889,0,0x0,8
tick,0x7fffe05afeb4,321057881,0,0x0,8
tick,0x7fffe05afeb4,321073828,0,0x0,8
tick,0x7fffe05afeb4,321089846,0,0x0,8
tick,0x7fffe05afeb4,321105879,0,0x0,8
tick,0x7fffe05afeb4,321121857,0,0x0,8
tick,0x7fffe05afeb4,321137780,0,0x0,8
tick,0x7fffe05afeb4,321153782,0,0x0,8
tick,0x7fffe05afeb4,321170078,0,0x0,8
tick,0x7fffe05afeb4,321185877,0,0x0,8
tick,0x7fffe05afeb4,321204266,0,0x0,8
tick,0x7fffe05afeb4,321217888,0,0x0,8
tick,0x7fffe05afeb4,321233814,0,0x0,8
tick,0x7fffe05afeb4,321248793,0,0x0,8
tick,0x7fffe05afeb4,321264824,0,0x0,8
tick,0x7fffe05afeb4,321279814,0,0x0,8
tick,0x7fffe05afeb4,321295872,0,0x0,8
tick,0x7fffe05afeb4,321311859,0,0x0,8
tick,0x7fffe05afeb4,321327845,0,0x0,8
tick,0x7fffe05afeb4,321342857,0,0x0,8
tick,0x7fffe05afeb4,321358896,0,0x0,8
tick,0x7fffe05afeb4,321374852,0,0x0,8
tick,0x7fffe05afeb4,321390962,0,0x0,8
tick,0x7fffe05afeb4,321406793,0,0x0,8
tick,0x7fffe05afeb4,321422820,0,0x0,8
tick,0x7fffe05afeb4,321438828,0,0x0,8
tick,0x7fffe05afeb4,321454832,0,0x0,8
tick,0x7fffe05afeb4,321470786,0,0x0,8
tick,0x7fffe05afeb4,321486801,0,0x0,8
tick,0x7fffe05afeb4,321502856,0,0x0,8
tick,0x7fffe05afeb4,321518844,0,0x0,8
tick,0x7fffe05afeb4,321534806,0,0x0,8
tick,0x7fffe05afeb4,321550819,0,0x0,8
tick,0x7fffe05afeb4,321565855,0,0x0,8
tick,0x7fffe05afeb4,321581793,0,0x0,8
tick,0x7fffe05afeb4,321596815,0,0x0,8
tick,0x7fffe05afeb4,321612788,0,0x0,8
tick,0x7fffe05afeb4,321628862,0,0x0,8
tick,0x7fffe05afeb4,321644784,0,0x0,8
tick,0x7fffe05afeb4,321660778,0,0x0,8
tick,0x7fffe05afeb4,321676884,0,0x0,8
tick,0x7fffe05afeb4,321692828,0,0x0,8
tick,0x7fffe05afeb4,321708811,0,0x0,8
tick,0x7fffe05afeb4,321724862,0,0x0,8
tick,0x7fffe05afeb4,321740791,0,0x0,8
tick,0x7fffe05afeb4,321755763,0,0x0,8
tick,0x7fffe05afeb4,321771808,0,0x0,8
tick,0x7fffe05afeb4,321786838,0,0x0,8
tick,0x7fffe05afeb4,321802784,0,0x0,8
tick,0x7fffe05afeb4,321818787,0,0x0,8
tick,0x7fffe05afeb4,321834784,0,0x0,8
tick,0x7fffe05afeb4,321850811,0,0x0,8
tick,0x7fffe05afeb4,321866798,0,0x0,8
tick,0x7fffe05afeb4,321882816,0,0x0,8
tick,0x7fffe05afeb4,321898801,0,0x0,8
tick,0x7fffe05afeb4,321915677,0,0x0,8
tick,0x7fffe05afeb4,321930777,0,0x0,8
tick,0x7fffe05afeb4,321945947,0,0x0,8
tick,0x7fffe05afeb4,321961783,0,0x0,8
tick,0x7fffe05afeb4,321976802,0,0x0,8
tick,0x7fffe05afeb4,321992855,0,0x0,8
tick,0x7fffe05afeb4,322010875,0,0x0,8
tick,0x7fffe05afeb4,322024774,0,0x0,8
tick,0x7fffe05afeb4,322039992,0,0x0,8
tick,0x7fffe05afeb4,322054798,0,0x0,8
tick,0x7fffe05afeb4,322070827,0,0x0,8
tick,0x7fffe05afeb4,322086904,0,0x0,8
tick,0x7fffe05afeb4,322102804,0,0x0,8
tick,0x7fffe05afeb4,322118885,0,0x0,8
tick,0x7fffe05afeb4,322135017,0,0x0,8
tick,0x7fffe05afeb4,322149861,0,0x0,8
tick,0x7fffe05afeb4,322165768,0,0x0,8
tick,0x7fffe05afeb4,322181791,0,0x0,8
tick,0x7fffe05afeb4,322198055,0,0x0,8
tick,0x7fffe05afeb4,322213889,0,0x0,8
tick,0x7fffe05afeb4,322229993,0,0x0,8
tick,0x7fffe05afeb4,322244847,0,0x0,8
tick,0x7fffe05afeb4,322260795,0,0x0,8
tick,0x7fffe05afeb4,322276964,0,0x0,8
tick,0x7fffe05afeb4,322292831,0,0x0,8
tick,0x7fffe05afeb4,322307854,0,0x0,8
tick,0x7fffe05afeb4,322323770,0,0x0,8
tick,0x7fffe05afeb4,322339932,0,0x0,8
tick,0x7fffe05afeb4,322355846,0,0x0,8
tick,0x7fffe05afeb4,322370775,0,0x0,8
tick,0x7fffe05afeb4,322385853,0,0x0,8
tick,0x7fffe05afeb4,322401954,0,0x0,8
tick,0x7fffe05afeb4,322417761,0,0x0,8
tick,0x7fffe05afeb4,322433868,0,0x0,8
tick,0x7fffe05afeb4,322449996,0,0x0,8
tick,0x7fffe05afeb4,322465871,0,0x0,8
tick,0x7fffe05afeb4,322481808,0,0x0,8
tick,0x7fffe05afeb4,322497824,0,0x0,8
tick,0x7fffe05afeb4,322513780,0,0x0,8
tick,0x7fffe05afeb4,322529782,0,0x0,8
tick,0x7fffe05afeb4,322545864,0,0x0,8
tick,0x7fffe05afeb4,322562016,0,0x0,8
tick,0x7fffe05afeb4,322577809,0,0x0,8
tick,0x7fffe05afeb4,322593790,0,0x0,8
tick,0x7fffe05afeb4,322608830,0,0x0,8
tick,0x7fffe05afeb4,322624861,0,0x0,8
tick,0x7fffe05afeb4,322639883,0,0x0,8
tick,0x7fffe05afeb4,322655853,0,0x0,8
tick,0x7fffe05afeb4,322672130,0,0x0,8
tick,0x7fffe05afeb4,322686780,0,0x0,8
tick,0x7fffe05afeb4,322702888,0,0x0,8
tick,0x7fffe05afeb4,322718849,0,0x0,8
tick,0x7fffe05afeb4,322734929,0,0x0,8
tick,0x7fffe05afeb4,322750763,0,0x0,8
tick,0x7fffe05afeb4,322766853,0,0x0,8
tick,0x7fffe05afeb4,322782884,0,0x0,8
tick,0x7fffe05afeb4,322798788,0,0x0,8
tick,0x7fffe05afeb4,322814854,0,0x0,8
tick,0x7fffe05afeb4,322830848,0,0x0,8
tick,0x7fffe05afeb4,322845763,0,0x0,8
tick,0x7fffe05afeb4,322861798,0,0x0,8
tick,0x7fffe05afeb4,322877900,0,0x0,8
tick,0x7fffe05afeb4,322893907,0,0x0,8
tick,0x7fffe05afeb4,322909782,0,0x0,8
tick,0x7fffe05afeb4,322924850,0,0x0,8
tick,0x7fffe05afeb4,322939857,0,0x0,8
tick,0x7fffe05afeb4,322955930,0,0x0,8
tick,0x7fffe05afeb4,322971771,0,0x0,8
tick,0x7fffe05afeb4,322987835,0,0x0,8
tick,0x7fffe05afeb4,323003816,0,0x0,8
tick,0x7fffe05afeb4,323019848,0,0x0,8
tick,0x7fffe05afeb4,323035885,0,0x0,8
tick,0x7fffe05afeb4,323051775,0,0x0,8
tick,0x7fffe05afeb4,323066796,0,0x0,8
tick,0x7fffe05afeb4,323082953,0,0x0,8
tick,0x7fffe05afeb4,323098786,0,0x0,8
tick,0x7fffe05afeb4,323114786,0,0x0,8
tick,0x7fffe05afeb4,323130866,0,0x0,8
tick,0x7fffe05afeb4,323145805,0,0x0,8
tick,0x7fffe05afeb4,323160844,0,0x0,8
tick,0x7fffe05afeb4,323176860,0,0x0,8
tick,0x7fffe05afeb4,323192855,0,0x0,8
tick,0x7fffe05afeb4,323208862,0,0x0,8
tick,0x7fffe05afeb4,323224856,0,0x0,8
tick,0x7fffe05afeb4,323240826,0,0x0,8
tick,0x7fffe05afeb4,323256783,0,0x0,8
tick,0x7fffe05afeb4,323272792,0,0x0,8
tick,0x7fffe05afeb4,323287770,0,0x0,8
tick,0x7fffe05afeb4,323303776,0,0x0,8
tick,0x7fffe05afeb4,323319843,0,0x0,8
tick,0x7fffe05afeb4,323335894,0,0x0,8
tick,0x7fffe05afeb4,323351789,0,0x0,8
tick,0x7fffe05afeb4,323367876,0,0x0,8
tick,0x7fffe05afeb4,323384078,0,0x0,8
tick,0x7fffe05afeb4,323399884,0,0x0,8
tick,0x7fffe05afeb4,323415773,0,0x0,8
tick,0x7fffe05afeb4,323431810,0,0x0,8
tick,0x7fffe05afeb4,323447776,0,0x0,8
tick,0x7fffe05afeb4,323463819,0,0x0,8
tick,0x7fffe05afeb4,323479868,0,0x0,8
tick,0x7fffe05afeb4,323495870,0,0x0,8
tick,0x7fffe05afeb4,323511869,0,0x0,8
tick,0x7fffe05afeb4,323527841,0,0x0,8
tick,0x7fffe05afeb4,323543841,0,0x0,8
tick,0x7fffe05afeb4,323559978,0,0x0,8
tick,0x7fffe05afeb4,323575982,0,0x0,8
tick,0x7fffe05afeb4,323591821,0,0x0,8
tick,0x7fffe05afeb4,323607815,0,0x0,8
tick,0x7fffe05afeb4,323623896,0,0x0,8
tick,0x7fffe05afeb4,323639907,0,0x0,8
tick,0x7fffe05afeb4,323655839,0,0x0,8
tick,0x7fffe05afeb4,323671917,0,0x0,8
tick,0x7fffe05afeb4,323686802,0,0x0,8
tick,0x7fffe05afeb4,323702903,0,0x0,8
tick,0x7fffe05afeb4,323718778,0,0x0,8
tick,0x7fffe05afeb4,323734849,0,0x0,8
tick,0x7fffe05afeb4,323750783,0,0x0,8
tick,0x7fffe05afeb4,323766805,0,0x0,8
tick,0x7fffe05afeb4,323782873,0,0x0,8
tick,0x7fffe05afeb4,323798805,0,0x0,8
tick,0x7fffe05afeb4,323813858,0,0x0,8
tick,0x7fffe05afeb4,323829797,0,0x0,8
tick,0x7fffe05afeb4,323845759,0,0x0,8
tick,0x7fffe05afeb4,323860807,0,0x0,8
tick,0x7fffe05afeb4,323876753,0,0x0,8
tick,0x7fffe05afeb4,323891861,0,0x0,8
tick,0x7fffe05afeb4,323907815,0,0x0,8
tick,0x7fffe05afeb4,323923787,0,0x0,8
tick,0x7fffe05afeb4,323939872,0,0x0,8
tick,0x7fffe05afeb4,323954821,0,0x0,8
tick,0x7fffe05afeb4,323970840,0,0x0,8
tick,0x7fffe05afeb4,323985834,0,0x0,8
tick,0x7fffe05afeb4,324000880,0,0x0,8
tick,0x7fffe05afeb4,324016956,0,0x0,8
tick,0x7fffe05afeb4,324032852,0,0x0,8
tick,0x7fffe05afeb4,324047898,0,0x0,8
tick,0x7fffe05afeb4,324063840,0,0x0,8
tick,0x7fffe05afeb4,324079832,0,0x0,8
tick,0x7fffe05afeb4,324095850,0,0x0,8
tick,0x7fffe05afeb4,324111782,0,0x0,8
tick,0x7fffe05afeb4,324127852,0,0x0,8
tick,0x7fffe05afeb4,324143858,0,0x0,8
tick,0x7fffe05afeb4,324160107,0,0x0,8
tick,0x7fffe05afeb4,324175904,0,0x0,8
tick,0x7fffe05afeb4,324191770,0,0x0,8
tick,0x7fffe05afeb4,324207783,0,0x0,8
tick,0x7fffe05afeb4,324223917,0,0x0,8
tick,0x7fffe05afeb4,324238889,0,0x0,8
tick,0x7fffe05afeb4,324253907,0,0x0,8
tick,0x7fffe05afeb4,324269893,0,0x0,8
tick,0x7fffe05afeb4,324285772,0,0x0,8
tick,0x7fffe05afeb4,324300818,0,0x0,8
tick,0x7fffe05afeb4,324316849,0,0x0,8
tick,0x7fffe05afeb4,324332864,0,0x0,8
tick,0x7fffe05afeb4,324348932,0,0x0,8
tick,0x7fffe05afeb4,324364927,0,0x0,8
tick,0x7fffe05afeb4,324379847,0,0x0,8
tick,0x7fffe05afeb4,324394832,0,0x0,8
tick,0x7fffe05afeb4,324410782,0,0x0,8
tick,0x7fffe05afeb4,324425861,0,0x0,8
tick,0x7fffe05afeb4,324440843,0,0x0,8
tick,0x7fffe05afeb4,324456773,0,0x0,8
tick,0x7fffe05afeb4,324472779,0,0x0,8
tick,0x7fffe05afeb4,324488912,0,0x0,8
tick,0x7fffe05afeb4,324504773,0,0x0,8
tick,0x7fffe05afeb4,324520780,0,0x0,8
tick,0x7fffe05afeb4,324535771,0,0x0,8
tick,0x7fffe05afeb4,324552041,0,0x0,8
tick,0x7fffe05afeb4,324566786,0,0x0,8
tick,0x7fffe05afeb4,324582910,0,0x0,8
tick,0x7fffe05afeb4,324598807,0,0x0,8
tick,0x7fffe05afeb4,324614798,0,0x0,8
tick,0x7fffe05afeb4,324630769,0,0x0,8
tick,0x7fffe05afeb4,324645807,0,0x0,8
tick,0x7fffe05afeb4,324661116,0,0x0,8
tick,0x7fffe05afeb4,324675773,0,0x0,8
tick,0x7fffe05afeb4,324691774,0,0x0,8
tick,0x7fffe05afeb4,324706860,0,0x0,8
tick,0x7fffe05afeb4,324722771,0,0x0,8
tick,0x7fffe05afeb4,324738793,0,0x0,8
tick,0x7fffe05afeb4,324754774,0,0x0,8
tick,0x7fffe05afeb4,324769893,0,0x0,8
tick,0x7fffe05afeb4,324785844,0,0x0,8
tick,0x7fffe05afeb4,324800788,0,0x0,8
tick,0x7fffe05afeb4,324816861,0,0x0,8
tick,0x7fffe05afeb4,324832783,0,0x0,8
tick,0x7fffe05afeb4,324848784,0,0x0,8
tick,0x7fffe05afeb4,324864825,0,0x0,8
tick,0x7fffe05afeb4,324880880,0,0x0,8
tick,0x7fffe05afeb4,324896792,0,0x0,8
tick,0x7fffe05afeb4,324911803,0,0x0,8
tick,0x7fffe05afeb4,324927776,0,0x0,8
tick,0x7fffe05afeb4,324943850,0,0x0,8
tick,0x7fffe05afeb4,324959852,0,0x0,8
tick,0x7fffe05afeb4,324975873,0,0x0,8
tick,0x7fffe05afeb4,324991851,0,0x0,8
tick,0x7fffe05afeb4,325006772,0,0x0,8
tick,0x7fffe05afeb4,325022882,0,0x0,8
tick,0x7fffe05afeb4,325038799,0,0x0,8
tick,0x7fffe05afeb4,325053802,0,0x0,8
tick,0x7fffe05afeb4,325069879,0,0x0,8
tick,0x7fffe05afeb4,325084926,0,0x0,8
tick,0x7fffe05afeb4,325100996,0,0x0,8
tick,0x7fffe05afeb4,325116791,0,0x0,8
tick,0x7fffe05afeb4,325132783,0,0x0,8
tick,0x7fffe05afeb4,325148976,0,0x0,8
tick,0x7fffe05afeb4,325164952,0,0x0,8
tick,0x7fffe05afeb4,325179897,0,0x0,8
tick,0x7fffe05afeb4,325196113,0,0x0,8
tick,0x7fffe05afeb4,325211776,0,0x0,8
tick,0x7fffe05afeb4,325227814,0,0x0,8
tick,0x7fffe05afeb4,325243782,0,0x0,8
tick,0x7fffe05afeb4,325259803,0,0x0,8
tick,0x7fffe05afeb4,325275869,0,0x0,8
tick,0x7fffe05afeb4,325291789,0,0x0,8
tick,0x7fffe05afeb4,325307837,0,0x0,8
tick,0x7fffe05afeb4,325323809,0,0x0,8
tick,0x7fffe05afeb4,325339854,0,0x0,8
tick,0x7fffe05afeb4,325355953,0,0x0,8
tick,0x7fffe05afeb4,325370775,0,0x0,8
tick,0x7fffe05afeb4,325386849,0,0x0,8
tick,0x7fffe05afeb4,325402841,0,0x0,8
tick,0x7fffe05afeb4,325418847,0,0x0,8
tick,0x7fffe05afeb4,325435010,0,0x0,8
tick,0x7fffe05afeb4,325450847,0,0x0,8
tick,0x7fffe05afeb4,325466931,0,0x0,8
tick,0x7fffe05afeb4,325482897,0,0x0,8
tick,0x7fffe05afeb4,325498912,0,0x0,8
tick,0x7fffe05afeb4,325514842,0,0x0,8
tick,0x7fffe05afeb4,325529809,0,0x0,8
tick,0x7fffe05afeb4,325545923,0,0x0,8
tick,0x7fffe05afeb4,325560774,0,0x0,8
tick,0x7fffe05afeb4,325576864,0,0x0,8
tick,0x7fffe05afeb4,325592924,0,0x0,8
tick,0x7fffe05afeb4,325608792,0,0x0,8
tick,0x7fffe05afeb4,325624797,0,0x0,8
tick,0x7fffe05afeb4,325640887,0,0x0,8
tick,0x7fffe05afeb4,325656038,0,0x0,8
tick,0x7fffe05afeb4,325671989,0,0x0,8
tick,0x7fffe05afeb4,325687825,0,0x0,8
tick,0x7fffe05afeb4,325703942,0,0x0,8
tick,0x7fffe05afeb4,325719804,0,0x0,8
tick,0x7fffe05afeb4,325734816,0,0x0,8
tick,0x7fffe05afeb4,325750787,0,0x0,8
tick,0x7fffe05afeb4,325767070,0,0x0,8
tick,0x7fffe05afeb4,325782840,0,0x0,8
tick,0x7fffe05afeb4,325798871,0,0x0,8
tick,0x7fffe05afeb4,325814795,0,0x0,8
tick,0x7fffe05afeb4,325830900,0,0x0,8
tick,0x7fffe05afeb4,325845873,0,0x0,8
tick,0x7fffe05afeb4,325861776,0,0x0,8
tick,0x7fffe05afeb4,325877843,0,0x0,8
tick,0x7fffe05afeb4,325893834,0,0x0,8
tick,0x7fffe05afeb4,325909839,0,0x0,8
tick,0x7fffe05afeb4,325925803,0,0x0,8
tick,0x7fffe05afeb4,325941793,0,0x0,8
tick,0x7fffe05afeb4,325957853,0,0x0,8
tick,0x7fffe05afeb4,325973795,0,0x0,8
tick,0x7fffe05afeb4,325988830,0,0x0,8
tick,0x7fffe05afeb4,326004796,0,0x0,8
tick,0x7fffe05afeb4,326020792,0,0x0,8
tick,0x7fffe05afeb4,326036814,0,0x0,8
tick,0x7fffe05afeb4,326052858,0,0x0,8
tick,0x7fffe05afeb4,326068776,0,0x0,8
tick,0x7fffe05afeb4,326085009,0,0x0,8
tick,0x7fffe05afeb4,326100783,0,0x0,8
tick,0x7fffe05afeb4,326116830,0,0x0,8
tick,0x7fffe05afeb4,326132938,0,0x0,8
tick,0x7fffe05afeb4,326148006,0,0x0,8
tick,0x7fffe05afeb4,326163796,0,0x0,8
tick,0x7fffe05afeb4,326178858,0,0x0,8
tick,0x7fffe05afeb4,326194824,0,0x0,8
tick,0x7fffe05afeb4,326210862,0,0x0,8
tick,0x7fffe05afeb4,326226789,0,0x0,8
tick,0x7fffe05afeb4,326242778,0,0x0,8
tick,0x7fffe05afeb4,326259439,0,0x0,8
tick,0x7fffe05afeb4,326274785,0,0x0,8
tick,0x7fffe05afeb4,326290245,0,0x0,8
tick,0x7fffe05afeb4,326305846,0,0x0,8
tick,0x7fffe05afeb4,326321926,0,0x0,8
tick,0x7fffe05afeb4,326337784,0,0x0,8
tick,0x7fffe05afeb4,326354101,0,0x0,8
tick,0x7fffe05afeb4,326369872,0,0x0,8
tick,0x7fffe05afeb4,326385796,0,0x0,8
tick,0x7fffe05afeb4,326401845,0,0x0,8
tick,0x7fffe05afeb4,326417820,0,0x0,8
tick,0x7fffe05afeb4,326433803,0,0x0,8
tick,0x7fffe05afeb4,326449811,0,0x0,8
tick,0x7fffe05afeb4,326465861,0,0x0,8
tick,0x7fffe05afeb4,326482008,0,0x0,8
tick,0x7fffe05afeb4,326497906,0,0x0,8
tick,0x7fffe05afeb4,326513786,0,0x0,8
tick,0x7fffe05afeb4,326529805,0,0x0,8
tick,0x7fffe05afeb4,326545777,0,0x0,8
tick,0x7fffe05afeb4,326561837,0,0x0,8
tick,0x7fffe05afeb4,326577908,0,0x0,8
tick,0x7fffe05afeb4,326593781,0,0x0,8
tick,0x7fffe05afeb4,326609801,0,0x0,8
tick,0x7fffe05afeb4,326625789,0,0x0,8
tick,0x7fffe05afeb4,326641804,0,0x0,8
tick,0x7fffe05afeb4,326657792,0,0x0,8
tick,0x7fffe05afeb4,326673811,0,0x0,8
tick,0x7fffe05afeb4,326689882,0,0x0,8
tick,0x7fffe05afeb4,326705866,0,0x0,8
tick,0x7fffe05afeb4,326721846,0,0x0,8
tick,0x7fffe05afeb4,326737787,0,0x0,8
tick,0x7fffe05afeb4,326753773,0,0x0,8
tick,0x7fffe05afeb4,326769864,0,0x0,8
tick,0x7fffe05afeb4,326784806,0,0x0,8
tick,0x7fffe05afeb4,326800888,0,0x0,8
tick,0x7fffe05afeb4,326815769,0,0x0,8
tick,0x7fffe05afeb4,326831854,0,0x0,8
tick,0x7fffe05afeb4,326846848,0,0x0,8
tick,0x7fffe05afeb4,326862763,0,0x0,8
tick,0x7fffe05afeb4,326878901,0,0x0,8
tick,0x7fffe05afeb4,326894850,0,0x0,8
tick,0x7fffe05afeb4,326910767,0,0x0,8
tick,0x7fffe05afeb4,326926869,0,0x0,8
tick,0x7fffe05afeb4,326942876,0,0x0,8
tick,0x7fffe05afeb4,326958807,0,0x0,8
tick,0x7fffe05afeb4,326973777,0,0x0,8
tick,0x7fffe05afeb4,326989863,0,0x0,8
tick,0x7fffe05afeb4,327004797,0,0x0,8
tick,0x7fffe05afeb4,327020775,0,0x0,8
tick,0x7fffe05afeb4,327036858,0,0x0,8
tick,0x7fffe05afeb4,327052771,0,0x0,8
tick,0x7fffe05afeb4,327068869,0,0x0,8
tick,0x7fffe05afeb4,327084836,0,0x0,8
tick,0x7fffe05afeb4,327100807,0,0x0,8
tick,0x7fffe05afeb4,327116853,0,0x0,8
tick,0x7fffe05afeb4,327132807,0,0x0,8
tick,0x7fffe05afeb4,327147798,0,0x0,8
tick,0x7fffe05afeb4,327163763,0,0x0,8
tick,0x7fffe05afeb4,327178862,0,0x0,8
tick,0x7fffe05afeb4,327194813,0,0x0,8
tick,0x7fffe05afeb4,327209845,0,0x0,8
tick,0x7fffe05afeb4,327225849,0,0x0,8
tick,0x7fffe05afeb4,327241842,0,0x0,8
tick,0x7fffe05afeb4,327257857,0,0x0,8
tick,0x7fffe05afeb4,327273843,0,0x0,8
tick,0x7fffe05afeb4,327289814,0,0x0,8
tick,0x7fffe05afeb4,327305779,0,0x0,8
tick,0x7fffe05afeb4,327321784,0,0x0,8
tick,0x7fffe05afeb4,327337837,0,0x0,8
tick,0x7fffe05afeb4,327354171,0,0x0,8
tick,0x7fffe05afeb4,327369774,0,0x0,8
tick,0x7fffe05afeb4,327385535,0,0x0,8
tick,0x7fffe05afeb4,327400870,0,0x0,8
tick,0x7fffe05afeb4,327416776,0,0x0,8
tick,0x7fffe05afeb4,327432831,0,0x0,8
tick,0x7fffe05afeb4,327448789,0,0x0,8
tick,0x7fffe05afeb4,327464854,0,0x0,8
tick,0x7fffe05afeb4,327480808,0,0x0,8
tick,0x7fffe05afeb4,327495870,0,0x0,8
tick,0x7fffe05afeb4,327512056,0,0x0,8
tick,0x7fffe05afeb4,327527782,0,0x0,8
tick,0x7fffe05afeb4,327543811,0,0x0,8
tick,0x7fffe05afeb4,327559966,0,0x0,8
tick,0x7fffe05afeb4,327575887,0,0x0,8
tick,0x7fffe05afeb4,327591866,0,0x0,8
tick,0x7fffe05afeb4,327607824,0,0x0,8
tick,0x7fffe05afeb4,327623803,0,0x0,8
tick,0x7fffe05afeb4,327639018,0,0x0,8
tick,0x7fffe05afeb4,327654851,0,0x0,8
tick,0x7fffe05afeb4,327669912,0,0x0,8
tick,0x7fffe05afeb4,327685821,0,0x0,8
tick,0x7fffe05afeb4,327701841,0,0x0,8
tick,0x7fffe05afeb4,327717846,0,0x0,8
tick,0x7fffe05afeb4,327733811,0,0x0,8
tick,0x7fffe05afeb4,327749804,0,0x0,8
tick,0x7fffe05afeb4,327765894,0,0x0,8
tick,0x7fffe05afeb4,327781846,0,0x0,8
tick,0x7fffe05afeb4,327797839,0,0x0,8
tick,0x7fffe05afeb4,327813849,0,0x0,8
tick,0x7fffe05afeb4,327829812,0,0x0,8
tick,0x7fffe05afeb4,327845813,0,0x0,8
tick,0x7fffe05afeb4,327861767,0,0x0,8
tick,0x7fffe05afeb4,327877779,0,0x0,8
tick,0x7fffe05afeb4,327893869,0,0x0,8
tick,0x7fffe05afeb4,327909788,0,0x0,8
tick,0x7fffe05afeb4,327925862,0,0x0,8
tick,0x7fffe05afeb4,327941790,0,0x0,8
tick,0x7fffe05afeb4,327957815,0,0x0,8
tick,0x7fffe05afeb4,327973763,0,0x0,8
tick,0x7fffe05afeb4,327989882,0,0x0,8
tick,0x7fffe05afeb4,328005851,0,0x0,8
tick,0x7fffe05afeb4,328021780,0,0x0,8
tick,0x7fffe05afeb4,328037853,0,0x0,8
tick,0x7fffe05afeb4,328053843,0,0x0,8
tick,0x7fffe05afeb4,328069793,0,0x0,8
tick,0x7fffe05afeb4,328085767,0,0x0,8
tick,0x7fffe05afeb4,328101881,0,0x0,8
tick,0x7fffe05afeb4,328117852,0,0x0,8
tick,0x7fffe05afeb4,328133793,0,0x0,8
tick,0x7fffe05afeb4,328149936,0,0x0,8
tick,0x7fffe05afeb4,328165790,0,0x0,8
tick,0x7fffe05afeb4,328181786,0,0x0,8
tick,0x7fffe05afeb4,328197787,0,0x0,8
tick,0x7fffe05afeb4,328213869,0,0x0,8
tick,0x7fffe05afeb4,328229892,0,0x0,8
tick,0x7fffe05afeb4,328245873,0,0x0,8
tick,0x7fffe05afeb4,328261854,0,0x0,8
tick,0x7fffe05afeb4,328277841,0,0x0,8
tick,0x7fffe05afeb4,328293779,0,0x0,8
tick,0x7fffe05afeb4,328309796,0,0x0,8
tick,0x7fffe05afeb4,328326090,0,0x0,8
tick,0x7fffe05afeb4,328341864,0,0x0,8
tick,0x7fffe05afeb4,328357806,0,0x0,8
tick,0x7fffe05afeb4,328373861,0,0x0,8
tick,0x7fffe05afeb4,328389848,0,0x0,8
tick,0x7fffe05afeb4,328405840,0,0x0,8
tick,0x7fffe05afeb4,328421848,0,0x0,8
tick,0x7fffe05afeb4,328437852,0,0x0,8
tick,0x7fffe05afeb4,328453886,0,0x0,8
tick,0x7fffe05afeb4,328469857,0,0x0,8
tick,0x7fffe05afeb4,328485876,0,0x0,8
tick,0x7fffe05afeb4,328501767,0,0x0,8
tick,0x7fffe05afeb4,328517783,0,0x0,8
tick,0x7fffe05afeb4,328533867,0,0x0,8
tick,0x7fffe05afeb4,328550197,0,0x0,8
tick,0x7fffe05afeb4,328565782,0,0x0,8
tick,0x7fffe05afeb4,328581753,0,0x0,8
tick,0x7fffe05afeb4,328597763,0,0x0,8
tick,0x7fffe05afeb4,328613877,0,0x0,8
tick,0x7fffe05afeb4,328629796,0,0x0,8
tick,0x7fffe05afeb4,328645785,0,0x0,8
tick,0x7fffe05afeb4,328661958,0,0x0,8
tick,0x7fffe05afeb4,328676925,0,0x0,8
tick,0x7fffe05afeb4,328692827,0,0x0,8
tick,0x7fffe05afeb4,328707795,0,0x0,8
tick,0x7fffe05afeb4,328723886,0,0x0,8
tick,0x7fffe05afeb4,328738856,0,0x0,8
tick,0x7fffe05afeb4,328753776,0,0x0,8
tick,0x7fffe05afeb4,328769971,0,0x0,8
tick,0x7fffe05afeb4,328784794,0,0x0,8
tick,0x7fffe05afeb4,328799805,0,0x0,8
tick,0x7fffe05afeb4,328815817,0,0x0,8
tick,0x7fffe05afeb4,328831771,0,0x0,8
tick,0x7fffe05afeb4,328847797,0,0x0,8
tick,0x7fffe05afeb4,328863847,0,0x0,8
tick,0x7fffe05afeb4,328879948,0,0x0,8
tick,0x7fffe05afeb4,328895780,0,0x0,8
tick,0x7fffe05afeb4,328911798,0,0x0,8
tick,0x7fffe05afeb4,328926861,0,0x0,8
tick,0x7fffe05afeb4,328942883,0,0x0,8
tick,0x7fffe05afeb4,328958772,0,0x0,8
tick,0x7fffe05afeb4,328974866,0,0x0,8
tick,0x7fffe05afeb4,328990904,0,0x0,8
tick,0x7fffe05afeb4,329006828,0,0x0,8
tick,0x7fffe05afeb4,329022845,0,0x0,8
tick,0x7fffe05afeb4,329038791,0,0x0,8
tick,0x7fffe05afeb4,329054850,0,0x0,8
tick,0x7fffe05afeb4,329070799,0,0x0,8
tick,0x7fffe05afeb4,329086785,0,0x0,8
tick,0x7fffe05afeb4,329102897,0,0x0,8
tick,0x7fffe05afeb4,329118871,0,0x0,8
tick,0x7fffe05afeb4,329135105,0,0x0,8
tick,0x7fffe05afeb4,329150775,0,0x0,8
tick,0x7fffe05afeb4,329166970,0,0x0,8
tick,0x7fffe05afeb4,329182778,0,0x0,8
tick,0x7fffe05afeb4,329199013,0,0x0,8
tick,0x7fffe05afeb4,329213871,0,0x0,8
tick,0x7fffe05afeb4,329229893,0,0x0,8
tick,0x7fffe05afeb4,329244855,0,0x0,8
tick,0x7fffe05afeb4,329261054,0,0x0,8
tick,0x7fffe05afeb4,329275785,0,0x0,8
tick,0x7fffe05afeb4,329291942,0,0x0,8
tick,0x7fffe05afeb4,329306894,0,0x0,8
tick,0x7fffe05afeb4,329322863,0,0x0,8
tick,0x7fffe05afeb4,329338851,0,0x0,8
tick,0x7fffe05afeb4,329354955,0,0x0,8
tick,0x7fffe05afeb4,329370834,0,0x0,8
tick,0x7fffe05afeb4,329385779,0,0x0,8
tick,0x7fffe05afeb4,329401785,0,0x0,8
tick,0x7fffe05afeb4,329417859,0,0x0,8
tick,0x7fffe05afeb4,329433878,0,0x0,8
tick,0x7fffe05afeb4,329449965,0,0x0,8
tick,0x7fffe05afeb4,329465865,0,0x0,8
tick,0x7fffe05afeb4,329481859,0,0x0,8
tick,0x7fffe05afeb4,329497897,0,0x0,8
tick,0x7fffe05afeb4,329513761,0,0x0,8
tick,0x7fffe05afeb4,329529867,0,0x0,8
tick,0x7fffe05afeb4,329545853,0,0x0,8
tick,0x7fffe05afeb4,329561854,0,0x0,8
tick,0x7fffe05afeb4,329576765,0,0x0,8
tick,0x7fffe05afeb4,329592852,0,0x0,8
tick,0x7fffe05afeb4,329608792,0,0x0,8
tick,0x7fffe05afeb4,329624761,0,0x0,8
tick,0x7fffe05afeb4,329640773,0,0x0,8
tick,0x7fffe05afeb4,329656925,0,0x0,8
tick,0x7fffe05afeb4,329672765,0,0x0,8
tick,0x7fffe05afeb4,329687855,0,0x0,8
tick,0x7fffe05afeb4,329704010,0,0x0,8
tick,0x7fffe05afeb4,329719827,0,0x0,8
tick,0x7fffe05afeb4,329735770,0,0x0,8
tick,0x7fffe05afeb4,329751771,0,0x0,8
tick,0x7fffe05afeb4,329767923,0,0x0,8
tick,0x7fffe05afeb4,329783870,0,0x0,8
tick,0x7fffe05afeb4,329799883,0,0x0,8
tick,0x7fffe05afeb4,329815850,0,0x0,8
tick,0x7fffe05afeb4,329831791,0,0x0,8
tick,0x7fffe05afeb4,329847766,0,0x0,8
tick,0x7fffe05afeb4,329863856,0,0x0,8
tick,0x7fffe05afeb4,329879849,0,0x0,8
tick,0x7fffe05afeb4,329895848,0,0x0,8
tick,0x7fffe05afeb4,329911479,0,0x0,8
tick,0x7fffe05afeb4,329925934,0,0x0,8
tick,0x7fffe05afeb4,329941808,0,0x0,8
tick,0x7fffe05afeb4,329957784,0,0x0,8
tick,0x7fffe05afeb4,329973764,0,0x0,8
tick,0x7fffe05afeb4,329989922,0,0x0,8
tick,0x7fffe05afeb4,330005878,0,0x0,8
tick,0x7fffe05afeb4,330021917,0,0x0,8
tick,0x7fffe05afeb4,330037854,0,0x0,8
tick,0x7fffe05afeb4,330054356,0,0x0,8
tick,0x7fffe05afeb4,330069853,0,0x0,8
tick,0x7fffe05afeb4,330084806,0,0x0,8
tick,0x7fffe05afeb4,330100859,0,0x0,8
tick,0x7fffe05afeb4,330115837,0,0x0,8
tick,0x7fffe05afeb4,330131859,0,0x0,8
tick,0x7fffe05afeb4,330147961,0,0x0,8
tick,0x7fffe05afeb4,330163781,0,0x0,8
tick,0x7fffe05afeb4,330178776,0,0x0,8
tick,0x7fffe05afeb4,330193851,0,0x0,8
tick,0x7fffe05afeb4,330209908,0,0x0,8
tick,0x7fffe05afeb4,330225876,0,0x0,8
tick,0x7fffe05afeb4,330241808,0,0x0,8
tick,0x7fffe05afeb4,330257861,0,0x0,8
tick,0x7fffe05afeb4,330273771,0,0x0,8
tick,0x7fffe05afeb4,330289833,0,0x0,8
tick,0x7fffe05afeb4,330305857,0,0x0,8
tick,0x7fffe05afeb4,330321811,0,0x0,8
tick,0x7fffe05afeb4,330337783,0,0x0,8
tick,0x7fffe05afeb4,330353824,0,0x0,8
tick,0x7fffe05afeb4,330369869,0,0x0,8
tick,0x7fffe05afeb4,330385787,0,0x0,8
tick,0x7fffe05afeb4,330401764,0,0x0,8
tick,0x7fffe05afeb4,330417815,0,0x0,8
tick,0x7fffe05afeb4,330433874,0,0x0,8
tick,0x7fffe05afeb4,330449807,0,0x0,8
tick,0x7fffe05afeb4,330465857,0,0x0,8
tick,0x7fffe05afeb4,330481963,0,0x0,8
tick,0x7fffe05afeb4,330497782,0,0x0,8
tick,0x7fffe05afeb4,330513906,0,0x0,8
tick,0x7fffe05afeb4,330529847,0,0x0,8
tick,0x7fffe05afeb4,330544805,0,0x0,8
tick,0x7fffe05afeb4,330560826,0,0x0,8
tick,0x7fffe05afeb4,330576857,0,0x0,8
tick,0x7fffe05afeb4,330592788,0,0x0,8
tick,0x7fffe05afeb4,330607774,0,0x0,8
tick,0x7fffe05afeb4,330623767,0,0x0,8
tick,0x7fffe05afeb4,330639900,0,0x0,8
tick,0x7fffe05afeb4,330655772,0,0x0,8
tick,0x7fffe05afeb4,330671771,0,0x0,8
tick,0x7fffe05afeb4,330687762,0,0x0,8
tick,0x7fffe05afeb4,330703841,0,0x0,8
tick,0x7fffe05afeb4,330719829,0,0x0,8
tick,0x7fffe05afeb4,330735774,0,0x0,8
tick,0x7fffe05afeb4,330750771,0,0x0,8
tick,0x7fffe05afeb4,330765859,0,0x0,8
tick,0x7fffe05afeb4,330781765,0,0x0,8
tick,0x7fffe05afeb4,330797778,0,0x0,8
tick,0x7fffe05afeb4,330813803,0,0x0,8
tick,0x7fffe05afeb4,330829780,0,0x0,8
tick,0x7fffe05afeb4,330845764,0,0x0,8
tick,0x7fffe05afeb4,330861773,0,0x0,8
tick,0x7fffe05afeb4,330876788,0,0x0,8
tick,0x7fffe05afeb4,330892825,0,0x0,8
tick,0x7fffe05afeb4,330908854,0,0x0,8
tick,0x7fffe05afeb4,330924779,0,0x0,8
tick,0x7fffe05afeb4,330939884,0,0x0,8
tick,0x7fffe05afeb4,330955817,0,0x0,8
tick,0x7fffe05afeb4,330971772,0,0x0,8
tick,0x7fffe05afeb4,330987936,0,0x0,8
tick,0x7fffe05afeb4,331003768,0,0x0,8
tick,0x7fffe05afeb4,331019887,0,0x0,8
tick,0x7fffe05afeb4,331035779,0,0x0,8
tick,0x7fffe05afeb4,331051765,0,0x0,8
tick,0x7fffe05afeb4,331066871,0,0x0,8
tick,0x7fffe05afeb4,331082773,0,0x0,8
tick,0x7fffe05afeb4,331097806,0,0x0,8
tick,0x7fffe05afeb4,331113845,0,0x0,8
tick,0x7fffe05afeb4,331129807,0,0x0,8
tick,0x7fffe05afeb4,331145863,0,0x0,8
tick,0x7fffe05afeb4,331161843,0,0x0,8
tick,0x7fffe05afeb4,331177768,0,0x0,8
tick,0x7fffe05afeb4,331193771,0,0x0,8
tick,0x7fffe05afeb4,331209863,0,0x0,8
tick,0x7fffe05afeb4,331225865,0,0x0,8
tick,0x7fffe05afeb4,331241875,0,0x0,8
tick,0x7fffe05afeb4,331256844,0,0x0,8
tick,0x7fffe05afeb4,331272860,0,0x0,8
tick,0x7fffe05afeb4,331288776,0,0x0,8
tick,0x7fffe05afeb4,331304874,0,0x0,8
tick,0x7fffe05afeb4,331320842,0,0x0,8
tick,0x7fffe05afeb4,331336942,0,0x0,8
tick,0x7fffe05afeb4,331353477,0,0x0,8
tick,0x7fffe05afeb4,331368809,0,0x0,8
tick,0x7fffe05afeb4,331385183,0,0x0,8
tick,0x7fffe05afeb4,331400811,0,0x0,8
tick,0x7fffe05afeb4,331416772,0,0x0,8
tick,0x7fffe05afeb4,331432849,0,0x0,8
tick,0x7fffe05afeb4,331448839,0,0x0,8
tick,0x7fffe05afeb4,331464872,0,0x0,8
tick,0x7fffe05afeb4,331480758,0,0x0,8
tick,0x7fffe05afeb4,331495852,0,0x0,8
tick,0x7fffe05afeb4,331511809,0,0x0,8
tick,0x7fffe05afeb4,331526807,0,0x0,8
tick,0x7fffe05afeb4,331542872,0,0x0,8
tick,0x7fffe05afeb4,331558860,0,0x0,8
tick,0x7fffe05afeb4,331574876,0,0x0,8
tick,0x7fffe05afeb4,331590846,0,0x0,8
tick,0x7fffe05afeb4,331606854,0,0x0,8
tick,0x7fffe05afeb4,331622888,0,0x0,8
tick,0x7fffe05afeb4,331638799,0,0x0,8
tick,0x7fffe05afeb4,331654958,0,0x0,8
tick,0x7fffe05afeb4,331670767,0,0x0,8
tick,0x7fffe05afeb4,331686756,0,0x0,8
tick,0x7fffe05afeb4,331702806,0,0x0,8
tick,0x7fffe05afeb4,331718854,0,0x0,8
tick,0x7fffe05afeb4,331734873,0,0x0,8
tick,0x7fffe05afeb4,331750772,0,0x0,8
tick,0x7fffe05afeb4,331765839,0,0x0,8
tick,0x7fffe05afeb4,331781851,0,0x0,8
tick,0x7fffe05afeb4,331797857,0,0x0,8
tick,0x7fffe05afeb4,331813846,0,0x0,8
tick,0x7fffe05afeb4,331829828,0,0x0,8
tick,0x7fffe05afeb4,331845824,0,0x0,8
tick,0x7fffe05afeb4,331861795,0,0x0,8
tick,0x7fffe05afeb4,331876769,0,0x0,8
tick,0x7fffe05afeb4,331892857,0,0x0,8
tick,0x7fffe05afeb4,331908861,0,0x0,8
tick,0x7fffe05afeb4,331924775,0,0x0,8
tick,0x7fffe05afeb4,331939881,0,0x0,8
tick,0x7fffe05afeb4,331955851,0,0x0,8
tick,0x7fffe05afeb4,331971837,0,0x0,8
tick,0x7fffe05afeb4,331987772,0,0x0,8
tick,0x7fffe05afeb4,332002791,0,0x0,8
tick,0x7fffe05afeb4,332017855,0,0x0,8
tick,0x7fffe05afeb4,332033851,0,0x0,8
tick,0x7fffe05afeb4,332049788,0,0x0,8
tick,0x7fffe05afeb4,332065853,0,0x0,8
tick,0x7fffe05afeb4,332081869,0,0x0,8
tick,0x7fffe05afeb4,332097849,0,0x0,8
tick,0x7fffe05afeb4,332112769,0,0x0,8
tick,0x7fffe05afeb4,332128771,0,0x0,8
tick,0x7fffe05afeb4,332144757,0,0x0,8
tick,0x7fffe05afeb4,332159911,0,0x0,8
tick,0x7fffe05afeb4,332175869,0,0x0,8
tick,0x7fffe05afeb4,332191783,0,0x0,8
tick,0x7fffe05afeb4,332206889,0,0x0,8
tick,0x7fffe05afeb4,332222774,0,0x0,8
tick,0x7fffe05afeb4,332238825,0,0x0,8
tick,0x7fffe05afeb4,332254862,0,0x0,8
tick,0x7fffe05afeb4,332270883,0,0x0,8
tick,0x7fffe05afeb4,332286876,0,0x0,8
tick,0x7fffe05afeb4,332302802,0,0x0,8
tick,0x7fffe05afeb4,332317806,0,0x0,8
tick,0x7fffe05afeb4,332333804,0,0x0,8
tick,0x7fffe05afeb4,332349844,0,0x0,8
tick,0x7fffe05afeb4,332364808,0,0x0,8
tick,0x7fffe05afeb4,332380780,0,0x0,8
tick,0x7fffe05afeb4,332395872,0,0x0,8
tick,0x7fffe05afeb4,332411841,0,0x0,8
tick,0x7fffe05afeb4,332427811,0,0x0,8
tick,0x7fffe05afeb4,332443780,0,0x0,8
tick,0x7fffe05afeb4,332459802,0,0x0,8
tick,0x7fffe05afeb4,332475845,0,0x0,8
tick,0x7fffe05afeb4,332491786,0,0x0,8
tick,0x7fffe05afeb4,332506842,0,0x0,8
tick,0x7fffe05afeb4,332522835,0,0x0,8
tick,0x7fffe05afeb4,332538791,0,0x0,8
tick,0x7fffe05afeb4,332554761,0,0x0,8
tick,0x7fffe05afeb4,332571009,0,0x0,8
tick,0x7fffe05afeb4,332586890,0,0x0,8
tick,0x7fffe05afeb4,332602792,0,0x0,8
tick,0x7fffe05afeb4,332618906,0,0x0,8
tick,0x7fffe05afeb4,332635074,0,0x0,8
tick,0x7fffe05afeb4,332650827,0,0x0,8
tick,0x7fffe05afeb4,332666838,0,0x0,8
tick,0x7fffe05afeb4,332682864,0,0x0,8
tick,0x7fffe05afeb4,332698862,0,0x0,8
tick,0x7fffe05afeb4,332714852,0,0x0,8
tick,0x7fffe05afeb4,332730815,0,0x0,8
tick,0x7fffe05afeb4,332745802,0,0x0,8
tick,0x7fffe05afeb4,332761837,0,0x0,8
tick,0x7fffe05afeb4,332777794,0,0x0,8
tick,0x7fffe05afeb4,332793789,0,0x0,8
tick,0x7fffe05afeb4,332809768,0,0x0,8
tick,0x7fffe05afeb4,332825930,0,0x0,8
tick,0x7fffe05afeb4,332841869,0,0x0,8
tick,0x7fffe05afeb4,332857885,0,0x0,8
tick,0x7fffe05afeb4,332873887,0,0x0,8
tick,0x7fffe05afeb4,332889822,0,0x0,8
tick,0x7fffe05afeb4,332905756,0,0x0,8
tick,0x7fffe05afeb4,332921822,0,0x0,8
tick,0x7fffe05afeb4,332937849,0,0x0,8
tick,0x7fffe05afeb4,332953863,0,0x0,8
tick,0x7fffe05afeb4,332969857,0,0x0,8
tick,0x7fffe05afeb4,332985803,0,0x0,8
tick,0x7fffe05afeb4,333001761,0,0x0,8
tick,0x7fffe05afeb4,333017765,0,0x0,8
tick,0x7fffe05afeb4,333033843,0,0x0,8
tick,0x7fffe05afeb4,333049871,0,0x0,8
tick,0x7fffe05afeb4,333065853,0,0x0,8
tick,0x7fffe05afeb4,333081855,0,0x0,8
tick,0x7fffe05afeb4,333098184,0,0x0,8
tick,0x7fffe05afeb4,333113841,0,0x0,8
tick,0x7fffe05afeb4,333129815,0,0x0,8
tick,0x7fffe05afeb4,333145801,0,0x0,8
tick,0x7fffe05afeb4,333161851,0,0x0,8
tick,0x7fffe05afeb4,333177777,0,0x0,8
tick,0x7fffe05afeb4,333193765,0,0x0,8
tick,0x7fffe05afeb4,333208773,0,0x0,8
tick,0x7fffe05afeb4,333224849,0,0x0,8
tick,0x7fffe05afeb4,333240768,0,0x0,8
tick,0x7fffe05afeb4,333256762,0,0x0,8
tick,0x7fffe05afeb4,333272861,0,0x0,8
tick,0x7fffe05afeb4,333287859,0,0x0,8
tick,0x7fffe05afeb4,333303797,0,0x0,8
tick,0x7fffe05afeb4,333319920,0,0x0,8
tick,0x7fffe05afeb4,333335780,0,0x0,8
tick,0x7fffe05afeb4,333352192,0,0x0,8
tick,0x7fffe05afeb4,333366807,0,0x0,8
tick,0x7fffe05afeb4,333382895,0,0x0,8
tick,0x7fffe05afeb4,333398853,0,0x0,8
tick,0x7fffe05afeb4,333415932,0,0x0,8
tick,0x7fffe05afeb4,333430836,0,0x0,8
tick,0x7fffe05afeb4,333446088,0,0x0,8
tick,0x7fffe05afeb4,333461785,0,0x0,8
tick,0x7fffe05afeb4,333477810,0,0x0,8
tick,0x7fffe05afeb4,333493783,0,0x0,8
tick,0x7fffe05afeb4,333509794,0,0x0,8
tick,0x7fffe05afeb4,333525845,0,0x0,8
tick,0x7fffe05afeb4,333541912,0,0x0,8
tick,0x7fffe05afeb4,333557838,0,0x0,8
tick,0x7fffe05afeb4,333573770,0,0x0,8
tick,0x7fffe05afeb4,333589796,0,0x0,8
tick,0x7fffe05afeb4,333605857,0,0x0,8
tick,0x7fffe05afeb4,333621840,0,0x0,8
tick,0x7fffe05afeb4,333637851,0,0x0,8
tick,0x7fffe05afeb4,333653962,0,0x0,8
tick,0x7fffe05afeb4,333669857,0,0x0,8
tick,0x7fffe05afeb4,333685776,0,0x0,8
tick,0x7fffe05afeb4,333701777,0,0x0,8
tick,0x7fffe05afeb4,333717858,0,0x0,8
tick,0x7fffe05afeb4,333733868,0,0x0,8
tick,0x7fffe05afeb4,333749917,0,0x0,8
tick,0x7fffe05afeb4,333765859,0,0x0,8
tick,0x7fffe05afeb4,333781872,0,0x0,8
tick,0x7fffe05afeb4,333797780,0,0x0,8
tick,0x7fffe05afeb4,333813762,0,0x0,8
tick,0x7fffe05afeb4,333829838,0,0x0,8
tick,0x7fffe05afeb4,333845853,0,0x0,8
tick,0x7fffe05afeb4,333861845,0,0x0,8
tick,0x7fffe05afeb4,333877873,0,0x0,8
tick,0x7fffe05afeb4,333893826,0,0x0,8
tick,0x7fffe05afeb4,333909772,0,0x0,8
tick,0x7fffe05afeb4,333925762,0,0x0,8
tick,0x7fffe05afeb4,333941865,0,0x0,8
tick,0x7fffe05afeb4,333957851,0,0x0,8
tick,0x7fffe05afeb4,333973853,0,0x0,8
tick,0x7fffe05afeb4,333990016,0,0x0,8
tick,0x7fffe05afeb4,334005839,0,0x0,8
tick,0x7fffe05afeb4,334020765,0,0x0,8
tick,0x7fffe05afeb4,334036781,0,0x0,8
tick,0x7fffe05afeb4,334052813,0,0x0,8
tick,0x7fffe05afeb4,334068850,0,0x0,8
tick,0x7fffe05afeb4,334084783,0,0x0,8
tick,0x7fffe05afeb4,334100785,0,0x0,8
tick,0x7fffe05afeb4,334115894,0,0x0,8
tick,0x7fffe05afeb4,334131789,0,0x0,8
tick,0x7fffe05afeb4,334147769,0,0x0,8
tick,0x7fffe05afeb4,334163773,0,0x0,8
tick,0x7fffe05afeb4,334179864,0,0x0,8
tick,0x7fffe05afeb4,334195868,0,0x0,8
tick,0x7fffe05afeb4,334211858,0,0x0,8
tick,0x7fffe05afeb4,334227763,0,0x0,8
tick,0x7fffe05afeb4,334243840,0,0x0,8
tick,0x7fffe05afeb4,334259815,0,0x0,8
tick,0x7fffe05afeb4,334275825,0,0x0,8
tick,0x7fffe05afeb4,334291779,0,0x0,8
tick,0x7fffe05afeb4,334307945,0,0x0,8
tick,0x7fffe05afeb4,334323173,0,0x0,8
tick,0x7fffe05afeb4,334338912,0,0x0,8
tick,0x7fffe05afeb4,334354823,0,0x0,8
tick,0x7fffe05afeb4,334370774,0,0x0,8
tick,0x7fffe05afeb4,334386897,0,0x0,8
tick,0x7fffe05afeb4,334402857,0,0x0,8
tick,0x7fffe05afeb4,334418844,0,0x0,8
tick,0x7fffe05afeb4,334434962,0,0x0,8
tick,0x7fffe05afeb4,334450780,0,0x0,8
tick,0x7fffe05afeb4,334465786,0,0x0,8
tick,0x7fffe05afeb4,334480796,0,0x0,8
tick,0x7fffe05afeb4,334495849,0,0x0,8
tick,0x7fffe05afeb4,334511857,0,0x0,8
tick,0x7fffe05afeb4,334527859,0,0x0,8
tick,0x7fffe05afeb4,334543873,0,0x0,8
tick,0x7fffe05afeb4,334559793,0,0x0,8
tick,0x7fffe05afeb4,334575910,0,0x0,8
tick,0x7fffe05afeb4,334591771,0,0x0,8
tick,0x7fffe05afeb4,334607783,0,0x0,8
tick,0x7fffe05afeb4,334623855,0,0x0,8
tick,0x7fffe05afeb4,334639370,0,0x0,8
tick,0x7fffe05afeb4,334655284,0,0x0,8
tick,0x7fffe05afeb4,334671330,0,0x0,8
tick,0x7fffe05afeb4,334687390,0,0x0,8
tick,0x7fffe05afeb4,334703297,0,0x0,8
tick,0x7fffe05afeb4,334719314,0,0x0,8
tick,0x7fffe05afeb4,334735293,0,0x0,8
tick,0x7fffe05afeb4,334751304,0,0x0,8
tick,0x7fffe05afeb4,334767319,0,0x0,8
tick,0x7fffe05afeb4,334783371,0,0x0,8
tick,0x7fffe05afeb4,334799341,0,0x0,8
tick,0x7fffe05afeb4,334815286,0,0x0,8
tick,0x7fffe05afeb4,334830864,0,0x0,8
tick,0x7fffe05afeb4,334846818,0,0x0,8
tick,0x7fffe05afeb4,334862838,0,0x0,8
tick,0x7fffe05afeb4,334877887,0,0x0,8
tick,0x7fffe05afeb4,334893920,0,0x0,8
tick,0x7fffe05afeb4,334909858,0,0x0,8
tick,0x7fffe05afeb4,334925825,0,0x0,8
tick,0x7fffe05afeb4,334941891,0,0x0,8
tick,0x7fffe05afeb4,334957874,0,0x0,8
tick,0x7fffe05afeb4,334973823,0,0x0,8
tick,0x7fffe05afeb4,334988900,0,0x0,8
tick,0x7fffe05afeb4,335004843,0,0x0,8
tick,0x7fffe05afeb4,335020832,0,0x0,8
tick,0x7fffe05afeb4,335036894,0,0x0,8
tick,0x7fffe05afeb4,335052836,0,0x0,8
tick,0x7fffe05afeb4,335068820,0,0x0,8
tick,0x7fffe05afeb4,335084948,0,0x0,8
tick,0x7fffe05afeb4,335100807,0,0x0,8
tick,0x7fffe05afeb4,335115858,0,0x0,8
tick,0x7fffe05afeb4,335131833,0,0x0,8
tick,0x7fffe05afeb4,335147886,0,0x0,8
tick,0x7fffe05afeb4,335163822,0,0x0,8
tick,0x7fffe05afeb4,335178893,0,0x0,8
tick,0x7fffe05afeb4,335194877,0,0x0,8
tick,0x7fffe05afeb4,335210838,0,0x0,8
tick,0x7fffe05afeb4,335225916,0,0x0,8
tick,0x7fffe05afeb4,335241835,0,0x0,8
tick,0x7fffe05afeb4,335257866,0,0x0,8
tick,0x7fffe05afeb4,335273828,0,0x0,8
tick,0x7fffe05afeb4,335290030,0,0x0,8
tick,0x7fffe05afeb4,335305885,0,0x0,8
tick,0x7fffe05afeb4,335320809,0,0x0,8
tick,0x7fffe05afeb4,335336863,0,0x0,8
tick,0x7fffe05afeb4,335353021,0,0x0,8
tick,0x7fffe05afeb4,335368844,0,0x0,8
tick,0x7fffe05afeb4,335384996,0,0x0,8
tick,0x7fffe05afeb4,335400822,0,0x0,8
tick,0x7fffe05afeb4,335415821,0,0x0,8
tick,0x7fffe05afeb4,335431865,0,0x0,8
tick,0x7fffe05afeb4,335447835,0,0x0,8
tick,0x7fffe05afeb4,335463891,0,0x0,8
tick,0x7fffe05afeb4,335479833,0,0x0,8
tick,0x7fffe05afeb4,335495839,0,0x0,8
tick,0x7fffe05afeb4,335511821,0,0x0,8
tick,0x7fffe05afeb4,335527849,0,0x0,8
tick,0x7fffe05afeb4,335543857,0,0x0,8
tick,0x7fffe05afeb4,335560033,0,0x0,8
tick,0x7fffe05afeb4,335575830,0,0x0,8
tick,0x7fffe05afeb4,335590828,0,0x0,8
tick,0x7fffe05afeb4,335605879,0,0x0,8
tick,0x7fffe05afeb4,335621869,0,0x0,8
tick,0x7fffe05afeb4,335637842,0,0x0,8
tick,0x7fffe05afeb4,335653864,0,0x0,8
tick,0x7fffe05afeb4,335669994,0,0x0,8
tick,0x7fffe05afeb4,335685938,0,0x0,8
tick,0x7fffe05afeb4,335702031,0,0x0,8
tick,0x7fffe05afeb4,335717834,0,0x0,8
tick,0x7fffe05afeb4,335733895,0,0x0,8
tick,0x7fffe05afeb4,335749916,0,0x0,8
tick,0x7fffe05afeb4,335765841,0,0x0,8
tick,0x7fffe05afeb4,335780877,0,0x0,8
tick,0x7fffe05afeb4,335795915,0,0x0,8
tick,0x7fffe05afeb4,335811969,0,0x0,8
tick,0x7fffe05afeb4,335826864,0,0x0,8
tick,0x7fffe05afeb4,335842828,0,0x0,8
tick,0x7fffe05afeb4,335858819,0,0x0,8
tick,0x7fffe05afeb4,335874834,0,0x0,8
tick,0x7fffe05afeb4,335890832,0,0x0,8
tick,0x7fffe05afeb4,335906886,0,0x0,8
tick,0x7fffe05afeb4,335922903,0,0x0,8
tick,0x7fffe05afeb4,335938871,0,0x0,8
tick,0x7fffe05afeb4,335953877,0,0x0,8
tick,0x7fffe05afeb4,335969902,0,0x0,8
tick,0x7fffe05afeb4,335985819,0,0x0,8
tick,0x7fffe05afeb4,336000829,0,0x0,8
tick,0x7fffe05afeb4,336016847,0,0x0,8
tick,0x7fffe05afeb4,336032840,0,0x0,8
tick,0x7fffe05afeb4,336047884,0,0x0,8
tick,0x7fffe05afeb4,336063876,0,0x0,8
tick,0x7fffe05afeb4,336079836,0,0x0,8
tick,0x7fffe05afeb4,336095839,0,0x0,8
tick,0x7fffe05afeb4,336111857,0,0x0,8
tick,0x7fffe05afeb4,336127839,0,0x0,8
tick,0x7fffe05afeb4,336143896,0,0x0,8
tick,0x7fffe05afeb4,336159891,0,0x0,8
tick,0x7fffe05afeb4,336175880,0,0x0,8
tick,0x7fffe05afeb4,336191893,0,0x0,8
tick,0x7fffe05afeb4,336207817,0,0x0,8
tick,0x7fffe05afeb4,336223844,0,0x0,8
tick,0x7fffe05afeb4,336239904,0,0x0,8
tick,0x7fffe05afeb4,336255879,0,0x0,8
tick,0x7fffe05afeb4,336271875,0,0x0,8
tick,0x7fffe05afeb4,336287879,0,0x0,8
tick,0x7fffe05afeb4,336303834,0,0x0,8
tick,0x7fffe05afeb4,336319829,0,0x0,8
tick,0x7fffe05afeb4,336335863,0,0x0,8
tick,0x7fffe05afeb4,336350935,0,0x0,8
tick,0x7fffe05afeb4,336366835,0,0x0,8
tick,0x7fffe05afeb4,336382878,0,0x0,8
tick,0x7fffe05afeb4,336398893,0,0x0,8
tick,0x7fffe05afeb4,336415126,0,0x0,8
tick,0x7fffe05afeb4,336430832,0,0x0,8
tick,0x7fffe05afeb4,336446838,0,0x0,8
tick,0x7fffe05afeb4,336462883,0,0x0,8
tick,0x7fffe05afeb4,336478098,0,0x0,8
tick,0x7fffe05afeb4,336493835,0,0x0,8
tick,0x7fffe05afeb4,336509911,0,0x0,8
tick,0x7fffe05afeb4,336525873,0,0x0,8
tick,0x7fffe05afeb4,336541873,0,0x0,8
tick,0x7fffe05afeb4,336556850,0,0x0,8
tick,0x7fffe05afeb4,336572920,0,0x0,8
tick,0x7fffe05afeb4,336588831,0,0x0,8
tick,0x7fffe05afeb4,336604832,0,0x0,8
tick,0x7fffe05afeb4,336620829,0,0x0,8
tick,0x7fffe05afeb4,336636898,0,0x0,8
tick,0x7fffe05afeb4,336652832,0,0x0,8
tick,0x7fffe05afeb4,336668853,0,0x0,8
tick,0x7fffe05afeb4,336684904,0,0x0,8
tick,0x7fffe05afeb4,336700952,0,0x0,8
tick,0x7fffe05afeb4,336716825,0,0x0,8
tick,0x7fffe05afeb4,336732845,0,0x0,8
tick,0x7fffe05afeb4,336747882,0,0x0,8
tick,0x7fffe05afeb4,336763826,0,0x0,8
tick,0x7fffe05afeb4,336779931,0,0x0,8
tick,0x7fffe05afeb4,336795919,0,0x0,8
tick,0x7fffe05afeb4,336811888,0,0x0,8
tick,0x7fffe05afeb4,336826874,0,0x0,8
tick,0x7fffe05afeb4,336842876,0,0x0,8
tick,0x7fffe05afeb4,336858876,0,0x0,8
tick,0x7fffe05afeb4,336874860,0,0x0,8
tick,0x7fffe05afeb4,336890833,0,0x0,8
tick,0x7fffe05afeb4,336905871,0,0x0,8
tick,0x7fffe05afeb4,336921850,0,0x0,8
tick,0x7fffe05afeb4,336937884,0,0x0,8
tick,0x7fffe05afeb4,336953897,0,0x0,8
tick,0x7fffe05afeb4,336969861,0,0x0,8
tick,0x7fffe05afeb4,336984837,0,0x0,8
tick,0x7fffe05afeb4,337000820,0,0x0,8
tick,0x7fffe05afeb4,337016915,0,0x0,8
tick,0x7fffe05afeb4,337032823,0,0x0,8
tick,0x7fffe05afeb4,337047892,0,0x0,8
tick,0x7fffe05afeb4,337063869,0,0x0,8
tick,0x7fffe05afeb4,337078908,0,0x0,8
tick,0x7fffe05afeb4,337094817,0,0x0,8
tick,0x7fffe05afeb4,337110839,0,0x0,8
tick,0x7fffe05afeb4,337126889,0,0x0,8
tick,0x7fffe05afeb4,337142880,0,0x0,8
tick,0x7fffe05afeb4,337158901,0,0x0,8
tick,0x7fffe05afeb4,337174888,0,0x0,8
tick,0x7fffe05afeb4,337190833,0,0x0,8
tick,0x7fffe05afeb4,337205814,0,0x0,8
tick,0x7fffe05afeb4,337221818,0,0x0,8
tick,0x7fffe05afeb4,337237879,0,0x0,8
tick,0x7fffe05afeb4,337253925,0,0x0,8
tick,0x7fffe05afeb4,337268886,0,0x0,8
tick,0x7fffe05afeb4,337283853,0,0x0,8
tick,0x7fffe05afeb4,337299885,0,0x0,8
tick,0x7fffe05afeb4,337315827,0,0x0,8
tick,0x7fffe05afeb4,337330837,0,0x0,8
tick,0x7fffe05afeb4,337345881,0,0x0,8
tick,0x7fffe05afeb4,337361884,0,0x0,8
tick,0x7fffe05afeb4,337377812,0,0x0,8
tick,0x7fffe05afeb4,337393880,0,0x0,8
tick,0x7fffe05afeb4,337409879,0,0x0,8
tick,0x7fffe05afeb4,337425828,0,0x0,8
tick,0x7fffe05afeb4,337441858,0,0x0,8
tick,0x7fffe05afeb4,337457873,0,0x0,8
tick,0x7fffe05afeb4,337472833,0,0x0,8
tick,0x7fffe05afeb4,337488892,0,0x0,8
tick,0x7fffe05afeb4,337504824,0,0x0,8
tick,0x7fffe05afeb4,337520828,0,0x0,8
tick,0x7fffe05afeb4,337536826,0,0x0,8
tick,0x7fffe05afeb4,337552994,0,0x0,8
tick,0x7fffe05afeb4,337568887,0,0x0,8
tick,0x7fffe05afeb4,337584852,0,0x0,8
tick,0x7fffe05afeb4,337600875,0,0x0,8
tick,0x7fffe05afeb4,337616874,0,0x0,8
tick,0x7fffe05afeb4,337632859,0,0x0,8
tick,0x7fffe05afeb4,337648852,0,0x0,8
tick,0x7fffe05afeb4,337665222,0,0x0,8
tick,0x7fffe05afeb4,337679980,0,0x0,8
tick,0x7fffe05afeb4,337696194,0,0x0,8
tick,0x7fffe05afeb4,337711888,0,0x0,8
tick,0x7fffe05afeb4,337727931,0,0x0,8
tick,0x7fffe05afeb4,337743901,0,0x0,8
tick,0x7fffe05afeb4,337759892,0,0x0,8
tick,0x7fffe05afeb4,337775829,0,0x0,8
tick,0x7fffe05afeb4,337791959,0,0x0,8
tick,0x7fffe05afeb4,337807887,0,0x0,8
tick,0x7fffe05afeb4,337823886,0,0x0,8
tick,0x7fffe05afeb4,337839915,0,0x0,8
tick,0x7fffe05afeb4,337855878,0,0x0,8
tick,0x7fffe05afeb4,337871828,0,0x0,8
tick,0x7fffe05afeb4,337887829,0,0x0,8
tick,0x7fffe05afeb4,337902904,0,0x0,8
tick,0x7fffe05afeb4,337918858,0,0x0,8
tick,0x7fffe05afeb4,337935083,0,0x0,8
tick,0x7fffe05afeb4,337950874,0,0x0,8
tick,0x7fffe05afeb4,337966886,0,0x0,8
tick,0x7fffe05afeb4,337982836,0,0x0,8
tick,0x7fffe05afeb4,337998850,0,0x0,8
tick,0x7fffe05afeb4,338014820,0,0x0,8
tick,0x7fffe05afeb4,338030823,0,0x0,8
tick,0x7fffe05afeb4,338045853,0,0x0,8
tick,0x7fffe05afeb4,338061940,0,0x0,8
tick,0x7fffe05afeb4,338077901,0,0x0,8
tick,0x7fffe05afeb4,338093865,0,0x0,8
tick,0x7fffe05afeb4,338109848,0,0x0,8
tick,0x7fffe05afeb4,338125887,0,0x0,8
tick,0x7fffe05afeb4,338141879,0,0x0,8
tick,0x7fffe05afeb4,338157850,0,0x0,8
tick,0x7fffe05afeb4,338173853,0,0x0,8
tick,0x7fffe05afeb4,338189913,0,0x0,8
tick,0x7fffe05afeb4,338205860,0,0x0,8
tick,0x7fffe05afeb4,338221848,0,0x0,8
tick,0x7fffe05afeb4,338237877,0,0x0,8
tick,0x7fffe05afeb4,338253841,0,0x0,8
tick,0x7fffe05afeb4,338269912,0,0x0,8
tick,0x7fffe05afeb4,338285872,0,0x0,8
tick,0x7fffe05afeb4,338301813,0,0x0,8
tick,0x7fffe05afeb4,338317863,0,0x0,8
tick,0x7fffe05afeb4,338333826,0,0x0,8
tick,0x7fffe05afeb4,338348835,0,0x0,8
tick,0x7fffe05afeb4,338364888,0,0x0,8
tick,0x7fffe05afeb4,338379909,0,0x0,8
tick,0x7fffe05afeb4,338395817,0,0x0,8
tick,0x7fffe05afeb4,338411822,0,0x0,8
tick,0x7fffe05afeb4,338426846,0,0x0,8
tick,0x7fffe05afeb4,338442826,0,0x0,8
tick,0x7fffe05afeb4,338458880,0,0x0,8
tick,0x7fffe05afeb4,338474886,0,0x0,8
tick,0x7fffe05afeb4,338490827,0,0x0,8
tick,0x7fffe05afeb4,338506873,0,0x0,8
tick,0x7fffe05afeb4,338522872,0,0x0,8
tick,0x7fffe05afeb4,338538830,0,0x0,8
tick,0x7fffe05afeb4,338554827,0,0x0,8
tick,0x7fffe05afeb4,338571099,0,0x0,8
tick,0x7fffe05afeb4,338586836,0,0x0,8
tick,0x7fffe05afeb4,338603017,0,0x0,8
tick,0x7fffe05afeb4,338618827,0,0x0,8
tick,0x7fffe05afeb4,338634834,0,0x0,8
tick,0x7fffe05afeb4,338650838,0,0x0,8
tick,0x7fffe05afeb4,338666845,0,0x0,8
tick,0x7fffe05afeb4,338682886,0,0x0,8
tick,0x7fffe05afeb4,338698822,0,0x0,8
tick,0x7fffe05afeb4,338714869,0,0x0,8
tick,0x7fffe05afeb4,338730828,0,0x0,8
tick,0x7fffe05afeb4,338745823,0,0x0,8
tick,0x7fffe05afeb4,338761819,0,0x0,8
tick,0x7fffe05afeb4,338777874,0,0x0,8
tick,0x7fffe05afeb4,338793912,0,0x0,8
tick,0x7fffe05afeb4,338809954,0,0x0,8
tick,0x7fffe05afeb4,338825848,0,0x0,8
tick,0x7fffe05afeb4,338841890,0,0x0,8
tick,0x7fffe05afeb4,338857822,0,0x0,8
tick,0x7fffe05afeb4,338873837,0,0x0,8
tick,0x7fffe05afeb4,338889916,0,0x0,8
tick,0x7fffe05afeb4,338905876,0,0x0,8
tick,0x7fffe05afeb4,338921094,0,0x0,8
tick,0x7fffe05afeb4,338936810,0,0x0,8
tick,0x7fffe05afeb4,338951880,0,0x0,8
tick,0x7fffe05afeb4,338967823,0,0x0,8
tick,0x7fffe05afeb4,338983842,0,0x0,8
tick,0x7fffe05afeb4,338999991,0,0x0,8
tick,0x7fffe05afeb4,339015842,0,0x0,8
tick,0x7fffe05afeb4,339031894,0,0x0,8
tick,0x7fffe05afeb4,339047873,0,0x0,8
tick,0x7fffe05afeb4,339063908,0,0x0,8
tick,0x7fffe05afeb4,339079854,0,0x0,8
tick,0x7fffe05afeb4,339095881,0,0x0,8
tick,0x7fffe05afeb4,339111842,0,0x0,8
tick,0x7fffe05afeb4,339127872,0,0x0,8
tick,0x7fffe05afeb4,339143874,0,0x0,8
tick,0x7fffe05afeb4,339159864,0,0x0,8
tick,0x7fffe05afeb4,339175875,0,0x0,8
tick,0x7fffe05afeb4,339191837,0,0x0,8
tick,0x7fffe05afeb4,339206841,0,0x0,8
tick,0x7fffe05afeb4,339222831,0,0x0,8
tick,0x7fffe05afeb4,339238892,0,0x0,8
tick,0x7fffe05afeb4,339254887,0,0x0,8
tick,0x7fffe05afeb4,339270882,0,0x0,8
tick,0x7fffe05afeb4,339286876,0,0x0,8
tick,0x7fffe05afeb4,339302826,0,0x0,8
tick,0x7fffe05afeb4,339317973,0,0x0,8
tick,0x7fffe05afeb4,339333839,0,0x0,8
tick,0x7fffe05afeb4,339349860,0,0x0,8
tick,0x7fffe05afeb4,339364912,0,0x0,8
tick,0x7fffe05afeb4,339379914,0,0x0,8
tick,0x7fffe05afeb4,339395876,0,0x0,8
tick,0x7fffe05afeb4,339411842,0,0x0,8
tick,0x7fffe05afeb4,339426912,0,0x0,8
tick,0x7fffe05afeb4,339442891,0,0x0,8
tick,0x7fffe05afeb4,339457896,0,0x0,8
tick,0x7fffe05afeb4,339473962,0,0x0,8
tick,0x7fffe05afeb4,339489874,0,0x0,8
tick,0x7fffe05afeb4,339505831,0,0x0,8
tick,0x7fffe05afeb4,339521838,0,0x0,8
tick,0x7fffe05afeb4,339537899,0,0x0,8
tick,0x7fffe05afeb4,339553832,0,0x0,8
tick,0x7fffe05afeb4,339569888,0,0x0,8
tick,0x7fffe05afeb4,339585835,0,0x0,8
tick,0x7fffe05afeb4,339600820,0,0x0,8
tick,0x7fffe05afeb4,339616844,0,0x0,8
tick,0x7fffe05afeb4,339632820,0,0x0,8
tick,0x7fffe05afeb4,339649015,0,0x0,8
tick,0x7fffe05afeb4,339665283,0,0x0,8
tick,0x7fffe05afeb4,339679898,0,0x0,8
tick,0x7fffe05afeb4,339695909,0,0x0,8
tick,0x7fffe05afeb4,339710820,0,0x0,8
tick,0x7fffe05afeb4,339727274,0,0x0,8
tick,0x7fffe05afeb4,339742902,0,0x0,8
tick,0x7fffe05afeb4,339759076,0,0x0,8
tick,0x7fffe05afeb4,339774883,0,0x0,8
tick,0x7fffe05afeb4,339790965,0,0x0,8
tick,0x7fffe05afeb4,339806869,0,0x0,8
tick,0x7fffe05afeb4,339822862,0,0x0,8
tick,0x7fffe05afeb4,339838876,0,0x0,8
tick,0x7fffe05afeb4,339854847,0,0x0,8
tick,0x7fffe05afeb4,339870895,0,0x0,8
tick,0x7fffe05afeb4,339885832,0,0x0,8
tick,0x7fffe05afeb4,339901821,0,0x0,8
tick,0x7fffe05afeb4,339917825,0,0x0,8
tick,0x7fffe05afeb4,339933864,0,0x0,8
tick,0x7fffe05afeb4,339949873,0,0x0,8
tick,0x7fffe05afeb4,339965827,0,0x0,8
tick,0x7fffe05afeb4,339982022,0,0x0,8
tick,0x7fffe05afeb4,339997836,0,0x0,8
tick,0x7fffe05afeb4,340013839,0,0x0,8
tick,0x7fffe05afeb4,340029883,0,0x0,8
tick,0x7fffe05afeb4,340045839,0,0x0,8
tick,0x7fffe05afeb4,340061856,0,0x0,8
tick,0x7fffe05afeb4,340077882,0,0x0,8
tick,0x7fffe05afeb4,340093923,0,0x0,8
tick,0x7fffe05afeb4,340109830,0,0x0,8
tick,0x7fffe05afeb4,340125860,0,0x0,8
tick,0x7fffe05afeb4,340141884,0,0x0,8
tick,0x7fffe05afeb4,340157938,0,0x0,8
tick,0x7fffe05afeb4,340173830,0,0x0,8
tick,0x7fffe05afeb4,340189914,0,0x0,8
tick,0x7fffe05afeb4,340205891,0,0x0,8
tick,0x7fffe05afeb4,340221827,0,0x0,8
tick,0x7fffe05afeb4,340237817,0,0x0,8
tick,0x7fffe05afeb4,340253827,0,0x0,8
tick,0x7fffe05afeb4,340269890,0,0x0,8
tick,0x7fffe05afeb4,340285834,0,0x0,8
tick,0x7fffe05afeb4,340301870,0,0x0,8
tick,0x7fffe05afeb4,340317869,0,0x0,8
tick,0x7fffe05afeb4,340332848,0,0x0,8
tick,0x7fffe05afeb4,340348847,0,0x0,8
tick,0x7fffe05afeb4,340364854,0,0x0,8
tick,0x7fffe05afeb4,340379826,0,0x0,8
tick,0x7fffe05afeb4,340394899,0,0x0,8
tick,0x7fffe05afeb4,340410932,0,0x0,8
tick,0x7fffe05afeb4,340426851,0,0x0,8
tick,0x7fffe05afeb4,340441832,0,0x0,8
tick,0x7fffe05afeb4,340457894,0,0x0,8
tick,0x7fffe05afeb4,340473871,0,0x0,8
tick,0x7fffe05afeb4,340489887,0,0x0,8
tick,0x7fffe05afeb4,340505855,0,0x0,8
tick,0x7fffe05afeb4,340521872,0,0x0,8
tick,0x7fffe05afeb4,340537843,0,0x0,8
tick,0x7fffe05afeb4,340552824,0,0x0,8
tick,0x7fffe05afeb4,340569293,0,0x0,8
tick,0x7fffe05afeb4,340584848,0,0x0,8
tick,0x7fffe05afeb4,340600970,0,0x0,8
tick,0x7fffe05afeb4,340616907,0,0x0,8
tick,0x7fffe05afeb4,340632831,0,0x0,8
tick,0x7fffe05afeb4,340648086,0,0x0,8
tick,0x7fffe05afeb4,340663824,0,0x0,8
tick,0x7fffe05afeb4,340678834,0,0x0,8
tick,0x7fffe05afeb4,340694884,0,0x0,8
tick,0x7fffe05afeb4,340710826,0,0x0,8
tick,0x7fffe05afeb4,340726821,0,0x0,8
tick,0x7fffe05afeb4,340742855,0,0x0,8
tick,0x7fffe05afeb4,340757897,0,0x0,8
tick,0x7fffe05afeb4,340773883,0,0x0,8
tick,0x7fffe05afeb4,340790073,0,0x0,8
tick,0x7fffe05afeb4,340804896,0,0x0,8
tick,0x7fffe05afeb4,340820929,0,0x0,8
tick,0x7fffe05afeb4,340836889,0,0x0,8
tick,0x7fffe05afeb4,340854334,0,0x0,8
tick,0x7fffe05afeb4,340869003,0,0x0,8
tick,0x7fffe05afeb4,340884862,0,0x0,8
tick,0x7fffe05afeb4,340900937,0,0x0,8
tick,0x7fffe05afeb4,340916877,0,0x0,8
tick,0x7fffe05afeb4,340931822,0,0x0,8
tick,0x7fffe05afeb4,340947827,0,0x0,8
tick,0x7fffe05afeb4,340963893,0,0x0,8
tick,0x7fffe05afeb4,340980102,0,0x0,8
tick,0x7fffe05afeb4,340995874,0,0x0,8
tick,0x7fffe05afeb4,341011829,0,0x0,8
tick,0x7fffe05afeb4,341027873,0,0x0,8
tick,0x7fffe05afeb4,341043911,0,0x0,8
tick,0x7fffe05afeb4,341059866,0,0x0,8
tick,0x7fffe05afeb4,341076026,0,0x0,8
tick,0x7fffe05afeb4,341091978,0,0x0,8
tick,0x7fffe05afeb4,341107828,0,0x0,8
tick,0x7fffe05afeb4,341123841,0,0x0,8
tick,0x7fffe05afeb4,341139923,0,0x0,8
tick,0x7fffe05afeb4,341155916,0,0x0,8
tick,0x7fffe05afeb4,341171885,0,0x0,8
tick,0x7fffe05afeb4,341188033,0,0x0,8
tick,0x7fffe05afeb4,341203835,0,0x0,8
tick,0x7fffe05afeb4,341219892,0,0x0,8
tick,0x7fffe05afeb4,341235886,0,0x0,8
tick,0x7fffe05afeb4,341251820,0,0x0,8
tick,0x7fffe05afeb4,341267834,0,0x0,8
tick,0x7fffe05afeb4,341283886,0,0x0,8
tick,0x7fffe05afeb4,341299927,0,0x0,8
tick,0x7fffe05afeb4,341315914,0,0x0,8
tick,0x7fffe05afeb4,341331848,0,0x0,8
tick,0x7fffe05afeb4,341347883,0,0x0,8
tick,0x7fffe05afeb4,341363911,0,0x0,8
tick,0x7fffe05afeb4,341378875,0,0x0,8
tick,0x7fffe05afeb4,341394898,0,0x0,8
tick,0x7fffe05afeb4,341410838,0,0x0,8
tick,0x7fffe05afeb4,341426894,0,0x0,8
tick,0x7fffe05afeb4,341442835,0,0x0,8
tick,0x7fffe05afeb4,341458961,0,0x0,8
tick,0x7fffe05afeb4,341474898,0,0x0,8
tick,0x7fffe05afeb4,341490821,0,0x0,8
tick,0x7fffe05afeb4,341506851,0,0x0,8
tick,0x7fffe05afeb4,341522867,0,0x0,8
tick,0x7fffe05afeb4,341538830,0,0x0,8
tick,0x7fffe05afeb4,341554824,0,0x0,8
tick,0x7fffe05afeb4,341570887,0,0x0,8
tick,0x7fffe05afeb4,341586881,0,0x0,8
tick,0x7fffe05afeb4,341603168,0,0x0,8
tick,0x7fffe05afeb4,341618891,0,0x0,8
tick,0x7fffe05afeb4,341635060,0,0x0,8
tick,0x7fffe05afeb4,341650894,0,0x0,8
tick,0x7fffe05afeb4,341666835,0,0x0,8
tick,0x7fffe05afeb4,341682879,0,0x0,8
tick,0x7fffe05afeb4,341698834,0,0x0,8
tick,0x7fffe05afeb4,341713842,0,0x0,8
tick,0x7fffe05afeb4,341729889,0,0x0,8
tick,0x7fffe05afeb4,341745920,0,0x0,8
tick,0x7fffe05afeb4,341761898,0,0x0,8
tick,0x7fffe05afeb4,341777879,0,0x0,8
tick,0x7fffe05afeb4,341793880,0,0x0,8
tick,0x7fffe05afeb4,341810110,0,0x0,8
tick,0x7fffe05afeb4,341825902,0,0x0,8
tick,0x7fffe05afeb4,341841852,0,0x0,8
tick,0x7fffe05afeb4,341857829,0,0x0,8
tick,0x7fffe05afeb4,341873829,0,0x0,8
tick,0x7fffe05afeb4,341888831,0,0x0,8
tick,0x7fffe05afeb4,341904849,0,0x0,8
tick,0x7fffe05afeb4,341920882,0,0x0,8
tick,0x7fffe05afeb4,341935823,0,0x0,8
tick,0x7fffe05afeb4,341951895,0,0x0,8
tick,0x7fffe05afeb4,341968007,0,0x0,8
tick,0x7fffe05afeb4,341983914,0,0x0,8
tick,0x7fffe05afeb4,341999895,0,0x0,8
tick,0x7fffe05afeb4,342015877,0,0x0,8
tick,0x7fffe05afeb4,342031830,0,0x0,8
tick,0x7fffe05afeb4,342047866,0,0x0,8
tick,0x7fffe05afeb4,342063879,0,0x0,8
tick,0x7fffe05afeb4,342079838,0,0x0,8
tick,0x7fffe05afeb4,342094879,0,0x0,8
tick,0x7fffe05afeb4,342110866,0,0x0,8
tick,0x7fffe05afeb4,342126815,0,0x0,8
tick,0x7fffe05afeb4,342141881,0,0x0,8
tick,0x7fffe05afeb4,342156820,0,0x0,8
tick,0x7fffe05afeb4,342172839,0,0x0,8
tick,0x7fffe05afeb4,342188874,0,0x0,8
tick,0x7fffe05afeb4,342204835,0,0x0,8
tick,0x7fffe05afeb4,342220914,0,0x0,8
tick,0x7fffe05afeb4,342236985,0,0x0,8
tick,0x7fffe05afeb4,342252834,0,0x0,8
tick,0x7fffe05afeb4,342267895,0,0x0,8
tick,0x7fffe05afeb4,342283834,0,0x0,8
tick,0x7fffe05afeb4,342299847,0,0x0,8
tick,0x7fffe05afeb4,342315891,0,0x0,8
tick,0x7fffe05afeb4,342331872,0,0x0,8
tick,0x7fffe05afeb4,342347828,0,0x0,8
tick,0x7fffe05afeb4,342363940,0,0x0,8
tick,0x7fffe05afeb4,342378821,0,0x0,8
tick,0x7fffe05afeb4,342394885,0,0x0,8
tick,0x7fffe05afeb4,342410853,0,0x0,8
tick,0x7fffe05afeb4,342426877,0,0x0,8
tick,0x7fffe05afeb4,342442841,0,0x0,8
tick,0x7fffe05afeb4,342458856,0,0x0,8
tick,0x7fffe05afeb4,342474828,0,0x0,8
tick,0x7fffe05afeb4,342490834,0,0x0,8
tick,0x7fffe05afeb4,342506957,0,0x0,8
tick,0x7fffe05afeb4,342522822,0,0x0,8
tick,0x7fffe05afeb4,342538926,0,0x0,8
tick,0x7fffe05afeb4,342554827,0,0x0,8
tick,0x7fffe05afeb4,342571547,0,0x0,8
tick,0x7fffe05afeb4,342585861,0,0x0,8
tick,0x7fffe05afeb4,342600812,0,0x0,8
tick,0x7fffe05afeb4,342616875,0,0x0,8
tick,0x7fffe05afeb4,342632937,0,0x0,8
tick,0x7fffe05afeb4,342648846,0,0x0,8
tick,0x7fffe05afeb4,342664874,0,0x0,8
tick,0x7fffe05afeb4,342679894,0,0x0,8
tick,0x7fffe05afeb4,342695934,0,0x0,8
tick,0x7fffe05afeb4,342710824,0,0x0,8
tick,0x7fffe05afeb4,342727084,0,0x0,8
tick,0x7fffe05afeb4,342742919,0,0x0,8
tick,0x7fffe05afeb4,342759137,0,0x0,8
tick,0x7fffe05afeb4,342774897,0,0x0,8
tick,0x7fffe05afeb4,342790855,0,0x0,8
tick,0x7fffe05afeb4,342805813,0,0x0,8
tick,0x7fffe05afeb4,342821861,0,0x0,8
tick,0x7fffe05afeb4,342837921,0,0x0,8
tick,0x7fffe05afeb4,342853884,0,0x0,8
tick,0x7fffe05afeb4,342869933,0,0x0,8
tick,0x7fffe05afeb4,342885834,0,0x0,8
tick,0x7fffe05afeb4,342901829,0,0x0,8
tick,0x7fffe05afeb4,342917813,0,0x0,8
tick,0x7fffe05afeb4,342933874,0,0x0,8
tick,0x7fffe05afeb4,342948827,0,0x0,8
tick,0x7fffe05afeb4,342963948,0,0x0,8
tick,0x7fffe05afeb4,342979925,0,0x0,8
tick,0x7fffe05afeb4,342995886,0,0x0,8
tick,0x7fffe05afeb4,343011885,0,0x0,8
tick,0x7fffe05afeb4,343027870,0,0x0,8
tick,0x7fffe05afeb4,343043893,0,0x0,8
tick,0x7fffe05afeb4,343059907,0,0x0,8
tick,0x7fffe05afeb4,343075885,0,0x0,8
tick,0x7fffe05afeb4,343091913,0,0x0,8
tick,0x7fffe05afeb4,343107821,0,0x0,8
tick,0x7fffe05afeb4,343123879,0,0x0,8
tick,0x7fffe05afeb4,343139858,0,0x0,8
tick,0x7fffe05afeb4,343154841,0,0x0,8
tick,0x7fffe05afeb4,343170887,0,0x0,8
tick,0x7fffe05afeb4,343186829,0,0x0,8
tick,0x7fffe05afeb4,343202910,0,0x0,8
tick,0x7fffe05afeb4,343218875,0,0x0,8
tick,0x7fffe05afeb4,343234885,0,0x0,8
tick,0x7fffe05afeb4,343250901,0,0x0,8
tick,0x7fffe05afeb4,343265887,0,0x0,8
tick,0x7fffe05afeb4,343281868,0,0x0,8
tick,0x7fffe05afeb4,343297828,0,0x0,8
tick,0x7fffe05afeb4,343313996,0,0x0,8
tick,0x7fffe05afeb4,343328891,0,0x0,8
tick,0x7fffe05afeb4,343344888,0,0x0,8
tick,0x7fffe05afeb4,343360907,0,0x0,8
tick,0x7fffe05afeb4,343376822,0,0x0,8
tick,0x7fffe05afeb4,343391890,0,0x0,8
tick,0x7fffe05afeb4,343407858,0,0x0,8
tick,0x7fffe05afeb4,343423886,0,0x0,8
tick,0x7fffe05afeb4,343438871,0,0x0,8
tick,0x7fffe05afeb4,343454811,0,0x0,8
tick,0x7fffe05afeb4,343470900,0,0x0,8
tick,0x7fffe05afeb4,343486898,0,0x0,8
tick,0x7fffe05afeb4,343502832,0,0x0,8
tick,0x7fffe05afeb4,343518852,0,0x0,8
tick,0x7fffe05afeb4,343534854,0,0x0,8
tick,0x7fffe05afeb4,343550916,0,0x0,8
tick,0x7fffe05afeb4,343567009,0,0x0,8
tick,0x7fffe05afeb4,343582879,0,0x0,8
tick,0x7fffe05afeb4,343597882,0,0x0,8
tick,0x7fffe05afeb4,343613838,0,0x0,8
tick,0x7fffe05afeb4,343628835,0,0x0,8
tick,0x7fffe05afeb4,343644928,0,0x0,8
tick,0x7fffe05afeb4,343660860,0,0x0,8
tick,0x7fffe05afeb4,343676944,0,0x0,8
tick,0x7fffe05afeb4,343692857,0,0x0,8
tick,0x7fffe05afeb4,343708831,0,0x0,8
tick,0x7fffe05afeb4,343724863,0,0x0,8
tick,0x7fffe05afeb4,343740866,0,0x0,8
tick,0x7fffe05afeb4,343755906,0,0x0,8
tick,0x7fffe05afeb4,343772010,0,0x0,8
tick,0x7fffe05afeb4,343787915,0,0x0,8
tick,0x7fffe05afeb4,343803883,0,0x0,8
tick,0x7fffe05afeb4,343819924,0,0x0,8
tick,0x7fffe05afeb4,343835968,0,0x0,8
tick,0x7fffe05afeb4,343851877,0,0x0,8
tick,0x7fffe05afeb4,343867901,0,0x0,8
tick,0x7fffe05afeb4,343882834,0,0x0,8
tick,0x7fffe05afeb4,343898911,0,0x0,8
tick,0x7fffe05afeb4,343914868,0,0x0,8
tick,0x7fffe05afeb4,343930840,0,0x0,8
tick,0x7fffe05afeb4,343947054,0,0x0,8
tick,0x7fffe05afeb4,343962865,0,0x0,8
tick,0x7fffe05afeb4,343979143,0,0x0,8
tick,0x7fffe05afeb4,343994833,0,0x0,8
tick,0x7fffe05afeb4,344010901,0,0x0,8
tick,0x7fffe05afeb4,344026905,0,0x0,8
tick,0x7fffe05afeb4,344042823,0,0x0,8
tick,0x7fffe05afeb4,344058837,0,0x0,8
tick,0x7fffe05afeb4,344074852,0,0x0,8
tick,0x7fffe05afeb4,344090891,0,0x0,8
tick,0x7fffe05afeb4,344105860,0,0x0,8
tick,0x7fffe05afeb4,344121881,0,0x0,8
tick,0x7fffe05afeb4,344136839,0,0x0,8
tick,0x7fffe05afeb4,344152857,0,0x0,8
tick,0x7fffe05afeb4,344167854,0,0x0,8
tick,0x7fffe05afeb4,344183828,0,0x0,8
tick,0x7fffe05afeb4,344199931,0,0x0,8
tick,0x7fffe05afeb4,344215884,0,0x0,8
tick,0x7fffe05afeb4,344231886,0,0x0,8
tick,0x7fffe05afeb4,344247868,0,0x0,8
tick,0x7fffe05afeb4,344263842,0,0x0,8
tick,0x7fffe05afeb4,344279859,0,0x0,8
tick,0x7fffe05afeb4,344295857,0,0x0,8
tick,0x7fffe05afeb4,344311841,0,0x0,8
tick,0x7fffe05afeb4,344326906,0,0x0,8
tick,0x7fffe05afeb4,344342898,0,0x0,8
tick,0x7fffe05afeb4,344358996,0,0x0,8
tick,0x7fffe05afeb4,344374878,0,0x0,8
tick,0x7fffe05afeb4,344389906,0,0x0,8
tick,0x7fffe05afeb4,344405830,0,0x0,8
tick,0x7fffe05afeb4,344421871,0,0x0,8
tick,0x7fffe05afeb4,344437939,0,0x0,8
tick,0x7fffe05afeb4,344453884,0,0x0,8
tick,0x7fffe05afeb4,344468898,0,0x0,8
tick,0x7fffe05afeb4,344484915,0,0x0,8
tick,0x7fffe05afeb4,344499903,0,0x0,8
tick,0x7fffe05afeb4,344515823,0,0x0,8
tick,0x7fffe05afeb4,344531874,0,0x0,8
tick,0x7fffe05afeb4,344547895,0,0x0,8
tick,0x7fffe05afeb4,344563855,0,0x0,8
tick,0x7fffe05afeb4,344579846,0,0x0,8
tick,0x7fffe05afeb4,344595824,0,0x0,8
tick,0x7fffe05afeb4,344611859,0,0x0,8
tick,0x7fffe05afeb4,344627830,0,0x0,8
tick,0x7fffe05afeb4,344643895,0,0x0,8
tick,0x7fffe05afeb4,344659903,0,0x0,8
tick,0x7fffe05afeb4,344675865,0,0x0,8
tick,0x7fffe05afeb4,344691841,0,0x0,8
tick,0x7fffe05afeb4,344707869,0,0x0,8
tick,0x7fffe05afeb4,344723825,0,0x0,8
tick,0x7fffe05afeb4,344739833,0,0x0,8
tick,0x7fffe05afeb4,344755886,0,0x0,8
tick,0x7fffe05afeb4,344771940,0,0x0,8
tick,0x7fffe05afeb4,344786892,0,0x0,8
tick,0x7fffe05afeb4,344802871,0,0x0,8
tick,0x7fffe05afeb4,344817880,0,0x0,8
tick,0x7fffe05afeb4,344833859,0,0x0,8
tick,0x7fffe05afeb4,344849913,0,0x0,8
tick,0x7fffe05afeb4,344865909,0,0x0,8
tick,0x7fffe05afeb4,344881833,0,0x0,8
tick,0x7fffe05afeb4,344897899,0,0x0,8
tick,0x7fffe05afeb4,344913839,0,0x0,8
tick,0x7fffe05afeb4,344929855,0,0x0,8
tick,0x7fffe05afeb4,344945851,0,0x0,8
tick,0x7fffe05afeb4,344961925,0,0x0,8
tick,0x7fffe05afeb4,344976957,0,0x0,8
tick,0x7fffe05afeb4,344992849,0,0x0,8
tick,0x7fffe05afeb4,345009038,0,0x0,8
tick,0x7fffe05afeb4,345024828,0,0x0,8
tick,0x7fffe05afeb4,345040902,0,0x0,8
tick,0x7fffe05afeb4,345056964,0,0x0,8
tick,0x7fffe05afeb4,345073058,0,0x0,8
tick,0x7fffe05afeb4,345088906,0,0x0,8
tick,0x7fffe05afeb4,345104831,0,0x0,8
tick,0x7fffe05afeb4,345120829,0,0x0,8
tick,0x7fffe05afeb4,345135838,0,0x0,8
tick,0x7fffe05afeb4,345151971,0,0x0,8
tick,0x7fffe05afeb4,345167851,0,0x0,8
tick,0x7fffe05afeb4,345183889,0,0x0,8
tick,0x7fffe05afeb4,345199927,0,0x0,8
tick,0x7fffe05afeb4,345215815,0,0x0,8
tick,0x7fffe05afeb4,345230823,0,0x0,8
tick,0x7fffe05afeb4,345245829,0,0x0,8
tick,0x7fffe05afeb4,345261845,0,0x0,8
tick,0x7fffe05afeb4,345276942,0,0x0,8
tick,0x7fffe05afeb4,345292917,0,0x0,8
tick,0x7fffe05afeb4,345308907,0,0x0,8
tick,0x7fffe05afeb4,345324899,0,0x0,8
tick,0x7fffe05afeb4,345339890,0,0x0,8
tick,0x7fffe05afeb4,345355875,0,0x0,8
tick,0x7fffe05afeb4,345371871,0,0x0,8
tick,0x7fffe05afeb4,345404436,0,0x0,8
tick,0x7fffe05afeb4,345419832,0,0x0,8
tick,0x7fffe05afeb4,345435906,0,0x0,8
tick,0x7fffe05afeb4,345450820,0,0x0,8
tick,0x7fffe05afeb4,345466885,0,0x0,8
tick,0x7fffe05afeb4,345482824,0,0x0,8
tick,0x7fffe05afeb4,345498827,0,0x0,8
tick,0x7fffe05afeb4,345514961,0,0x0,8
tick,0x7fffe05afeb4,345530827,0,0x0,8
tick,0x7fffe05afeb4,345545840,0,0x0,8
tick,0x7fffe05afeb4,345561912,0,0x0,8
tick,0x7fffe05afeb4,345577828,0,0x0,8
tick,0x7fffe05afeb4,345593868,0,0x0,8
tick,0x7fffe05afeb4,345608831,0,0x0,8
tick,0x7fffe05afeb4,345624847,0,0x0,8
tick,0x7fffe05afeb4,345640823,0,0x0,8
tick,0x7fffe05afeb4,345656826,0,0x0,8
tick,0x7fffe05afeb4,345672892,0,0x0,8
tick,0x7fffe05afeb4,345689025,0,0x0,8
tick,0x7fffe05afeb4,345704815,0,0x0,8
tick,0x7fffe05afeb4,345720851,0,0x0,8
tick,0x7fffe05afeb4,345737105,0,0x0,8
tick,0x7fffe05afeb4,345752916,0,0x0,8
tick,0x7fffe05afeb4,345769126,0,0x0,8
tick,0x7fffe05afeb4,345784878,0,0x0,8
tick,0x7fffe05afeb4,345800954,0,0x0,8
tick,0x7fffe05afeb4,345816880,0,0x0,8
tick,0x7fffe05afeb4,345832905,0,0x0,8
tick,0x7fffe05afeb4,345847875,0,0x0,8
tick,0x7fffe05afeb4,345862930,0,0x0,8
tick,0x7fffe05afeb4,345878868,0,0x0,8
tick,0x7fffe05afeb4,345894904,0,0x0,8
tick,0x7fffe05afeb4,345910833,0,0x0,8
tick,0x7fffe05afeb4,345926880,0,0x0,8
tick,0x7fffe05afeb4,345942861,0,0x0,8
tick,0x7fffe05afeb4,345958844,0,0x0,8
tick,0x7fffe05afeb4,345974849,0,0x0,8
tick,0x7fffe05afeb4,345990832,0,0x0,8
tick,0x7fffe05afeb4,346005909,0,0x0,8
tick,0x7fffe05afeb4,346021829,0,0x0,8
tick,0x7fffe05afeb4,346037841,0,0x0,8
tick,0x7fffe05afeb4,346053862,0,0x0,8
tick,0x7fffe05afeb4,346069947,0,0x0,8
tick,0x7fffe05afeb4,346085970,0,0x0,8
tick,0x7fffe05afeb4,346101822,0,0x0,8
tick,0x7fffe05afeb4,346116872,0,0x0,8
tick,0x7fffe05afeb4,346132844,0,0x0,8
tick,0x7fffe05afeb4,346148937,0,0x0,8
tick,0x7fffe05afeb4,346163821,0,0x0,8
tick,0x7fffe05afeb4,346179996,0,0x0,8
tick,0x7fffe05afeb4,346194922,0,0x0,8
tick,0x7fffe05afeb4,346210866,0,0x0,8
tick,0x7fffe05afeb4,346226886,0,0x0,8
tick,0x7fffe05afeb4,346242834,0,0x0,8
tick,0x7fffe05afeb4,346259138,0,0x0,8
tick,0x7fffe05afeb4,346274835,0,0x0,8
tick,0x7fffe05afeb4,346290978,0,0x0,8
tick,0x7fffe05afeb4,346306846,0,0x0,8
tick,0x7fffe05afeb4,346322833,0,0x0,8
tick,0x7fffe05afeb4,346338864,0,0x0,8
tick,0x7fffe05afeb4,346354886,0,0x0,8
tick,0x7fffe05afeb4,346370839,0,0x0,8
tick,0x7fffe05afeb4,346387375,0,0x0,8
tick,0x7fffe05afeb4,346402922,0,0x0,8
tick,0x7fffe05afeb4,346417850,0,0x0,8
tick,0x7fffe05afeb4,346432850,0,0x0,8
tick,0x7fffe05afeb4,346448811,0,0x0,8
tick,0x7fffe05afeb4,346464875,0,0x0,8
tick,0x7fffe05afeb4,346480926,0,0x0,8
tick,0x7fffe05afeb4,346496904,0,0x0,8
tick,0x7fffe05afeb4,346512878,0,0x0,8
tick,0x7fffe05afeb4,346527895,0,0x0,8
tick,0x7fffe05afeb4,346543827,0,0x0,8
tick,0x7fffe05afeb4,346559942,0,0x0,8
tick,0x7fffe05afeb4,346575872,0,0x0,8
tick,0x7fffe05afeb4,346591861,0,0x0,8
tick,0x7fffe05afeb4,346607940,0,0x0,8
tick,0x7fffe05afeb4,346623880,0,0x0,8
tick,0x7fffe05afeb4,346639874,0,0x0,8
tick,0x7fffe05afeb4,346655819,0,0x0,8
tick,0x7fffe05afeb4,346671868,0,0x0,8
tick,0x7fffe05afeb4,346687870,0,0x0,8
tick,0x7fffe05afeb4,346703872,0,0x0,8
tick,0x7fffe05afeb4,346719917,0,0x0,8
tick,0x7fffe05afeb4,346735976,0,0x0,8
tick,0x7fffe05afeb4,346751834,0,0x0,8
tick,0x7fffe05afeb4,346767854,0,0x0,8
tick,0x7fffe05afeb4,346783863,0,0x0,8
tick,0x7fffe05afeb4,346799917,0,0x0,8
tick,0x7fffe05afeb4,346814890,0,0x0,8
tick,0x7fffe05afeb4,346830828,0,0x0,8
tick,0x7fffe05afeb4,346846821,0,0x0,8
tick,0x7fffe05afeb4,346862878,0,0x0,8
tick,0x7fffe05afeb4,346878852,0,0x0,8
tick,0x7fffe05afeb4,346893932,0,0x0,8
tick,0x7fffe05afeb4,346909901,0,0x0,8
tick,0x7fffe05afeb4,346926037,0,0x0,8
tick,0x7fffe05afeb4,346941918,0,0x0,8
tick,0x7fffe05afeb4,346957867,0,0x0,8
tick,0x7fffe05afeb4,346973824,0,0x0,8
tick,0x7fffe05afeb4,346989844,0,0x0,8
tick,0x7fffe05afeb4,347005876,0,0x0,8
tick,0x7fffe05afeb4,347021916,0,0x0,8
tick,0x7fffe05afeb4,347037873,0,0x0,8
tick,0x7fffe05afeb4,347053886,0,0x0,8
tick,0x7fffe05afeb4,347069868,0,0x0,8
tick,0x7fffe05afeb4,347085920,0,0x0,8
tick,0x7fffe05afeb4,347100877,0,0x0,8
tick,0x7fffe05afeb4,347116880,0,0x0,8
tick,0x7fffe05afeb4,347132830,0,0x0,8
tick,0x7fffe05afeb4,347148965,0,0x0,8
tick,0x7fffe05afeb4,347164891,0,0x0,8
tick,0x7fffe05afeb4,347179856,0,0x0,8
tick,0x7fffe05afeb4,347194843,0,0x0,8
tick,0x7fffe05afeb4,347210813,0,0x0,8
tick,0x7fffe05afeb4,347225837,0,0x0,8
tick,0x7fffe05afeb4,347241826,0,0x0,8
tick,0x7fffe05afeb4,347257893,0,0x0,8
tick,0x7fffe05afeb4,347273862,0,0x0,8
tick,0x7fffe05afeb4,347290138,0,0x0,8
tick,0x7fffe05afeb4,347305903,0,0x0,8
tick,0x7fffe05afeb4,347321841,0,0x0,8
tick,0x7fffe05afeb4,347336825,0,0x0,8
tick,0x7fffe05afeb4,347352996,0,0x0,8
tick,0x7fffe05afeb4,347367879,0,0x0,8
tick,0x7fffe05afeb4,347383861,0,0x0,8
tick,0x7fffe05afeb4,347399844,0,0x0,8
tick,0x7fffe05afeb4,347415831,0,0x0,8
tick,0x7fffe05afeb4,347431872,0,0x0,8
tick,0x7fffe05afeb4,347447883,0,0x0,8
tick,0x7fffe05afeb4,347463884,0,0x0,8
tick,0x7fffe05afeb4,347479911,0,0x0,8
tick,0x7fffe05afeb4,347495860,0,0x0,8
tick,0x7fffe05afeb4,347511856,0,0x0,8
tick,0x7fffe05afeb4,347527896,0,0x0,8
tick,0x7fffe05afeb4,347543884,0,0x0,8
tick,0x7fffe05afeb4,347558892,0,0x0,8
tick,0x7fffe05afeb4,347574993,0,0x0,8
tick,0x7fffe05afeb4,347590881,0,0x0,8
tick,0x7fffe05afeb4,347606832,0,0x0,8
tick,0x7fffe05afeb4,347621822,0,0x0,8
tick,0x7fffe05afeb4,347637893,0,0x0,8
tick,0x7fffe05afeb4,347653986,0,0x0,8
tick,0x7fffe05afeb4,347669931,0,0x0,8
tick,0x7fffe05afeb4,347685884,0,0x0,8
tick,0x7fffe05afeb4,347701934,0,0x0,8
tick,0x7fffe05afeb4,347717916,0,0x0,8
tick,0x7fffe05afeb4,347733939,0,0x0,8
tick,0x7fffe05afeb4,347749993,0,0x0,8
tick,0x7fffe05afeb4,347765919,0,0x0,8
tick,0x7fffe05afeb4,347781971,0,0x0,8
tick,0x7fffe05afeb4,347797880,0,0x0,8
tick,0x7fffe05afeb4,347814097,0,0x0,8
tick,0x7fffe05afeb4,347829931,0,0x0,8
tick,0x7fffe05afeb4,347845896,0,0x0,8
tick,0x7fffe05afeb4,347861864,0,0x0,8
tick,0x7fffe05afeb4,347876886,0,0x0,8
tick,0x7fffe05afeb4,347892925,0,0x0,8
tick,0x7fffe05afeb4,347908959,0,0x0,8
tick,0x7fffe05afeb4,347924824,0,0x0,8
tick,0x7fffe05afeb4,347940047,0,0x0,8
tick,0x7fffe05afeb4,347955856,0,0x0,8
tick,0x7fffe05afeb4,347971940,0,0x0,8
tick,0x7fffe05afeb4,347987861,0,0x0,8
tick,0x7fffe05afeb4,348003956,0,0x0,8
tick,0x7fffe05afeb4,348019905,0,0x0,8
tick,0x7fffe05afeb4,348035896,0,0x0,8
tick,0x7fffe05afeb4,348051825,0,0x0,8
tick,0x7fffe05afeb4,348067988,0,0x0,8
tick,0x7fffe05afeb4,348083918,0,0x0,8
tick,0x7fffe05afeb4,348099945,0,0x0,8
tick,0x7fffe05afeb4,348116029,0,0x0,8
tick,0x7fffe05afeb4,348131136,0,0x0,8
tick,0x7fffe05afeb4,348146102,0,0x0,8
tick,0x7fffe05afeb4,348161933,0,0x0,8
tick,0x7fffe05afeb4,348177935,0,0x0,8
tick,0x7fffe05afeb4,348193897,0,0x0,8
tick,0x7fffe05afeb4,348208815,0,0x0,8
tick,0x7fffe05afeb4,348224893,0,0x0,8
tick,0x7fffe05afeb4,348241027,0,0x0,8
tick,0x7fffe05afeb4,348256900,0,0x0,8
tick,0x7fffe05afeb4,348272925,0,0x0,8
tick,0x7fffe05afeb4,348289050,0,0x0,8
tick,0x7fffe05afeb4,348304847,0,0x0,8
tick,0x7fffe05afeb4,348321009,0,0x0,8
tick,0x7fffe05afeb4,348336997,0,0x0,8
tick,0x7fffe05afeb4,348352994,0,0x0,8
tick,0x7fffe05afeb4,348368867,0,0x0,8
tick,0x7fffe05afeb4,348385180,0,0x0,8
tick,0x7fffe05afeb4,348400812,0,0x0,8
tick,0x7fffe05afeb4,348417197,0,0x0,8
tick,0x7fffe05afeb4,348431883,0,0x0,8
tick,0x7fffe05afeb4,348448061,0,0x0,8
tick,0x7fffe05afeb4,348462863,0,0x0,8
tick,0x7fffe05afeb4,348479984,0,0x0,8
tick,0x7fffe05afeb4,348493868,0,0x0,8
tick,0x7fffe05afeb4,348509162,0,0x0,8
tick,0x7fffe05afeb4,348524956,0,0x0,8
tick,0x7fffe05afeb4,348542035,0,0x0,8
tick,0x7fffe05afeb4,348556840,0,0x0,8
tick,0x7fffe05afeb4,348572967,0,0x0,8
tick,0x7fffe05afeb4,348589471,0,0x0,8
tick,0x7fffe05afeb4,348604025,0,0x0,8
tick,0x7fffe05afeb4,348619875,0,0x0,8
tick,0x7fffe05afeb4,348635926,0,0x0,8
tick,0x7fffe05afeb4,348651921,0,0x0,8
tick,0x7fffe05afeb4,348667942,0,0x0,8
tick,0x7fffe05afeb4,348683842,0,0x0,8
tick,0x7fffe05afeb4,348699960,0,0x0,8
tick,0x7fffe05afeb4,348716174,0,0x0,8
tick,0x7fffe05afeb4,348732119,0,0x0,8
tick,0x7fffe05afeb4,348747886,0,0x0,8
tick,0x7fffe05afeb4,348763929,0,0x0,8
tick,0x7fffe05afeb4,348779939,0,0x0,8
tick,0x7fffe05afeb4,348796484,0,0x0,8
tick,0x7fffe05afeb4,348810991,0,0x0,8
tick,0x7fffe05afeb4,348827033,0,0x0,8
tick,0x7fffe05afeb4,348842890,0,0x0,8
tick,0x7fffe05afeb4,348858927,0,0x0,8
tick,0x7fffe05afeb4,348874813,0,0x0,8
tick,0x7fffe05afeb4,348890976,0,0x0,8
tick,0x7fffe05afeb4,348906840,0,0x0,8
tick,0x7fffe05afeb4,348923004,0,0x0,8
tick,0x7fffe05afeb4,348938980,0,0x0,8
tick,0x7fffe05afeb4,348954996,0,0x0,8
tick,0x7fffe05afeb4,348970867,0,0x0,8
tick,0x7fffe05afeb4,348986836,0,0x0,8
tick,0x7fffe05afeb4,349002875,0,0x0,8
tick,0x7fffe05afeb4,349018106,0,0x0,8
tick,0x7fffe05afeb4,349033974,0,0x0,8
tick,0x7fffe05afeb4,349049918,0,0x0,8
tick,0x7fffe05afeb4,349064819,0,0x0,8
tick,0x7fffe05afeb4,349080123,0,0x0,8
tick,0x7fffe05afeb4,349095873,0,0x0,8
tick,0x7fffe05afeb4,349112063,0,0x0,8
tick,0x7fffe05afeb4,349126955,0,0x0,8
tick,0x7fffe05afeb4,349143226,0,0x0,8
tick,0x7fffe05afeb4,349159104,0,0x0,8
tick,0x7fffe05afeb4,349175054,0,0x0,8
tick,0x7fffe05afeb4,349190877,0,0x0,8
tick,0x7fffe05afeb4,349206942,0,0x0,8
tick,0x7fffe05afeb4,349222888,0,0x0,8
tick,0x7fffe05afeb4,349238933,0,0x0,8
tick,0x7fffe05afeb4,349254945,0,0x0,8
tick,0x7fffe05afeb4,349270999,0,0x0,8
tick,0x7fffe05afeb4,349286972,0,0x0,8
tick,0x7fffe05afeb4,349302902,0,0x0,8
tick,0x7fffe05afeb4,349318925,0,0x0,8
tick,0x7fffe05afeb4,349335143,0,0x0,8
tick,0x7fffe05afeb4,349350892,0,0x0,8
tick,0x7fffe05afeb4,349367049,0,0x0,8
tick,0x7fffe05afeb4,349382860,0,0x0,8
tick,0x7fffe05afeb4,349398972,0,0x0,8
tick,0x7fffe05afeb4,349414874,0,0x0,8
tick,0x7fffe05afeb4,349430053,0,0x0,8
tick,0x7fffe05afeb4,349447256,0,0x0,8
tick,0x7fffe05afeb4,349461946,0,0x0,8
tick,0x7fffe05afeb4,349477995,0,0x0,8
tick,0x7fffe05afeb4,349492951,0,0x0,8
tick,0x7fffe05afeb4,349509005,0,0x0,8
tick,0x7fffe05afeb4,349524946,0,0x0,8
tick,0x7fffe05afeb4,349540079,0,0x0,8
tick,0x7fffe05afeb4,349555821,0,0x0,8
tick,0x7fffe05afeb4,349571925,0,0x0,8
tick,0x7fffe05afeb4,349588023,0,0x0,8
tick,0x7fffe05afeb4,349603977,0,0x0,8
tick,0x7fffe05afeb4,349619970,0,0x0,8
tick,0x7fffe05afeb4,349635866,0,0x0,8
tick,0x7fffe05afeb4,349652012,0,0x0,8
tick,0x7fffe05afeb4,349667081,0,0x0,8
tick,0x7fffe05afeb4,349682897,0,0x0,8
tick,0x7fffe05afeb4,349699014,0,0x0,8
tick,0x7fffe05afeb4,349714929,0,0x0,8
tick,0x7fffe05afeb4,349730913,0,0x0,8
tick,0x7fffe05afeb4,349745947,0,0x0,8
tick,0x7fffe05afeb4,349761916,0,0x0,8
tick,0x7fffe05afeb4,349777990,0,0x0,8
tick,0x7fffe05afeb4,349793877,0,0x0,8
tick,0x7fffe05afeb4,349809925,0,0x0,8
tick,0x7fffe05afeb4,349825825,0,0x0,8
tick,0x7fffe05afeb4,349842072,0,0x0,8
tick,0x7fffe05afeb4,349857824,0,0x0,8
tick,0x7fffe05afeb4,349874069,0,0x0,8
tick,0x7fffe05afeb4,349890001,0,0x0,8
tick,0x7fffe05afeb4,349905941,0,0x0,8
tick,0x7fffe05afeb4,349921842,0,0x0,8
tick,0x7fffe05afeb4,349937956,0,0x0,8
tick,0x7fffe05afeb4,349953884,0,0x0,8
tick,0x7fffe05afeb4,349970092,0,0x0,8
tick,0x7fffe05afeb4,349985946,0,0x0,8
tick,0x7fffe05afeb4,350001899,0,0x0,8
tick,0x7fffe05afeb4,350016821,0,0x0,8
tick,0x7fffe05afeb4,350033084,0,0x0,8
tick,0x7fffe05afeb4,350047824,0,0x0,8
tick,0x7fffe05afeb4,350063984,0,0x0,8
tick,0x7fffe05afeb4,350080814,0,0x0,8
tick,0x7fffe05afeb4,350095025,0,0x0,8
tick,0x7fffe05afeb4,350110867,0,0x0,8
tick,0x7fffe05afeb4,350126982,0,0x0,8
tick,0x7fffe05afeb4,350142973,0,0x0,8
tick,0x7fffe05afeb4,350159160,0,0x0,8
tick,0x7fffe05afeb4,350174952,0,0x0,8
tick,0x7fffe05afeb4,350191055,0,0x0,8
tick,0x7fffe05afeb4,350206848,0,0x0,8
tick,0x7fffe05afeb4,350221932,0,0x0,8
tick,0x7fffe05afeb4,350237048,0,0x0,8
tick,0x7fffe05afeb4,350253026,0,0x0,8
tick,0x7fffe05afeb4,350267936,0,0x0,8
tick,0x7fffe05afeb4,350283948,0,0x0,8
tick,0x7fffe05afeb4,350299971,0,0x0,8
tick,0x7fffe05afeb4,350315956,0,0x0,8
tick,0x7fffe05afeb4,350331883,0,0x0,8
tick,0x7fffe05afeb4,350347963,0,0x0,8
tick,0x7fffe05afeb4,350364029,0,0x0,8
tick,0x7fffe05afeb4,350379996,0,0x0,8
tick,0x7fffe05afeb4,350395920,0,0x0,8
tick,0x7fffe05afeb4,350412012,0,0x0,8
tick,0x7fffe05afeb4,350427883,0,0x0,8
tick,0x7fffe05afeb4,350443858,0,0x0,8
tick,0x7fffe05afeb4,350459989,0,0x0,8
tick,0x7fffe05afeb4,350476141,0,0x0,8
tick,0x7fffe05afeb4,350491901,0,0x0,8
tick,0x7fffe05afeb4,350507977,0,0x0,8
tick,0x7fffe05afeb4,350523847,0,0x0,8
tick,0x7fffe05afeb4,350543568,0,0x0,8
tick,0x7fffe05afeb4,350555917,0,0x0,8
tick,0x7fffe05afeb4,350572176,0,0x0,8
tick,0x7fffe05afeb4,350587994,0,0x0,8
tick,0x7fffe05afeb4,350604138,0,0x0,8
tick,0x7fffe05afeb4,350619914,0,0x0,8
tick,0x7fffe05afeb4,350635995,0,0x0,8
tick,0x7fffe05afeb4,350651908,0,0x0,8
tick,0x7fffe05afeb4,350668077,0,0x0,8
tick,0x7fffe05afeb4,350683838,0,0x0,8
tick,0x7fffe05afeb4,350700053,0,0x0,8
tick,0x7fffe05afeb4,350715868,0,0x0,8
tick,0x7fffe05afeb4,350732026,0,0x0,8
tick,0x7fffe05afeb4,350747969,0,0x0,8
tick,0x7fffe05afeb4,350763864,0,0x0,8
tick,0x7fffe05afeb4,350779875,0,0x0,8
tick,0x7fffe05afeb4,350795929,0,0x0,8
tick,0x7fffe05afeb4,350811896,0,0x0,8
tick,0x7fffe05afeb4,350827866,0,0x0,8
tick,0x7fffe05afeb4,350844003,0,0x0,8
tick,0x7fffe05afeb4,350860002,0,0x0,8
tick,0x7fffe05afeb4,350875908,0,0x0,8
tick,0x7fffe05afeb4,350891876,0,0x0,8
tick,0x7fffe05afeb4,350907932,0,0x0,8
tick,0x7fffe05afeb4,350923978,0,0x0,8
tick,0x7fffe05afeb4,350940132,0,0x0,8
tick,0x7fffe05afeb4,350956064,0,0x0,8
tick,0x7fffe05afeb4,350971860,0,0x0,8
tick,0x7fffe05afeb4,350987998,0,0x0,8
tick,0x7fffe05afeb4,351003871,0,0x0,8
tick,0x7fffe05afeb4,351019917,0,0x0,8
tick,0x7fffe05afeb4,351035931,0,0x0,8
tick,0x7fffe05afeb4,351051969,0,0x0,8
tick,0x7fffe05afeb4,351067833,0,0x0,8
tick,0x7fffe05afeb4,351083885,0,0x0,8
tick,0x7fffe05afeb4,351099961,0,0x0,8
tick,0x7fffe05afeb4,351115925,0,0x0,8
tick,0x7fffe05afeb4,351131944,0,0x0,8
tick,0x7fffe05afeb4,351148148,0,0x0,8
tick,0x7fffe05afeb4,351163814,0,0x0,8
tick,0x7fffe05afeb4,351179925,0,0x0,8
tick,0x7fffe05afeb4,351194968,0,0x0,8
tick,0x7fffe05afeb4,351210889,0,0x0,8
tick,0x7fffe05afeb4,351226813,0,0x0,8
tick,0x7fffe05afeb4,351242960,0,0x0,8
tick,0x7fffe05afeb4,351259346,0,0x0,8
tick,0x7fffe05afeb4,351274895,0,0x0,8
tick,0x7fffe05afeb4,351290886,0,0x0,8
tick,0x7fffe05afeb4,351306986,0,0x0,8
tick,0x7fffe05afeb4,351322819,0,0x0,8
tick,0x7fffe05afeb4,351338997,0,0x0,8
tick,0x7fffe05afeb4,351354865,0,0x0,8
tick,0x7fffe05afeb4,351371171,0,0x0,8
tick,0x7fffe05afeb4,351386915,0,0x0,8
tick,0x7fffe05afeb4,351402843,0,0x0,8
tick,0x7fffe05afeb4,351418852,0,0x0,8
tick,0x7fffe05afeb4,351435001,0,0x0,8
tick,0x7fffe05afeb4,351450829,0,0x0,8
tick,0x7fffe05afeb4,351466951,0,0x0,8
tick,0x7fffe05afeb4,351482862,0,0x0,8
tick,0x7fffe05afeb4,351498966,0,0x0,8
tick,0x7fffe05afeb4,351514897,0,0x0,8
tick,0x7fffe05afeb4,351530143,0,0x0,8
tick,0x7fffe05afeb4,351545889,0,0x0,8
tick,0x7fffe05afeb4,351561952,0,0x0,8
tick,0x7fffe05afeb4,351577917,0,0x0,8
tick,0x7fffe05afeb4,351594046,0,0x0,8
tick,0x7fffe05afeb4,351609984,0,0x0,8
tick,0x7fffe05afeb4,351626391,0,0x0,8
tick,0x7fffe05afeb4,351642106,0,0x0,8
tick,0x7fffe05afeb4,351658166,0,0x0,8
tick,0x7fffe05afeb4,351674227,0,0x0,8
tick,0x7fffe05afeb4,351690106,0,0x0,8
tick,0x7fffe05afeb4,351706386,0,0x0,8
tick,0x7fffe05afeb4,351721920,0,0x0,8
tick,0x7fffe05afeb4,351737974,0,0x0,8
tick,0x7fffe05afeb4,351753925,0,0x0,8
tick,0x7fffe05afeb4,351769992,0,0x0,8
tick,0x7fffe05afeb4,351785875,0,0x0,8
tick,0x7fffe05afeb4,351801862,0,0x0,8
tick,0x7fffe05afeb4,351818119,0,0x0,8
tick,0x7fffe05afeb4,351833873,0,0x0,8
tick,0x7fffe05afeb4,351849973,0,0x0,8
tick,0x7fffe05afeb4,351865924,0,0x0,8
tick,0x7fffe05afeb4,351881905,0,0x0,8
tick,0x7fffe05afeb4,351897890,0,0x0,8
tick,0x7fffe05afeb4,351913946,0,0x0,8
tick,0x7fffe05afeb4,351929977,0,0x0,8
tick,0x7fffe05afeb4,351947022,0,0x0,8
tick,0x7fffe05afeb4,351961925,0,0x0,8
tick,0x7fffe05afeb4,351978448,0,0x0,8
tick,0x7fffe05afeb4,351993963,0,0x0,8
tick,0x7fffe05afeb4,352010384,0,0x0,8
tick,0x7fffe05afeb4,352025829,0,0x0,8
tick,0x7fffe05afeb4,352042009,0,0x0,8
tick,0x7fffe05afeb4,352056888,0,0x0,8
tick,0x7fffe05afeb4,352072965,0,0x0,8
tick,0x7fffe05afeb4,352088838,0,0x0,8
tick,0x7fffe05afeb4,352104962,0,0x0,8
tick,0x7fffe05afeb4,352120828,0,0x0,8
tick,0x7fffe05afeb4,352135993,0,0x0,8
tick,0x7fffe05afeb4,352152064,0,0x0,8
tick,0x7fffe05afeb4,352167946,0,0x0,8
tick,0x7fffe05afeb4,352183969,0,0x0,8
tick,0x7fffe05afeb4,352199975,0,0x0,8
tick,0x7fffe05afeb4,352215848,0,0x0,8
tick,0x7fffe05afeb4,352232068,0,0x0,8
tick,0x7fffe05afeb4,352247853,0,0x0,8
tick,0x7fffe05afeb4,352264022,0,0x0,8
tick,0x7fffe05afeb4,352280050,0,0x0,8
tick,0x7fffe05afeb4,352295908,0,0x0,8
tick,0x7fffe05afeb4,352311937,0,0x0,8
tick,0x7fffe05afeb4,352328014,0,0x0,8
tick,0x7fffe05afeb4,352343820,0,0x0,8
tick,0x7fffe05afeb4,352359965,0,0x0,8
tick,0x7fffe05afeb4,352375940,0,0x0,8
tick,0x7fffe05afeb4,352392006,0,0x0,8
tick,0x7fffe05afeb4,352407893,0,0x0,8
tick,0x7fffe05afeb4,352423860,0,0x0,8
tick,0x7fffe05afeb4,352439925,0,0x0,8
tick,0x7fffe05afeb4,352454921,0,0x0,8
tick,0x7fffe05afeb4,352470912,0,0x0,8
tick,0x7fffe05afeb4,352485996,0,0x0,8
tick,0x7fffe05afeb4,352501851,0,0x0,8
tick,0x7fffe05afeb4,352517949,0,0x0,8
tick,0x7fffe05afeb4,352533939,0,0x0,8
tick,0x7fffe05afeb4,352549948,0,0x0,8
tick,0x7fffe05afeb4,352565837,0,0x0,8
tick,0x7fffe05afeb4,352581979,0,0x0,8
tick,0x7fffe05afeb4,352597914,0,0x0,8
tick,0x7fffe05afeb4,352614037,0,0x0,8
tick,0x7fffe05afeb4,352629855,0,0x0,8
tick,0x7fffe05afeb4,352646036,0,0x0,8
tick,0x7fffe05afeb4,352661832,0,0x0,8
tick,0x7fffe05afeb4,352677878,0,0x0,8
tick,0x7fffe05afeb4,352693949,0,0x0,8
tick,0x7fffe05afeb4,352710114,0,0x0,8
tick,0x7fffe05afeb4,352724981,0,0x0,8
tick,0x7fffe05afeb4,352740428,0,0x0,8
tick,0x7fffe05afeb4,352756348,0,0x0,8
tick,0x7fffe05afeb4,352772459,0,0x0,8
tick,0x7fffe05afeb4,352788388,0,0x0,8
tick,0x7fffe05afeb4,352804398,0,0x0,8
tick,0x7fffe05afeb4,352819382,0,0x0,8
tick,0x7fffe05afeb4,352834452,0,0x0,8
tick,0x7fffe05afeb4,352850368,0,0x0,8
tick,0x7fffe05afeb4,352865418,0,0x0,8
tick,0x7fffe05afeb4,352881353,0,0x0,8
tick,0x7fffe05afeb4,352897458,0,0x0,8
tick,0x7fffe05afeb4,352913347,0,0x0,8
tick,0x7fffe05afeb4,352929574,0,0x0,8
tick,0x7fffe05afeb4,352944892,0,0x0,8
tick,0x7fffe05afeb4,352961039,0,0x0,8
tick,0x7fffe05afeb4,352975877,0,0x0,8
tick,0x7fffe05afeb4,352991924,0,0x0,8
tick,0x7fffe05afeb4,353007878,0,0x0,8
tick,0x7fffe05afeb4,353023562,0,0x0,8
tick,0x7fffe05afeb4,353040253,0,0x0,8
tick,0x7fffe05afeb4,353055429,0,0x0,8
tick,0x7fffe05afeb4,353071451,0,0x0,8
tick,0x7fffe05afeb4,353087584,0,0x0,8
tick,0x7fffe05afeb4,353103425,0,0x0,8
tick,0x7fffe05afeb4,353119436,0,0x0,8
tick,0x7fffe05afeb4,353135495,0,0x0,8
tick,0x7fffe05afeb4,353151572,0,0x0,8
tick,0x7fffe05afeb4,353167497,0,0x0,8
tick,0x7fffe05afeb4,353183510,0,0x0,8
tick,0x7fffe05afeb4,353198978,0,0x0,8
tick,0x7fffe05afeb4,353215002,0,0x0,8
tick,0x7fffe05afeb4,353230933,0,0x0,8
tick,0x7fffe05afeb4,353247008,0,0x0,8
tick,0x7fffe05afeb4,353262913,0,0x0,8
tick,0x7fffe05afeb4,353279120,0,0x0,8
tick,0x7fffe05afeb4,353294930,0,0x0,8
tick,0x7fffe05afeb4,353310967,0,0x0,8
tick,0x7fffe05afeb4,353327008,0,0x0,8
tick,0x7fffe05afeb4,353342999,0,0x0,8
tick,0x7fffe05afeb4,353359103,0,0x0,8
tick,0x7fffe05afeb4,353375197,0,0x0,8
tick,0x7fffe05afeb4,353390906,0,0x0,8
tick,0x7fffe05afeb4,353407005,0,0x0,8
tick,0x7fffe05afeb4,353422437,0,0x0,8
tick,0x7fffe05afeb4,353437623,0,0x0,8
tick,0x7fffe05afeb4,353453469,0,0x0,8
tick,0x7fffe05afeb4,353469609,0,0x0,8
tick,0x7fffe05afeb4,353485531,0,0x0,8
tick,0x7fffe05afeb4,353500478,0,0x0,8
tick,0x7fffe05afeb4,353516443,0,0x0,8
tick,0x7fffe05afeb4,353532677,0,0x0,8
tick,0x7fffe05afeb4,353548452,0,0x0,8
tick,0x7fffe05afeb4,353564523,0,0x0,8
tick,0x7fffe05afeb4,353579483,0,0x0,8
tick,0x7fffe05afeb4,353595585,0,0x0,8
tick,0x7fffe05afeb4,353610450,0,0x0,8
tick,0x7fffe05afeb4,353626479,0,0x0,8
tick,0x7fffe05afeb4,353642478,0,0x0,8
tick,0x7fffe05afeb4,353658532,0,0x0,8
tick,0x7fffe05afeb4,353674459,0,0x0,8
tick,0x7fffe05afeb4,353690457,0,0x0,8
tick,0x7fffe05afeb4,353706545,0,0x0,8
tick,0x7fffe05afeb4,353722642,0,0x0,8
tick,0x7fffe05afeb4,353737991,0,0x0,8
tick,0x7fffe05afeb4,353754049,0,0x0,8
tick,0x7fffe05afeb4,353770053,0,0x0,8
tick,0x7fffe05afeb4,353786231,0,0x0,8
tick,0x7fffe05afeb4,353801997,0,0x0,8
tick,0x7fffe05afeb4,353818101,0,0x0,8
tick,0x7fffe05afeb4,353833978,0,0x0,8
tick,0x7fffe05afeb4,353850112,0,0x0,8
tick,0x7fffe05afeb4,353866038,0,0x0,8
tick,0x7fffe05afeb4,353882033,0,0x0,8
tick,0x7fffe05afeb4,353898015,0,0x0,8
tick,0x7fffe05afeb4,353913093,0,0x0,8
tick,0x7fffe05afeb4,353929209,0,0x0,8
tick,0x7fffe05afeb4,353945019,0,0x0,8
tick,0x7fffe05afeb4,353961042,0,0x0,8
tick,0x7fffe05afeb4,353976155,0,0x0,8
tick,0x7fffe05afeb4,353992006,0,0x0,8
tick,0x7fffe05afeb4,354008090,0,0x0,8
tick,0x7fffe05afeb4,354023193,0,0x0,8
tick,0x7fffe05afeb4,354039242,0,0x0,8
tick,0x7fffe05afeb4,354054981,0,0x0,8
tick,0x7fffe05afeb4,354071080,0,0x0,8
tick,0x7fffe05afeb4,354086105,0,0x0,8
tick,0x7fffe05afeb4,354102767,0,0x0,8
tick,0x7fffe05afeb4,354117971,0,0x0,8
tick,0x7fffe05afeb4,354134123,0,0x0,8
tick,0x7fffe05afeb4,354149275,0,0x0,8
tick,0x7fffe05afeb4,354166495,0,0x0,8
tick,0x7fffe05afeb4,354180154,0,0x0,8
tick,0x7fffe05afeb4,354196548,0,0x0,8
tick,0x7fffe05afeb4,354212218,0,0x0,8
tick,0x7fffe05afeb4,354228581,0,0x0,8
tick,0x7fffe05afeb4,354243987,0,0x0,8
tick,0x7fffe05afeb4,354260872,0,0x0,8
tick,0x7fffe05afeb4,354276039,0,0x0,8
tick,0x7fffe05afeb4,354292127,0,0x0,8
tick,0x7fffe05afeb4,354307977,0,0x0,8
tick,0x7fffe05afeb4,354324042,0,0x0,8
tick,0x7fffe05afeb4,354340096,0,0x0,8
tick,0x7fffe05afeb4,354356226,0,0x0,8
tick,0x7fffe05afeb4,354372022,0,0x0,8
tick,0x7fffe05afeb4,354388355,0,0x0,8
tick,0x7fffe05afeb4,354404015,0,0x0,8
tick,0x7fffe05afeb4,354420188,0,0x0,8
tick,0x7fffe05afeb4,354435008,0,0x0,8
tick,0x7fffe05afeb4,354450991,0,0x0,8
tick,0x7fffe05afeb4,354467048,0,0x0,8
tick,0x7fffe05afeb4,354483229,0,0x0,8
tick,0x7fffe05afeb4,354499040,0,0x0,8
tick,0x7fffe05afeb4,354515155,0,0x0,8
tick,0x7fffe05afeb4,354530035,0,0x0,8
tick,0x7fffe05afeb4,354546228,0,0x0,8
tick,0x7fffe05afeb4,354561989,0,0x0,8
tick,0x7fffe05afeb4,354578144,0,0x0,8
tick,0x7fffe05afeb4,354594117,0,0x0,8
tick,0x7fffe05afeb4,354610235,0,0x0,8
tick,0x7fffe05afeb4,354625977,0,0x0,8
tick,0x7fffe05afeb4,354642053,0,0x0,8
tick,0x7fffe05afeb4,354657997,0,0x0,8
tick,0x7fffe05afeb4,354674189,0,0x0,8
tick,0x7fffe05afeb4,354689970,0,0x0,8
tick,0x7fffe05afeb4,354706087,0,0x0,8
tick,0x7fffe05afeb4,354721979,0,0x0,8
tick,0x7fffe05afeb4,354738158,0,0x0,8
tick,0x7fffe05afeb4,354753995,0,0x0,8
tick,0x7fffe05afeb4,354770025,0,0x0,8
tick,0x7fffe05afeb4,354785988,0,0x0,8
tick,0x7fffe05afeb4,354801041,0,0x0,8
tick,0x7fffe05afeb4,354817206,0,0x0,8
tick,0x7fffe05afeb4,354833088,0,0x0,8
tick,0x7fffe05afeb4,354849047,0,0x0,8
tick,0x7fffe05afeb4,354865057,0,0x0,8
tick,0x7fffe05afeb4,354880076,0,0x0,8
tick,0x7fffe05afeb4,354896036,0,0x0,8
tick,0x7fffe05afeb4,354911977,0,0x0,8
tick,0x7fffe05afeb4,354928229,0,0x0,8
tick,0x7fffe05afeb4,354943982,0,0x0,8
tick,0x7fffe05afeb4,354960120,0,0x0,8
tick,0x7fffe05afeb4,354976105,0,0x0,8
tick,0x7fffe05afeb4,354991162,0,0x0,8
tick,0x7fffe05afeb4,355005974,0,0x0,8
tick,0x7fffe05afeb4,355022046,0,0x0,8
tick,0x7fffe05afeb4,355038043,0,0x0,8
tick,0x7fffe05afeb4,355054095,0,0x0,8
tick,0x7fffe05afeb4,355069088,0,0x0,8
tick,0x7fffe05afeb4,355085108,0,0x0,8
tick,0x7fffe05afeb4,355100977,0,0x0,8
tick,0x7fffe05afeb4,355117053,0,0x0,8
tick,0x7fffe05afeb4,355133108,0,0x0,8
tick,0x7fffe05afeb4,355149117,0,0x0,8
tick,0x7fffe05afeb4,355165008,0,0x0,8
tick,0x7fffe05afeb4,355180164,0,0x0,8
tick,0x7fffe05afeb4,355196196,0,0x0,8
tick,0x7fffe05afeb4,355211975,0,0x0,8
tick,0x7fffe05afeb4,355228567,0,0x0,8
tick,0x7fffe05afeb4,355244144,0,0x0,8
tick,0x7fffe05afeb4,355259403,0,0x0,8
tick,0x7fffe05afeb4,355275032,0,0x0,8
tick,0x7fffe05afeb4,355290102,0,0x0,8
tick,0x7fffe05afeb4,355306066,0,0x0,8
tick,0x7fffe05afeb4,355322459,0,0x0,8
tick,0x7fffe05afeb4,355338109,0,0x0,8
tick,0x7fffe05afeb4,355354232,0,0x0,8
tick,0x7fffe05afeb4,355370260,0,0x0,8
tick,0x7fffe05afeb4,355386049,0,0x0,8
tick,0x7fffe05afeb4,355402001,0,0x0,8
tick,0x7fffe05afeb4,355417989,0,0x0,8
tick,0x7fffe05afeb4,355434094,0,0x0,8
tick,0x7fffe05afeb4,355449986,0,0x0,8
tick,0x7fffe05afeb4,355465078,0,0x0,8
tick,0x7fffe05afeb4,355480021,0,0x0,8
tick,0x7fffe05afeb4,355496071,0,0x0,8
tick,0x7fffe05afeb4,355511965,0,0x0,8
tick,0x7fffe05afeb4,355528070,0,0x0,8
tick,0x7fffe05afeb4,355543507,0,0x0,8
tick,0x7fffe05afeb4,355559610,0,0x0,8
tick,0x7fffe05afeb4,355575555,0,0x0,8
tick,0x7fffe05afeb4,355591644,0,0x0,8
tick,0x7fffe05afeb4,355606512,0,0x0,8
tick,0x7fffe05afeb4,355622658,0,0x0,8
tick,0x7fffe05afeb4,355638531,0,0x0,8
tick,0x7fffe05afeb4,355654518,0,0x0,8
tick,0x7fffe05afeb4,355670504,0,0x0,8
tick,0x7fffe05afeb4,355686531,0,0x0,8
tick,0x7fffe05afeb4,355702014,0,0x0,8
tick,0x7fffe05afeb4,355717068,0,0x0,8
tick,0x7fffe05afeb4,355733017,0,0x0,8
tick,0x7fffe05afeb4,355749198,0,0x0,8
tick,0x7fffe05afeb4,355765205,0,0x0,8
tick,0x7fffe05afeb4,355780060,0,0x0,8
tick,0x7fffe05afeb4,355795575,0,0x0,8
tick,0x7fffe05afeb4,355811815,0,0x0,8
tick,0x7fffe05afeb4,355827681,0,0x0,8
tick,0x7fffe05afeb4,355843559,0,0x0,8
tick,0x7fffe05afeb4,355858535,0,0x0,8
tick,0x7fffe05afeb4,355874671,0,0x0,8
tick,0x7fffe05afeb4,355890671,0,0x0,8
tick,0x7fffe05afeb4,355906628,0,0x0,8
tick,0x7fffe05afeb4,355922564,0,0x0,8
tick,0x7fffe05afeb4,355938713,0,0x0,8
tick,0x7fffe05afeb4,355954059,0,0x0,8
tick,0x7fffe05afeb4,355970124,0,0x0,8
tick,0x7fffe05afeb4,355986091,0,0x0,8
tick,0x7fffe05afeb4,356002186,0,0x0,8
tick,0x7fffe05afeb4,356018078,0,0x0,8
tick,0x7fffe05afeb4,356034291,0,0x0,8
tick,0x7fffe05afeb4,356049644,0,0x0,8
tick,0x7fffe05afeb4,356065712,0,0x0,8
tick,0x7fffe05afeb4,356081592,0,0x0,8
tick,0x7fffe05afeb4,356096669,0,0x0,8
tick,0x7fffe05afeb4,356112600,0,0x0,8
tick,0x7fffe05afeb4,356128644,0,0x0,8
tick,0x7fffe05afeb4,356144720,0,0x0,8
tick,0x7fffe05afeb4,356160673,0,0x0,8
tick,0x7fffe05afeb4,356176617,0,0x0,8
tick,0x7fffe05afeb4,356191754,0,0x0,8
tick,0x7fffe05afeb4,356207588,0,0x0,8
tick,0x7fffe05afeb4,356223687,0,0x0,8
tick,0x7fffe05afeb4,356239157,0,0x0,8
tick,0x7fffe05afeb4,356255292,0,0x0,8
tick,0x7fffe05afeb4,356271250,0,0x0,8
tick,0x7fffe05afeb4,356286159,0,0x0,8
tick,0x7fffe05afeb4,356302101,0,0x0,8
tick,0x7fffe05afeb4,356318179,0,0x0,8
tick,0x7fffe05afeb4,356334319,0,0x0,8
tick,0x7fffe05afeb4,356350102,0,0x0,8
tick,0x7fffe05afeb4,356365232,0,0x0,8
tick,0x7fffe05afeb4,356381199,0,0x0,8
tick,0x7fffe05afeb4,356396131,0,0x0,8
tick,0x7fffe05afeb4,356412109,0,0x0,8
tick,0x7fffe05afeb4,356427095,0,0x0,8
tick,0x7fffe05afeb4,356443308,0,0x0,8
tick,0x7fffe05afeb4,356459149,0,0x0,8
tick,0x7fffe05afeb4,356475234,0,0x0,8
tick,0x7fffe05afeb4,356490658,0,0x0,8
tick,0x7fffe05afeb4,356505676,0,0x0,8
tick,0x7fffe05afeb4,356521642,0,0x0,8
tick,0x7fffe05afeb4,356537683,0,0x0,8
tick,0x7fffe05afeb4,356553637,0,0x0,8
tick,0x7fffe05afeb4,356569861,0,0x0,8
tick,0x7fffe05afeb4,356585678,0,0x0,8
tick,0x7fffe05afeb4,356600635,0,0x0,8
tick,0x7fffe05afeb4,356616627,0,0x0,8
tick,0x7fffe05afeb4,356632849,0,0x0,8
tick,0x7fffe05afeb4,356648609,0,0x0,8
tick,0x7fffe05afeb4,356663654,0,0x0,8
tick,0x7fffe05afeb4,356679647,0,0x0,8
tick,0x7fffe05afeb4,356696517,0,0x0,8
tick,0x7fffe05afeb4,356711667,0,0x0,8
tick,0x7fffe05afeb4,356727769,0,0x0,8
tick,0x7fffe05afeb4,356743717,0,0x0,8
tick,0x7fffe05afeb4,356760078,0,0x0,8
tick,0x7fffe05afeb4,356775722,0,0x0,8
tick,0x7fffe05afeb4,356791645,0,0x0,8
tick,0x7fffe05afeb4,356806717,0,0x0,8
tick,0x7fffe05afeb4,356822698,0,0x0,8
tick,0x7fffe05afeb4,356838705,0,0x0,8
tick,0x7fffe05afeb4,356854630,0,0x0,8
tick,0x7fffe05afeb4,356870682,0,0x0,8
tick,0x7fffe05afeb4,356886691,0,0x0,8
tick,0x7fffe05afeb4,356902719,0,0x0,8
tick,0x7fffe05afeb4,356918738,0,0x0,8
tick,0x7fffe05afeb4,356934623,0,0x0,8
tick,0x7fffe05afeb4,356950818,0,0x0,8
tick,0x7fffe05afeb4,356966752,0,0x0,8
tick,0x7fffe05afeb4,356982655,0,0x0,8
tick,0x7fffe05afeb4,356998735,0,0x0,8
tick,0x7fffe05afeb4,357014930,0,0x0,8
tick,0x7fffe05afeb4,357030650,0,0x0,8
tick,0x7fffe05afeb4,357045713,0,0x0,8
tick,0x7fffe05afeb4,357061630,0,0x0,8
tick,0x7fffe05afeb4,357076692,0,0x0,8
tick,0x7fffe05afeb4,357092680,0,0x0,8
tick,0x7fffe05afeb4,357108995,0,0x0,8
tick,0x7fffe05afeb4,357124630,0,0x0,8
tick,0x7fffe05afeb4,357139807,0,0x0,8
tick,0x7fffe05afeb4,357155746,0,0x0,8
tick,0x7fffe05afeb4,357171661,0,0x0,8
tick,0x7fffe05afeb4,357186658,0,0x0,8
tick,0x7fffe05afeb4,357202775,0,0x0,8
tick,0x7fffe05afeb4,357218722,0,0x0,8
tick,0x7fffe05afeb4,357234761,0,0x0,8
tick,0x7fffe05afeb4,357250624,0,0x0,8
tick,0x7fffe05afeb4,357266752,0,0x0,8
tick,0x7fffe05afeb4,357282713,0,0x0,8
tick,0x7fffe05afeb4,357298625,0,0x0,8
tick,0x7fffe05afeb4,357314608,0,0x0,8
tick,0x7fffe05afeb4,357330749,0,0x0,8
tick,0x7fffe05afeb4,357345719,0,0x0,8
tick,0x7fffe05afeb4,357361771,0,0x0,8
tick,0x7fffe05afeb4,357377736,0,0x0,8
tick,0x7fffe05afeb4,357393842,0,0x0,8
tick,0x7fffe05afeb4,357409660,0,0x0,8
tick,0x7fffe05afeb4,357424614,0,0x0,8
tick,0x7fffe05afeb4,357440659,0,0x0,8
tick,0x7fffe05afeb4,357456778,0,0x0,8
tick,0x7fffe05afeb4,357472651,0,0x0,8
tick,0x7fffe05afeb4,357488766,0,0x0,8
tick,0x7fffe05afeb4,357504622,0,0x0,8
tick,0x7fffe05afeb4,357520711,0,0x0,8
tick,0x7fffe05afeb4,357536689,0,0x0,8
tick,0x7fffe05afeb4,357552650,0,0x0,8
tick,0x7fffe05afeb4,357568670,0,0x0,8
tick,0x7fffe05afeb4,357584737,0,0x0,8
tick,0x7fffe05afeb4,357600626,0,0x0,8
tick,0x7fffe05afeb4,357616648,0,0x0,8
tick,0x7fffe05afeb4,357632613,0,0x0,8
tick,0x7fffe05afeb4,357648717,0,0x0,8
tick,0x7fffe05afeb4,357664668,0,0x0,8
tick,0x7fffe05afeb4,357680708,0,0x0,8
tick,0x7fffe05afeb4,357696657,0,0x0,8
tick,0x7fffe05afeb4,357712690,0,0x0,8
tick,0x7fffe05afeb4,357728844,0,0x0,8
tick,0x7fffe05afeb4,357744673,0,0x0,8
tick,0x7fffe05afeb4,357760630,0,0x0,8
tick,0x7fffe05afeb4,357776752,0,0x0,8
tick,0x7fffe05afeb4,357792650,0,0x0,8
tick,0x7fffe05afeb4,357808634,0,0x0,8
tick,0x7fffe05afeb4,357824651,0,0x0,8
tick,0x7fffe05afeb4,357840733,0,0x0,8
tick,0x7fffe05afeb4,357856652,0,0x0,8
tick,0x7fffe05afeb4,357872645,0,0x0,8
tick,0x7fffe05afeb4,357888621,0,0x0,8
tick,0x7fffe05afeb4,357904769,0,0x0,8
tick,0x7fffe05afeb4,357920618,0,0x0,8
tick,0x7fffe05afeb4,357936761,0,0x0,8
tick,0x7fffe05afeb4,357952609,0,0x0,8
tick,0x7fffe05afeb4,357968825,0,0x0,8
tick,0x7fffe05afeb4,357984706,0,0x0,8
tick,0x7fffe05afeb4,358000897,0,0x0,8
tick,0x7fffe05afeb4,358016440,0,0x0,8
tick,0x7fffe05afeb4,358031808,0,0x0,8
tick,0x7fffe05afeb4,358047699,0,0x0,8
tick,0x7fffe05afeb4,358063761,0,0x0,8
tick,0x7fffe05afeb4,358081054,0,0x0,8
tick,0x7fffe05afeb4,358095805,0,0x0,8
tick,0x7fffe05afeb4,358111633,0,0x0,8
tick,0x7fffe05afeb4,358126804,0,0x0,8
tick,0x7fffe05afeb4,358142637,0,0x0,8
tick,0x7fffe05afeb4,358158795,0,0x0,8
tick,0x7fffe05afeb4,358174636,0,0x0,8
tick,0x7fffe05afeb4,358191723,0,0x0,8
tick,0x7fffe05afeb4,358206657,0,0x0,8
tick,0x7fffe05afeb4,358222881,0,0x0,8
tick,0x7fffe05afeb4,358238666,0,0x0,8
tick,0x7fffe05afeb4,358254788,0,0x0,8
tick,0x7fffe05afeb4,358270667,0,0x0,8
tick,0x7fffe05afeb4,358286753,0,0x0,8
tick,0x7fffe05afeb4,358302674,0,0x0,8
tick,0x7fffe05afeb4,358318646,0,0x0,8
tick,0x7fffe05afeb4,358333653,0,0x0,8
tick,0x7fffe05afeb4,358350162,0,0x0,8
tick,0x7fffe05afeb4,358365712,0,0x0,8
tick,0x7fffe05afeb4,358381709,0,0x0,8
tick,0x7fffe05afeb4,358396633,0,0x0,8
tick,0x7fffe05afeb4,358412671,0,0x0,8
tick,0x7fffe05afeb4,358428640,0,0x0,8
tick,0x7fffe05afeb4,358447990,0,0x0,8
tick,0x7fffe05afeb4,358461511,0,0x0,8
tick,0x7fffe05afeb4,358477004,0,0x0,8
tick,0x7fffe05afeb4,358492614,0,0x0,8
tick,0x7fffe05afeb4,358509886,0,0x0,8
tick,0x7fffe05afeb4,358524611,0,0x0,8
tick,0x7fffe05afeb4,358541132,0,0x0,8
tick,0x7fffe05afeb4,358555676,0,0x0,8
tick,0x7fffe05afeb4,358571927,0,0x0,8
tick,0x7fffe05afeb4,358586710,0,0x0,8
tick,0x7fffe05afeb4,358602782,0,0x0,8
tick,0x7fffe05afeb4,358618612,0,0x0,8
tick,0x7fffe05afeb4,358634894,0,0x0,8
tick,0x7fffe05afeb4,358650723,0,0x0,8
tick,0x7fffe05afeb4,358666969,0,0x0,8
tick,0x7fffe05afeb4,358682659,0,0x0,8
tick,0x7fffe05afeb4,358698682,0,0x0,8
tick,0x7fffe05afeb4,358714653,0,0x0,8
tick,0x7fffe05afeb4,358730783,0,0x0,8
tick,0x7fffe05afeb4,358746619,0,0x0,8
tick,0x7fffe05afeb4,358761814,0,0x0,8
tick,0x7fffe05afeb4,358777720,0,0x0,8
tick,0x7fffe05afeb4,358793970,0,0x0,8
tick,0x7fffe05afeb4,358809784,0,0x0,8
tick,0x7fffe05afeb4,358825699,0,0x0,8
tick,0x7fffe05afeb4,358841698,0,0x0,8
tick,0x7fffe05afeb4,358856697,0,0x0,8
tick,0x7fffe05afeb4,358872633,0,0x0,8
tick,0x7fffe05afeb4,358888677,0,0x0,8
tick,0x7fffe05afeb4,358904793,0,0x0,8
tick,0x7fffe05afeb4,358920694,0,0x0,8
tick,0x7fffe05afeb4,358936683,0,0x0,8
tick,0x7fffe05afeb4,358952628,0,0x0,8
tick,0x7fffe05afeb4,358967766,0,0x0,8
tick,0x7fffe05afeb4,358983797,0,0x0,8
tick,0x7fffe05afeb4,358999743,0,0x0,8
tick,0x7fffe05afeb4,359015949,0,0x0,8
tick,0x7fffe05afeb4,359030880,0,0x0,8
tick,0x7fffe05afeb4,359046850,0,0x0,8
tick,0x7fffe05afeb4,359062692,0,0x0,8
tick,0x7fffe05afeb4,359078882,0,0x0,8
tick,0x7fffe05afeb4,359094722,0,0x0,8
tick,0x7fffe05afeb4,359110763,0,0x0,8
tick,0x7fffe05afeb4,359126730,0,0x0,8
tick,0x7fffe05afeb4,359142737,0,0x0,8
tick,0x7fffe05afeb4,359158799,0,0x0,8
tick,0x7fffe05afeb4,359174723,0,0x0,8
tick,0x7fffe05afeb4,359190860,0,0x0,8
tick,0x7fffe05afeb4,359206878,0,0x0,8
tick,0x7fffe05afeb4,359221666,0,0x0,8
tick,0x7fffe05afeb4,359237834,0,0x0,8
tick,0x7fffe05afeb4,359253642,0,0x0,8
tick,0x7fffe05afeb4,359268916,0,0x0,8
tick,0x7fffe05afeb4,359284633,0,0x0,8
tick,0x7fffe05afeb4,359300618,0,0x0,8
tick,0x7fffe05afeb4,359316615,0,0x0,8
tick,0x7fffe05afeb4,359332844,0,0x0,8
tick,0x7fffe05afeb4,359348661,0,0x0,8
tick,0x7fffe05afeb4,359363640,0,0x0,8
tick,0x7fffe05afeb4,359378611,0,0x0,8
tick,0x7fffe05afeb4,359394872,0,0x0,8
tick,0x7fffe05afeb4,359410663,0,0x0,8
tick,0x7fffe05afeb4,359426747,0,0x0,8
tick,0x7fffe05afeb4,359442673,0,0x0,8
tick,0x7fffe05afeb4,359458746,0,0x0,8
tick,0x7fffe05afeb4,359474644,0,0x0,8
tick,0x7fffe05afeb4,359490710,0,0x0,8
tick,0x7fffe05afeb4,359506645,0,0x0,8
tick,0x7fffe05afeb4,359522699,0,0x0,8
tick,0x7fffe05afeb4,359538635,0,0x0,8
tick,0x7fffe05afeb4,359553735,0,0x0,8
tick,0x7fffe05afeb4,359569768,0,0x0,8
tick,0x7fffe05afeb4,359585729,0,0x0,8
tick,0x7fffe05afeb4,359601622,0,0x0,8
tick,0x7fffe05afeb4,359617725,0,0x0,8
tick,0x7fffe05afeb4,359633881,0,0x0,8
tick,0x7fffe05afeb4,359648785,0,0x0,8
tick,0x7fffe05afeb4,359665215,0,0x0,8
tick,0x7fffe05afeb4,359680975,0,0x0,8
tick,0x7fffe05afeb4,359696802,0,0x0,8
tick,0x7fffe05afeb4,359711747,0,0x0,8
tick,0x7fffe05afeb4,359728162,0,0x0,8
tick,0x7fffe05afeb4,359742785,0,0x0,8
tick,0x7fffe05afeb4,359759506,0,0x0,8
tick,0x7fffe05afeb4,359774778,0,0x0,8
tick,0x7fffe05afeb4,359791565,0,0x0,8
tick,0x7fffe05afeb4,359806079,0,0x0,8
tick,0x7fffe05afeb4,359822487,0,0x0,8
tick,0x7fffe05afeb4,359837794,0,0x0,8
tick,0x7fffe05afeb4,359853728,0,0x0,8
tick,0x7fffe05afeb4,359869764,0,0x0,8
tick,0x7fffe05afeb4,359885630,0,0x0,8
tick,0x7fffe05afeb4,359901775,0,0x0,8
tick,0x7fffe05afeb4,359917661,0,0x0,8
tick,0x7fffe05afeb4,359933813,0,0x0,8
tick,0x7fffe05afeb4,359949839,0,0x0,8
tick,0x7fffe05afeb4,359965858,0,0x0,8
tick,0x7fffe05afeb4,359981866,0,0x0,8
tick,0x7fffe05afeb4,359997725,0,0x0,8
tick,0x7fffe05afeb4,360013763,0,0x0,8
tick,0x7fffe05afeb4,360029763,0,0x0,8
tick,0x7fffe05afeb4,360044831,0,0x0,8
tick,0x7fffe05afeb4,360060801,0,0x0,8
tick,0x7fffe05afeb4,360076785,0,0x0,8
tick,0x7fffe05afeb4,360091737,0,0x0,8
tick,0x7fffe05afeb4,360107615,0,0x0,8
tick,0x7fffe05afeb4,360124142,0,0x0,8
tick,0x7fffe05afeb4,360139827,0,0x0,8
tick,0x7fffe05afeb4,360154750,0,0x0,8
tick,0x7fffe05afeb4,360170669,0,0x0,8
tick,0x7fffe05afeb4,360186267,0,0x0,8
tick,0x7fffe05afeb4,360201622,0,0x0,8
tick,0x7fffe05afeb4,360217726,0,0x0,8
tick,0x7fffe05afeb4,360233839,0,0x0,8
tick,0x7fffe05afeb4,360249788,0,0x0,8
tick,0x7fffe05afeb4,360265679,0,0x0,8
tick,0x7fffe05afeb4,360281713,0,0x0,8
tick,0x7fffe05afeb4,360297838,0,0x0,8
tick,0x7fffe05afeb4,360313733,0,0x0,8
tick,0x7fffe05afeb4,360329929,0,0x0,8
tick,0x7fffe05afeb4,360345761,0,0x0,8
tick,0x7fffe05afeb4,360361764,0,0x0,8
tick,0x7fffe05afeb4,360377733,0,0x0,8
tick,0x7fffe05afeb4,360393670,0,0x0,8
tick,0x7fffe05afeb4,360409781,0,0x0,8
tick,0x7fffe05afeb4,360425677,0,0x0,8
tick,0x7fffe05afeb4,360441815,0,0x0,8
tick,0x7fffe05afeb4,360457650,0,0x0,8
tick,0x7fffe05afeb4,360473688,0,0x0,8
tick,0x7fffe05afeb4,360489663,0,0x0,8
tick,0x7fffe05afeb4,360505788,0,0x0,8
tick,0x7fffe05afeb4,360521608,0,0x0,8
tick,0x7fffe05afeb4,360537688,0,0x0,8
tick,0x7fffe05afeb4,360553676,0,0x0,8
tick,0x7fffe05afeb4,360569956,0,0x0,8
tick,0x7fffe05afeb4,360585782,0,0x0,8
tick,0x7fffe05afeb4,360601621,0,0x0,8
tick,0x7fffe05afeb4,360617707,0,0x0,8
tick,0x7fffe05afeb4,360634537,0,0x0,8
tick,0x7fffe05afeb4,360649774,0,0x0,8
tick,0x7fffe05afeb4,360666068,0,0x0,8
tick,0x7fffe05afeb4,360681698,0,0x0,8
tick,0x7fffe05afeb4,360697939,0,0x0,8
tick,0x7fffe05afeb4,360713609,0,0x0,8
tick,0x7fffe05afeb4,360729840,0,0x0,8
tick,0x7fffe05afeb4,360745673,0,0x0,8
tick,0x7fffe05afeb4,360761738,0,0x0,8
tick,0x7fffe05afeb4,360777671,0,0x0,8
tick,0x7fffe05afeb4,360793731,0,0x0,8
tick,0x7fffe05afeb4,360809757,0,0x0,8
tick,0x7fffe05afeb4,360825750,0,0x0,8
tick,0x7fffe05afeb4,360841845,0,0x0,8
tick,0x7fffe05afeb4,360857751,0,0x0,8
tick,0x7fffe05afeb4,360872672,0,0x0,8
tick,0x7fffe05afeb4,360888826,0,0x0,8
tick,0x7fffe05afeb4,360904626,0,0x0,8
tick,0x7fffe05afeb4,360920706,0,0x0,8
tick,0x7fffe05afeb4,360935649,0,0x0,8
tick,0x7fffe05afeb4,360951626,0,0x0,8
tick,0x7fffe05afeb4,360967693,0,0x0,8
tick,0x7fffe05afeb4,360983737,0,0x0,8
tick,0x7fffe05afeb4,360999744,0,0x0,8
tick,0x7fffe05afeb4,361015834,0,0x0,8
tick,0x7fffe05afeb4,361031677,0,0x0,8
tick,0x7fffe05afeb4,361047821,0,0x0,8
tick,0x7fffe05afeb4,361062612,0,0x0,8
tick,0x7fffe05afeb4,361078778,0,0x0,8
tick,0x7fffe05afeb4,361094778,0,0x0,8
tick,0x7fffe05afeb4,361110717,0,0x0,8
tick,0x7fffe05afeb4,361125712,0,0x0,8
tick,0x7fffe05afeb4,361141716,0,0x0,8
tick,0x7fffe05afeb4,361157679,0,0x0,8
tick,0x7fffe05afeb4,361173665,0,0x0,8
tick,0x7fffe05afeb4,361189644,0,0x0,8
tick,0x7fffe05afeb4,361204734,0,0x0,8
tick,0x7fffe05afeb4,361220633,0,0x0,8
tick,0x7fffe05afeb4,361236721,0,0x0,8
tick,0x7fffe05afeb4,361252617,0,0x0,8
tick,0x7fffe05afeb4,361268753,0,0x0,8
tick,0x7fffe05afeb4,361284629,0,0x0,8
tick,0x7fffe05afeb4,361299893,0,0x0,8
tick,0x7fffe05afeb4,361315616,0,0x0,8
tick,0x7fffe05afeb4,361331821,0,0x0,8
tick,0x7fffe05afeb4,361347623,0,0x0,8
tick,0x7fffe05afeb4,361363885,0,0x0,8
tick,0x7fffe05afeb4,361379702,0,0x0,8
tick,0x7fffe05afeb4,361395822,0,0x0,8
tick,0x7fffe05afeb4,361411837,0,0x0,8
tick,0x7fffe05afeb4,361427640,0,0x0,8
tick,0x7fffe05afeb4,361443773,0,0x0,8
tick,0x7fffe05afeb4,361459776,0,0x0,8
tick,0x7fffe05afeb4,361475650,0,0x0,8
tick,0x7fffe05afeb4,361491720,0,0x0,8
tick,0x7fffe05afeb4,361506621,0,0x0,8
tick,0x7fffe05afeb4,361522862,0,0x0,8
tick,0x7fffe05afeb4,361538676,0,0x0,8
tick,0x7fffe05afeb4,361553772,0,0x0,8
tick,0x7fffe05afeb4,361569736,0,0x0,8
tick,0x7fffe05afeb4,361585740,0,0x0,8
tick,0x7fffe05afeb4,361601635,0,0x0,8
tick,0x7fffe05afeb4,361617781,0,0x0,8
tick,0x7fffe05afeb4,361633921,0,0x0,8
tick,0x7fffe05afeb4,361649775,0,0x0,8
tick,0x7fffe05afeb4,361667291,0,0x0,8
tick,0x7fffe05afeb4,361680639,0,0x0,8
tick,0x7fffe05afeb4,361695651,0,0x0,8
tick,0x7fffe05afeb4,361711769,0,0x0,8
tick,0x7fffe05afeb4,361726686,0,0x0,8
tick,0x7fffe05afeb4,361741715,0,0x0,8
tick,0x7fffe05afeb4,361757621,0,0x0,8
tick,0x7fffe05afeb4,361773973,0,0x0,8
tick,0x7fffe05afeb4,361789956,0,0x0,8
tick,0x7fffe05afeb4,361805706,0,0x0,8
tick,0x7fffe05afeb4,361822935,0,0x0,8
tick,0x7fffe05afeb4,361837796,0,0x0,8
tick,0x7fffe05afeb4,361852912,0,0x0,8
tick,0x7fffe05afeb4,361867836,0,0x0,8
tick,0x7fffe05afeb4,361884800,0,0x0,8
tick,0x7fffe05afeb4,361900006,0,0x0,8
tick,0x7fffe05afeb4,361915839,0,0x0,8
tick,0x7fffe05afeb4,361930799,0,0x0,8
tick,0x7fffe05afeb4,361946592,0,0x0,8
tick,0x7fffe05afeb4,361961752,0,0x0,8
tick,0x7fffe05afeb4,361978333,0,0x0,8
tick,0x7fffe05afeb4,361992755,0,0x0,8
tick,0x7fffe05afeb4,362009623,0,0x0,8
tick,0x7fffe05afeb4,362024753,0,0x0,8
tick,0x7fffe05afeb4,362041206,0,0x0,8
tick,0x7fffe05afeb4,362056883,0,0x0,8
tick,0x7fffe05afeb4,362073630,0,0x0,8
tick,0x7fffe05afeb4,362088940,0,0x0,8
tick,0x7fffe05afeb4,362104760,0,0x0,8
tick,0x7fffe05afeb4,362120672,0,0x0,8
tick,0x7fffe05afeb4,362136622,0,0x0,8
tick,0x7fffe05afeb4,362152814,0,0x0,8
tick,0x7fffe05afeb4,362168687,0,0x0,8
tick,0x7fffe05afeb4,362184757,0,0x0,8
tick,0x7fffe05afeb4,362200734,0,0x0,8
tick,0x7fffe05afeb4,362216773,0,0x0,8
tick,0x7fffe05afeb4,362232617,0,0x0,8
tick,0x7fffe05afeb4,362248737,0,0x0,8
tick,0x7fffe05afeb4,362263740,0,0x0,8
tick,0x7fffe05afeb4,362279809,0,0x0,8
tick,0x7fffe05afeb4,362295693,0,0x0,8
tick,0x7fffe05afeb4,362311697,0,0x0,8
tick,0x7fffe05afeb4,362327678,0,0x0,8
tick,0x7fffe05afeb4,362343716,0,0x0,8
tick,0x7fffe05afeb4,362359774,0,0x0,8
tick,0x7fffe05afeb4,362375700,0,0x0,8
tick,0x7fffe05afeb4,362391613,0,0x0,8
tick,0x7fffe05afeb4,362407708,0,0x0,8
tick,0x7fffe05afeb4,362423789,0,0x0,8
tick,0x7fffe05afeb4,362439806,0,0x0,8
tick,0x7fffe05afeb4,362455665,0,0x0,8
tick,0x7fffe05afeb4,362471747,0,0x0,8
tick,0x7fffe05afeb4,362487627,0,0x0,8
tick,0x7fffe05afeb4,362503612,0,0x0,8
tick,0x7fffe05afeb4,362519651,0,0x0,8
tick,0x7fffe05afeb4,362535772,0,0x0,8
tick,0x7fffe05afeb4,362551745,0,0x0,8
tick,0x7fffe05afeb4,362567740,0,0x0,8
tick,0x7fffe05afeb4,362583696,0,0x0,8
tick,0x7fffe05afeb4,362599819,0,0x0,8
tick,0x7fffe05afeb4,362615625,0,0x0,8
tick,0x7fffe05afeb4,362631697,0,0x0,8
tick,0x7fffe05afeb4,362647621,0,0x0,8
tick,0x7fffe05afeb4,362664007,0,0x0,8
tick,0x7fffe05afeb4,362679654,0,0x0,8
tick,0x7fffe05afeb4,362694653,0,0x0,8
tick,0x7fffe05afeb4,362710619,0,0x0,8
tick,0x7fffe05afeb4,362726843,0,0x0,8
tick,0x7fffe05afeb4,362742702,0,0x0,8
tick,0x7fffe05afeb4,362758705,0,0x0,8
tick,0x7fffe05afeb4,362774762,0,0x0,8
tick,0x7fffe05afeb4,362790720,0,0x0,8
tick,0x7fffe05afeb4,362806663,0,0x0,8
tick,0x7fffe05afeb4,362822713,0,0x0,8
tick,0x7fffe05afeb4,362838671,0,0x0,8
tick,0x7fffe05afeb4,362854802,0,0x0,8
tick,0x7fffe05afeb4,362870675,0,0x0,8
tick,0x7fffe05afeb4,362886799,0,0x0,8
tick,0x7fffe05afeb4,362902629,0,0x0,8
tick,0x7fffe05afeb4,362918860,0,0x0,8
tick,0x7fffe05afeb4,362934778,0,0x0,8
tick,0x7fffe05afeb4,362950783,0,0x0,8
tick,0x7fffe05afeb4,362965643,0,0x0,8
tick,0x7fffe05afeb4,362981962,0,0x0,8
tick,0x7fffe05afeb4,362997672,0,0x0,8
tick,0x7fffe05afeb4,363013757,0,0x0,8
tick,0x7fffe05afeb4,363029636,0,0x0,8
tick,0x7fffe05afeb4,363045797,0,0x0,8
tick,0x7fffe05afeb4,363061732,0,0x0,8
tick,0x7fffe05afeb4,363077770,0,0x0,8
tick,0x7fffe05afeb4,363093855,0,0x0,8
tick,0x7fffe05afeb4,363109802,0,0x0,8
tick,0x7fffe05afeb4,363125673,0,0x0,8
tick,0x7fffe05afeb4,363141712,0,0x0,8
tick,0x7fffe05afeb4,363156628,0,0x0,8
tick,0x7fffe05afeb4,363172806,0,0x0,8
tick,0x7fffe05afeb4,363187651,0,0x0,8
tick,0x7fffe05afeb4,363203766,0,0x0,8
tick,0x7fffe05afeb4,363219651,0,0x0,8
tick,0x7fffe05afeb4,363234940,0,0x0,8
tick,0x7fffe05afeb4,363249777,0,0x0,8
tick,0x7fffe05afeb4,363265812,0,0x0,8
tick,0x7fffe05afeb4,363281664,0,0x0,8
tick,0x7fffe05afeb4,363297813,0,0x0,8
tick,0x7fffe05afeb4,363312835,0,0x0,8
tick,0x7fffe05afeb4,363327763,0,0x0,8
tick,0x7fffe05afeb4,363343636,0,0x0,8
tick,0x7fffe05afeb4,363358779,0,0x0,8
tick,0x7fffe05afeb4,363374963,0,0x0,8
tick,0x7fffe05afeb4,363390794,0,0x0,8
tick,0x7fffe05afeb4,363406630,0,0x0,8
tick,0x7fffe05afeb4,363422762,0,0x0,8
tick,0x7fffe05afeb4,363439032,0,0x0,8
tick,0x7fffe05afeb4,363454807,0,0x0,8
tick,0x7fffe05afeb4,363470653,0,0x0,8
tick,0x7fffe05afeb4,363486721,0,0x0,8
tick,0x7fffe05afeb4,363502674,0,0x0,8
tick,0x7fffe05afeb4,363518741,0,0x0,8
tick,0x7fffe05afeb4,363534768,0,0x0,8
tick,0x7fffe05afeb4,363550742,0,0x0,8
tick,0x7fffe05afeb4,363565615,0,0x0,8
tick,0x7fffe05afeb4,363581699,0,0x0,8
tick,0x7fffe05afeb4,363597677,0,0x0,8
tick,0x7fffe05afeb4,363613775,0,0x0,8
tick,0x7fffe05afeb4,363629701,0,0x0,8
tick,0x7fffe05afeb4,363645933,0,0x0,8
tick,0x7fffe05afeb4,363661615,0,0x0,8
tick,0x7fffe05afeb4,363676718,0,0x0,8
tick,0x7fffe05afeb4,363692623,0,0x0,8
tick,0x7fffe05afeb4,363708730,0,0x0,8
tick,0x7fffe05afeb4,363724636,0,0x0,8
tick,0x7fffe05afeb4,363740724,0,0x0,8
tick,0x7fffe05afeb4,363756681,0,0x0,8
tick,0x7fffe05afeb4,363772702,0,0x0,8
tick,0x7fffe05afeb4,363788733,0,0x0,8
tick,0x7fffe05afeb4,363804703,0,0x0,8
tick,0x7fffe05afeb4,363820619,0,0x0,8
tick,0x7fffe05afeb4,363836684,0,0x0,8
tick,0x7fffe05afeb4,363852645,0,0x0,8
tick,0x7fffe05afeb4,363868872,0,0x0,8
tick,0x7fffe05afeb4,363884648,0,0x0,8
tick,0x7fffe05afeb4,363900696,0,0x0,8
tick,0x7fffe05afeb4,363916618,0,0x0,8
tick,0x7fffe05afeb4,363932781,0,0x0,8
tick,0x7fffe05afeb4,363948719,0,0x0,8
tick,0x7fffe05afeb4,363963762,0,0x0,8
tick,0x7fffe05afeb4,363979703,0,0x0,8
tick,0x7fffe05afeb4,363995740,0,0x0,8
tick,0x7fffe05afeb4,364010621,0,0x0,8
tick,0x7fffe05afeb4,364025676,0,0x0,8
tick,0x7fffe05afeb4,364041754,0,0x0,8
tick,0x7fffe05afeb4,364057859,0,0x0,8
tick,0x7fffe05afeb4,364073699,0,0x0,8
tick,0x7fffe05afeb4,364089775,0,0x0,8
tick,0x7fffe05afeb4,364105773,0,0x0,8
tick,0x7fffe05afeb4,364121751,0,0x0,8
tick,0x7fffe05afeb4,364137642,0,0x0,8
tick,0x7fffe05afeb4,364153740,0,0x0,8
tick,0x7fffe05afeb4,364169890,0,0x0,8
tick,0x7fffe05afeb4,364185835,0,0x0,8
tick,0x7fffe05afeb4,364201628,0,0x0,8
tick,0x7fffe05afeb4,364218564,0,0x0,8
tick,0x7fffe05afeb4,364234524,0,0x0,8
tick,0x7fffe05afeb4,364248993,0,0x0,8
tick,0x7fffe05afeb4,364264923,0,0x0,8
tick,0x7fffe05afeb4,364279979,0,0x0,8
tick,0x7fffe05afeb4,364294642,0,0x0,8
tick,0x7fffe05afeb4,364310711,0,0x0,8
tick,0x7fffe05afeb4,364326722,0,0x0,8
tick,0x7fffe05afeb4,364342734,0,0x0,8
tick,0x7fffe05afeb4,364358745,0,0x0,8
tick,0x7fffe05afeb4,364374811,0,0x0,8
tick,0x7fffe05afeb4,364390034,0,0x0,8
tick,0x7fffe05afeb4,364405733,0,0x0,8
tick,0x7fffe05afeb4,364421708,0,0x0,8
tick,0x7fffe05afeb4,364437759,0,0x0,8
tick,0x7fffe05afeb4,364453021,0,0x0,8
tick,0x7fffe05afeb4,364468923,0,0x0,8
tick,0x7fffe05afeb4,364484620,0,0x0,8
tick,0x7fffe05afeb4,364499920,0,0x0,8
tick,0x7fffe05afeb4,364514824,0,0x0,8
tick,0x7fffe05afeb4,364530679,0,0x0,8
tick,0x7fffe05afeb4,364546774,0,0x0,8
tick,0x7fffe05afeb4,364563022,0,0x0,8
tick,0x7fffe05afeb4,364578732,0,0x0,8
tick,0x7fffe05afeb4,364594696,0,0x0,8
tick,0x7fffe05afeb4,364610626,0,0x0,8
tick,0x7fffe05afeb4,364626815,0,0x0,8
tick,0x7fffe05afeb4,364642632,0,0x0,8
tick,0x7fffe05afeb4,364658667,0,0x0,8
tick,0x7fffe05afeb4,364674790,0,0x0,8
tick,0x7fffe05afeb4,364690740,0,0x0,8
tick,0x7fffe05afeb4,364706617,0,0x0,8
tick,0x7fffe05afeb4,364721708,0,0x0,8
tick,0x7fffe05afeb4,364737697,0,0x0,8
tick,0x7fffe05afeb4,364752718,0,0x0,8
tick,0x7fffe05afeb4,364768753,0,0x0,8
tick,0x7fffe05afeb4,364784624,0,0x0,8
tick,0x7fffe05afeb4,364800621,0,0x0,8
tick,0x7fffe05afeb4,364816693,0,0x0,8
tick,0x7fffe05afeb4,364832669,0,0x0,8
tick,0x7fffe05afeb4,364848712,0,0x0,8
tick,0x7fffe05afeb4,364864618,0,0x0,8
tick,0x7fffe05afeb4,364879783,0,0x0,8
tick,0x7fffe05afeb4,364895852,0,0x0,8
tick,0x7fffe05afeb4,364911737,0,0x0,8
tick,0x7fffe05afeb4,364927640,0,0x0,8
tick,0x7fffe05afeb4,364943710,0,0x0,8
tick,0x7fffe05afeb4,364959839,0,0x0,8
tick,0x7fffe05afeb4,364975697,0,0x0,8
tick,0x7fffe05afeb4,364991739,0,0x0,8
tick,0x7fffe05afeb4,365007704,0,0x0,8
tick,0x7fffe05afeb4,365023730,0,0x0,8
tick,0x7fffe05afeb4,365040587,0,0x0,8
tick,0x7fffe05afeb4,365054623,0,0x0,8
tick,0x7fffe05afeb4,365070060,0,0x0,8
tick,0x7fffe05afeb4,365084762,0,0x0,8
tick,0x7fffe05afeb4,365100727,0,0x0,8
tick,0x7fffe05afeb4,365116696,0,0x0,8
tick,0x7fffe05afeb4,365132789,0,0x0,8
tick,0x7fffe05afeb4,365147675,0,0x0,8
tick,0x7fffe05afeb4,365163629,0,0x0,8
tick,0x7fffe05afeb4,365178806,0,0x0,8
tick,0x7fffe05afeb4,365194882,0,0x0,8
tick,0x7fffe05afeb4,365210702,0,0x0,8
tick,0x7fffe05afeb4,365226780,0,0x0,8
tick,0x7fffe05afeb4,365242755,0,0x0,8
tick,0x7fffe05afeb4,365259796,0,0x0,8
tick,0x7fffe05afeb4,365274742,0,0x0,8
tick,0x7fffe05afeb4,365291594,0,0x0,8
tick,0x7fffe05afeb4,365306753,0,0x0,8
tick,0x7fffe05afeb4,365323022,0,0x0,8
tick,0x7fffe05afeb4,365338793,0,0x0,8
tick,0x7fffe05afeb4,365355348,0,0x0,8
tick,0x7fffe05afeb4,365370811,0,0x0,8
tick,0x7fffe05afeb4,365410601,0,0x0,8
tick,0x7fffe05afeb4,365430625,0,0x0,8
tick,0x7fffe05afeb4,365434723,0,0x0,8
tick,0x7fffe05afeb4,365451202,0,0x0,8
tick,0x7fffe05afeb4,365465064,0,0x0,8
tick,0x7fffe05afeb4,365480729,0,0x0,8
tick,0x7fffe05afeb4,365496632,0,0x0,8
tick,0x7fffe05afeb4,365512959,0,0x0,8
tick,0x7fffe05afeb4,365528706,0,0x0,8
tick,0x7fffe05afeb4,365544712,0,0x0,8
tick,0x7fffe05afeb4,365561026,0,0x0,8
tick,0x7fffe05afeb4,365577296,0,0x0,8
tick,0x7fffe05afeb4,365591787,0,0x0,8
tick,0x7fffe05afeb4,365606671,0,0x0,8
tick,0x7fffe05afeb4,365623621,0,0x0,8
tick,0x7fffe05afeb4,365638694,0,0x0,8
tick,0x7fffe05afeb4,365653795,0,0x0,8
tick,0x7fffe05afeb4,365669759,0,0x0,8
tick,0x7fffe05afeb4,365685634,0,0x0,8
tick,0x7fffe05afeb4,365701982,0,0x0,8
tick,0x7fffe05afeb4,365717733,0,0x0,8
tick,0x7fffe05afeb4,365732731,0,0x0,8
tick,0x7fffe05afeb4,365748679,0,0x0,8
tick,0x7fffe05afeb4,365763759,0,0x0,8
tick,0x7fffe05afeb4,365779863,0,0x0,8
tick,0x7fffe05afeb4,365795616,0,0x0,8
tick,0x7fffe05afeb4,365811620,0,0x0,8
tick,0x7fffe05afeb4,365827590,0,0x0,8
tick,0x7fffe05afeb4,365841974,0,0x0,8
tick,0x7fffe05afeb4,365858409,0,0x0,8
tick,0x7fffe05afeb4,365873676,0,0x0,8
tick,0x7fffe05afeb4,365889793,0,0x0,8
tick,0x7fffe05afeb4,365905735,0,0x0,8
tick,0x7fffe05afeb4,365921851,0,0x0,8
tick,0x7fffe05afeb4,365937682,0,0x0,8
tick,0x7fffe05afeb4,365953932,0,0x0,8
tick,0x7fffe05afeb4,365969917,0,0x0,8
tick,0x7fffe05afeb4,365985771,0,0x0,8
tick,0x7fffe05afeb4,366001629,0,0x0,8
tick,0x7fffe05afeb4,366017679,0,0x0,8
tick,0x7fffe05afeb4,366033716,0,0x0,8
tick,0x7fffe05afeb4,366049800,0,0x0,8
tick,0x7fffe05afeb4,366065773,0,0x0,8
tick,0x7fffe05afeb4,366081707,0,0x0,8
tick,0x7fffe05afeb4,366097981,0,0x0,8
tick,0x7fffe05afeb4,366113745,0,0x0,8
tick,0x7fffe05afeb4,366129753,0,0x0,8
tick,0x7fffe05afeb4,366145804,0,0x0,8
tick,0x7fffe05afeb4,366161656,0,0x0,8
tick,0x7fffe05afeb4,366177782,0,0x0,8
tick,0x7fffe05afeb4,366193754,0,0x0,8
tick,0x7fffe05afeb4,366209821,0,0x0,8
tick,0x7fffe05afeb4,366225717,0,0x0,8
tick,0x7fffe05afeb4,366241673,0,0x0,8
tick,0x7fffe05afeb4,366257636,0,0x0,8
tick,0x7fffe05afeb4,366273662,0,0x0,8
tick,0x7fffe05afeb4,366291839,0,0x0,8
tick,0x7fffe05afeb4,366304662,0,0x0,8
tick,0x7fffe05afeb4,366320673,0,0x0,8
tick,0x7fffe05afeb4,366336615,0,0x0,8
tick,0x7fffe05afeb4,366353343,0,0x0,8
tick,0x7fffe05afeb4,366368773,0,0x0,8
tick,0x7fffe05afeb4,366384774,0,0x0,8
tick,0x7fffe05afeb4,366400702,0,0x0,8
tick,0x7fffe05afeb4,366416917,0,0x0,8
tick,0x7fffe05afeb4,366432625,0,0x0,8
tick,0x7fffe05afeb4,366448618,0,0x0,8
tick,0x7fffe05afeb4,366464693,0,0x0,8
tick,0x7fffe05afeb4,366480454,0,0x0,8
tick,0x7fffe05afeb4,366495646,0,0x0,8
tick,0x7fffe05afeb4,366512176,0,0x0,8
tick,0x7fffe05afeb4,366527677,0,0x0,8
tick,0x7fffe05afeb4,366542632,0,0x0,8
tick,0x7fffe05afeb4,366558627,0,0x0,8
tick,0x7fffe05afeb4,366574630,0,0x0,8
tick,0x7fffe05afeb4,366590681,0,0x0,8
tick,0x7fffe05afeb4,366606866,0,0x0,8
tick,0x7fffe05afeb4,366622700,0,0x0,8
tick,0x7fffe05afeb4,366638821,0,0x0,8
tick,0x7fffe05afeb4,366654633,0,0x0,8
tick,0x7fffe05afeb4,366670614,0,0x0,8
tick,0x7fffe05afeb4,366686637,0,0x0,8
tick,0x7fffe05afeb4,366701635,0,0x0,8
tick,0x7fffe05afeb4,366717683,0,0x0,8
tick,0x7fffe05afeb4,366732623,0,0x0,8
tick,0x7fffe05afeb4,366748620,0,0x0,8
tick,0x7fffe05afeb4,366764666,0,0x0,8
tick,0x7fffe05afeb4,366780616,0,0x0,8
tick,0x7fffe05afeb4,366795628,0,0x0,8
tick,0x7fffe05afeb4,366811625,0,0x0,8
tick,0x7fffe05afeb4,366827620,0,0x0,8
tick,0x7fffe05afeb4,366843676,0,0x0,8
tick,0x7fffe05afeb4,366859633,0,0x0,8
tick,0x7fffe05afeb4,366875620,0,0x0,8
tick,0x7fffe05afeb4,366891672,0,0x0,8
tick,0x7fffe05afeb4,366907691,0,0x0,8
tick,0x7fffe05afeb4,366923637,0,0x0,8
tick,0x7fffe05afeb4,366939690,0,0x0,8
tick,0x7fffe05afeb4,366955653,0,0x0,8
tick,0x7fffe05afeb4,366971687,0,0x0,8
tick,0x7fffe05afeb4,366987696,0,0x0,8
tick,0x7fffe05afeb4,367003653,0,0x0,8
tick,0x7fffe05afeb4,367019692,0,0x0,8
tick,0x7fffe05afeb4,367035661,0,0x0,8
tick,0x7fffe05afeb4,367051657,0,0x0,8
tick,0x7fffe05afeb4,367067677,0,0x0,8
tick,0x7fffe05afeb4,367083674,0,0x0,8
tick,0x7fffe05afeb4,367098627,0,0x0,8
tick,0x7fffe05afeb4,367113702,0,0x0,8
tick,0x7fffe05afeb4,367129680,0,0x0,8
tick,0x7fffe05afeb4,367145669,0,0x0,8
tick,0x7fffe05afeb4,367161664,0,0x0,8
tick,0x7fffe05afeb4,367177679,0,0x0,8
tick,0x7fffe05afeb4,367192622,0,0x0,8
tick,0x7fffe05afeb4,367208648,0,0x0,8
tick,0x7fffe05afeb4,367224621,0,0x0,8
tick,0x7fffe05afeb4,367240626,0,0x0,8
tick,0x7fffe05afeb4,367256606,0,0x0,8
tick,0x7fffe05afeb4,367272630,0,0x0,8
tick,0x7fffe05afeb4,367288643,0,0x0,8
tick,0x7fffe05afeb4,367304641,0,0x0,8
tick,0x7fffe05afeb4,367319639,0,0x0,8
tick,0x7fffe05afeb4,367335634,0,0x0,8
tick,0x7fffe05afeb4,367351661,0,0x0,8
tick,0x7fffe05afeb4,367367637,0,0x0,8
tick,0x7fffe05afeb4,367383766,0,0x0,8
tick,0x7fffe05afeb4,367399746,0,0x0,8
tick,0x7fffe05afeb4,367415632,0,0x0,8
tick,0x7fffe05afeb4,367431621,0,0x0,8
tick,0x7fffe05afeb4,367447635,0,0x0,8
tick,0x7fffe05afeb4,367462673,0,0x0,8
tick,0x7fffe05afeb4,367478656,0,0x0,8
tick,0x7fffe05afeb4,367494664,0,0x0,8
tick,0x7fffe05afeb4,367510684,0,0x0,8
tick,0x7fffe05afeb4,367526627,0,0x0,8
tick,0x7fffe05afeb4,367542643,0,0x0,8
tick,0x7fffe05afeb4,367558633,0,0x0,8
tick,0x7fffe05afeb4,367574627,0,0x0,8
tick,0x7fffe05afeb4,367590668,0,0x0,8
tick,0x7fffe05afeb4,367606733,0,0x0,8
tick,0x7fffe05afeb4,367622780,0,0x0,8
tick,0x7fffe05afeb4,367638704,0,0x0,8
tick,0x7fffe05afeb4,367653661,0,0x0,8
tick,0x7fffe05afeb4,367669670,0,0x0,8
tick,0x7fffe05afeb4,367685698,0,0x0,8
tick,0x7fffe05afeb4,367701646,0,0x0,8
tick,0x7fffe05afeb4,367716605,0,0x0,8
tick,0x7fffe05afeb4,367732628,0,0x0,8
tick,0x7fffe05afeb4,367748632,0,0x0,8
tick,0x7fffe05afeb4,367764622,0,0x0,8
tick,0x7fffe05afeb4,367779652,0,0x0,8
tick,0x7fffe05afeb4,367795709,0,0x0,8
tick,0x7fffe05afeb4,367811635,0,0x0,8
tick,0x7fffe05afeb4,367826651,0,0x0,8
tick,0x7fffe05afeb4,367842669,0,0x0,8
tick,0x7fffe05afeb4,367858635,0,0x0,8
tick,0x7fffe05afeb4,367873613,0,0x0,8
tick,0x7fffe05afeb4,367889665,0,0x0,8
tick,0x7fffe05afeb4,367905678,0,0x0,8
tick,0x7fffe05afeb4,367921671,0,0x0,8
tick,0x7fffe05afeb4,367937680,0,0x0,8
tick,0x7fffe05afeb4,367953723,0,0x0,8
tick,0x7fffe05afeb4,367969650,0,0x0,8
tick,0x7fffe05afeb4,367984653,0,0x0,8
tick,0x7fffe05afeb4,367999732,0,0x0,8
tick,0x7fffe05afeb4,368015664,0,0x0,8
tick,0x7fffe05afeb4,368031668,0,0x0,8
tick,0x7fffe05afeb4,368047696,0,0x0,8
tick,0x7fffe05afeb4,368063732,0,0x0,8
tick,0x7fffe05afeb4,368079638,0,0x0,8
tick,0x7fffe05afeb4,368095702,0,0x0,8
tick,0x7fffe05afeb4,368111664,0,0x0,8
tick,0x7fffe05afeb4,368127677,0,0x0,8
tick,0x7fffe05afeb4,368143671,0,0x0,8
tick,0x7fffe05afeb4,368159700,0,0x0,8
tick,0x7fffe05afeb4,368175619,0,0x0,8
tick,0x7fffe05afeb4,368191628,0,0x0,8
tick,0x7fffe05afeb4,368206631,0,0x0,8
tick,0x7fffe05afeb4,368222644,0,0x0,8
tick,0x7fffe05afeb4,368237627,0,0x0,8
tick,0x7fffe05afeb4,368253667,0,0x0,8
tick,0x7fffe05afeb4,368269684,0,0x0,8
tick,0x7fffe05afeb4,368285626,0,0x0,8
tick,0x7fffe05afeb4,368301650,0,0x0,8
tick,0x7fffe05afeb4,368317629,0,0x0,8
tick,0x7fffe05afeb4,368333692,0,0x0,8
tick,0x7fffe05afeb4,368349658,0,0x0,8
tick,0x7fffe05afeb4,368365656,0,0x0,8
tick,0x7fffe05afeb4,368381676,0,0x0,8
tick,0x7fffe05afeb4,368397687,0,0x0,8
tick,0x7fffe05afeb4,368413631,0,0x0,8
tick,0x7fffe05afeb4,368429714,0,0x0,8
tick,0x7fffe05afeb4,368445696,0,0x0,8
tick,0x7fffe05afeb4,368461631,0,0x0,8
tick,0x7fffe05afeb4,368476611,0,0x0,8
tick,0x7fffe05afeb4,368492624,0,0x0,8
tick,0x7fffe05afeb4,368508975,0,0x0,8
tick,0x7fffe05afeb4,368524621,0,0x0,8
tick,0x7fffe05afeb4,368540628,0,0x0,8
tick,0x7fffe05afeb4,368556627,0,0x0,8
tick,0x7fffe05afeb4,368572621,0,0x0,8
tick,0x7fffe05afeb4,368588627,0,0x0,8
tick,0x7fffe05afeb4,368604616,0,0x0,8
tick,0x7fffe05afeb4,368620679,0,0x0,8
tick,0x7fffe05afeb4,368635666,0,0x0,8
tick,0x7fffe05afeb4,368651665,0,0x0,8
tick,0x7fffe05afeb4,368667631,0,0x0,8
tick,0x7fffe05afeb4,368683614,0,0x0,8
tick,0x7fffe05afeb4,368699664,0,0x0,8
tick,0x7fffe05afeb4,368715620,0,0x0,8
tick,0x7fffe05afeb4,368731687,0,0x0,8
tick,0x7fffe05afeb4,368747666,0,0x0,8
tick,0x7fffe05afeb4,368763670,0,0x0,8
tick,0x7fffe05afeb4,368779614,0,0x0,8
tick,0x7fffe05afeb4,368795663,0,0x0,8
tick,0x7fffe05afeb4,368811609,0,0x0,8
tick,0x7fffe05afeb4,368827622,0,0x0,8
tick,0x7fffe05afeb4,368843629,0,0x0,8
tick,0x7fffe05afeb4,368859708,0,0x0,8
tick,0x7fffe05afeb4,368875667,0,0x0,8
tick,0x7fffe05afeb4,368891664,0,0x0,8
tick,0x7fffe05afeb4,368907655,0,0x0,8
tick,0x7fffe05afeb4,368923635,0,0x0,8
tick,0x7fffe05afeb4,368939681,0,0x0,8
tick,0x7fffe05afeb4,368955644,0,0x0,8
tick,0x7fffe05afeb4,368971644,0,0x0,8
tick,0x7fffe05afeb4,368986703,0,0x0,8
tick,0x7fffe05afeb4,369002683,0,0x0,8
tick,0x7fffe05afeb4,369018658,0,0x0,8
tick,0x7fffe05afeb4,369034672,0,0x0,8
tick,0x7fffe05afeb4,369050640,0,0x0,8
tick,0x7fffe05afeb4,369065684,0,0x0,8
tick,0x7fffe05afeb4,369081683,0,0x0,8
tick,0x7fffe05afeb4,369096729,0,0x0,8
tick,0x7fffe05afeb4,369112643,0,0x0,8
tick,0x7fffe05afeb4,369127620,0,0x0,8
tick,0x7fffe05afeb4,369142658,0,0x0,8
tick,0x7fffe05afeb4,369158701,0,0x0,8
tick,0x7fffe05afeb4,369174683,0,0x0,8
tick,0x7fffe05afeb4,369189650,0,0x0,8
tick,0x7fffe05afeb4,369205638,0,0x0,8
tick,0x7fffe05afeb4,369221634,0,0x0,8
tick,0x7fffe05afeb4,369236765,0,0x0,8
tick,0x7fffe05afeb4,369252632,0,0x0,8
tick,0x7fffe05afeb4,369267646,0,0x0,8
tick,0x7fffe05afeb4,369283679,0,0x0,8
tick,0x7fffe05afeb4,369299672,0,0x0,8
tick,0x7fffe05afeb4,369315680,0,0x0,8
tick,0x7fffe05afeb4,369331638,0,0x0,8
tick,0x7fffe05afeb4,369347618,0,0x0,8
tick,0x7fffe05afeb4,369362647,0,0x0,8
tick,0x7fffe05afeb4,369377635,0,0x0,8
tick,0x7fffe05afeb4,369393644,0,0x0,8
tick,0x7fffe05afeb4,369409698,0,0x0,8
tick,0x7fffe05afeb4,369425634,0,0x0,8
tick,0x7fffe05afeb4,369441662,0,0x0,8
tick,0x7fffe05afeb4,369457669,0,0x0,8
tick,0x7fffe05afeb4,369473674,0,0x0,8
tick,0x7fffe05afeb4,369489735,0,0x0,8
tick,0x7fffe05afeb4,369505677,0,0x0,8
tick,0x7fffe05afeb4,369521676,0,0x0,8
tick,0x7fffe05afeb4,369537613,0,0x0,8
tick,0x7fffe05afeb4,369553633,0,0x0,8
tick,0x7fffe05afeb4,369569642,0,0x0,8
tick,0x7fffe05afeb4,369585636,0,0x0,8
tick,0x7fffe05afeb4,369601676,0,0x0,8
tick,0x7fffe05afeb4,369617707,0,0x0,8
tick,0x7fffe05afeb4,369633688,0,0x0,8
tick,0x7fffe05afeb4,369649712,0,0x0,8
tick,0x7fffe05afeb4,369665660,0,0x0,8
tick,0x7fffe05afeb4,369681671,0,0x0,8
tick,0x7fffe05afeb4,369697619,0,0x0,8
tick,0x7fffe05afeb4,369713627,0,0x0,8
tick,0x7fffe05afeb4,369729685,0,0x0,8
tick,0x7fffe05afeb4,369745641,0,0x0,8
tick,0x7fffe05afeb4,369761645,0,0x0,8
tick,0x7fffe05afeb4,369776624,0,0x0,8
tick,0x7fffe05afeb4,369792610,0,0x0,8
tick,0x7fffe05afeb4,369808630,0,0x0,8
tick,0x7fffe05afeb4,369824617,0,0x0,8
tick,0x7fffe05afeb4,369840685,0,0x0,8
tick,0x7fffe05afeb4,369856648,0,0x0,8
tick,0x7fffe05afeb4,369872753,0,0x0,8
tick,0x7fffe05afeb4,369887650,0,0x0,8
tick,0x7fffe05afeb4,369903830,0,0x0,8
tick,0x7fffe05afeb4,369919691,0,0x0,8
tick,0x7fffe05afeb4,369935684,0,0x0,8
tick,0x7fffe05afeb4,369951640,0,0x0,8
tick,0x7fffe05afeb4,369967701,0,0x0,8
tick,0x7fffe05afeb4,369983795,0,0x0,8
tick,0x7fffe05afeb4,369999744,0,0x0,8
tick,0x7fffe05afeb4,370015868,0,0x0,8
tick,0x7fffe05afeb4,370031623,0,0x0,8
tick,0x7fffe05afeb4,370047642,0,0x0,8
tick,0x7fffe05afeb4,370063664,0,0x0,8
tick,0x7fffe05afeb4,370079719,0,0x0,8
tick,0x7fffe05afeb4,370095672,0,0x0,8
tick,0x7fffe05afeb4,370111785,0,0x0,8
tick,0x7fffe05afeb4,370127656,0,0x0,8
tick,0x7fffe05afeb4,370142637,0,0x0,8
tick,0x7fffe05afeb4,370157694,0,0x0,8
tick,0x7fffe05afeb4,370172628,0,0x0,8
tick,0x7fffe05afeb4,370188646,0,0x0,8
tick,0x7fffe05afeb4,370204655,0,0x0,8
tick,0x7fffe05afeb4,370220643,0,0x0,8
tick,0x7fffe05afeb4,370235664,0,0x0,8
tick,0x7fffe05afeb4,370251610,0,0x0,8
tick,0x7fffe05afeb4,370267653,0,0x0,8
tick,0x7fffe05afeb4,370282677,0,0x0,8
tick,0x7fffe05afeb4,370298710,0,0x0,8
tick,0x7fffe05afeb4,370314659,0,0x0,8
tick,0x7fffe05afeb4,370330642,0,0x0,8
tick,0x7fffe05afeb4,370345626,0,0x0,8
tick,0x7fffe05afeb4,370361667,0,0x0,8
tick,0x7fffe05afeb4,370377629,0,0x0,8
tick,0x7fffe05afeb4,370393967,0,0x0,8
tick,0x7fffe05afeb4,370409672,0,0x0,8
tick,0x7fffe05afeb4,370425700,0,0x0,8
tick,0x7fffe05afeb4,370441630,0,0x0,8
tick,0x7fffe05afeb4,370457649,0,0x0,8
tick,0x7fffe05afeb4,370473668,0,0x0,8
tick,0x7fffe05afeb4,370489742,0,0x0,8
tick,0x7fffe05afeb4,370505616,0,0x0,8
tick,0x7fffe05afeb4,370521641,0,0x0,8
tick,0x7fffe05afeb4,370536613,0,0x0,8
tick,0x7fffe05afeb4,370552660,0,0x0,8
tick,0x7fffe05afeb4,370567660,0,0x0,8
tick,0x7fffe05afeb4,370583608,0,0x0,8
tick,0x7fffe05afeb4,370598630,0,0x0,8
tick,0x7fffe05afeb4,370614640,0,0x0,8
tick,0x7fffe05afeb4,370630629,0,0x0,8
tick,0x7fffe05afeb4,370646640,0,0x0,8
tick,0x7fffe05afeb4,370662647,0,0x0,8
tick,0x7fffe05afeb4,370678635,0,0x0,8
tick,0x7fffe05afeb4,370693714,0,0x0,8
tick,0x7fffe05afeb4,370709676,0,0x0,8
tick,0x7fffe05afeb4,370725633,0,0x0,8
tick,0x7fffe05afeb4,370741645,0,0x0,8
tick,0x7fffe05afeb4,370757615,0,0x0,8
tick,0x7fffe05afeb4,370773654,0,0x0,8
tick,0x7fffe05afeb4,370790708,0,0x0,8
tick,0x7fffe05afeb4,370805856,0,0x0,8
tick,0x7fffe05afeb4,370821734,0,0x0,8
tick,0x7fffe05afeb4,370837682,0,0x0,8
tick,0x7fffe05afeb4,370853770,0,0x0,8
tick,0x7fffe05afeb4,370868651,0,0x0,8
tick,0x7fffe05afeb4,370885320,0,0x0,8
tick,0x7fffe05afeb4,370900619,0,0x0,8
tick,0x7fffe05afeb4,370916626,0,0x0,8
tick,0x7fffe05afeb4,370932632,0,0x0,8
tick,0x7fffe05afeb4,370948746,0,0x0,8
tick,0x7fffe05afeb4,370964655,0,0x0,8
tick,0x7fffe05afeb4,370979637,0,0x0,8
tick,0x7fffe05afeb4,370995624,0,0x0,8
tick,0x7fffe05afeb4,371010638,0,0x0,8
tick,0x7fffe05afeb4,371026664,0,0x0,8
tick,0x7fffe05afeb4,371042726,0,0x0,8
tick,0x7fffe05afeb4,371058671,0,0x0,8
tick,0x7fffe05afeb4,371074668,0,0x0,8
tick,0x7fffe05afeb4,371090885,0,0x0,8
tick,0x7fffe05afeb4,371106657,0,0x0,8
tick,0x7fffe05afeb4,371122662,0,0x0,8
tick,0x7fffe05afeb4,371138770,0,0x0,8
tick,0x7fffe05afeb4,371154728,0,0x0,8
tick,0x7fffe05afeb4,371170969,0,0x0,8
tick,0x7fffe05afeb4,371185691,0,0x0,8
tick,0x7fffe05afeb4,371201644,0,0x0,8
tick,0x7fffe05afeb4,371217611,0,0x0,8
tick,0x7fffe05afeb4,371233989,0,0x0,8
tick,0x7fffe05afeb4,371249713,0,0x0,8
tick,0x7fffe05afeb4,371265799,0,0x0,8
tick,0x7fffe05afeb4,371281696,0,0x0,8
tick,0x7fffe05afeb4,371297757,0,0x0,8
tick,0x7fffe05afeb4,371313799,0,0x0,8
tick,0x7fffe05afeb4,371329339,0,0x0,8
tick,0x7fffe05afeb4,371345375,0,0x0,8
tick,0x7fffe05afeb4,371361361,0,0x0,8
tick,0x7fffe05afeb4,371377201,0,0x0,8
tick,0x7fffe05afeb4,371393191,0,0x0,8
tick,0x7fffe05afeb4,371409164,0,0x0,8
tick,0x7fffe05afeb4,371425170,0,0x0,8
tick,0x7fffe05afeb4,371440310,0,0x0,8
tick,0x7fffe05afeb4,371456185,0,0x0,8
tick,0x7fffe05afeb4,371472169,0,0x0,8
tick,0x7fffe05afeb4,371487671,0,0x0,8
tick,0x7fffe05afeb4,371503821,0,0x0,8
tick,0x7fffe05afeb4,371519783,0,0x0,8
tick,0x7fffe05afeb4,371535769,0,0x0,8
tick,0x7fffe05afeb4,371551987,0,0x0,8
tick,0x7fffe05afeb4,371567695,0,0x0,8
tick,0x7fffe05afeb4,371582945,0,0x0,8
tick,0x7fffe05afeb4,371598728,0,0x0,8
tick,0x7fffe05afeb4,371614741,0,0x0,8
tick,0x7fffe05afeb4,371630670,0,0x0,8
tick,0x7fffe05afeb4,371645666,0,0x0,8
tick,0x7fffe05afeb4,371661653,0,0x0,8
tick,0x7fffe05afeb4,371678530,0,0x0,8
tick,0x7fffe05afeb4,371693814,0,0x0,8
tick,0x7fffe05afeb4,371709694,0,0x0,8
tick,0x7fffe05afeb4,371724653,0,0x0,8
tick,0x7fffe05afeb4,371739857,0,0x0,8
tick,0x7fffe05afeb4,371755815,0,0x0,8
tick,0x7fffe05afeb4,371771687,0,0x0,8
tick,0x7fffe05afeb4,371787669,0,0x0,8
tick,0x7fffe05afeb4,371803772,0,0x0,8
tick,0x7fffe05afeb4,371819699,0,0x0,8
tick,0x7fffe05afeb4,371835661,0,0x0,8
tick,0x7fffe05afeb4,371850665,0,0x0,8
tick,0x7fffe05afeb4,371865872,0,0x0,8
tick,0x7fffe05afeb4,371881681,0,0x0,8
tick,0x7fffe05afeb4,371897664,0,0x0,8
tick,0x7fffe05afeb4,371913666,0,0x0,8
tick,0x7fffe05afeb4,371929978,0,0x0,8
tick,0x7fffe05afeb4,371946841,0,0x0,8
tick,0x7fffe05afeb4,371961739,0,0x0,8
tick,0x7fffe05afeb4,371978157,0,0x0,8
tick,0x7fffe05afeb4,371993742,0,0x0,8
tick,0x7fffe05afeb4,372009870,0,0x0,8
tick,0x7fffe05afeb4,372025851,0,0x0,8
tick,0x7fffe05afeb4,372041909,0,0x0,8
tick,0x7fffe05afeb4,372058028,0,0x0,8
tick,0x7fffe05afeb4,372073702,0,0x0,8
tick,0x7fffe05afeb4,372089825,0,0x0,8
tick,0x7fffe05afeb4,372105697,0,0x0,8
tick,0x7fffe05afeb4,372121772,0,0x0,8
tick,0x7fffe05afeb4,372137782,0,0x0,8
tick,0x7fffe05afeb4,372153783,0,0x0,8
tick,0x7fffe05afeb4,372169825,0,0x0,8
tick,0x7fffe05afeb4,372185892,0,0x0,8
tick,0x7fffe05afeb4,372201679,0,0x0,8
tick,0x7fffe05afeb4,372217658,0,0x0,8
tick,0x7fffe05afeb4,372233700,0,0x0,8
tick,0x7fffe05afeb4,372249806,0,0x0,8
tick,0x7fffe05afeb4,372265767,0,0x0,8
tick,0x7fffe05afeb4,372281763,0,0x0,8
tick,0x7fffe05afeb4,372297731,0,0x0,8
tick,0x7fffe05afeb4,372313785,0,0x0,8
tick,0x7fffe05afeb4,372329798,0,0x0,8
tick,0x7fffe05afeb4,372345845,0,0x0,8
tick,0x7fffe05afeb4,372361735,0,0x0,8
tick,0x7fffe05afeb4,372377919,0,0x0,8
tick,0x7fffe05afeb4,372393749,0,0x0,8
tick,0x7fffe05afeb4,372409796,0,0x0,8
tick,0x7fffe05afeb4,372425720,0,0x0,8
tick,0x7fffe05afeb4,372441739,0,0x0,8
tick,0x7fffe05afeb4,372457827,0,0x0,8
tick,0x7fffe05afeb4,372473716,0,0x0,8
tick,0x7fffe05afeb4,372489703,0,0x0,8
tick,0x7fffe05afeb4,372505910,0,0x0,8
tick,0x7fffe05afeb4,372521717,0,0x0,8
tick,0x7fffe05afeb4,372537778,0,0x0,8
tick,0x7fffe05afeb4,372553712,0,0x0,8
tick,0x7fffe05afeb4,372570001,0,0x0,8
tick,0x7fffe05afeb4,372585835,0,0x0,8
tick,0x7fffe05afeb4,372601680,0,0x0,8
tick,0x7fffe05afeb4,372617723,0,0x0,8
tick,0x7fffe05afeb4,372634214,0,0x0,8
tick,0x7fffe05afeb4,372649722,0,0x0,8
tick,0x7fffe05afeb4,372665859,0,0x0,8
tick,0x7fffe05afeb4,372681878,0,0x0,8
tick,0x7fffe05afeb4,372697814,0,0x0,8
tick,0x7fffe05afeb4,372713666,0,0x0,8
tick,0x7fffe05afeb4,372729752,0,0x0,8
tick,0x7fffe05afeb4,372745856,0,0x0,8
tick,0x7fffe05afeb4,372761862,0,0x0,8
tick,0x7fffe05afeb4,372777795,0,0x0,8
tick,0x7fffe05afeb4,372793888,0,0x0,8
tick,0x7fffe05afeb4,372809707,0,0x0,8
tick,0x7fffe05afeb4,372825896,0,0x0,8
tick,0x7fffe05afeb4,372841684,0,0x0,8
tick,0x7fffe05afeb4,372857713,0,0x0,8
tick,0x7fffe05afeb4,372873710,0,0x0,8
tick,0x7fffe05afeb4,372890312,0,0x0,8
tick,0x7fffe05afeb4,372905717,0,0x0,8
tick,0x7fffe05afeb4,372921661,0,0x0,8
tick,0x7fffe05afeb4,372937739,0,0x0,8
tick,0x7fffe05afeb4,372953755,0,0x0,8
tick,0x7fffe05afeb4,372969827,0,0x0,8
tick,0x7fffe05afeb4,372985911,0,0x0,8
tick,0x7fffe05afeb4,373001765,0,0x0,8
tick,0x7fffe05afeb4,373017751,0,0x0,8
tick,0x7fffe05afeb4,373033950,0,0x0,8
tick,0x7fffe05afeb4,373049704,0,0x0,8
tick,0x7fffe05afeb4,373065706,0,0x0,8
tick,0x7fffe05afeb4,373082059,0,0x0,8
tick,0x7fffe05afeb4,373096813,0,0x0,8
tick,0x7fffe05afeb4,373112735,0,0x0,8
tick,0x7fffe05afeb4,373128700,0,0x0,8
tick,0x7fffe05afeb4,373145098,0,0x0,8
tick,0x7fffe05afeb4,373159816,0,0x0,8
tick,0x7fffe05afeb4,373175681,0,0x0,8
tick,0x7fffe05afeb4,373191789,0,0x0,8
tick,0x7fffe05afeb4,373207843,0,0x0,8
tick,0x7fffe05afeb4,373223768,0,0x0,8
tick,0x7fffe05afeb4,373239738,0,0x0,8
tick,0x7fffe05afeb4,373255722,0,0x0,8
tick,0x7fffe05afeb4,373271768,0,0x0,8
tick,0x7fffe05afeb4,373287680,0,0x0,8
tick,0x7fffe05afeb4,373303664,0,0x0,8
tick,0x7fffe05afeb4,373319682,0,0x0,8
tick,0x7fffe05afeb4,373335813,0,0x0,8
tick,0x7fffe05afeb4,373351740,0,0x0,8
tick,0x7fffe05afeb4,373367791,0,0x0,8
tick,0x7fffe05afeb4,373384179,0,0x0,8
tick,0x7fffe05afeb4,373399886,0,0x0,8
tick,0x7fffe05afeb4,373415904,0,0x0,8
tick,0x7fffe05afeb4,373431664,0,0x0,8
tick,0x7fffe05afeb4,373446681,0,0x0,8
tick,0x7fffe05afeb4,373462813,0,0x0,8
tick,0x7fffe05afeb4,373478715,0,0x0,8
tick,0x7fffe05afeb4,373494769,0,0x0,8
tick,0x7fffe05afeb4,373510655,0,0x0,8
tick,0x7fffe05afeb4,373526754,0,0x0,8
tick,0x7fffe05afeb4,373542713,0,0x0,8
tick,0x7fffe05afeb4,373558841,0,0x0,8
tick,0x7fffe05afeb4,373574660,0,0x0,8
tick,0x7fffe05afeb4,373590990,0,0x0,8
tick,0x7fffe05afeb4,373606741,0,0x0,8
tick,0x7fffe05afeb4,373622728,0,0x0,8
tick,0x7fffe05afeb4,373638693,0,0x0,8
tick,0x7fffe05afeb4,373654770,0,0x0,8
tick,0x7fffe05afeb4,373670744,0,0x0,8
tick,0x7fffe05afeb4,373686757,0,0x0,8
tick,0x7fffe05afeb4,373702739,0,0x0,8
tick,0x7fffe05afeb4,373718803,0,0x0,8
tick,0x7fffe05afeb4,373734794,0,0x0,8
tick,0x7fffe05afeb4,373750710,0,0x0,8
tick,0x7fffe05afeb4,373766661,0,0x0,8
tick,0x7fffe05afeb4,373782865,0,0x0,8
tick,0x7fffe05afeb4,373798733,0,0x0,8
tick,0x7fffe05afeb4,373814737,0,0x0,8
tick,0x7fffe05afeb4,373830723,0,0x0,8
tick,0x7fffe05afeb4,373845835,0,0x0,8
tick,0x7fffe05afeb4,373861748,0,0x0,8
tick,0x7fffe05afeb4,373877822,0,0x0,8
tick,0x7fffe05afeb4,373893969,0,0x0,8
tick,0x7fffe05afeb4,373909963,0,0x0,8
tick,0x7fffe05afeb4,373925779,0,0x0,8
tick,0x7fffe05afeb4,373941862,0,0x0,8
tick,0x7fffe05afeb4,373956700,0,0x0,8
tick,0x7fffe05afeb4,373972746,0,0x0,8
tick,0x7fffe05afeb4,373987756,0,0x0,8
tick,0x7fffe05afeb4,374003798,0,0x0,8
tick,0x7fffe05afeb4,374019710,0,0x0,8
tick,0x7fffe05afeb4,374035890,0,0x0,8
tick,0x7fffe05afeb4,374051914,0,0x0,8
tick,0x7fffe05afeb4,374067889,0,0x0,8
tick,0x7fffe05afeb4,374083704,0,0x0,8
tick,0x7fffe05afeb4,374099893,0,0x0,8
tick,0x7fffe05afeb4,374115774,0,0x0,8
tick,0x7fffe05afeb4,374131745,0,0x0,8
tick,0x7fffe05afeb4,374147859,0,0x0,8
tick,0x7fffe05afeb4,374163758,0,0x0,8
tick,0x7fffe05afeb4,374179966,0,0x0,8
tick,0x7fffe05afeb4,374196109,0,0x0,8
tick,0x7fffe05afeb4,374211732,0,0x0,8
tick,0x7fffe05afeb4,374228148,0,0x0,8
tick,0x7fffe05afeb4,374242759,0,0x0,8
tick,0x7fffe05afeb4,374257750,0,0x0,8
tick,0x7fffe05afeb4,374273715,0,0x0,8
tick,0x7fffe05afeb4,374289842,0,0x0,8
tick,0x7fffe05afeb4,374306404,0,0x0,8
tick,0x7fffe05afeb4,374322473,0,0x0,8
tick,0x7fffe05afeb4,374337864,0,0x0,8
tick,0x7fffe05afeb4,374355071,0,0x0,8
tick,0x7fffe05afeb4,374368806,0,0x0,8
tick,0x7fffe05afeb4,374384810,0,0x0,8
tick,0x7fffe05afeb4,374399972,0,0x0,8
tick,0x7fffe05afeb4,374415970,0,0x0,8
tick,0x7fffe05afeb4,374431711,0,0x0,8
tick,0x7fffe05afeb4,374448167,0,0x0,8
tick,0x7fffe05afeb4,374463699,0,0x0,8
tick,0x7fffe05afeb4,374479880,0,0x0,8
tick,0x7fffe05afeb4,374494758,0,0x0,8
tick,0x7fffe05afeb4,374510794,0,0x0,8
tick,0x7fffe05afeb4,374526768,0,0x0,8
tick,0x7fffe05afeb4,374543316,0,0x0,8
tick,0x7fffe05afeb4,374558026,0,0x0,8
tick,0x7fffe05afeb4,374574026,0,0x0,8
tick,0x7fffe05afeb4,374589781,0,0x0,8
tick,0x7fffe05afeb4,374605863,0,0x0,8
tick,0x7fffe05afeb4,374620666,0,0x0,8
tick,0x7fffe05afeb4,374636719,0,0x0,8
tick,0x7fffe05afeb4,374652670,0,0x0,8
tick,0x7fffe05afeb4,374667853,0,0x0,8
tick,0x7fffe05afeb4,374683765,0,0x0,8
tick,0x7fffe05afeb4,374699768,0,0x0,8
tick,0x7fffe05afeb4,374716510,0,0x0,8
tick,0x7fffe05afeb4,374731844,0,0x0,8
tick,0x7fffe05afeb4,374747732,0,0x0,8
tick,0x7fffe05afeb4,374763764,0,0x0,8
tick,0x7fffe05afeb4,374779709,0,0x0,8
tick,0x7fffe05afeb4,374795834,0,0x0,8
tick,0x7fffe05afeb4,374811748,0,0x0,8
tick,0x7fffe05afeb4,374827813,0,0x0,8
tick,0x7fffe05afeb4,374843748,0,0x0,8
tick,0x7fffe05afeb4,374859811,0,0x0,8
tick,0x7fffe05afeb4,374875782,0,0x0,8
tick,0x7fffe05afeb4,374891769,0,0x0,8
tick,0x7fffe05afeb4,374907749,0,0x0,8
tick,0x7fffe05afeb4,374923768,0,0x0,8
tick,0x7fffe05afeb4,374939867,0,0x0,8
tick,0x7fffe05afeb4,374955706,0,0x0,8
tick,0x7fffe05afeb4,374971826,0,0x0,8
tick,0x7fffe05afeb4,374987997,0,0x0,8
tick,0x7fffe05afeb4,375003718,0,0x0,8
tick,0x7fffe05afeb4,375019959,0,0x0,8
tick,0x7fffe05afeb4,375035802,0,0x0,8
tick,0x7fffe05afeb4,375051858,0,0x0,8
tick,0x7fffe05afeb4,375067788,0,0x0,8
tick,0x7fffe05afeb4,375083818,0,0x0,8
tick,0x7fffe05afeb4,375099767,0,0x0,8
tick,0x7fffe05afeb4,375115879,0,0x0,8
tick,0x7fffe05afeb4,375131714,0,0x0,8
tick,0x7fffe05afeb4,375147866,0,0x0,8
tick,0x7fffe05afeb4,375163687,0,0x0,8
tick,0x7fffe05afeb4,375178811,0,0x0,8
tick,0x7fffe05afeb4,375194728,0,0x0,8
tick,0x7fffe05afeb4,375210826,0,0x0,8
tick,0x7fffe05afeb4,375226742,0,0x0,8
tick,0x7fffe05afeb4,375242846,0,0x0,8
tick,0x7fffe05afeb4,375258762,0,0x0,8
tick,0x7fffe05afeb4,375273805,0,0x0,8
tick,0x7fffe05afeb4,375290323,0,0x0,8
tick,0x7fffe05afeb4,375305797,0,0x0,8
tick,0x7fffe05afeb4,375322571,0,0x0,8
tick,0x7fffe05afeb4,375337851,0,0x0,8
tick,0x7fffe05afeb4,375354619,0,0x0,8
tick,0x7fffe05afeb4,375369926,0,0x0,8
tick,0x7fffe05afeb4,375386083,0,0x0,8
tick,0x7fffe05afeb4,375400683,0,0x0,8
tick,0x7fffe05afeb4,375416657,0,0x0,8
tick,0x7fffe05afeb4,375432835,0,0x0,8
tick,0x7fffe05afeb4,375447876,0,0x0,8
tick,0x7fffe05afeb4,375463693,0,0x0,8
tick,0x7fffe05afeb4,375479750,0,0x0,8
tick,0x7fffe05afeb4,375495901,0,0x0,8
tick,0x7fffe05afeb4,375511723,0,0x0,8
tick,0x7fffe05afeb4,375527676,0,0x0,8
tick,0x7fffe05afeb4,375543814,0,0x0,8
tick,0x7fffe05afeb4,375559811,0,0x0,8
tick,0x7fffe05afeb4,375575997,0,0x0,8
tick,0x7fffe05afeb4,375591953,0,0x0,8
tick,0x7fffe05afeb4,375606763,0,0x0,8
tick,0x7fffe05afeb4,375622974,0,0x0,8
tick,0x7fffe05afeb4,375638768,0,0x0,8
tick,0x7fffe05afeb4,375654779,0,0x0,8
tick,0x7fffe05afeb4,375670689,0,0x0,8
tick,0x7fffe05afeb4,375686828,0,0x0,8
tick,0x7fffe05afeb4,375702843,0,0x0,8
tick,0x7fffe05afeb4,375717745,0,0x0,8
tick,0x7fffe05afeb4,375733738,0,0x0,8
tick,0x7fffe05afeb4,375749894,0,0x0,8
tick,0x7fffe05afeb4,375765744,0,0x0,8
tick,0x7fffe05afeb4,375781808,0,0x0,8
tick,0x7fffe05afeb4,375797710,0,0x0,8
tick,0x7fffe05afeb4,375813867,0,0x0,8
tick,0x7fffe05afeb4,375829832,0,0x0,8
tick,0x7fffe05afeb4,375845869,0,0x0,8
tick,0x7fffe05afeb4,375861685,0,0x0,8
tick,0x7fffe05afeb4,375877961,0,0x0,8
tick,0x7fffe05afeb4,375893669,0,0x0,8
tick,0x7fffe05afeb4,375909919,0,0x0,8
tick,0x7fffe05afeb4,375925768,0,0x0,8
tick,0x7fffe05afeb4,375941936,0,0x0,8
tick,0x7fffe05afeb4,375957842,0,0x0,8
tick,0x7fffe05afeb4,375973788,0,0x0,8
tick,0x7fffe05afeb4,375988779,0,0x0,8
tick,0x7fffe05afeb4,376004862,0,0x0,8
tick,0x7fffe05afeb4,376020731,0,0x0,8
tick,0x7fffe05afeb4,376035800,0,0x0,8
tick,0x7fffe05afeb4,376053326,0,0x0,8
tick,0x7fffe05afeb4,376067971,0,0x0,8
tick,0x7fffe05afeb4,376083970,0,0x0,8
tick,0x7fffe05afeb4,376099805,0,0x0,8
tick,0x7fffe05afeb4,376115772,0,0x0,8
tick,0x7fffe05afeb4,376132073,0,0x0,8
tick,0x7fffe05afeb4,376147769,0,0x0,8
tick,0x7fffe05afeb4,376163683,0,0x0,8
tick,0x7fffe05afeb4,376179848,0,0x0,8
tick,0x7fffe05afeb4,376194896,0,0x0,8
tick,0x7fffe05afeb4,376210688,0,0x0,8
tick,0x7fffe05afeb4,376225791,0,0x0,8
tick,0x7fffe05afeb4,376241848,0,0x0,8
tick,0x7fffe05afeb4,376257824,0,0x0,8
tick,0x7fffe05afeb4,376272765,0,0x0,8
tick,0x7fffe05afeb4,376288767,0,0x0,8
tick,0x7fffe05afeb4,376304710,0,0x0,8
tick,0x7fffe05afeb4,376320860,0,0x0,8
tick,0x7fffe05afeb4,376336748,0,0x0,8
tick,0x7fffe05afeb4,376353802,0,0x0,8
tick,0x7fffe05afeb4,376367752,0,0x0,8
tick,0x7fffe05afeb4,376384949,0,0x0,8
tick,0x7fffe05afeb4,376399692,0,0x0,8
tick,0x7fffe05afeb4,376414802,0,0x0,8
tick,0x7fffe05afeb4,376429921,0,0x0,8
tick,0x7fffe05afeb4,376446238,0,0x0,8
tick,0x7fffe05afeb4,376461655,0,0x0,8
tick,0x7fffe05afeb4,376476743,0,0x0,8
tick,0x7fffe05afeb4,376492694,0,0x0,8
tick,0x7fffe05afeb4,376507757,0,0x0,8
tick,0x7fffe05afeb4,376523699,0,0x0,8
tick,0x7fffe05afeb4,376540538,0,0x0,8
tick,0x7fffe05afeb4,376555675,0,0x0,8
tick,0x7fffe05afeb4,376574372,0,0x0,8
tick,0x7fffe05afeb4,376588066,0,0x0,8
tick,0x7fffe05afeb4,376603928,0,0x0,8
tick,0x7fffe05afeb4,376618665,0,0x0,8
tick,0x7fffe05afeb4,376634866,0,0x0,8
tick,0x7fffe05afeb4,376649830,0,0x0,8
tick,0x7fffe05afeb4,376665929,0,0x0,8
tick,0x7fffe05afeb4,376681716,0,0x0,8
tick,0x7fffe05afeb4,376697808,0,0x0,8
tick,0x7fffe05afeb4,376713740,0,0x0,8
tick,0x7fffe05afeb4,376729885,0,0x0,8
tick,0x7fffe05afeb4,376745689,0,0x0,8
tick,0x7fffe05afeb4,376761747,0,0x0,8
tick,0x7fffe05afeb4,376777751,0,0x0,8
tick,0x7fffe05afeb4,376793699,0,0x0,8
tick,0x7fffe05afeb4,376809776,0,0x0,8
tick,0x7fffe05afeb4,376825778,0,0x0,8
tick,0x7fffe05afeb4,376841701,0,0x0,8
tick,0x7fffe05afeb4,376857767,0,0x0,8
tick,0x7fffe05afeb4,376873866,0,0x0,8
tick,0x7fffe05afeb4,376889840,0,0x0,8
tick,0x7fffe05afeb4,376905747,0,0x0,8
tick,0x7fffe05afeb4,376920669,0,0x0,8
tick,0x7fffe05afeb4,376936705,0,0x0,8
tick,0x7fffe05afeb4,376952786,0,0x0,8
tick,0x7fffe05afeb4,376968718,0,0x0,8
tick,0x7fffe05afeb4,376984756,0,0x0,8
tick,0x7fffe05afeb4,377000707,0,0x0,8
tick,0x7fffe05afeb4,377016749,0,0x0,8
tick,0x7fffe05afeb4,377032767,0,0x0,8
tick,0x7fffe05afeb4,377047863,0,0x0,8
tick,0x7fffe05afeb4,377063789,0,0x0,8
tick,0x7fffe05afeb4,377079860,0,0x0,8
tick,0x7fffe05afeb4,377095870,0,0x0,8
tick,0x7fffe05afeb4,377111744,0,0x0,8
tick,0x7fffe05afeb4,377127741,0,0x0,8
tick,0x7fffe05afeb4,377144021,0,0x0,8
tick,0x7fffe05afeb4,377159784,0,0x0,8
tick,0x7fffe05afeb4,377175754,0,0x0,8
tick,0x7fffe05afeb4,377191792,0,0x0,8
tick,0x7fffe05afeb4,377206846,0,0x0,8
tick,0x7fffe05afeb4,377222749,0,0x0,8
tick,0x7fffe05afeb4,377238924,0,0x0,8
tick,0x7fffe05afeb4,377254739,0,0x0,8
tick,0x7fffe05afeb4,377270886,0,0x0,8
tick,0x7fffe05afeb4,377286781,0,0x0,8
tick,0x7fffe05afeb4,377302676,0,0x0,8
tick,0x7fffe05afeb4,377317691,0,0x0,8
tick,0x7fffe05afeb4,377333806,0,0x0,8
tick,0x7fffe05afeb4,377349686,0,0x0,8
tick,0x7fffe05afeb4,377365862,0,0x0,8
tick,0x7fffe05afeb4,377381652,0,0x0,8
tick,0x7fffe05afeb4,377397772,0,0x0,8
tick,0x7fffe05afeb4,377413659,0,0x0,8
tick,0x7fffe05afeb4,377429800,0,0x0,8
tick,0x7fffe05afeb4,377445747,0,0x0,8
tick,0x7fffe05afeb4,377461875,0,0x0,8
tick,0x7fffe05afeb4,377478075,0,0x0,8
tick,0x7fffe05afeb4,377493681,0,0x0,8
tick,0x7fffe05afeb4,377509774,0,0x0,8
tick,0x7fffe05afeb4,377525749,0,0x0,8
tick,0x7fffe05afeb4,377541800,0,0x0,8
tick,0x7fffe05afeb4,377557667,0,0x0,8
tick,0x7fffe05afeb4,377573673,0,0x0,8
tick,0x7fffe05afeb4,377588869,0,0x0,8
tick,0x7fffe05afeb4,377604751,0,0x0,8
tick,0x7fffe05afeb4,377620656,0,0x0,8
tick,0x7fffe05afeb4,377635748,0,0x0,8
tick,0x7fffe05afeb4,377652176,0,0x0,8
tick,0x7fffe05afeb4,377667122,0,0x0,8
tick,0x7fffe05afeb4,377682744,0,0x0,8
tick,0x7fffe05afeb4,377698993,0,0x0,8
tick,0x7fffe05afeb4,377715151,0,0x0,8
tick,0x7fffe05afeb4,377732137,0,0x0,8
tick,0x7fffe05afeb4,377745661,0,0x0,8
tick,0x7fffe05afeb4,377760980,0,0x0,8
tick,0x7fffe05afeb4,377776735,0,0x0,8
tick,0x7fffe05afeb4,377792709,0,0x0,8
tick,0x7fffe05afeb4,377807740,0,0x0,8
tick,0x7fffe05afeb4,377823744,0,0x0,8
tick,0x7fffe05afeb4,377839802,0,0x0,8
tick,0x7fffe05afeb4,377854720,0,0x0,8
tick,0x7fffe05afeb4,377870839,0,0x0,8
tick,0x7fffe05afeb4,377886800,0,0x0,8
tick,0x7fffe05afeb4,377902894,0,0x0,8
tick,0x7fffe05afeb4,377918749,0,0x0,8
tick,0x7fffe05afeb4,377934749,0,0x0,8
tick,0x7fffe05afeb4,377950708,0,0x0,8
tick,0x7fffe05afeb4,377966829,0,0x0,8
tick,0x7fffe05afeb4,377982732,0,0x0,8
tick,0x7fffe05afeb4,377997748,0,0x0,8
tick,0x7fffe05afeb4,378012757,0,0x0,8
tick,0x7fffe05afeb4,378027748,0,0x0,8
tick,0x7fffe05afeb4,378043736,0,0x0,8
tick,0x7fffe05afeb4,378060076,0,0x0,8
tick,0x7fffe05afeb4,378076020,0,0x0,8
tick,0x7fffe05afeb4,378091752,0,0x0,8
tick,0x7fffe05afeb4,378107848,0,0x0,8
tick,0x7fffe05afeb4,378123818,0,0x0,8
tick,0x7fffe05afeb4,378139778,0,0x0,8
tick,0x7fffe05afeb4,378155938,0,0x0,8
tick,0x7fffe05afeb4,378171873,0,0x0,8
tick,0x7fffe05afeb4,378187874,0,0x0,8
tick,0x7fffe05afeb4,378203756,0,0x0,8
tick,0x7fffe05afeb4,378219853,0,0x0,8
tick,0x7fffe05afeb4,378235873,0,0x0,8
tick,0x7fffe05afeb4,378251860,0,0x0,8
tick,0x7fffe05afeb4,378267779,0,0x0,8
tick,0x7fffe05afeb4,378283784,0,0x0,8
tick,0x7fffe05afeb4,378299772,0,0x0,8
tick,0x7fffe05afeb4,378315677,0,0x0,8
tick,0x7fffe05afeb4,378331734,0,0x0,8
tick,0x7fffe05afeb4,378346845,0,0x0,8
tick,0x7fffe05afeb4,378362906,0,0x0,8
tick,0x7fffe05afeb4,378378785,0,0x0,8
tick,0x7fffe05afeb4,378394688,0,0x0,8
tick,0x7fffe05afeb4,378409898,0,0x0,8
tick,0x7fffe05afeb4,378425727,0,0x0,8
tick,0x7fffe05afeb4,378441887,0,0x0,8
tick,0x7fffe05afeb4,378457736,0,0x0,8
tick,0x7fffe05afeb4,378473815,0,0x0,8
tick,0x7fffe05afeb4,378489698,0,0x0,8
tick,0x7fffe05afeb4,378505749,0,0x0,8
tick,0x7fffe05afeb4,378521716,0,0x0,8
tick,0x7fffe05afeb4,378537859,0,0x0,8
tick,0x7fffe05afeb4,378553826,0,0x0,8
tick,0x7fffe05afeb4,378569794,0,0x0,8
tick,0x7fffe05afeb4,378585695,0,0x0,8
tick,0x7fffe05afeb4,378601852,0,0x0,8
tick,0x7fffe05afeb4,378617706,0,0x0,8
tick,0x7fffe05afeb4,378632734,0,0x0,8
tick,0x7fffe05afeb4,378648697,0,0x0,8
tick,0x7fffe05afeb4,378665525,0,0x0,8
tick,0x7fffe05afeb4,378680722,0,0x0,8
tick,0x7fffe05afeb4,378696920,0,0x0,8
tick,0x7fffe05afeb4,378712665,0,0x0,8
tick,0x7fffe05afeb4,378729313,0,0x0,8
tick,0x7fffe05afeb4,378744725,0,0x0,8
tick,0x7fffe05afeb4,378760783,0,0x0,8
tick,0x7fffe05afeb4,378776793,0,0x0,8
tick,0x7fffe05afeb4,378792839,0,0x0,8
tick,0x7fffe05afeb4,378807742,0,0x0,8
tick,0x7fffe05afeb4,378823711,0,0x0,8
tick,0x7fffe05afeb4,378839808,0,0x0,8
tick,0x7fffe05afeb4,378855732,0,0x0,8
tick,0x7fffe05afeb4,378871723,0,0x0,8
tick,0x7fffe05afeb4,378886759,0,0x0,8
tick,0x7fffe05afeb4,378902652,0,0x0,8
tick,0x7fffe05afeb4,378918753,0,0x0,8
tick,0x7fffe05afeb4,378934748,0,0x0,8
tick,0x7fffe05afeb4,378950849,0,0x0,8
tick,0x7fffe05afeb4,378966792,0,0x0,8
tick,0x7fffe05afeb4,378982747,0,0x0,8
tick,0x7fffe05afeb4,378998758,0,0x0,8
tick,0x7fffe05afeb4,379014717,0,0x0,8
tick,0x7fffe05afeb4,379030660,0,0x0,8
tick,0x7fffe05afeb4,379045825,0,0x0,8
tick,0x7fffe05afeb4,379061679,0,0x0,8
tick,0x7fffe05afeb4,379076886,0,0x0,8
tick,0x7fffe05afeb4,379091755,0,0x0,8
tick,0x7fffe05afeb4,379107038,0,0x0,8
tick,0x7fffe05afeb4,379122802,0,0x0,8
tick,0x7fffe05afeb4,379138776,0,0x0,8
tick,0x7fffe05afeb4,379154666,0,0x0,8
tick,0x7fffe05afeb4,379170996,0,0x0,8
tick,0x7fffe05afeb4,379186842,0,0x0,8
tick,0x7fffe05afeb4,379202751,0,0x0,8
tick,0x7fffe05afeb4,379218948,0,0x0,8
tick,0x7fffe05afeb4,379234744,0,0x0,8
tick,0x7fffe05afeb4,379250674,0,0x0,8
tick,0x7fffe05afeb4,379266758,0,0x0,8
tick,0x7fffe05afeb4,379282860,0,0x0,8
tick,0x7fffe05afeb4,379298671,0,0x0,8
tick,0x7fffe05afeb4,379314784,0,0x0,8
tick,0x7fffe05afeb4,379330779,0,0x0,8
tick,0x7fffe05afeb4,379346661,0,0x0,8
tick,0x7fffe05afeb4,379362700,0,0x0,8
tick,0x7fffe05afeb4,379377677,0,0x0,8
tick,0x7fffe05afeb4,379393734,0,0x0,8
tick,0x7fffe05afeb4,379409840,0,0x0,8
tick,0x7fffe05afeb4,379425676,0,0x0,8
tick,0x7fffe05afeb4,379441719,0,0x0,8
tick,0x7fffe05afeb4,379456677,0,0x0,8
tick,0x7fffe05afeb4,379472704,0,0x0,8
tick,0x7fffe05afeb4,379488681,0,0x0,8
tick,0x7fffe05afeb4,379504687,0,0x0,8
tick,0x7fffe05afeb4,379520660,0,0x0,8
tick,0x7fffe05afeb4,379536669,0,0x0,8
tick,0x7fffe05afeb4,379552694,0,0x0,8
tick,0x7fffe05afeb4,379568671,0,0x0,8
tick,0x7fffe05afeb4,379583702,0,0x0,8
tick,0x7fffe05afeb4,379599688,0,0x0,8
tick,0x7fffe05afeb4,379615697,0,0x0,8
tick,0x7fffe05afeb4,379631672,0,0x0,8
tick,0x7fffe05afeb4,379647664,0,0x0,8
tick,0x7fffe05afeb4,379663694,0,0x0,8
tick,0x7fffe05afeb4,379679707,0,0x0,8
tick,0x7fffe05afeb4,379695958,0,0x0,8
tick,0x7fffe05afeb4,379710678,0,0x0,8
tick,0x7fffe05afeb4,379726673,0,0x0,8
tick,0x7fffe05afeb4,379742755,0,0x0,8
tick,0x7fffe05afeb4,379758882,0,0x0,8
tick,0x7fffe05afeb4,379774802,0,0x0,8
tick,0x7fffe05afeb4,379790897,0,0x0,8
tick,0x7fffe05afeb4,379806746,0,0x0,8
tick,0x7fffe05afeb4,379822878,0,0x0,8
tick,0x7fffe05afeb4,379837711,0,0x0,8
tick,0x7fffe05afeb4,379853713,0,0x0,8
tick,0x7fffe05afeb4,379868679,0,0x0,8
tick,0x7fffe05afeb4,379884798,0,0x0,8
tick,0x7fffe05afeb4,379900664,0,0x0,8
tick,0x7fffe05afeb4,379915696,0,0x0,8
tick,0x7fffe05afeb4,379931670,0,0x0,8
tick,0x7fffe05afeb4,379946709,0,0x0,8
tick,0x7fffe05afeb4,379962742,0,0x0,8
tick,0x7fffe05afeb4,379978677,0,0x0,8
tick,0x7fffe05afeb4,379994723,0,0x0,8
tick,0x7fffe05afeb4,380010808,0,0x0,8
tick,0x7fffe05afeb4,380026746,0,0x0,8
tick,0x7fffe05afeb4,380042656,0,0x0,8
tick,0x7fffe05afeb4,380058693,0,0x0,8
tick,0x7fffe05afeb4,380074748,0,0x0,8
tick,0x7fffe05afeb4,380090829,0,0x0,8
tick,0x7fffe05afeb4,380106930,0,0x0,8
tick,0x7fffe05afeb4,380122851,0,0x0,8
tick,0x7fffe05afeb4,380138733,0,0x0,8
tick,0x7fffe05afeb4,380154696,0,0x0,8
tick,0x7fffe05afeb4,380170681,0,0x0,8
tick,0x7fffe05afeb4,380185803,0,0x0,8
tick,0x7fffe05afeb4,380201662,0,0x0,8
tick,0x7fffe05afeb4,380217887,0,0x0,8
tick,0x7fffe05afeb4,380233803,0,0x0,8
tick,0x7fffe05afeb4,380249707,0,0x0,8
tick,0x7fffe05afeb4,380265698,0,0x0,8
tick,0x7fffe05afeb4,380281721,0,0x0,8
tick,0x7fffe05afeb4,380297761,0,0x0,8
tick,0x7fffe05afeb4,380313761,0,0x0,8
tick,0x7fffe05afeb4,380329788,0,0x0,8
tick,0x7fffe05afeb4,380345686,0,0x0,8
tick,0x7fffe05afeb4,380361731,0,0x0,8
tick,0x7fffe05afeb4,380377679,0,0x0,8
tick,0x7fffe05afeb4,380393672,0,0x0,8
tick,0x7fffe05afeb4,380408660,0,0x0,8
tick,0x7fffe05afeb4,380424667,0,0x0,8
tick,0x7fffe05afeb4,380440761,0,0x0,8
tick,0x7fffe05afeb4,380456697,0,0x0,8
tick,0x7fffe05afeb4,380472734,0,0x0,8
tick,0x7fffe05afeb4,380487763,0,0x0,8
tick,0x7fffe05afeb4,380503672,0,0x0,8
tick,0x7fffe05afeb4,380519682,0,0x0,8
tick,0x7fffe05afeb4,380535718,0,0x0,8
tick,0x7fffe05afeb4,380551738,0,0x0,8
tick,0x7fffe05afeb4,380567772,0,0x0,8
tick,0x7fffe05afeb4,380583694,0,0x0,8
tick,0x7fffe05afeb4,380599798,0,0x0,8
tick,0x7fffe05afeb4,380615705,0,0x0,8
tick,0x7fffe05afeb4,380630672,0,0x0,8
tick,0x7fffe05afeb4,380645671,0,0x0,8
tick,0x7fffe05afeb4,380661673,0,0x0,8
tick,0x7fffe05afeb4,380677697,0,0x0,8
tick,0x7fffe05afeb4,380693680,0,0x0,8
tick,0x7fffe05afeb4,380709722,0,0x0,8
tick,0x7fffe05afeb4,380725672,0,0x0,8
tick,0x7fffe05afeb4,380741669,0,0x0,8
tick,0x7fffe05afeb4,380756671,0,0x0,8
tick,0x7fffe05afeb4,380772696,0,0x0,8
tick,0x7fffe05afeb4,380788684,0,0x0,8
tick,0x7fffe05afeb4,380803679,0,0x0,8
tick,0x7fffe05afeb4,380818731,0,0x0,8
tick,0x7fffe05afeb4,380834686,0,0x0,8
tick,0x7fffe05afeb4,380850663,0,0x0,8
tick,0x7fffe05afeb4,380866704,0,0x0,8
tick,0x7fffe05afeb4,380882705,0,0x0,8
tick,0x7fffe05afeb4,380898672,0,0x0,8
tick,0x7fffe05afeb4,380915025,0,0x0,8
tick,0x7fffe05afeb4,380930761,0,0x0,8
tick,0x7fffe05afeb4,380945892,0,0x0,8
tick,0x7fffe05afeb4,380961693,0,0x0,8
tick,0x7fffe05afeb4,380978211,0,0x0,8
tick,0x7fffe05afeb4,380993666,0,0x0,8
tick,0x7fffe05afeb4,381009837,0,0x0,8
tick,0x7fffe05afeb4,381025715,0,0x0,8
tick,0x7fffe05afeb4,381041775,0,0x0,8
tick,0x7fffe05afeb4,381057709,0,0x0,8
tick,0x7fffe05afeb4,381073792,0,0x0,8
tick,0x7fffe05afeb4,381089823,0,0x0,8
tick,0x7fffe05afeb4,381105702,0,0x0,8
tick,0x7fffe05afeb4,381121772,0,0x0,8
tick,0x7fffe05afeb4,381137700,0,0x0,8
tick,0x7fffe05afeb4,381153883,0,0x0,8
tick,0x7fffe05afeb4,381169854,0,0x0,8
tick,0x7fffe05afeb4,381185767,0,0x0,8
tick,0x7fffe05afeb4,381201668,0,0x0,8
tick,0x7fffe05afeb4,381216699,0,0x0,8
tick,0x7fffe05afeb4,381232663,0,0x0,8
tick,0x7fffe05afeb4,381248732,0,0x0,8
tick,0x7fffe05afeb4,381264669,0,0x0,8
tick,0x7fffe05afeb4,381279695,0,0x0,8
tick,0x7fffe05afeb4,381295668,0,0x0,8
tick,0x7fffe05afeb4,381311669,0,0x0,8
tick,0x7fffe05afeb4,381329613,0,0x0,8
tick,0x7fffe05afeb4,381344703,0,0x0,8
tick,0x7fffe05afeb4,381360672,0,0x0,8
tick,0x7fffe05afeb4,381376663,0,0x0,8
tick,0x7fffe05afeb4,381392664,0,0x0,8
tick,0x7fffe05afeb4,381408674,0,0x0,8
tick,0x7fffe05afeb4,381424671,0,0x0,8
tick,0x7fffe05afeb4,381439799,0,0x0,8
tick,0x7fffe05afeb4,381455676,0,0x0,8
tick,0x7fffe05afeb4,381471666,0,0x0,8
tick,0x7fffe05afeb4,381487668,0,0x0,8
tick,0x7fffe05afeb4,381503656,0,0x0,8
tick,0x7fffe05afeb4,381519716,0,0x0,8
tick,0x7fffe05afeb4,381535674,0,0x0,8
tick,0x7fffe05afeb4,381551688,0,0x0,8
tick,0x7fffe05afeb4,381567693,0,0x0,8
tick,0x7fffe05afeb4,381583661,0,0x0,8
tick,0x7fffe05afeb4,381599700,0,0x0,8
tick,0x7fffe05afeb4,381614679,0,0x0,8
tick,0x7fffe05afeb4,381630683,0,0x0,8
tick,0x7fffe05afeb4,381645668,0,0x0,8
tick,0x7fffe05afeb4,381661674,0,0x0,8
tick,0x7fffe05afeb4,381677689,0,0x0,8
tick,0x7fffe05afeb4,381693746,0,0x0,8
tick,0x7fffe05afeb4,381709706,0,0x0,8
tick,0x7fffe05afeb4,381725653,0,0x0,8
tick,0x7fffe05afeb4,381741693,0,0x0,8
tick,0x7fffe05afeb4,381756661,0,0x0,8
tick,0x7fffe05afeb4,381772710,0,0x0,8
tick,0x7fffe05afeb4,381788661,0,0x0,8
tick,0x7fffe05afeb4,381804668,0,0x0,8
tick,0x7fffe05afeb4,381820813,0,0x0,8
tick,0x7fffe05afeb4,381835698,0,0x0,8
tick,0x7fffe05afeb4,381851654,0,0x0,8
tick,0x7fffe05afeb4,381866736,0,0x0,8
tick,0x7fffe05afeb4,381882667,0,0x0,8
tick,0x7fffe05afeb4,381898662,0,0x0,8
tick,0x7fffe05afeb4,381914708,0,0x0,8
tick,0x7fffe05afeb4,381930752,0,0x0,8
tick,0x7fffe05afeb4,381946663,0,0x0,8
tick,0x7fffe05afeb4,381962667,0,0x0,8
tick,0x7fffe05afeb4,381977963,0,0x0,8
tick,0x7fffe05afeb4,381993758,0,0x0,8
tick,0x7fffe05afeb4,382009923,0,0x0,8
tick,0x7fffe05afeb4,382025664,0,0x0,8
tick,0x7fffe05afeb4,382040869,0,0x0,8
tick,0x7fffe05afeb4,382055744,0,0x0,8
tick,0x7fffe05afeb4,382071722,0,0x0,8
tick,0x7fffe05afeb4,382087704,0,0x0,8
tick,0x7fffe05afeb4,382103775,0,0x0,8
tick,0x7fffe05afeb4,382119933,0,0x0,8
tick,0x7fffe05afeb4,382135680,0,0x0,8
tick,0x7fffe05afeb4,382151669,0,0x0,8
tick,0x7fffe05afeb4,382167717,0,0x0,8
tick,0x7fffe05afeb4,382183749,0,0x0,8
tick,0x7fffe05afeb4,382199767,0,0x0,8
tick,0x7fffe05afeb4,382215665,0,0x0,8
tick,0x7fffe05afeb4,382231746,0,0x0,8
tick,0x7fffe05afeb4,382246701,0,0x0,8
tick,0x7fffe05afeb4,382261805,0,0x0,8
tick,0x7fffe05afeb4,382277738,0,0x0,8
tick,0x7fffe05afeb4,382293772,0,0x0,8
tick,0x7fffe05afeb4,382309686,0,0x0,8
tick,0x7fffe05afeb4,382324814,0,0x0,8
tick,0x7fffe05afeb4,382340710,0,0x0,8
tick,0x7fffe05afeb4,382355686,0,0x0,8
tick,0x7fffe05afeb4,382371740,0,0x0,8
tick,0x7fffe05afeb4,382386757,0,0x0,8
tick,0x7fffe05afeb4,382402748,0,0x0,8
tick,0x7fffe05afeb4,382418663,0,0x0,8
tick,0x7fffe05afeb4,382434672,0,0x0,8
tick,0x7fffe05afeb4,382450664,0,0x0,8
tick,0x7fffe05afeb4,382465762,0,0x0,8
tick,0x7fffe05afeb4,382481670,0,0x0,8
tick,0x7fffe05afeb4,382497809,0,0x0,8
tick,0x7fffe05afeb4,382513803,0,0x0,8
tick,0x7fffe05afeb4,382529705,0,0x0,8
tick,0x7fffe05afeb4,382545661,0,0x0,8
tick,0x7fffe05afeb4,382561660,0,0x0,8
tick,0x7fffe05afeb4,382577672,0,0x0,8
tick,0x7fffe05afeb4,382593683,0,0x0,8
tick,0x7fffe05afeb4,382609739,0,0x0,8
tick,0x7fffe05afeb4,382625744,0,0x0,8
tick,0x7fffe05afeb4,382641693,0,0x0,8
tick,0x7fffe05afeb4,382656767,0,0x0,8
tick,0x7fffe05afeb4,382672670,0,0x0,8
tick,0x7fffe05afeb4,382688668,0,0x0,8
tick,0x7fffe05afeb4,382704668,0,0x0,8
tick,0x7fffe05afeb4,382720665,0,0x0,8
tick,0x7fffe05afeb4,382736662,0,0x0,8
tick,0x7fffe05afeb4,382752659,0,0x0,8
tick,0x7fffe05afeb4,382768702,0,0x0,8
tick,0x7fffe05afeb4,382784667,0,0x0,8
tick,0x7fffe05afeb4,382800659,0,0x0,8
tick,0x7fffe05afeb4,382816663,0,0x0,8
tick,0x7fffe05afeb4,382832679,0,0x0,8
tick,0x7fffe05afeb4,382848679,0,0x0,8
tick,0x7fffe05afeb4,382863784,0,0x0,8
tick,0x7fffe05afeb4,382879748,0,0x0,8
tick,0x7fffe05afeb4,382895704,0,0x0,8
tick,0x7fffe05afeb4,382911830,0,0x0,8
tick,0x7fffe05afeb4,382927672,0,0x0,8
tick,0x7fffe05afeb4,382943659,0,0x0,8
tick,0x7fffe05afeb4,382959749,0,0x0,8
tick,0x7fffe05afeb4,382975754,0,0x0,8
tick,0x7fffe05afeb4,382991896,0,0x0,8
tick,0x7fffe05afeb4,383007724,0,0x0,8
tick,0x7fffe05afeb4,383022696,0,0x0,8
tick,0x7fffe05afeb4,383037695,0,0x0,8
tick,0x7fffe05afeb4,383053686,0,0x0,8
tick,0x7fffe05afeb4,383069688,0,0x0,8
tick,0x7fffe05afeb4,383085673,0,0x0,8
tick,0x7fffe05afeb4,383101705,0,0x0,8
tick,0x7fffe05afeb4,383117671,0,0x0,8
tick,0x7fffe05afeb4,383132751,0,0x0,8
tick,0x7fffe05afeb4,383148777,0,0x0,8
tick,0x7fffe05afeb4,383164691,0,0x0,8
tick,0x7fffe05afeb4,383179723,0,0x0,8
tick,0x7fffe05afeb4,383194664,0,0x0,8
tick,0x7fffe05afeb4,383210687,0,0x0,8
tick,0x7fffe05afeb4,383226743,0,0x0,8
tick,0x7fffe05afeb4,383242657,0,0x0,8
tick,0x7fffe05afeb4,383257689,0,0x0,8
tick,0x7fffe05afeb4,383273722,0,0x0,8
tick,0x7fffe05afeb4,383288697,0,0x0,8
tick,0x7fffe05afeb4,383304672,0,0x0,8
tick,0x7fffe05afeb4,383320720,0,0x0,8
tick,0x7fffe05afeb4,383335714,0,0x0,8
tick,0x7fffe05afeb4,383351742,0,0x0,8
tick,0x7fffe05afeb4,383367744,0,0x0,8
tick,0x7fffe05afeb4,383383673,0,0x0,8
tick,0x7fffe05afeb4,383399747,0,0x0,8
tick,0x7fffe05afeb4,383415710,0,0x0,8
tick,0x7fffe05afeb4,383431708,0,0x0,8
tick,0x7fffe05afeb4,383447127,0,0x0,8
tick,0x7fffe05afeb4,383462727,0,0x0,8
tick,0x7fffe05afeb4,383478799,0,0x0,8
tick,0x7fffe05afeb4,383494667,0,0x0,8
tick,0x7fffe05afeb4,383510152,0,0x0,8
tick,0x7fffe05afeb4,383525674,0,0x0,8
tick,0x7fffe05afeb4,383541670,0,0x0,8
tick,0x7fffe05afeb4,383557740,0,0x0,8
tick,0x7fffe05afeb4,383573672,0,0x0,8
tick,0x7fffe05afeb4,383589775,0,0x0,8
tick,0x7fffe05afeb4,383605766,0,0x0,8
tick,0x7fffe05afeb4,383621675,0,0x0,8
tick,0x7fffe05afeb4,383636670,0,0x0,8
tick,0x7fffe05afeb4,383652805,0,0x0,8
tick,0x7fffe05afeb4,383668693,0,0x0,8
tick,0x7fffe05afeb4,383684651,0,0x0,8
tick,0x7fffe05afeb4,383700791,0,0x0,8
tick,0x7fffe05afeb4,383715742,0,0x0,8
tick,0x7fffe05afeb4,383731955,0,0x0,8
tick,0x7fffe05afeb4,383747693,0,0x0,8
tick,0x7fffe05afeb4,383763715,0,0x0,8
tick,0x7fffe05afeb4,383779724,0,0x0,8
tick,0x7fffe05afeb4,383795837,0,0x0,8
tick,0x7fffe05afeb4,383811762,0,0x0,8
tick,0x7fffe05afeb4,383827957,0,0x0,8
tick,0x7fffe05afeb4,383843798,0,0x0,8
tick,0x7fffe05afeb4,383860039,0,0x0,8
tick,0x7fffe05afeb4,383875795,0,0x0,8
tick,0x7fffe05afeb4,383891702,0,0x0,8
tick,0x7fffe05afeb4,383906755,0,0x0,8
tick,0x7fffe05afeb4,383922848,0,0x0,8
tick,0x7fffe05afeb4,383938756,0,0x0,8
tick,0x7fffe05afeb4,383954812,0,0x0,8
tick,0x7fffe05afeb4,383970798,0,0x0,8
tick,0x7fffe05afeb4,383986805,0,0x0,8
tick,0x7fffe05afeb4,384002653,0,0x0,8
tick,0x7fffe05afeb4,384018812,0,0x0,8
tick,0x7fffe05afeb4,384034784,0,0x0,8
tick,0x7fffe05afeb4,384050780,0,0x0,8
tick,0x7fffe05afeb4,384066711,0,0x0,8
tick,0x7fffe05afeb4,384082862,0,0x0,8
tick,0x7fffe05afeb4,384098948,0,0x0,8
tick,0x7fffe05afeb4,384114817,0,0x0,8
tick,0x7fffe05afeb4,384130761,0,0x0,8
tick,0x7fffe05afeb4,384145884,0,0x0,8
tick,0x7fffe05afeb4,384161678,0,0x0,8
tick,0x7fffe05afeb4,384177870,0,0x0,8
tick,0x7fffe05afeb4,384193876,0,0x0,8
tick,0x7fffe05afeb4,384209912,0,0x0,8
tick,0x7fffe05afeb4,384224680,0,0x0,8
tick,0x7fffe05afeb4,384240920,0,0x0,8
tick,0x7fffe05afeb4,384256679,0,0x0,8
tick,0x7fffe05afeb4,384272724,0,0x0,8
tick,0x7fffe05afeb4,384288750,0,0x0,8
tick,0x7fffe05afeb4,384304782,0,0x0,8
tick,0x7fffe05afeb4,384320811,0,0x0,8
tick,0x7fffe05afeb4,384336761,0,0x0,8
tick,0x7fffe05afeb4,384352801,0,0x0,8
tick,0x7fffe05afeb4,384368795,0,0x0,8
tick,0x7fffe05afeb4,384385038,0,0x0,8
tick,0x7fffe05afeb4,384400815,0,0x0,8
tick,0x7fffe05afeb4,384416814,0,0x0,8
tick,0x7fffe05afeb4,384432917,0,0x0,8
tick,0x7fffe05afeb4,384448706,0,0x0,8
tick,0x7fffe05afeb4,384464729,0,0x0,8
tick,0x7fffe05afeb4,384479859,0,0x0,8
tick,0x7fffe05afeb4,384495970,0,0x0,8
tick,0x7fffe05afeb4,384511745,0,0x0,8
tick,0x7fffe05afeb4,384527762,0,0x0,8
tick,0x7fffe05afeb4,384543900,0,0x0,8
tick,0x7fffe05afeb4,384559866,0,0x0,8
tick,0x7fffe05afeb4,384575842,0,0x0,8
tick,0x7fffe05afeb4,384591846,0,0x0,8
tick,0x7fffe05afeb4,384607693,0,0x0,8
tick,0x7fffe05afeb4,384623747,0,0x0,8
tick,0x7fffe05afeb4,384639711,0,0x0,8
tick,0x7fffe05afeb4,384655766,0,0x0,8
tick,0x7fffe05afeb4,384671797,0,0x0,8
tick,0x7fffe05afeb4,384687850,0,0x0,8
tick,0x7fffe05afeb4,384703760,0,0x0,8
tick,0x7fffe05afeb4,384719841,0,0x0,8
tick,0x7fffe05afeb4,384735755,0,0x0,8
tick,0x7fffe05afeb4,384751873,0,0x0,8
tick,0x7fffe05afeb4,384767812,0,0x0,8
tick,0x7fffe05afeb4,384783751,0,0x0,8
tick,0x7fffe05afeb4,384799797,0,0x0,8
tick,0x7fffe05afeb4,384814847,0,0x0,8
tick,0x7fffe05afeb4,384830746,0,0x0,8
tick,0x7fffe05afeb4,384846795,0,0x0,8
tick,0x7fffe05afeb4,384862798,0,0x0,8
tick,0x7fffe05afeb4,384878806,0,0x0,8
tick,0x7fffe05afeb4,384893678,0,0x0,8
tick,0x7fffe05afeb4,384909774,0,0x0,8
tick,0x7fffe05afeb4,384925672,0,0x0,8
tick,0x7fffe05afeb4,384941758,0,0x0,8
tick,0x7fffe05afeb4,384957669,0,0x0,8
tick,0x7fffe05afeb4,384973730,0,0x0,8
tick,0x7fffe05afeb4,384989757,0,0x0,8
tick,0x7fffe05afeb4,385005760,0,0x0,8
tick,0x7fffe05afeb4,385021704,0,0x0,8
tick,0x7fffe05afeb4,385037807,0,0x0,8
tick,0x7fffe05afeb4,385053665,0,0x0,8
tick,0x7fffe05afeb4,385069930,0,0x0,8
tick,0x7fffe05afeb4,385085805,0,0x0,8
tick,0x7fffe05afeb4,385101795,0,0x0,8
tick,0x7fffe05afeb4,385116680,0,0x0,8
tick,0x7fffe05afeb4,385132841,0,0x0,8
tick,0x7fffe05afeb4,385147819,0,0x0,8
tick,0x7fffe05afeb4,385163819,0,0x0,8
tick,0x7fffe05afeb4,385179765,0,0x0,8
tick,0x7fffe05afeb4,385194912,0,0x0,8
tick,0x7fffe05afeb4,385210819,0,0x0,8
tick,0x7fffe05afeb4,385225738,0,0x0,8
tick,0x7fffe05afeb4,385241704,0,0x0,8
tick,0x7fffe05afeb4,385257997,0,0x0,8
tick,0x7fffe05afeb4,385273792,0,0x0,8
tick,0x7fffe05afeb4,385288720,0,0x0,8
tick,0x7fffe05afeb4,385304717,0,0x0,8
tick,0x7fffe05afeb4,385321663,0,0x0,8
tick,0x7fffe05afeb4,385336731,0,0x0,8
tick,0x7fffe05afeb4,385351758,0,0x0,8
tick,0x7fffe05afeb4,385367766,0,0x0,8
tick,0x7fffe05afeb4,385383956,0,0x0,8
tick,0x7fffe05afeb4,385399767,0,0x0,8
tick,0x7fffe05afeb4,385415851,0,0x0,8
tick,0x7fffe05afeb4,385431770,0,0x0,8
tick,0x7fffe05afeb4,385446970,0,0x0,8
tick,0x7fffe05afeb4,385462705,0,0x0,8
tick,0x7fffe05afeb4,385479731,0,0x0,8
tick,0x7fffe05afeb4,385494662,0,0x0,8
tick,0x7fffe05afeb4,385510475,0,0x0,8
tick,0x7fffe05afeb4,385525750,0,0x0,8
tick,0x7fffe05afeb4,385542041,0,0x0,8
tick,0x7fffe05afeb4,385557715,0,0x0,8
tick,0x7fffe05afeb4,385573796,0,0x0,8
tick,0x7fffe05afeb4,385589728,0,0x0,8
tick,0x7fffe05afeb4,385605073,0,0x0,8
tick,0x7fffe05afeb4,385620657,0,0x0,8
tick,0x7fffe05afeb4,385635870,0,0x0,8
tick,0x7fffe05afeb4,385651747,0,0x0,8
tick,0x7fffe05afeb4,385668045,0,0x0,8
tick,0x7fffe05afeb4,385683723,0,0x0,8
tick,0x7fffe05afeb4,385699955,0,0x0,8
tick,0x7fffe05afeb4,385714763,0,0x0,8
tick,0x7fffe05afeb4,385730763,0,0x0,8
tick,0x7fffe05afeb4,385746670,0,0x0,8
tick,0x7fffe05afeb4,385762765,0,0x0,8
tick,0x7fffe05afeb4,385778731,0,0x0,8
tick,0x7fffe05afeb4,385794672,0,0x0,8
tick,0x7fffe05afeb4,385810687,0,0x0,8
tick,0x7fffe05afeb4,385826692,0,0x0,8
tick,0x7fffe05afeb4,385842749,0,0x0,8
tick,0x7fffe05afeb4,385858749,0,0x0,8
tick,0x7fffe05afeb4,385874765,0,0x0,8
tick,0x7fffe05afeb4,385890680,0,0x0,8
tick,0x7fffe05afeb4,385906721,0,0x0,8
tick,0x7fffe05afeb4,385922702,0,0x0,8
tick,0x7fffe05afeb4,385938683,0,0x0,8
tick,0x7fffe05afeb4,385954895,0,0x0,8
tick,0x7fffe05afeb4,385970662,0,0x0,8
tick,0x7fffe05afeb4,385986692,0,0x0,8
tick,0x7fffe05afeb4,386002657,0,0x0,8
tick,0x7fffe05afeb4,386017759,0,0x0,8
tick,0x7fffe05afeb4,386033725,0,0x0,8
tick,0x7fffe05afeb4,386049922,0,0x0,8
tick,0x7fffe05afeb4,386065681,0,0x0,8
tick,0x7fffe05afeb4,386081692,0,0x0,8
tick,0x7fffe05afeb4,386096773,0,0x0,8
tick,0x7fffe05afeb4,386112661,0,0x0,8
tick,0x7fffe05afeb4,386128690,0,0x0,8
tick,0x7fffe05afeb4,386143712,0,0x0,8
tick,0x7fffe05afeb4,386159807,0,0x0,8
tick,0x7fffe05afeb4,386175754,0,0x0,8
tick,0x7fffe05afeb4,386191792,0,0x0,8
tick,0x7fffe05afeb4,386207790,0,0x0,8
tick,0x7fffe05afeb4,386223742,0,0x0,8
tick,0x7fffe05afeb4,386239757,0,0x0,8
tick,0x7fffe05afeb4,386255668,0,0x0,8
tick,0x7fffe05afeb4,386271727,0,0x0,8
tick,0x7fffe05afeb4,386286745,0,0x0,8
tick,0x7fffe05afeb4,386302664,0,0x0,8
tick,0x7fffe05afeb4,386317806,0,0x0,8
tick,0x7fffe05afeb4,386333679,0,0x0,8
tick,0x7fffe05afeb4,386349742,0,0x0,8
tick,0x7fffe05afeb4,386365773,0,0x0,8
tick,0x7fffe05afeb4,386381746,0,0x0,8
tick,0x7fffe05afeb4,386397769,0,0x0,8
tick,0x7fffe05afeb4,386413775,0,0x0,8
tick,0x7fffe05afeb4,386429738,0,0x0,8
tick,0x7fffe05afeb4,386445678,0,0x0,8
tick,0x7fffe05afeb4,386461729,0,0x0,8
tick,0x7fffe05afeb4,386477686,0,0x0,8
tick,0x7fffe05afeb4,386493661,0,0x0,8
tick,0x7fffe05afeb4,386509682,0,0x0,8
tick,0x7fffe05afeb4,386525663,0,0x0,8
tick,0x7fffe05afeb4,386542500,0,0x0,8
tick,0x7fffe05afeb4,386556669,0,0x0,8
tick,0x7fffe05afeb4,386572128,0,0x0,8
tick,0x7fffe05afeb4,386587690,0,0x0,8
tick,0x7fffe05afeb4,386603717,0,0x0,8
tick,0x7fffe05afeb4,386618678,0,0x0,8
tick,0x7fffe05afeb4,386634716,0,0x0,8
tick,0x7fffe05afeb4,386650699,0,0x0,8
tick,0x7fffe05afeb4,386666679,0,0x0,8
tick,0x7fffe05afeb4,386682666,0,0x0,8
tick,0x7fffe05afeb4,386698667,0,0x0,8
tick,0x7fffe05afeb4,386714677,0,0x0,8
tick,0x7fffe05afeb4,386730668,0,0x0,8
tick,0x7fffe05afeb4,386745758,0,0x0,8
tick,0x7fffe05afeb4,386761762,0,0x0,8
tick,0x7fffe05afeb4,386777746,0,0x0,8
tick,0x7fffe05afeb4,386793755,0,0x0,8
tick,0x7fffe05afeb4,386808674,0,0x0,8
tick,0x7fffe05afeb4,386824683,0,0x0,8
tick,0x7fffe05afeb4,386840667,0,0x0,8
tick,0x7fffe05afeb4,386856720,0,0x0,8
tick,0x7fffe05afeb4,386872726,0,0x0,8
tick,0x7fffe05afeb4,386888667,0,0x0,8
tick,0x7fffe05afeb4,386904677,0,0x0,8
tick,0x7fffe05afeb4,386920690,0,0x0,8
tick,0x7fffe05afeb4,386936667,0,0x0,8
tick,0x7fffe05afeb4,386952672,0,0x0,8
tick,0x7fffe05afeb4,386968678,0,0x0,8
tick,0x7fffe05afeb4,386984676,0,0x0,8
tick,0x7fffe05afeb4,387000663,0,0x0,8
tick,0x7fffe05afeb4,387015742,0,0x0,8
tick,0x7fffe05afeb4,387031842,0,0x0,8
tick,0x7fffe05afeb4,387046657,0,0x0,8
tick,0x7fffe05afeb4,387062662,0,0x0,8
tick,0x7fffe05afeb4,387078676,0,0x0,8
tick,0x7fffe05afeb4,387094813,0,0x0,8
tick,0x7fffe05afeb4,387110686,0,0x0,8
tick,0x7fffe05afeb4,387125743,0,0x0,8
tick,0x7fffe05afeb4,387141751,0,0x0,8
tick,0x7fffe05afeb4,387157780,0,0x0,8
tick,0x7fffe05afeb4,387173698,0,0x0,8
tick,0x7fffe05afeb4,387189687,0,0x0,8
tick,0x7fffe05afeb4,387205787,0,0x0,8
tick,0x7fffe05afeb4,387221752,0,0x0,8
tick,0x7fffe05afeb4,387236659,0,0x0,8
tick,0x7fffe05afeb4,387252667,0,0x0,8
tick,0x7fffe05afeb4,387268682,0,0x0,8
tick,0x7fffe05afeb4,387284668,0,0x0,8
tick,0x7fffe05afeb4,387300656,0,0x0,8
tick,0x7fffe05afeb4,387315679,0,0x0,8
tick,0x7fffe05afeb4,387331748,0,0x0,8
tick,0x7fffe05afeb4,387347670,0,0x0,8
tick,0x7fffe05afeb4,387363781,0,0x0,8
tick,0x7fffe05afeb4,387379729,0,0x0,8
tick,0x7fffe05afeb4,387395682,0,0x0,8
tick,0x7fffe05afeb4,387411681,0,0x0,8
tick,0x7fffe05afeb4,387427683,0,0x0,8
tick,0x7fffe05afeb4,387443685,0,0x0,8
tick,0x7fffe05afeb4,387459713,0,0x0,8
tick,0x7fffe05afeb4,387475747,0,0x0,8
tick,0x7fffe05afeb4,387491746,0,0x0,8
tick,0x7fffe05afeb4,387507661,0,0x0,8
tick,0x7fffe05afeb4,387523666,0,0x0,8
tick,0x7fffe05afeb4,387539783,0,0x0,8
tick,0x7fffe05afeb4,387555680,0,0x0,8
tick,0x7fffe05afeb4,387571713,0,0x0,8
tick,0x7fffe05afeb4,387586744,0,0x0,8
tick,0x7fffe05afeb4,387602818,0,0x0,8
tick,0x7fffe05afeb4,387618754,0,0x0,8
tick,0x7fffe05afeb4,387634682,0,0x0,8
tick,0x7fffe05afeb4,387649796,0,0x0,8
tick,0x7fffe05afeb4,387665704,0,0x0,8
tick,0x7fffe05afeb4,387681686,0,0x0,8
tick,0x7fffe05afeb4,387696671,0,0x0,8
tick,0x7fffe05afeb4,387712668,0,0x0,8
tick,0x7fffe05afeb4,387728685,0,0x0,8
tick,0x7fffe05afeb4,387744680,0,0x0,8
tick,0x7fffe05afeb4,387760673,0,0x0,8
tick,0x7fffe05afeb4,387776670,0,0x0,8
tick,0x7fffe05afeb4,387792673,0,0x0,8
tick,0x7fffe05afeb4,387808652,0,0x0,8
tick,0x7fffe05afeb4,387824693,0,0x0,8
tick,0x7fffe05afeb4,387839798,0,0x0,8
tick,0x7fffe05afeb4,387855663,0,0x0,8
tick,0x7fffe05afeb4,387871689,0,0x0,8
tick,0x7fffe05afeb4,387887653,0,0x0,8
tick,0x7fffe05afeb4,387903693,0,0x0,8
tick,0x7fffe05afeb4,387919864,0,0x0,8
tick,0x7fffe05afeb4,387934747,0,0x0,8
tick,0x7fffe05afeb4,387950708,0,0x0,8
tick,0x7fffe05afeb4,387965755,0,0x0,8
tick,0x7fffe05afeb4,387981856,0,0x0,8
tick,0x7fffe05afeb4,387997719,0,0x0,8
tick,0x7fffe05afeb4,388013671,0,0x0,8
tick,0x7fffe05afeb4,388030132,0,0x0,8
tick,0x7fffe05afeb4,388046018,0,0x0,8
tick,0x7fffe05afeb4,388061757,0,0x0,8
tick,0x7fffe05afeb4,388077958,0,0x0,8
tick,0x7fffe05afeb4,388094058,0,0x0,8
tick,0x7fffe05afeb4,388110469,0,0x0,8
tick,0x7fffe05afeb4,388125681,0,0x0,8
tick,0x7fffe05afeb4,388141839,0,0x0,8
tick,0x7fffe05afeb4,388156790,0,0x0,8
tick,0x7fffe05afeb4,388172772,0,0x0,8
tick,0x7fffe05afeb4,388188779,0,0x0,8
tick,0x7fffe05afeb4,388204746,0,0x0,8
tick,0x7fffe05afeb4,388220659,0,0x0,8
tick,0x7fffe05afeb4,388236845,0,0x0,8
tick,0x7fffe05afeb4,388252659,0,0x0,8
tick,0x7fffe05afeb4,388268834,0,0x0,8
tick,0x7fffe05afeb4,388284728,0,0x0,8
tick,0x7fffe05afeb4,388301056,0,0x0,8
tick,0x7fffe05afeb4,388315894,0,0x0,8
tick,0x7fffe05afeb4,388331805,0,0x0,8
tick,0x7fffe05afeb4,388346840,0,0x0,8
tick,0x7fffe05afeb4,388362756,0,0x0,8
tick,0x7fffe05afeb4,388378671,0,0x0,8
tick,0x7fffe05afeb4,388394854,0,0x0,8
tick,0x7fffe05afeb4,388411014,0,0x0,8
tick,0x7fffe05afeb4,388426895,0,0x0,8
tick,0x7fffe05afeb4,388442678,0,0x0,8
tick,0x7fffe05afeb4,388458856,0,0x0,8
tick,0x7fffe05afeb4,388474723,0,0x0,8
tick,0x7fffe05afeb4,388490823,0,0x0,8
tick,0x7fffe05afeb4,388506747,0,0x0,8
tick,0x7fffe05afeb4,388522880,0,0x0,8
tick,0x7fffe05afeb4,388558647,0,0x0,8
tick,0x7fffe05afeb4,388580367,0,0x0,8
tick,0x7fffe05afeb4,388586738,0,0x0,8
tick,0x7fffe05afeb4,388601693,0,0x0,8
tick,0x7fffe05afeb4,388617822,0,0x0,8
tick,0x7fffe05afeb4,388633689,0,0x0,8
tick,0x7fffe05afeb4,388649971,0,0x0,8
tick,0x7fffe05afeb4,388665940,0,0x0,8
tick,0x7fffe05afeb4,388681919,0,0x0,8
tick,0x7fffe05afeb4,388697701,0,0x0,8
tick,0x7fffe05afeb4,388713816,0,0x0,8
tick,0x7fffe05afeb4,388729796,0,0x0,8
tick,0x7fffe05afeb4,388745887,0,0x0,8
tick,0x7fffe05afeb4,388761831,0,0x0,8
tick,0x7fffe05afeb4,388777884,0,0x0,8
tick,0x7fffe05afeb4,388793792,0,0x0,8
tick,0x7fffe05afeb4,388808953,0,0x0,8
tick,0x7fffe05afeb4,388824769,0,0x0,8
tick,0x7fffe05afeb4,388840800,0,0x0,8
tick,0x7fffe05afeb4,388856676,0,0x0,8
tick,0x7fffe05afeb4,388872789,0,0x0,8
tick,0x7fffe05afeb4,388888681,0,0x0,8
tick,0x7fffe05afeb4,388904730,0,0x0,8
tick,0x7fffe05afeb4,388920721,0,0x0,8
tick,0x7fffe05afeb4,388936892,0,0x0,8
tick,0x7fffe05afeb4,388952662,0,0x0,8
tick,0x7fffe05afeb4,388968740,0,0x0,8
tick,0x7fffe05afeb4,388984691,0,0x0,8
tick,0x7fffe05afeb4,389000740,0,0x0,8
tick,0x7fffe05afeb4,389016668,0,0x0,8
tick,0x7fffe05afeb4,389032748,0,0x0,8
tick,0x7fffe05afeb4,389047690,0,0x0,8
tick,0x7fffe05afeb4,389063820,0,0x0,8
tick,0x7fffe05afeb4,389079802,0,0x0,8
tick,0x7fffe05afeb4,389095836,0,0x0,8
tick,0x7fffe05afeb4,389111795,0,0x0,8
tick,0x7fffe05afeb4,389127827,0,0x0,8
tick,0x7fffe05afeb4,389143783,0,0x0,8
tick,0x7fffe05afeb4,389159957,0,0x0,8
tick,0x7fffe05afeb4,389175789,0,0x0,8
tick,0x7fffe05afeb4,389192073,0,0x0,8
tick,0x7fffe05afeb4,389207749,0,0x0,8
tick,0x7fffe05afeb4,389223752,0,0x0,8
tick,0x7fffe05afeb4,389239802,0,0x0,8
tick,0x7fffe05afeb4,389255819,0,0x0,8
tick,0x7fffe05afeb4,389271739,0,0x0,8
tick,0x7fffe05afeb4,389287779,0,0x0,8
tick,0x7fffe05afeb4,389303666,0,0x0,8
tick,0x7fffe05afeb4,389320221,0,0x0,8
tick,0x7fffe05afeb4,389335744,0,0x0,8
tick,0x7fffe05afeb4,389351794,0,0x0,8
tick,0x7fffe05afeb4,389367745,0,0x0,8
tick,0x7fffe05afeb4,389384143,0,0x0,8
tick,0x7fffe05afeb4,389399783,0,0x0,8
tick,0x7fffe05afeb4,389415971,0,0x0,8
tick,0x7fffe05afeb4,389431863,0,0x0,8
tick,0x7fffe05afeb4,389448010,0,0x0,8
tick,0x7fffe05afeb4,389463747,0,0x0,8
tick,0x7fffe05afeb4,389479883,0,0x0,8
tick,0x7fffe05afeb4,389495745,0,0x0,8
tick,0x7fffe05afeb4,389511852,0,0x0,8
tick,0x7fffe05afeb4,389527665,0,0x0,8
tick,0x7fffe05afeb4,389542800,0,0x0,8
tick,0x7fffe05afeb4,389558758,0,0x0,8
tick,0x7fffe05afeb4,389574863,0,0x0,8
tick,0x7fffe05afeb4,389590755,0,0x0,8
tick,0x7fffe05afeb4,389606694,0,0x0,8
tick,0x7fffe05afeb4,389622734,0,0x0,8
tick,0x7fffe05afeb4,389638887,0,0x0,8
tick,0x7fffe05afeb4,389653741,0,0x0,8
tick,0x7fffe05afeb4,389669935,0,0x0,8
tick,0x7fffe05afeb4,389685671,0,0x0,8
tick,0x7fffe05afeb4,389701182,0,0x0,8
tick,0x7fffe05afeb4,389716704,0,0x0,8
tick,0x7fffe05afeb4,389732743,0,0x0,8
tick,0x7fffe05afeb4,389748696,0,0x0,8
tick,0x7fffe05afeb4,389764790,0,0x0,8
tick,0x7fffe05afeb4,389780683,0,0x0,8
tick,0x7fffe05afeb4,389795793,0,0x0,8
tick,0x7fffe05afeb4,389811670,0,0x0,8
tick,0x7fffe05afeb4,389827837,0,0x0,8
tick,0x7fffe05afeb4,389843741,0,0x0,8
tick,0x7fffe05afeb4,389859820,0,0x0,8
tick,0x7fffe05afeb4,389875683,0,0x0,8
tick,0x7fffe05afeb4,389891839,0,0x0,8
tick,0x7fffe05afeb4,389907764,0,0x0,8
tick,0x7fffe05afeb4,389923747,0,0x0,8
tick,0x7fffe05afeb4,389939755,0,0x0,8
tick,0x7fffe05afeb4,389955783,0,0x0,8
tick,0x7fffe05afeb4,389971769,0,0x0,8
tick,0x7fffe05afeb4,389987955,0,0x0,8
tick,0x7fffe05afeb4,390003685,0,0x0,8
tick,0x7fffe05afeb4,390019798,0,0x0,8
tick,0x7fffe05afeb4,390034808,0,0x0,8
tick,0x7fffe05afeb4,390050841,0,0x0,8
tick,0x7fffe05afeb4,390066738,0,0x0,8
tick,0x7fffe05afeb4,390082835,0,0x0,8
tick,0x7fffe05afeb4,390098667,0,0x0,8
tick,0x7fffe05afeb4,390114785,0,0x0,8
tick,0x7fffe05afeb4,390130674,0,0x0,8
tick,0x7fffe05afeb4,390145825,0,0x0,8
tick,0x7fffe05afeb4,390161667,0,0x0,8
tick,0x7fffe05afeb4,390177757,0,0x0,8
tick,0x7fffe05afeb4,390194071,0,0x0,8
tick,0x7fffe05afeb4,390209906,0,0x0,8
tick,0x7fffe05afeb4,390225825,0,0x0,8
tick,0x7fffe05afeb4,390241229,0,0x0,8
tick,0x7fffe05afeb4,390256770,0,0x0,8
tick,0x7fffe05afeb4,390272891,0,0x0,8
tick,0x7fffe05afeb4,390288728,0,0x0,8
tick,0x7fffe05afeb4,390303861,0,0x0,8
tick,0x7fffe05afeb4,390319781,0,0x0,8
tick,0x7fffe05afeb4,390335887,0,0x0,8
tick,0x7fffe05afeb4,390351812,0,0x0,8
tick,0x7fffe05afeb4,390367760,0,0x0,8
tick,0x7fffe05afeb4,390383825,0,0x0,8
tick,0x7fffe05afeb4,390400033,0,0x0,8
tick,0x7fffe05afeb4,390416933,0,0x0,8
tick,0x7fffe05afeb4,390430783,0,0x0,8
tick,0x7fffe05afeb4,390445752,0,0x0,8
tick,0x7fffe05afeb4,390460751,0,0x0,8
tick,0x7fffe05afeb4,390475708,0,0x0,8
tick,0x7fffe05afeb4,390491798,0,0x0,8
tick,0x7fffe05afeb4,390507760,0,0x0,8
tick,0x7fffe05afeb4,390523810,0,0x0,8
tick,0x7fffe05afeb4,390538765,0,0x0,8
tick,0x7fffe05afeb4,390554675,0,0x0,8
tick,0x7fffe05afeb4,390570750,0,0x0,8
tick,0x7fffe05afeb4,390586784,0,0x0,8
tick,0x7fffe05afeb4,390603057,0,0x0,8
tick,0x7fffe05afeb4,390618718,0,0x0,8
tick,0x7fffe05afeb4,390634993,0,0x0,8
tick,0x7fffe05afeb4,390650948,0,0x0,8
tick,0x7fffe05afeb4,390667012,0,0x0,8
tick,0x7fffe05afeb4,390682711,0,0x0,8
tick,0x7fffe05afeb4,390698689,0,0x0,8
tick,0x7fffe05afeb4,390714852,0,0x0,8
tick,0x7fffe05afeb4,390730747,0,0x0,8
tick,0x7fffe05afeb4,390746716,0,0x0,8
tick,0x7fffe05afeb4,390762692,0,0x0,8
tick,0x7fffe05afeb4,390779032,0,0x0,8
tick,0x7fffe05afeb4,390794804,0,0x0,8
tick,0x7fffe05afeb4,390810908,0,0x0,8
tick,0x7fffe05afeb4,390826674,0,0x0,8
tick,0x7fffe05afeb4,390842942,0,0x0,8
tick,0x7fffe05afeb4,390858669,0,0x0,8
tick,0x7fffe05afeb4,390874992,0,0x0,8
tick,0x7fffe05afeb4,390890678,0,0x0,8
tick,0x7fffe05afeb4,390908456,0,0x0,8
tick,0x7fffe05afeb4,390922738,0,0x0,8
tick,0x7fffe05afeb4,390938751,0,0x0,8
tick,0x7fffe05afeb4,390954876,0,0x0,8
tick,0x7fffe05afeb4,390970895,0,0x0,8
tick,0x7fffe05afeb4,390986831,0,0x0,8
tick,0x7fffe05afeb4,391001764,0,0x0,8
tick,0x7fffe05afeb4,391016683,0,0x0,8
tick,0x7fffe05afeb4,391032937,0,0x0,8
tick,0x7fffe05afeb4,391047749,0,0x0,8
tick,0x7fffe05afeb4,391063751,0,0x0,8
tick,0x7fffe05afeb4,391079714,0,0x0,8
tick,0x7fffe05afeb4,391095915,0,0x0,8
tick,0x7fffe05afeb4,391111663,0,0x0,8
tick,0x7fffe05afeb4,391126749,0,0x0,8
tick,0x7fffe05afeb4,391142708,0,0x0,8
tick,0x7fffe05afeb4,391158785,0,0x0,8
tick,0x7fffe05afeb4,391174675,0,0x0,8
tick,0x7fffe05afeb4,391190807,0,0x0,8
tick,0x7fffe05afeb4,391205778,0,0x0,8
tick,0x7fffe05afeb4,391221968,0,0x0,8
tick,0x7fffe05afeb4,391237787,0,0x0,8
tick,0x7fffe05afeb4,391252802,0,0x0,8
tick,0x7fffe05afeb4,391267780,0,0x0,8
tick,0x7fffe05afeb4,391283772,0,0x0,8
tick,0x7fffe05afeb4,391300035,0,0x0,8
tick,0x7fffe05afeb4,391316084,0,0x0,8
tick,0x7fffe05afeb4,391331748,0,0x0,8
tick,0x7fffe05afeb4,391347903,0,0x0,8
tick,0x7fffe05afeb4,391362802,0,0x0,8
tick,0x7fffe05afeb4,391378774,0,0x0,8
tick,0x7fffe05afeb4,391394679,0,0x0,8
tick,0x7fffe05afeb4,391410777,0,0x0,8
tick,0x7fffe05afeb4,391426711,0,0x0,8
tick,0x7fffe05afeb4,391442709,0,0x0,8
tick,0x7fffe05afeb4,391458778,0,0x0,8
tick,0x7fffe05afeb4,391473826,0,0x0,8
tick,0x7fffe05afeb4,391489707,0,0x0,8
tick,0x7fffe05afeb4,391505675,0,0x0,8
tick,0x7fffe05afeb4,391521692,0,0x0,8
tick,0x7fffe05afeb4,391538028,0,0x0,8
tick,0x7fffe05afeb4,391553667,0,0x0,8
tick,0x7fffe05afeb4,391569819,0,0x0,8
tick,0x7fffe05afeb4,391585881,0,0x0,8
tick,0x7fffe05afeb4,391601729,0,0x0,8
tick,0x7fffe05afeb4,391617702,0,0x0,8
tick,0x7fffe05afeb4,391634322,0,0x0,8
tick,0x7fffe05afeb4,391648721,0,0x0,8
tick,0x7fffe05afeb4,391663875,0,0x0,8
tick,0x7fffe05afeb4,391679767,0,0x0,8
tick,0x7fffe05afeb4,391695801,0,0x0,8
tick,0x7fffe05afeb4,391711659,0,0x0,8
tick,0x7fffe05afeb4,391726760,0,0x0,8
tick,0x7fffe05afeb4,391742755,0,0x0,8
tick,0x7fffe05afeb4,391758772,0,0x0,8
tick,0x7fffe05afeb4,391774753,0,0x0,8
tick,0x7fffe05afeb4,391790972,0,0x0,8
tick,0x7fffe05afeb4,391806764,0,0x0,8
tick,0x7fffe05afeb4,391822659,0,0x0,8
tick,0x7fffe05afeb4,391838681,0,0x0,8
tick,0x7fffe05afeb4,391854911,0,0x0,8
tick,0x7fffe05afeb4,391870799,0,0x0,8
tick,0x7fffe05afeb4,391886805,0,0x0,8
tick,0x7fffe05afeb4,391902731,0,0x0,8
tick,0x7fffe05afeb4,391917945,0,0x0,8
tick,0x7fffe05afeb4,391933691,0,0x0,8
tick,0x7fffe05afeb4,391949734,0,0x0,8
tick,0x7fffe05afeb4,391965731,0,0x0,8
tick,0x7fffe05afeb4,391983250,0,0x0,8
tick,0x7fffe05afeb4,391997811,0,0x0,8
tick,0x7fffe05afeb4,392013986,0,0x0,8
tick,0x7fffe05afeb4,392029867,0,0x0,8
tick,0x7fffe05afeb4,392046004,0,0x0,8
tick,0x7fffe05afeb4,392061725,0,0x0,8
tick,0x7fffe05afeb4,392077996,0,0x0,8
tick,0x7fffe05afeb4,392092703,0,0x0,8
tick,0x7fffe05afeb4,392108747,0,0x0,8
tick,0x7fffe05afeb4,392124740,0,0x0,8
tick,0x7fffe05afeb4,392140754,0,0x0,8
tick,0x7fffe05afeb4,392156694,0,0x0,8
tick,0x7fffe05afeb4,392172824,0,0x0,8
tick,0x7fffe05afeb4,392189073,0,0x0,8
tick,0x7fffe05afeb4,392203803,0,0x0,8
tick,0x7fffe05afeb4,392219820,0,0x0,8
tick,0x7fffe05afeb4,392235745,0,0x0,8
tick,0x7fffe05afeb4,392251812,0,0x0,8
tick,0x7fffe05afeb4,392267787,0,0x0,8
tick,0x7fffe05afeb4,392283685,0,0x0,8
tick,0x7fffe05afeb4,392300022,0,0x0,8
tick,0x7fffe05afeb4,392316015,0,0x0,8
tick,0x7fffe05afeb4,392331768,0,0x0,8
tick,0x7fffe05afeb4,392347751,0,0x0,8
tick,0x7fffe05afeb4,392364302,0,0x0,8
tick,0x7fffe05afeb4,392378843,0,0x0,8
tick,0x7fffe05afeb4,392394849,0,0x0,8
tick,0x7fffe05afeb4,392410677,0,0x0,8
tick,0x7fffe05afeb4,392425896,0,0x0,8
tick,0x7fffe05afeb4,392440811,0,0x0,8
tick,0x7fffe05afeb4,392456679,0,0x0,8
tick,0x7fffe05afeb4,392472811,0,0x0,8
tick,0x7fffe05afeb4,392487747,0,0x0,8
tick,0x7fffe05afeb4,392503733,0,0x0,8
tick,0x7fffe05afeb4,392520053,0,0x0,8
tick,0x7fffe05afeb4,392535732,0,0x0,8
tick,0x7fffe05afeb4,392551852,0,0x0,8
tick,0x7fffe05afeb4,392566732,0,0x0,8
tick,0x7fffe05afeb4,392582768,0,0x0,8
tick,0x7fffe05afeb4,392598746,0,0x0,8
tick,0x7fffe05afeb4,392614902,0,0x0,8
tick,0x7fffe05afeb4,392630784,0,0x0,8
tick,0x7fffe05afeb4,392645877,0,0x0,8
tick,0x7fffe05afeb4,392661719,0,0x0,8
tick,0x7fffe05afeb4,392677988,0,0x0,8
tick,0x7fffe05afeb4,392693719,0,0x0,8
tick,0x7fffe05afeb4,392710042,0,0x0,8
tick,0x7fffe05afeb4,392725681,0,0x0,8
tick,0x7fffe05afeb4,392742065,0,0x0,8
tick,0x7fffe05afeb4,392757675,0,0x0,8
tick,0x7fffe05afeb4,392773928,0,0x0,8
tick,0x7fffe05afeb4,392790746,0,0x0,8
tick,0x7fffe05afeb4,392805823,0,0x0,8
tick,0x7fffe05afeb4,392822140,0,0x0,8
tick,0x7fffe05afeb4,392836770,0,0x0,8
tick,0x7fffe05afeb4,392852942,0,0x0,8
tick,0x7fffe05afeb4,392868990,0,0x0,8
tick,0x7fffe05afeb4,392883704,0,0x0,8
tick,0x7fffe05afeb4,392899903,0,0x0,8
tick,0x7fffe05afeb4,392916342,0,0x0,8
tick,0x7fffe05afeb4,392931803,0,0x0,8
tick,0x7fffe05afeb4,392947670,0,0x0,8
tick,0x7fffe05afeb4,392963778,0,0x0,8
tick,0x7fffe05afeb4,392979864,0,0x0,8
tick,0x7fffe05afeb4,392995871,0,0x0,8
tick,0x7fffe05afeb4,393010768,0,0x0,8
tick,0x7fffe05afeb4,393026816,0,0x0,8
tick,0x7fffe05afeb4,393042869,0,0x0,8
tick,0x7fffe05afeb4,393058778,0,0x0,8
tick,0x7fffe05afeb4,393073710,0,0x0,8
tick,0x7fffe05afeb4,393088758,0,0x0,8
tick,0x7fffe05afeb4,393104986,0,0x0,8
tick,0x7fffe05afeb4,393120733,0,0x0,8
tick,0x7fffe05afeb4,393136827,0,0x0,8
tick,0x7fffe05afeb4,393152746,0,0x0,8
tick,0x7fffe05afeb4,393168753,0,0x0,8
tick,0x7fffe05afeb4,393184866,0,0x0,8
tick,0x7fffe05afeb4,393200659,0,0x0,8
tick,0x7fffe05afeb4,393216720,0,0x0,8
tick,0x7fffe05afeb4,393232909,0,0x0,8
tick,0x7fffe05afeb4,393248828,0,0x0,8
tick,0x7fffe05afeb4,393264907,0,0x0,8
tick,0x7fffe05afeb4,393280905,0,0x0,8
tick,0x7fffe05afeb4,393295980,0,0x0,8
tick,0x7fffe05afeb4,393311886,0,0x0,8
tick,0x7fffe05afeb4,393328341,0,0x0,8
tick,0x7fffe05afeb4,393342879,0,0x0,8
tick,0x7fffe05afeb4,393357796,0,0x0,8
tick,0x7fffe05afeb4,393373867,0,0x0,8
tick,0x7fffe05afeb4,393390241,0,0x0,8
tick,0x7fffe05afeb4,393405917,0,0x0,8
tick,0x7fffe05afeb4,393421744,0,0x0,8
tick,0x7fffe05afeb4,393437893,0,0x0,8
tick,0x7fffe05afeb4,393453681,0,0x0,8
tick,0x7fffe05afeb4,393468739,0,0x0,8
tick,0x7fffe05afeb4,393484793,0,0x0,8
tick,0x7fffe05afeb4,393499950,0,0x0,8
tick,0x7fffe05afeb4,393515672,0,0x0,8
tick,0x7fffe05afeb4,393530850,0,0x0,8
tick,0x7fffe05afeb4,393545739,0,0x0,8
tick,0x7fffe05afeb4,393561865,0,0x0,8
tick,0x7fffe05afeb4,393577665,0,0x0,8
tick,0x7fffe05afeb4,393593742,0,0x0,8
tick,0x7fffe05afeb4,393609855,0,0x0,8
tick,0x7fffe05afeb4,393625748,0,0x0,8
tick,0x7fffe05afeb4,393641659,0,0x0,8
tick,0x7fffe05afeb4,393657805,0,0x0,8
tick,0x7fffe05afeb4,393673799,0,0x0,8
tick,0x7fffe05afeb4,393689843,0,0x0,8
tick,0x7fffe05afeb4,393705669,0,0x0,8
tick,0x7fffe05afeb4,393721749,0,0x0,8
tick,0x7fffe05afeb4,393737827,0,0x0,8
tick,0x7fffe05afeb4,393753762,0,0x0,8
tick,0x7fffe05afeb4,393769984,0,0x0,8
tick,0x7fffe05afeb4,393784737,0,0x0,8
tick,0x7fffe05afeb4,393800659,0,0x0,8
tick,0x7fffe05afeb4,393815860,0,0x0,8
tick,0x7fffe05afeb4,393832080,0,0x0,8
tick,0x7fffe05afeb4,393847720,0,0x0,8
tick,0x7fffe05afeb4,393863758,0,0x0,8
tick,0x7fffe05afeb4,393879922,0,0x0,8
tick,0x7fffe05afeb4,393895771,0,0x0,8
tick,0x7fffe05afeb4,393911890,0,0x0,8
tick,0x7fffe05afeb4,393927675,0,0x0,8
tick,0x7fffe05afeb4,393943876,0,0x0,8
tick,0x7fffe05afeb4,393958742,0,0x0,8
tick,0x7fffe05afeb4,393974696,0,0x0,8
tick,0x7fffe05afeb4,393990760,0,0x0,8
tick,0x7fffe05afeb4,394006760,0,0x0,8
tick,0x7fffe05afeb4,394022669,0,0x0,8
tick,0x7fffe05afeb4,394038820,0,0x0,8
tick,0x7fffe05afeb4,394054681,0,0x0,8
tick,0x7fffe05afeb4,394070760,0,0x0,8
tick,0x7fffe05afeb4,394086710,0,0x0,8
tick,0x7fffe05afeb4,394101666,0,0x0,8
tick,0x7fffe05afeb4,394117675,0,0x0,8
tick,0x7fffe05afeb4,394134175,0,0x0,8
tick,0x7fffe05afeb4,394149871,0,0x0,8
tick,0x7fffe05afeb4,394166606,0,0x0,8
tick,0x7fffe05afeb4,394181844,0,0x0,8
tick,0x7fffe05afeb4,394197778,0,0x0,8
tick,0x7fffe05afeb4,394213662,0,0x0,8
tick,0x7fffe05afeb4,394229768,0,0x0,8
tick,0x7fffe05afeb4,394244653,0,0x0,8
tick,0x7fffe05afeb4,394260740,0,0x0,8
tick,0x7fffe05afeb4,394276778,0,0x0,8
tick,0x7fffe05afeb4,394292756,0,0x0,8
tick,0x7fffe05afeb4,394308675,0,0x0,8
tick,0x7fffe05afeb4,394324870,0,0x0,8
tick,0x7fffe05afeb4,394340789,0,0x0,8
tick,0x7fffe05afeb4,394356684,0,0x0,8
tick,0x7fffe05afeb4,394372663,0,0x0,8
tick,0x7fffe05afeb4,394389298,0,0x0,8
tick,0x7fffe05afeb4,394404752,0,0x0,8
tick,0x7fffe05afeb4,394420789,0,0x0,8
tick,0x7fffe05afeb4,394436911,0,0x0,8
tick,0x7fffe05afeb4,394452784,0,0x0,8
tick,0x7fffe05afeb4,394468671,0,0x0,8
tick,0x7fffe05afeb4,394484725,0,0x0,8
tick,0x7fffe05afeb4,394500746,0,0x0,8
tick,0x7fffe05afeb4,394516734,0,0x0,8
tick,0x7fffe05afeb4,394532679,0,0x0,8
tick,0x7fffe05afeb4,394548708,0,0x0,8
tick,0x7fffe05afeb4,394564673,0,0x0,8
tick,0x7fffe05afeb4,394580851,0,0x0,8
tick,0x7fffe05afeb4,394596681,0,0x0,8
tick,0x7fffe05afeb4,394612762,0,0x0,8
tick,0x7fffe05afeb4,394628657,0,0x0,8
tick,0x7fffe05afeb4,394644799,0,0x0,8
tick,0x7fffe05afeb4,394660661,0,0x0,8
tick,0x7fffe05afeb4,394676748,0,0x0,8
tick,0x7fffe05afeb4,394691693,0,0x0,8
tick,0x7fffe05afeb4,394707730,0,0x0,8
tick,0x7fffe05afeb4,394723679,0,0x0,8
tick,0x7fffe05afeb4,394739736,0,0x0,8
tick,0x7fffe05afeb4,394755699,0,0x0,8
tick,0x7fffe05afeb4,394771793,0,0x0,8
tick,0x7fffe05afeb4,394787824,0,0x0,8
tick,0x7fffe05afeb4,394803671,0,0x0,8
tick,0x7fffe05afeb4,394818692,0,0x0,8
tick,0x7fffe05afeb4,394834863,0,0x0,8
tick,0x7fffe05afeb4,394850679,0,0x0,8
tick,0x7fffe05afeb4,394866705,0,0x0,8
tick,0x7fffe05afeb4,394882698,0,0x0,8
tick,0x7fffe05afeb4,394898991,0,0x0,8
tick,0x7fffe05afeb4,394915065,0,0x0,8
tick,0x7fffe05afeb4,394930763,0,0x0,8
tick,0x7fffe05afeb4,394946636,0,0x0,8
tick,0x7fffe05afeb4,394960873,0,0x0,8
tick,0x7fffe05afeb4,394976741,0,0x0,8
tick,0x7fffe05afeb4,394992760,0,0x0,8
tick,0x7fffe05afeb4,395008748,0,0x0,8
tick,0x7fffe05afeb4,395023810,0,0x0,8
tick,0x7fffe05afeb4,395039815,0,0x0,8
tick,0x7fffe05afeb4,395054778,0,0x0,8
tick,0x7fffe05afeb4,395070711,0,0x0,8
tick,0x7fffe05afeb4,395086764,0,0x0,8
tick,0x7fffe05afeb4,395102657,0,0x0,8
tick,0x7fffe05afeb4,395118833,0,0x0,8
tick,0x7fffe05afeb4,395134677,0,0x0,8
tick,0x7fffe05afeb4,395150789,0,0x0,8
tick,0x7fffe05afeb4,395166755,0,0x0,8
tick,0x7fffe05afeb4,395182864,0,0x0,8
tick,0x7fffe05afeb4,395198695,0,0x0,8
tick,0x7fffe05afeb4,395214736,0,0x0,8
tick,0x7fffe05afeb4,395230713,0,0x0,8
tick,0x7fffe05afeb4,395245930,0,0x0,8
tick,0x7fffe05afeb4,395261807,0,0x0,8
tick,0x7fffe05afeb4,395277855,0,0x0,8
tick,0x7fffe05afeb4,395293849,0,0x0,8
tick,0x7fffe05afeb4,395309897,0,0x0,8
tick,0x7fffe05afeb4,395325680,0,0x0,8
tick,0x7fffe05afeb4,395341818,0,0x0,8
tick,0x7fffe05afeb4,395357839,0,0x0,8
tick,0x7fffe05afeb4,395373798,0,0x0,8
tick,0x7fffe05afeb4,395389967,0,0x0,8
tick,0x7fffe05afeb4,395405939,0,0x0,8
tick,0x7fffe05afeb4,395421746,0,0x0,8
tick,0x7fffe05afeb4,395437752,0,0x0,8
tick,0x7fffe05afeb4,395453668,0,0x0,8
tick,0x7fffe05afeb4,395468923,0,0x0,8
tick,0x7fffe05afeb4,395484688,0,0x0,8
tick,0x7fffe05afeb4,395500749,0,0x0,8
tick,0x7fffe05afeb4,395516665,0,0x0,8
tick,0x7fffe05afeb4,395532771,0,0x0,8
tick,0x7fffe05afeb4,395548686,0,0x0,8
tick,0x7fffe05afeb4,395564748,0,0x0,8
tick,0x7fffe05afeb4,395579738,0,0x0,8
tick,0x7fffe05afeb4,395595770,0,0x0,8
tick,0x7fffe05afeb4,395611752,0,0x0,8
tick,0x7fffe05afeb4,395627819,0,0x0,8
tick,0x7fffe05afeb4,395643748,0,0x0,8
tick,0x7fffe05afeb4,395659902,0,0x0,8
tick,0x7fffe05afeb4,395675761,0,0x0,8
tick,0x7fffe05afeb4,395690716,0,0x0,8
tick,0x7fffe05afeb4,395705677,0,0x0,8
tick,0x7fffe05afeb4,395721766,0,0x0,8
tick,0x7fffe05afeb4,395737847,0,0x0,8
tick,0x7fffe05afeb4,395753740,0,0x0,8
tick,0x7fffe05afeb4,395768721,0,0x0,8
tick,0x7fffe05afeb4,395784774,0,0x0,8
tick,0x7fffe05afeb4,395800666,0,0x0,8
tick,0x7fffe05afeb4,395816755,0,0x0,8
tick,0x7fffe05afeb4,395832696,0,0x0,8
tick,0x7fffe05afeb4,395848789,0,0x0,8
tick,0x7fffe05afeb4,395864803,0,0x0,8
tick,0x7fffe05afeb4,395880710,0,0x0,8
tick,0x7fffe05afeb4,395895669,0,0x0,8
tick,0x7fffe05afeb4,395911921,0,0x0,8
tick,0x7fffe05afeb4,395927700,0,0x0,8
tick,0x7fffe05afeb4,395943799,0,0x0,8
tick,0x7fffe05afeb4,395959756,0,0x0,8
tick,0x7fffe05afeb4,395975824,0,0x0,8
tick,0x7fffe05afeb4,395991677,0,0x0,8
tick,0x7fffe05afeb4,396007665,0,0x0,8
tick,0x7fffe05afeb4,396023678,0,0x0,8
tick,0x7fffe05afeb4,396040409,0,0x0,8
tick,0x7fffe05afeb4,396054748,0,0x0,8
tick,0x7fffe05afeb4,396071237,0,0x0,8
tick,0x7fffe05afeb4,396085822,0,0x0,8
tick,0x7fffe05afeb4,396101814,0,0x0,8
tick,0x7fffe05afeb4,396117672,0,0x0,8
tick,0x7fffe05afeb4,396132777,0,0x0,8
tick,0x7fffe05afeb4,396147707,0,0x0,8
tick,0x7fffe05afeb4,396162858,0,0x0,8
tick,0x7fffe05afeb4,396178725,0,0x0,8
tick,0x7fffe05afeb4,396194955,0,0x0,8
tick,0x7fffe05afeb4,396210743,0,0x0,8
tick,0x7fffe05afeb4,396226837,0,0x0,8
tick,0x7fffe05afeb4,396242696,0,0x0,8
tick,0x7fffe05afeb4,396257880,0,0x0,8
tick,0x7fffe05afeb4,396273770,0,0x0,8
tick,0x7fffe05afeb4,396290916,0,0x0,8
tick,0x7fffe05afeb4,396304668,0,0x0,8
tick,0x7fffe05afeb4,396320975,0,0x0,8
tick,0x7fffe05afeb4,396336694,0,0x0,8
tick,0x7fffe05afeb4,396352959,0,0x0,8
tick,0x7fffe05afeb4,396368673,0,0x0,8
tick,0x7fffe05afeb4,396386002,0,0x0,8
tick,0x7fffe05afeb4,396400690,0,0x0,8
tick,0x7fffe05afeb4,396417349,0,0x0,8
tick,0x7fffe05afeb4,396432651,0,0x0,8
tick,0x7fffe05afeb4,396448781,0,0x0,8
tick,0x7fffe05afeb4,396464708,0,0x0,8
tick,0x7fffe05afeb4,396479897,0,0x0,8
tick,0x7fffe05afeb4,396495689,0,0x0,8
tick,0x7fffe05afeb4,396512025,0,0x0,8
tick,0x7fffe05afeb4,396527753,0,0x0,8
tick,0x7fffe05afeb4,396543859,0,0x0,8
tick,0x7fffe05afeb4,396559768,0,0x0,8
tick,0x7fffe05afeb4,396575894,0,0x0,8
tick,0x7fffe05afeb4,396591693,0,0x0,8
tick,0x7fffe05afeb4,396607855,0,0x0,8
tick,0x7fffe05afeb4,396623664,0,0x0,8
tick,0x7fffe05afeb4,396639827,0,0x0,8
tick,0x7fffe05afeb4,396655763,0,0x0,8
tick,0x7fffe05afeb4,396672026,0,0x0,8
tick,0x7fffe05afeb4,396687662,0,0x0,8
tick,0x7fffe05afeb4,396703724,0,0x0,8
tick,0x7fffe05afeb4,396719771,0,0x0,8
tick,0x7fffe05afeb4,396734886,0,0x0,8
tick,0x7fffe05afeb4,396750708,0,0x0,8
tick,0x7fffe05afeb4,396766782,0,0x0,8
tick,0x7fffe05afeb4,396782748,0,0x0,8
tick,0x7fffe05afeb4,396798865,0,0x0,8
tick,0x7fffe05afeb4,396814703,0,0x0,8
tick,0x7fffe05afeb4,396830673,0,0x0,8
tick,0x7fffe05afeb4,396845679,0,0x0,8
tick,0x7fffe05afeb4,396861790,0,0x0,8
tick,0x7fffe05afeb4,396877754,0,0x0,8
tick,0x7fffe05afeb4,396893754,0,0x0,8
tick,0x7fffe05afeb4,396909761,0,0x0,8
tick,0x7fffe05afeb4,396924696,0,0x0,8
tick,0x7fffe05afeb4,396940485,0,0x0,8
tick,0x7fffe05afeb4,396955694,0,0x0,8
tick,0x7fffe05afeb4,396971766,0,0x0,8
tick,0x7fffe05afeb4,396987790,0,0x0,8
tick,0x7fffe05afeb4,397003686,0,0x0,8
tick,0x7fffe05afeb4,397019819,0,0x0,8
tick,0x7fffe05afeb4,397035830,0,0x0,8
tick,0x7fffe05afeb4,397050716,0,0x0,8
tick,0x7fffe05afeb4,397066708,0,0x0,8
tick,0x7fffe05afeb4,397082666,0,0x0,8
tick,0x7fffe05afeb4,397097732,0,0x0,8
tick,0x7fffe05afeb4,397113752,0,0x0,8
tick,0x7fffe05afeb4,397129681,0,0x0,8
tick,0x7fffe05afeb4,397144662,0,0x0,8
tick,0x7fffe05afeb4,397160793,0,0x0,8
tick,0x7fffe05afeb4,397176702,0,0x0,8
tick,0x7fffe05afeb4,397192675,0,0x0,8
tick,0x7fffe05afeb4,397208729,0,0x0,8
tick,0x7fffe05afeb4,397224692,0,0x0,8
tick,0x7fffe05afeb4,397240733,0,0x0,8
tick,0x7fffe05afeb4,397256923,0,0x0,8
tick,0x7fffe05afeb4,397273034,0,0x0,8
tick,0x7fffe05afeb4,397288661,0,0x0,8
tick,0x7fffe05afeb4,397305039,0,0x0,8
tick,0x7fffe05afeb4,397320892,0,0x0,8
tick,0x7fffe05afeb4,397335727,0,0x0,8
tick,0x7fffe05afeb4,397351772,0,0x0,8
tick,0x7fffe05afeb4,397366694,0,0x0,8
tick,0x7fffe05afeb4,397382678,0,0x0,8
tick,0x7fffe05afeb4,397398756,0,0x0,8
tick,0x7fffe05afeb4,397414813,0,0x0,8
tick,0x7fffe05afeb4,397430801,0,0x0,8
tick,0x7fffe05afeb4,397447117,0,0x0,8
tick,0x7fffe05afeb4,397462671,0,0x0,8
tick,0x7fffe05afeb4,397478855,0,0x0,8
tick,0x7fffe05afeb4,397494731,0,0x0,8
tick,0x7fffe05afeb4,397510783,0,0x0,8
tick,0x7fffe05afeb4,397525660,0,0x0,8
tick,0x7fffe05afeb4,397541676,0,0x0,8
tick,0x7fffe05afeb4,397557781,0,0x0,8
tick,0x7fffe05afeb4,397573721,0,0x0,8
tick,0x7fffe05afeb4,397589685,0,0x0,8
tick,0x7fffe05afeb4,397604877,0,0x0,8
tick,0x7fffe05afeb4,397620681,0,0x0,8
tick,0x7fffe05afeb4,397635672,0,0x0,8
tick,0x7fffe05afeb4,397651741,0,0x0,8
tick,0x7fffe05afeb4,397667671,0,0x0,8
tick,0x7fffe05afeb4,397683690,0,0x0,8
tick,0x7fffe05afeb4,397699699,0,0x0,8
tick,0x7fffe05afeb4,397715697,0,0x0,8
tick,0x7fffe05afeb4,397730742,0,0x0,8
tick,0x7fffe05afeb4,397746737,0,0x0,8
tick,0x7fffe05afeb4,397762703,0,0x0,8
tick,0x7fffe05afeb4,397778762,0,0x0,8
tick,0x7fffe05afeb4,397794692,0,0x0,8
tick,0x7fffe05afeb4,397809692,0,0x0,8
tick,0x7fffe05afeb4,397826079,0,0x0,8
tick,0x7fffe05afeb4,397841792,0,0x0,8
tick,0x7fffe05afeb4,397857691,0,0x0,8
tick,0x7fffe05afeb4,397873808,0,0x0,8
tick,0x7fffe05afeb4,397889820,0,0x0,8
tick,0x7fffe05afeb4,397905703,0,0x0,8
tick,0x7fffe05afeb4,397921687,0,0x0,8
tick,0x7fffe05afeb4,397936951,0,0x0,8
tick,0x7fffe05afeb4,397952667,0,0x0,8
tick,0x7fffe05afeb4,397968741,0,0x0,8
tick,0x7fffe05afeb4,397984655,0,0x0,8
tick,0x7fffe05afeb4,397999867,0,0x0,8
tick,0x7fffe05afeb4,398015663,0,0x0,8
tick,0x7fffe05afeb4,398031775,0,0x0,8
tick,0x7fffe05afeb4,398047766,0,0x0,8
tick,0x7fffe05afeb4,398063853,0,0x0,8
tick,0x7fffe05afeb4,398078850,0,0x0,8
tick,0x7fffe05afeb4,398094887,0,0x0,8
tick,0x7fffe05afeb4,398110789,0,0x0,8
tick,0x7fffe05afeb4,398125943,0,0x0,8
tick,0x7fffe05afeb4,398140824,0,0x0,8
tick,0x7fffe05afeb4,398157090,0,0x0,8
tick,0x7fffe05afeb4,398172790,0,0x0,8
tick,0x7fffe05afeb4,398188902,0,0x0,8
tick,0x7fffe05afeb4,398204675,0,0x0,8
tick,0x7fffe05afeb4,398220790,0,0x0,8
tick,0x7fffe05afeb4,398235881,0,0x0,8
tick,0x7fffe05afeb4,398251936,0,0x0,8
tick,0x7fffe05afeb4,398266792,0,0x0,8
tick,0x7fffe05afeb4,398282843,0,0x0,8
tick,0x7fffe05afeb4,398298684,0,0x0,8
tick,0x7fffe05afeb4,398314668,0,0x0,8
tick,0x7fffe05afeb4,398330722,0,0x0,8
tick,0x7fffe05afeb4,398345745,0,0x0,8
tick,0x7fffe05afeb4,398361803,0,0x0,8
tick,0x7fffe05afeb4,398376738,0,0x0,8
tick,0x7fffe05afeb4,398392680,0,0x0,8
tick,0x7fffe05afeb4,398407665,0,0x0,8
tick,0x7fffe05afeb4,398423840,0,0x0,8
tick,0x7fffe05afeb4,398439798,0,0x0,8
tick,0x7fffe05afeb4,398455670,0,0x0,8
tick,0x7fffe05afeb4,398471743,0,0x0,8
tick,0x7fffe05afeb4,398487690,0,0x0,8
tick,0x7fffe05afeb4,398502747,0,0x0,8
tick,0x7fffe05afeb4,398518720,0,0x0,8
tick,0x7fffe05afeb4,398534677,0,0x0,8
tick,0x7fffe05afeb4,398550679,0,0x0,8
tick,0x7fffe05afeb4,398566675,0,0x0,8
tick,0x7fffe05afeb4,398582757,0,0x0,8
tick,0x7fffe05afeb4,398597760,0,0x0,8
tick,0x7fffe05afeb4,398613732,0,0x0,8
tick,0x7fffe05afeb4,398629716,0,0x0,8
tick,0x7fffe05afeb4,398645722,0,0x0,8
tick,0x7fffe05afeb4,398661697,0,0x0,8
tick,0x7fffe05afeb4,398676728,0,0x0,8
tick,0x7fffe05afeb4,398692696,0,0x0,8
tick,0x7fffe05afeb4,398708803,0,0x0,8
tick,0x7fffe05afeb4,398724662,0,0x0,8
tick,0x7fffe05afeb4,398740671,0,0x0,8
tick,0x7fffe05afeb4,398756660,0,0x0,8
tick,0x7fffe05afeb4,398772689,0,0x0,8
tick,0x7fffe05afeb4,398788757,0,0x0,8
tick,0x7fffe05afeb4,398804687,0,0x0,8
tick,0x7fffe05afeb4,398820719,0,0x0,8
tick,0x7fffe05afeb4,398835825,0,0x0,8
tick,0x7fffe05afeb4,398851660,0,0x0,8
tick,0x7fffe05afeb4,398867676,0,0x0,8
tick,0x7fffe05afeb4,398883743,0,0x0,8
tick,0x7fffe05afeb4,398899795,0,0x0,8
tick,0x7fffe05afeb4,398914781,0,0x0,8
tick,0x7fffe05afeb4,398930679,0,0x0,8
tick,0x7fffe05afeb4,398947117,0,0x0,8
tick,0x7fffe05afeb4,398961742,0,0x0,8
tick,0x7fffe05afeb4,398977751,0,0x0,8
tick,0x7fffe05afeb4,398992698,0,0x0,8
tick,0x7fffe05afeb4,399009512,0,0x0,8
tick,0x7fffe05afeb4,399024825,0,0x0,8
tick,0x7fffe05afeb4,399040941,0,0x0,8
tick,0x7fffe05afeb4,399056764,0,0x0,8
tick,0x7fffe05afeb4,399072673,0,0x0,8
tick,0x7fffe05afeb4,399088798,0,0x0,8
tick,0x7fffe05afeb4,399104669,0,0x0,8
tick,0x7fffe05afeb4,399120670,0,0x0,8
tick,0x7fffe05afeb4,399136664,0,0x0,8
tick,0x7fffe05afeb4,399152077,0,0x0,8
tick,0x7fffe05afeb4,399168210,0,0x0,8
tick,0x7fffe05afeb4,399183670,0,0x0,8
tick,0x7fffe05afeb4,399199739,0,0x0,8
tick,0x7fffe05afeb4,399215724,0,0x0,8
tick,0x7fffe05afeb4,399231939,0,0x0,8
tick,0x7fffe05afeb4,399247658,0,0x0,8
tick,0x7fffe05afeb4,399263698,0,0x0,8
tick,0x7fffe05afeb4,399278679,0,0x0,8
tick,0x7fffe05afeb4,399294827,0,0x0,8
tick,0x7fffe05afeb4,399310658,0,0x0,8
tick,0x7fffe05afeb4,399326726,0,0x0,8
tick,0x7fffe05afeb4,399341686,0,0x0,8
tick,0x7fffe05afeb4,399357827,0,0x0,8
tick,0x7fffe05afeb4,399373730,0,0x0,8
tick,0x7fffe05afeb4,399390009,0,0x0,8
tick,0x7fffe05afeb4,399404751,0,0x0,8
tick,0x7fffe05afeb4,399420845,0,0x0,8
tick,0x7fffe05afeb4,399435832,0,0x0,8
tick,0x7fffe05afeb4,399469786,0,0x0,8
tick,0x7fffe05afeb4,399484095,0,0x0,8
tick,0x7fffe05afeb4,399498703,0,0x0,8
tick,0x7fffe05afeb4,399514981,0,0x0,8
tick,0x7fffe05afeb4,399530656,0,0x0,8
tick,0x7fffe05afeb4,399547758,0,0x0,8
tick,0x7fffe05afeb4,399561712,0,0x0,8
tick,0x7fffe05afeb4,399577656,0,0x0,8
tick,0x7fffe05afeb4,399593007,0,0x0,8
tick,0x7fffe05afeb4,399608886,0,0x0,8
tick,0x7fffe05afeb4,399624732,0,0x0,8
tick,0x7fffe05afeb4,399640576,0,0x0,8
tick,0x7fffe05afeb4,399654722,0,0x0,8
tick,0x7fffe05afeb4,399671012,0,0x0,8
tick,0x7fffe05afeb4,399686730,0,0x0,8
tick,0x7fffe05afeb4,399702864,0,0x0,8
tick,0x7fffe05afeb4,399718804,0,0x0,8
tick,0x7fffe05afeb4,399734701,0,0x0,8
tick,0x7fffe05afeb4,399750698,0,0x0,8
tick,0x7fffe05afeb4,399766710,0,0x0,8
tick,0x7fffe05afeb4,399782752,0,0x0,8
tick,0x7fffe05afeb4,399798754,0,0x0,8
tick,0x7fffe05afeb4,399814813,0,0x0,8
tick,0x7fffe05afeb4,399830847,0,0x0,8
tick,0x7fffe05afeb4,399845735,0,0x0,8
tick,0x7fffe05afeb4,399861660,0,0x0,8
tick,0x7fffe05afeb4,399876719,0,0x0,8
tick,0x7fffe05afeb4,399892700,0,0x0,8
tick,0x7fffe05afeb4,399907747,0,0x0,8
tick,0x7fffe05afeb4,399923711,0,0x0,8
tick,0x7fffe05afeb4,399939773,0,0x0,8
tick,0x7fffe05afeb4,399955764,0,0x0,8
tick,0x7fffe05afeb4,399971661,0,0x0,8
tick,0x7fffe05afeb4,399987647,0,0x0,8
tick,0x7fffe05afeb4,400003739,0,0x0,8
tick,0x7fffe05afeb4,400019941,0,0x0,8
tick,0x7fffe05afeb4,400034750,0,0x0,8
tick,0x7fffe05afeb4,400050676,0,0x0,8
tick,0x7fffe05afeb4,400065817,0,0x0,8
tick,0x7fffe05afeb4,400081682,0,0x0,8
tick,0x7fffe05afeb4,400097772,0,0x0,8
tick,0x7fffe05afeb4,400112679,0,0x0,8
tick,0x7fffe05afeb4,400128684,0,0x0,8
tick,0x7fffe05afeb4,400143789,0,0x0,8
tick,0x7fffe05afeb4,400159852,0,0x0,8
tick,0x7fffe05afeb4,400175919,0,0x0,8
tick,0x7fffe05afeb4,400191660,0,0x0,8
tick,0x7fffe05afeb4,400207657,0,0x0,8
tick,0x7fffe05afeb4,400223698,0,0x0,8
tick,0x7fffe05afeb4,400239695,0,0x0,8
tick,0x7fffe05afeb4,400255681,0,0x0,8
tick,0x7fffe05afeb4,400271689,0,0x0,8
tick,0x7fffe05afeb4,400287758,0,0x0,8
tick,0x7fffe05afeb4,400303688,0,0x0,8
tick,0x7fffe05afeb4,400319699,0,0x0,8
tick,0x7fffe05afeb4,400335683,0,0x0,8
tick,0x7fffe05afeb4,400351755,0,0x0,8
tick,0x7fffe05afeb4,400367756,0,0x0,8
tick,0x7fffe05afeb4,400382678,0,0x0,8
tick,0x7fffe05afeb4,400397803,0,0x0,8
tick,0x7fffe05afeb4,400413838,0,0x0,8
tick,0x7fffe05afeb4,400428674,0,0x0,8
tick,0x7fffe05afeb4,400443697,0,0x0,8
tick,0x7fffe05afeb4,400459739,0,0x0,8
tick,0x7fffe05afeb4,400475766,0,0x0,8
tick,0x7fffe05afeb4,400491751,0,0x0,8
tick,0x7fffe05afeb4,400507693,0,0x0,8
tick,0x7fffe05afeb4,400523719,0,0x0,8
tick,0x7fffe05afeb4,400538696,0,0x0,8
tick,0x7fffe05afeb4,400554706,0,0x0,8
tick,0x7fffe05afeb4,400571468,0,0x0,8
tick,0x7fffe05afeb4,400586759,0,0x0,8
tick,0x7fffe05afeb4,400603382,0,0x0,8
tick,0x7fffe05afeb4,400618764,0,0x0,8
tick,0x7fffe05afeb4,400635132,0,0x0,8
tick,0x7fffe05afeb4,400650650,0,0x0,8
tick,0x7fffe05afeb4,400666739,0,0x0,8
tick,0x7fffe05afeb4,400682759,0,0x0,8
tick,0x7fffe05afeb4,400699317,0,0x0,8
tick,0x7fffe05afeb4,400714747,0,0x0,8
tick,0x7fffe05afeb4,400730696,0,0x0,8
tick,0x7fffe05afeb4,400745771,0,0x0,8
tick,0x7fffe05afeb4,400761680,0,0x0,8
tick,0x7fffe05afeb4,400777673,0,0x0,8
tick,0x7fffe05afeb4,400793693,0,0x0,8
tick,0x7fffe05afeb4,400809791,0,0x0,8
tick,0x7fffe05afeb4,400825929,0,0x0,8
tick,0x7fffe05afeb4,400841753,0,0x0,8
tick,0x7fffe05afeb4,400857683,0,0x0,8
tick,0x7fffe05afeb4,400873672,0,0x0,8
tick,0x7fffe05afeb4,400889800,0,0x0,8
tick,0x7fffe05afeb4,400905656,0,0x0,8
tick,0x7fffe05afeb4,400921744,0,0x0,8
tick,0x7fffe05afeb4,400937745,0,0x0,8
tick,0x7fffe05afeb4,400952759,0,0x0,8
tick,0x7fffe05afeb4,400968659,0,0x0,8
tick,0x7fffe05afeb4,400984741,0,0x0,8
tick,0x7fffe05afeb4,401000662,0,0x0,8
tick,0x7fffe05afeb4,401016703,0,0x0,8
tick,0x7fffe05afeb4,401032689,0,0x0,8
tick,0x7fffe05afeb4,401047756,0,0x0,8
tick,0x7fffe05afeb4,401063734,0,0x0,8
tick,0x7fffe05afeb4,401079762,0,0x0,8
tick,0x7fffe05afeb4,401095674,0,0x0,8
tick,0x7fffe05afeb4,401111765,0,0x0,8
tick,0x7fffe05afeb4,401127731,0,0x0,8
tick,0x7fffe05afeb4,401143755,0,0x0,8
tick,0x7fffe05afeb4,401158678,0,0x0,8
tick,0x7fffe05afeb4,401173779,0,0x0,8
tick,0x7fffe05afeb4,401189700,0,0x0,8
tick,0x7fffe05afeb4,401205754,0,0x0,8
tick,0x7fffe05afeb4,401220671,0,0x0,8
tick,0x7fffe05afeb4,401236699,0,0x0,8
tick,0x7fffe05afeb4,401251840,0,0x0,8
tick,0x7fffe05afeb4,401267738,0,0x0,8
tick,0x7fffe05afeb4,401283687,0,0x0,8
tick,0x7fffe05afeb4,401299756,0,0x0,8
tick,0x7fffe05afeb4,401315872,0,0x0,8
tick,0x7fffe05afeb4,401331760,0,0x0,8
tick,0x7fffe05afeb4,401347774,0,0x0,8
tick,0x7fffe05afeb4,401363762,0,0x0,8
tick,0x7fffe05afeb4,401379734,0,0x0,8
tick,0x7fffe05afeb4,401395825,0,0x0,8
tick,0x7fffe05afeb4,401411666,0,0x0,8
tick,0x7fffe05afeb4,401427810,0,0x0,8
tick,0x7fffe05afeb4,401442790,0,0x0,8
tick,0x7fffe05afeb4,401458951,0,0x0,8
tick,0x7fffe05afeb4,401474773,0,0x0,8
tick,0x7fffe05afeb4,401489903,0,0x0,8
tick,0x7fffe05afeb4,401505758,0,0x0,8
tick,0x7fffe05afeb4,401521708,0,0x0,8
tick,0x7fffe05afeb4,401537667,0,0x0,8
tick,0x7fffe05afeb4,401553681,0,0x0,8
tick,0x7fffe05afeb4,401569693,0,0x0,8
tick,0x7fffe05afeb4,401584846,0,0x0,8
tick,0x7fffe05afeb4,401599683,0,0x0,8
tick,0x7fffe05afeb4,401615709,0,0x0,8
tick,0x7fffe05afeb4,401631770,0,0x0,8
tick,0x7fffe05afeb4,401647724,0,0x0,8
tick,0x7fffe05afeb4,401663665,0,0x0,8
tick,0x7fffe05afeb4,401678713,0,0x0,8
tick,0x7fffe05afeb4,401693702,0,0x0,8
tick,0x7fffe05afeb4,401709699,0,0x0,8
tick,0x7fffe05afeb4,401725816,0,0x0,8
tick,0x7fffe05afeb4,401741734,0,0x0,8
tick,0x7fffe05afeb4,401756804,0,0x0,8
tick,0x7fffe05afeb4,401772811,0,0x0,8
tick,0x7fffe05afeb4,401788744,0,0x0,8
tick,0x7fffe05afeb4,401804981,0,0x0,8
tick,0x7fffe05afeb4,401821623,0,0x0,8
tick,0x7fffe05afeb4,401836701,0,0x0,8
tick,0x7fffe05afeb4,401851763,0,0x0,8
tick,0x7fffe05afeb4,401866682,0,0x0,8
tick,0x7fffe05afeb4,401882663,0,0x0,8
tick,0x7fffe05afeb4,401897785,0,0x0,8
tick,0x7fffe05afeb4,401913755,0,0x0,8
tick,0x7fffe05afeb4,401929707,0,0x0,8
tick,0x7fffe05afeb4,401946606,0,0x0,8
tick,0x7fffe05afeb4,401961785,0,0x0,8
tick,0x7fffe05afeb4,401977934,0,0x0,8
tick,0x7fffe05afeb4,401993698,0,0x0,8
tick,0x7fffe05afeb4,402010294,0,0x0,8
tick,0x7fffe05afeb4,402024669,0,0x0,8
tick,0x7fffe05afeb4,402040600,0,0x0,8
tick,0x7fffe05afeb4,402055742,0,0x0,8
tick,0x7fffe05afeb4,402071685,0,0x0,8
tick,0x7fffe05afeb4,402086749,0,0x0,8
tick,0x7fffe05afeb4,402103111,0,0x0,8
tick,0x7fffe05afeb4,402118756,0,0x0,8
tick,0x7fffe05afeb4,402135792,0,0x0,8
tick,0x7fffe05afeb4,402150761,0,0x0,8
tick,0x7fffe05afeb4,402166871,0,0x0,8
tick,0x7fffe05afeb4,402182680,0,0x0,8
tick,0x7fffe05afeb4,402198755,0,0x0,8
tick,0x7fffe05afeb4,402214741,0,0x0,8
tick,0x7fffe05afeb4,402230808,0,0x0,8
tick,0x7fffe05afeb4,402246795,0,0x0,8
tick,0x7fffe05afeb4,402262760,0,0x0,8
tick,0x7fffe05afeb4,402278926,0,0x0,8
tick,0x7fffe05afeb4,402294658,0,0x0,8
tick,0x7fffe05afeb4,402310915,0,0x0,8
tick,0x7fffe05afeb4,402326738,0,0x0,8
tick,0x7fffe05afeb4,402342892,0,0x0,8
tick,0x7fffe05afeb4,402358824,0,0x0,8
tick,0x7fffe05afeb4,402374687,0,0x0,8
tick,0x7fffe05afeb4,402390681,0,0x0,8
tick,0x7fffe05afeb4,402406773,0,0x0,8
tick,0x7fffe05afeb4,402422771,0,0x0,8
tick,0x7fffe05afeb4,402438756,0,0x0,8
tick,0x7fffe05afeb4,402454769,0,0x0,8
tick,0x7fffe05afeb4,402469758,0,0x0,8
tick,0x7fffe05afeb4,402484714,0,0x0,8
tick,0x7fffe05afeb4,402499693,0,0x0,8
tick,0x7fffe05afeb4,402515747,0,0x0,8
tick,0x7fffe05afeb4,402531745,0,0x0,8
tick,0x7fffe05afeb4,402547670,0,0x0,8
tick,0x7fffe05afeb4,402563752,0,0x0,8
tick,0x7fffe05afeb4,402579801,0,0x0,8
tick,0x7fffe05afeb4,402595680,0,0x0,8
tick,0x7fffe05afeb4,402611748,0,0x0,8
tick,0x7fffe05afeb4,402627757,0,0x0,8
tick,0x7fffe05afeb4,402643724,0,0x0,8
tick,0x7fffe05afeb4,402659785,0,0x0,8
tick,0x7fffe05afeb4,402675771,0,0x0,8
tick,0x7fffe05afeb4,402690753,0,0x0,8
tick,0x7fffe05afeb4,402706681,0,0x0,8
tick,0x7fffe05afeb4,402721665,0,0x0,8
tick,0x7fffe05afeb4,402737706,0,0x0,8
tick,0x7fffe05afeb4,402752675,0,0x0,8
tick,0x7fffe05afeb4,402768698,0,0x0,8
tick,0x7fffe05afeb4,402784665,0,0x0,8
tick,0x7fffe05afeb4,402800675,0,0x0,8
tick,0x7fffe05afeb4,402815666,0,0x0,8
tick,0x7fffe05afeb4,402831685,0,0x0,8
tick,0x7fffe05afeb4,402847741,0,0x0,8
tick,0x7fffe05afeb4,402863741,0,0x0,8
tick,0x7fffe05afeb4,402879786,0,0x0,8
tick,0x7fffe05afeb4,402895670,0,0x0,8
tick,0x7fffe05afeb4,402911765,0,0x0,8
tick,0x7fffe05afeb4,402927657,0,0x0,8
tick,0x7fffe05afeb4,402943673,0,0x0,8
tick,0x7fffe05afeb4,402959725,0,0x0,8
tick,0x7fffe05afeb4,402975699,0,0x0,8
tick,0x7fffe05afeb4,402991684,0,0x0,8
tick,0x7fffe05afeb4,403007665,0,0x0,8
tick,0x7fffe05afeb4,403023815,0,0x0,8
tick,0x7fffe05afeb4,403040446,0,0x0,8
tick,0x7fffe05afeb4,403055678,0,0x0,8
tick,0x7fffe05afeb4,403071671,0,0x0,8
tick,0x7fffe05afeb4,403087755,0,0x0,8
tick,0x7fffe05afeb4,403103751,0,0x0,8
tick,0x7fffe05afeb4,403119775,0,0x0,8
tick,0x7fffe05afeb4,403134886,0,0x0,8
tick,0x7fffe05afeb4,403149741,0,0x0,8
tick,0x7fffe05afeb4,403165815,0,0x0,8
tick,0x7fffe05afeb4,403181685,0,0x0,8
tick,0x7fffe05afeb4,403197761,0,0x0,8
tick,0x7fffe05afeb4,403213820,0,0x0,8
tick,0x7fffe05afeb4,403232459,0,0x0,8
tick,0x7fffe05afeb4,403244671,0,0x0,8
tick,0x7fffe05afeb4,403260908,0,0x0,8
tick,0x7fffe05afeb4,403275815,0,0x0,8
tick,0x7fffe05afeb4,403291708,0,0x0,8
tick,0x7fffe05afeb4,403307742,0,0x0,8
tick,0x7fffe05afeb4,403323838,0,0x0,8
tick,0x7fffe05afeb4,403339884,0,0x0,8
tick,0x7fffe05afeb4,403355831,0,0x0,8
tick,0x7fffe05afeb4,403371666,0,0x0,8
tick,0x7fffe05afeb4,403387820,0,0x0,8
tick,0x7fffe05afeb4,403403729,0,0x0,8
tick,0x7fffe05afeb4,403420258,0,0x0,8
tick,0x7fffe05afeb4,403435808,0,0x0,8
tick,0x7fffe05afeb4,403451705,0,0x0,8
tick,0x7fffe05afeb4,403467683,0,0x0,8
tick,0x7fffe05afeb4,403483698,0,0x0,8
tick,0x7fffe05afeb4,403499747,0,0x0,8
tick,0x7fffe05afeb4,403515679,0,0x0,8
tick,0x7fffe05afeb4,403531768,0,0x0,8
tick,0x7fffe05afeb4,403547690,0,0x0,8
tick,0x7fffe05afeb4,403563771,0,0x0,8
tick,0x7fffe05afeb4,403579752,0,0x0,8
tick,0x7fffe05afeb4,403595693,0,0x0,8
tick,0x7fffe05afeb4,403610673,0,0x0,8
tick,0x7fffe05afeb4,403625747,0,0x0,8
tick,0x7fffe05afeb4,403641746,0,0x0,8
tick,0x7fffe05afeb4,403657732,0,0x0,8
tick,0x7fffe05afeb4,403673744,0,0x0,8
tick,0x7fffe05afeb4,403689822,0,0x0,8
tick,0x7fffe05afeb4,403705683,0,0x0,8
tick,0x7fffe05afeb4,403721659,0,0x0,8
tick,0x7fffe05afeb4,403737673,0,0x0,8
tick,0x7fffe05afeb4,403753731,0,0x0,8
tick,0x7fffe05afeb4,403768762,0,0x0,8
tick,0x7fffe05afeb4,403784685,0,0x0,8
tick,0x7fffe05afeb4,403800751,0,0x0,8
tick,0x7fffe05afeb4,403816671,0,0x0,8
tick,0x7fffe05afeb4,403832851,0,0x0,8
tick,0x7fffe05afeb4,403848695,0,0x0,8
tick,0x7fffe05afeb4,403864678,0,0x0,8
tick,0x7fffe05afeb4,403879833,0,0x0,8
tick,0x7fffe05afeb4,403895713,0,0x0,8
tick,0x7fffe05afeb4,403911720,0,0x0,8
tick,0x7fffe05afeb4,403927688,0,0x0,8
tick,0x7fffe05afeb4,403943661,0,0x0,8
tick,0x7fffe05afeb4,403959745,0,0x0,8
tick,0x7fffe05afeb4,403975689,0,0x0,8
tick,0x7fffe05afeb4,403991810,0,0x0,8
tick,0x7fffe05afeb4,404007663,0,0x0,8
tick,0x7fffe05afeb4,404022693,0,0x0,8
tick,0x7fffe05afeb4,404038768,0,0x0,8
tick,0x7fffe05afeb4,404054664,0,0x0,8
tick,0x7fffe05afeb4,404071289,0,0x0,8
tick,0x7fffe05afeb4,404085756,0,0x0,8
tick,0x7fffe05afeb4,404101670,0,0x0,8
tick,0x7fffe05afeb4,404118355,0,0x0,8
tick,0x7fffe05afeb4,404133973,0,0x0,8
tick,0x7fffe05afeb4,404149852,0,0x0,8
tick,0x7fffe05afeb4,404165751,0,0x0,8
tick,0x7fffe05afeb4,404180791,0,0x0,8
tick,0x7fffe05afeb4,404195703,0,0x0,8
tick,0x7fffe05afeb4,404210668,0,0x0,8
tick,0x7fffe05afeb4,404226812,0,0x0,8
tick,0x7fffe05afeb4,404242744,0,0x0,8
tick,0x7fffe05afeb4,404259824,0,0x0,8
tick,0x7fffe05afeb4,404274742,0,0x0,8
tick,0x7fffe05afeb4,404290707,0,0x0,8
tick,0x7fffe05afeb4,404305677,0,0x0,8
tick,0x7fffe05afeb4,404320736,0,0x0,8
tick,0x7fffe05afeb4,404335766,0,0x0,8
tick,0x7fffe05afeb4,404352026,0,0x0,8
tick,0x7fffe05afeb4,404367752,0,0x0,8
tick,0x7fffe05afeb4,404384637,0,0x0,8
tick,0x7fffe05afeb4,404399770,0,0x0,8
tick,0x7fffe05afeb4,404415753,0,0x0,8
tick,0x7fffe05afeb4,404430705,0,0x0,8
tick,0x7fffe05afeb4,404446679,0,0x0,8
tick,0x7fffe05afeb4,404462779,0,0x0,8
tick,0x7fffe05afeb4,404479088,0,0x0,8
tick,0x7fffe05afeb4,404494810,0,0x0,8
tick,0x7fffe05afeb4,404512587,0,0x0,8
tick,0x7fffe05afeb4,404525693,0,0x0,8
tick,0x7fffe05afeb4,404543161,0,0x0,8
tick,0x7fffe05afeb4,404557019,0,0x0,8
tick,0x7fffe05afeb4,404572769,0,0x0,8
tick,0x7fffe05afeb4,404588886,0,0x0,8
tick,0x7fffe05afeb4,404605032,0,0x0,8
tick,0x7fffe05afeb4,404620034,0,0x0,8
tick,0x7fffe05afeb4,404635293,0,0x0,8
tick,0x7fffe05afeb4,404650672,0,0x0,8
tick,0x7fffe05afeb4,404666750,0,0x0,8
tick,0x7fffe05afeb4,404682707,0,0x0,8
tick,0x7fffe05afeb4,404698657,0,0x0,8
tick,0x7fffe05afeb4,404714760,0,0x0,8
tick,0x7fffe05afeb4,404730683,0,0x0,8
tick,0x7fffe05afeb4,404745772,0,0x0,8
tick,0x7fffe05afeb4,404761750,0,0x0,8
tick,0x7fffe05afeb4,404777724,0,0x0,8
tick,0x7fffe05afeb4,404793773,0,0x0,8
tick,0x7fffe05afeb4,404809712,0,0x0,8
tick,0x7fffe05afeb4,404825809,0,0x0,8
tick,0x7fffe05afeb4,404841807,0,0x0,8
tick,0x7fffe05afeb4,404857684,0,0x0,8
tick,0x7fffe05afeb4,404873670,0,0x0,8
tick,0x7fffe05afeb4,404889960,0,0x0,8
tick,0x7fffe05afeb4,404905766,0,0x0,8
tick,0x7fffe05afeb4,404921705,0,0x0,8
tick,0x7fffe05afeb4,404937660,0,0x0,8
tick,0x7fffe05afeb4,404953690,0,0x0,8
tick,0x7fffe05afeb4,404969788,0,0x0,8
tick,0x7fffe05afeb4,404985688,0,0x0,8
tick,0x7fffe05afeb4,405001669,0,0x0,8
tick,0x7fffe05afeb4,405017684,0,0x0,8
tick,0x7fffe05afeb4,405033766,0,0x0,8
tick,0x7fffe05afeb4,405049713,0,0x0,8
tick,0x7fffe05afeb4,405064684,0,0x0,8
tick,0x7fffe05afeb4,405079713,0,0x0,8
tick,0x7fffe05afeb4,405095706,0,0x0,8
tick,0x7fffe05afeb4,405111669,0,0x0,8
tick,0x7fffe05afeb4,405127713,0,0x0,8
tick,0x7fffe05afeb4,405143767,0,0x0,8
tick,0x7fffe05afeb4,405159833,0,0x0,8
tick,0x7fffe05afeb4,405175687,0,0x0,8
tick,0x7fffe05afeb4,405191741,0,0x0,8
tick,0x7fffe05afeb4,405207672,0,0x0,8
tick,0x7fffe05afeb4,405223693,0,0x0,8
tick,0x7fffe05afeb4,405239807,0,0x0,8
tick,0x7fffe05afeb4,405255674,0,0x0,8
tick,0x7fffe05afeb4,405271667,0,0x0,8
tick,0x7fffe05afeb4,405287670,0,0x0,8
tick,0x7fffe05afeb4,405303679,0,0x0,8
tick,0x7fffe05afeb4,405319669,0,0x0,8
tick,0x7fffe05afeb4,405335806,0,0x0,8
tick,0x7fffe05afeb4,405351726,0,0x0,8
tick,0x7fffe05afeb4,405367785,0,0x0,8
tick,0x7fffe05afeb4,405384056,0,0x0,8
tick,0x7fffe05afeb4,405399651,0,0x0,8
tick,0x7fffe05afeb4,405414675,0,0x0,8
tick,0x7fffe05afeb4,405430697,0,0x0,8
tick,0x7fffe05afeb4,405445750,0,0x0,8
tick,0x7fffe05afeb4,405461736,0,0x0,8
tick,0x7fffe05afeb4,405477775,0,0x0,8
tick,0x7fffe05afeb4,405493749,0,0x0,8
tick,0x7fffe05afeb4,405508998,0,0x0,8
tick,0x7fffe05afeb4,405523695,0,0x0,8
tick,0x7fffe05afeb4,405540122,0,0x0,8
tick,0x7fffe05afeb4,405554674,0,0x0,8
tick,0x7fffe05afeb4,405571047,0,0x0,8
tick,0x7fffe05afeb4,405586750,0,0x0,8
tick,0x7fffe05afeb4,405602863,0,0x0,8
tick,0x7fffe05afeb4,405618750,0,0x0,8
tick,0x7fffe05afeb4,405634883,0,0x0,8
tick,0x7fffe05afeb4,405650672,0,0x0,8
tick,0x7fffe05afeb4,405666876,0,0x0,8
tick,0x7fffe05afeb4,405682784,0,0x0,8
tick,0x7fffe05afeb4,405698782,0,0x0,8
tick,0x7fffe05afeb4,405714744,0,0x0,8
tick,0x7fffe05afeb4,405730677,0,0x0,8
tick,0x7fffe05afeb4,405745677,0,0x0,8
tick,0x7fffe05afeb4,405761740,0,0x0,8
tick,0x7fffe05afeb4,405777725,0,0x0,8
tick,0x7fffe05afeb4,405793756,0,0x0,8
tick,0x7fffe05afeb4,405809764,0,0x0,8
tick,0x7fffe05afeb4,405825931,0,0x0,8
tick,0x7fffe05afeb4,405841668,0,0x0,8
tick,0x7fffe05afeb4,405857670,0,0x0,8
tick,0x7fffe05afeb4,405873657,0,0x0,8
tick,0x7fffe05afeb4,405888680,0,0x0,8
tick,0x7fffe05afeb4,405904657,0,0x0,8
tick,0x7fffe05afeb4,405920665,0,0x0,8
tick,0x7fffe05afeb4,405936749,0,0x0,8
tick,0x7fffe05afeb4,405951870,0,0x0,8
tick,0x7fffe05afeb4,405967754,0,0x0,8
tick,0x7fffe05afeb4,405983669,0,0x0,8
tick,0x7fffe05afeb4,405998681,0,0x0,8
tick,0x7fffe05afeb4,406014784,0,0x0,8
tick,0x7fffe05afeb4,406030779,0,0x0,8
tick,0x7fffe05afeb4,406045679,0,0x0,8
tick,0x7fffe05afeb4,406061714,0,0x0,8
tick,0x7fffe05afeb4,406077694,0,0x0,8
tick,0x7fffe05afeb4,406093744,0,0x0,8
tick,0x7fffe05afeb4,406108787,0,0x0,8
tick,0x7fffe05afeb4,406124727,0,0x0,8
tick,0x7fffe05afeb4,406140733,0,0x0,8
tick,0x7fffe05afeb4,406155852,0,0x0,8
tick,0x7fffe05afeb4,406171697,0,0x0,8
tick,0x7fffe05afeb4,406187708,0,0x0,8
tick,0x7fffe05afeb4,406202669,0,0x0,8
tick,0x7fffe05afeb4,406217800,0,0x0,8
tick,0x7fffe05afeb4,406233691,0,0x0,8
tick,0x7fffe05afeb4,406249759,0,0x0,8
tick,0x7fffe05afeb4,406265704,0,0x0,8
tick,0x7fffe05afeb4,406281661,0,0x0,8
tick,0x7fffe05afeb4,406315246,0,0x0,8
tick,0x7fffe05afeb4,406329733,0,0x0,8
tick,0x7fffe05afeb4,406347759,0,0x0,8
tick,0x7fffe05afeb4,406361763,0,0x0,8
tick,0x7fffe05afeb4,406377690,0,0x0,8
tick,0x7fffe05afeb4,406393672,0,0x0,8
tick,0x7fffe05afeb4,406409693,0,0x0,8
tick,0x7fffe05afeb4,406425769,0,0x0,8
tick,0x7fffe05afeb4,406441813,0,0x0,8
tick,0x7fffe05afeb4,406457758,0,0x0,8
tick,0x7fffe05afeb4,406473704,0,0x0,8
tick,0x7fffe05afeb4,406489684,0,0x0,8
tick,0x7fffe05afeb4,406504736,0,0x0,8
tick,0x7fffe05afeb4,406520705,0,0x0,8
tick,0x7fffe05afeb4,406536685,0,0x0,8
tick,0x7fffe05afeb4,406552769,0,0x0,8
tick,0x7fffe05afeb4,406568711,0,0x0,8
tick,0x7fffe05afeb4,406584671,0,0x0,8
tick,0x7fffe05afeb4,406600657,0,0x0,8
tick,0x7fffe05afeb4,406616696,0,0x0,8
tick,0x7fffe05afeb4,406632666,0,0x0,8
tick,0x7fffe05afeb4,406648680,0,0x0,8
tick,0x7fffe05afeb4,406664986,0,0x0,8
tick,0x7fffe05afeb4,406679687,0,0x0,8
tick,0x7fffe05afeb4,406695716,0,0x0,8
tick,0x7fffe05afeb4,406711670,0,0x0,8
tick,0x7fffe05afeb4,406728965,0,0x0,8
tick,0x7fffe05afeb4,406743725,0,0x0,8
tick,0x7fffe05afeb4,406759784,0,0x0,8
tick,0x7fffe05afeb4,406774897,0,0x0,8
tick,0x7fffe05afeb4,406790818,0,0x0,8
tick,0x7fffe05afeb4,406806663,0,0x0,8
tick,0x7fffe05afeb4,406822680,0,0x0,8
tick,0x7fffe05afeb4,406838680,0,0x0,8
tick,0x7fffe05afeb4,406854693,0,0x0,8
tick,0x7fffe05afeb4,406870685,0,0x0,8
tick,0x7fffe05afeb4,406886792,0,0x0,8
tick,0x7fffe05afeb4,406902675,0,0x0,8
tick,0x7fffe05afeb4,406918769,0,0x0,8
tick,0x7fffe05afeb4,406934680,0,0x0,8
tick,0x7fffe05afeb4,406950827,0,0x0,8
tick,0x7fffe05afeb4,406965745,0,0x0,8
tick,0x7fffe05afeb4,406981853,0,0x0,8
tick,0x7fffe05afeb4,406997862,0,0x0,8
tick,0x7fffe05afeb4,407013787,0,0x0,8
tick,0x7fffe05afeb4,407029778,0,0x0,8
tick,0x7fffe05afeb4,407045728,0,0x0,8
tick,0x7fffe05afeb4,407061675,0,0x0,8
tick,0x7fffe05afeb4,407077728,0,0x0,8
tick,0x7fffe05afeb4,407093785,0,0x0,8
tick,0x7fffe05afeb4,407109786,0,0x0,8
tick,0x7fffe05afeb4,407125733,0,0x0,8
tick,0x7fffe05afeb4,407141762,0,0x0,8
tick,0x7fffe05afeb4,407157747,0,0x0,8
tick,0x7fffe05afeb4,407173720,0,0x0,8
tick,0x7fffe05afeb4,407189806,0,0x0,8
tick,0x7fffe05afeb4,407205764,0,0x0,8
tick,0x7fffe05afeb4,407221681,0,0x0,8
tick,0x7fffe05afeb4,407237847,0,0x0,8
tick,0x7fffe05afeb4,407253651,0,0x0,8
tick,0x7fffe05afeb4,407269901,0,0x0,8
tick,0x7fffe05afeb4,407285671,0,0x0,8
tick,0x7fffe05afeb4,407301665,0,0x0,8
tick,0x7fffe05afeb4,407317673,0,0x0,8
tick,0x7fffe05afeb4,407333834,0,0x0,8
tick,0x7fffe05afeb4,407349811,0,0x0,8
tick,0x7fffe05afeb4,407365799,0,0x0,8
tick,0x7fffe05afeb4,407381688,0,0x0,8
tick,0x7fffe05afeb4,407397678,0,0x0,8
tick,0x7fffe05afeb4,407413664,0,0x0,8
tick,0x7fffe05afeb4,407429802,0,0x0,8
tick,0x7fffe05afeb4,407445757,0,0x0,8
tick,0x7fffe05afeb4,407461749,0,0x0,8
tick,0x7fffe05afeb4,407478041,0,0x0,8
tick,0x7fffe05afeb4,407493837,0,0x0,8
tick,0x7fffe05afeb4,407510322,0,0x0,8
tick,0x7fffe05afeb4,407525795,0,0x0,8
tick,0x7fffe05afeb4,407541755,0,0x0,8
tick,0x7fffe05afeb4,407557692,0,0x0,8
tick,0x7fffe05afeb4,407572788,0,0x0,8
tick,0x7fffe05afeb4,407588876,0,0x0,8
tick,0x7fffe05afeb4,407604662,0,0x0,8
tick,0x7fffe05afeb4,407620659,0,0x0,8
tick,0x7fffe05afeb4,407635715,0,0x0,8
tick,0x7fffe05afeb4,407651704,0,0x0,8
tick,0x7fffe05afeb4,407666797,0,0x0,8
tick,0x7fffe05afeb4,407682750,0,0x0,8
tick,0x7fffe05afeb4,407698823,0,0x0,8
tick,0x7fffe05afeb4,407714710,0,0x0,8
tick,0x7fffe05afeb4,407730769,0,0x0,8
tick,0x7fffe05afeb4,407745741,0,0x0,8
tick,0x7fffe05afeb4,407761692,0,0x0,8
tick,0x7fffe05afeb4,407777786,0,0x0,8
tick,0x7fffe05afeb4,407793671,0,0x0,8
tick,0x7fffe05afeb4,407809767,0,0x0,8
tick,0x7fffe05afeb4,407825730,0,0x0,8
tick,0x7fffe05afeb4,407841812,0,0x0,8
tick,0x7fffe05afeb4,407857723,0,0x0,8
tick,0x7fffe05afeb4,407873735,0,0x0,8
tick,0x7fffe05afeb4,407889728,0,0x0,8
tick,0x7fffe05afeb4,407905830,0,0x0,8
tick,0x7fffe05afeb4,407921733,0,0x0,8
tick,0x7fffe05afeb4,407937763,0,0x0,8
tick,0x7fffe05afeb4,407953750,0,0x0,8
tick,0x7fffe05afeb4,407969904,0,0x0,8
tick,0x7fffe05afeb4,407985752,0,0x0,8
tick,0x7fffe05afeb4,408001676,0,0x0,8
tick,0x7fffe05afeb4,408017756,0,0x0,8
tick,0x7fffe05afeb4,408033755,0,0x0,8
tick,0x7fffe05afeb4,408049768,0,0x0,8
tick,0x7fffe05afeb4,408065852,0,0x0,8
tick,0x7fffe05afeb4,408081905,0,0x0,8
tick,0x7fffe05afeb4,408097920,0,0x0,8
tick,0x7fffe05afeb4,408113767,0,0x0,8
tick,0x7fffe05afeb4,408129723,0,0x0,8
tick,0x7fffe05afeb4,408145682,0,0x0,8
tick,0x7fffe05afeb4,408161747,0,0x0,8
tick,0x7fffe05afeb4,408177735,0,0x0,8
tick,0x7fffe05afeb4,408193763,0,0x0,8
tick,0x7fffe05afeb4,408209739,0,0x0,8
tick,0x7fffe05afeb4,408225842,0,0x0,8
tick,0x7fffe05afeb4,408241744,0,0x0,8
tick,0x7fffe05afeb4,408257661,0,0x0,8
tick,0x7fffe05afeb4,408272856,0,0x0,8
tick,0x7fffe05afeb4,408288698,0,0x0,8
tick,0x7fffe05afeb4,408303855,0,0x0,8
tick,0x7fffe05afeb4,408319782,0,0x0,8
tick,0x7fffe05afeb4,408335857,0,0x0,8
tick,0x7fffe05afeb4,408351799,0,0x0,8
tick,0x7fffe05afeb4,408367857,0,0x0,8
tick,0x7fffe05afeb4,408382702,0,0x0,8
tick,0x7fffe05afeb4,408398658,0,0x0,8
tick,0x7fffe05afeb4,408413811,0,0x0,8
tick,0x7fffe05afeb4,408429762,0,0x0,8
tick,0x7fffe05afeb4,408444849,0,0x0,8
tick,0x7fffe05afeb4,408460685,0,0x0,8
tick,0x7fffe05afeb4,408476744,0,0x0,8
tick,0x7fffe05afeb4,408492696,0,0x0,8
tick,0x7fffe05afeb4,408507680,0,0x0,8
tick,0x7fffe05afeb4,408523019,0,0x0,8
tick,0x7fffe05afeb4,408537910,0,0x0,8
tick,0x7fffe05afeb4,408553736,0,0x0,8
tick,0x7fffe05afeb4,408569831,0,0x0,8
tick,0x7fffe05afeb4,408585902,0,0x0,8
tick,0x7fffe05afeb4,408601793,0,0x0,8
tick,0x7fffe05afeb4,408617013,0,0x0,8
tick,0x7fffe05afeb4,408633036,0,0x0,8
tick,0x7fffe05afeb4,408650838,0,0x0,8
tick,0x7fffe05afeb4,408665588,0,0x0,8
tick,0x7fffe05afeb4,408682757,0,0x0,8
tick,0x7fffe05afeb4,408695115,0,0x0,8
tick,0x7fffe05afeb4,408711460,0,0x0,8
tick,0x7fffe05afeb4,408725755,0,0x0,8
tick,0x7fffe05afeb4,408741806,0,0x0,8
tick,0x7fffe05afeb4,408756709,0,0x0,8
tick,0x7fffe05afeb4,408772702,0,0x0,8
tick,0x7fffe05afeb4,408789017,0,0x0,8
tick,0x7fffe05afeb4,408804788,0,0x0,8
tick,0x7fffe05afeb4,408821966,0,0x0,8
tick,0x7fffe05afeb4,408836920,0,0x0,8
tick,0x7fffe05afeb4,408851833,0,0x0,8
tick,0x7fffe05afeb4,408867681,0,0x0,8
tick,0x7fffe05afeb4,408882752,0,0x0,8
tick,0x7fffe05afeb4,408898757,0,0x0,8
tick,0x7fffe05afeb4,408915178,0,0x0,8
tick,0x7fffe05afeb4,408930760,0,0x0,8
tick,0x7fffe05afeb4,408946248,0,0x0,8
tick,0x7fffe05afeb4,408961659,0,0x0,8
tick,0x7fffe05afeb4,408978476,0,0x0,8
tick,0x7fffe05afeb4,408993705,0,0x0,8
tick,0x7fffe05afeb4,409010571,0,0x0,8
tick,0x7fffe05afeb4,409025763,0,0x0,8
tick,0x7fffe05afeb4,409042845,0,0x0,8
tick,0x7fffe05afeb4,409057725,0,0x0,8
tick,0x7fffe05afeb4,409073869,0,0x0,8
tick,0x7fffe05afeb4,409089819,0,0x0,8
tick,0x7fffe05afeb4,409104816,0,0x0,8
tick,0x7fffe05afeb4,409120665,0,0x0,8
tick,0x7fffe05afeb4,409135731,0,0x0,8
tick,0x7fffe05afeb4,409151651,0,0x0,8
tick,0x7fffe05afeb4,409167773,0,0x0,8
tick,0x7fffe05afeb4,409183799,0,0x0,8
tick,0x7fffe05afeb4,409199763,0,0x0,8
tick,0x7fffe05afeb4,409215670,0,0x0,8
tick,0x7fffe05afeb4,409231897,0,0x0,8
tick,0x7fffe05afeb4,409247746,0,0x0,8
tick,0x7fffe05afeb4,409263783,0,0x0,8
tick,0x7fffe05afeb4,409278753,0,0x0,8
tick,0x7fffe05afeb4,409294931,0,0x0,8
tick,0x7fffe05afeb4,409310771,0,0x0,8
tick,0x7fffe05afeb4,409326688,0,0x0,8
tick,0x7fffe05afeb4,409342773,0,0x0,8
tick,0x7fffe05afeb4,409358909,0,0x0,8
tick,0x7fffe05afeb4,409374791,0,0x0,8
tick,0x7fffe05afeb4,409390875,0,0x0,8
tick,0x7fffe05afeb4,409406651,0,0x0,8
tick,0x7fffe05afeb4,409422886,0,0x0,8
tick,0x7fffe05afeb4,409438798,0,0x0,8
tick,0x7fffe05afeb4,409454812,0,0x0,8
tick,0x7fffe05afeb4,409470713,0,0x0,8
tick,0x7fffe05afeb4,409486846,0,0x0,8
tick,0x7fffe05afeb4,409502660,0,0x0,8
tick,0x7fffe05afeb4,409518965,0,0x0,8
tick,0x7fffe05afeb4,409534939,0,0x0,8
tick,0x7fffe05afeb4,409551129,0,0x0,8
tick,0x7fffe05afeb4,409566822,0,0x0,8
tick,0x7fffe05afeb4,409581793,0,0x0,8
tick,0x7fffe05afeb4,409597907,0,0x0,8
tick,0x7fffe05afeb4,409614327,0,0x0,8
tick,0x7fffe05afeb4,409629671,0,0x0,8
tick,0x7fffe05afeb4,409645907,0,0x0,8
tick,0x7fffe05afeb4,409660745,0,0x0,8
tick,0x7fffe05afeb4,409675819,0,0x0,8
tick,0x7fffe05afeb4,409691692,0,0x0,8
tick,0x7fffe05afeb4,409707973,0,0x0,8
tick,0x7fffe05afeb4,409723733,0,0x0,8
tick,0x7fffe05afeb4,409740111,0,0x0,8
tick,0x7fffe05afeb4,409755665,0,0x0,8
tick,0x7fffe05afeb4,409771873,0,0x0,8
tick,0x7fffe05afeb4,409787755,0,0x0,8
tick,0x7fffe05afeb4,409803807,0,0x0,8
tick,0x7fffe05afeb4,409819802,0,0x0,8
tick,0x7fffe05afeb4,409835766,0,0x0,8
tick,0x7fffe05afeb4,409851738,0,0x0,8
tick,0x7fffe05afeb4,409867755,0,0x0,8
tick,0x7fffe05afeb4,409882677,0,0x0,8
tick,0x7fffe05afeb4,409898823,0,0x0,8
tick,0x7fffe05afeb4,409914786,0,0x0,8
tick,0x7fffe05afeb4,409929935,0,0x0,8
tick,0x7fffe05afeb4,409944673,0,0x0,8
tick,0x7fffe05afeb4,409960759,0,0x0,8
tick,0x7fffe05afeb4,409976662,0,0x0,8
tick,0x7fffe05afeb4,409992785,0,0x0,8
tick,0x7fffe05afeb4,410009376,0,0x0,8
tick,0x7fffe05afeb4,410023871,0,0x0,8
tick,0x7fffe05afeb4,410040216,0,0x0,8
tick,0x7fffe05afeb4,410055820,0,0x0,8
tick,0x7fffe05afeb4,410072298,0,0x0,8
tick,0x7fffe05afeb4,410087815,0,0x0,8
tick,0x7fffe05afeb4,410104466,0,0x0,8
tick,0x7fffe05afeb4,410119759,0,0x0,8
tick,0x7fffe05afeb4,410134686,0,0x0,8
tick,0x7fffe05afeb4,410149890,0,0x0,8
tick,0x7fffe05afeb4,410165822,0,0x0,8
tick,0x7fffe05afeb4,410181797,0,0x0,8
tick,0x7fffe05afeb4,410197722,0,0x0,8
tick,0x7fffe05afeb4,410213786,0,0x0,8
tick,0x7fffe05afeb4,410229677,0,0x0,8
tick,0x7fffe05afeb4,410245772,0,0x0,8
tick,0x7fffe05afeb4,410261765,0,0x0,8
tick,0x7fffe05afeb4,410277785,0,0x0,8
tick,0x7fffe05afeb4,410293664,0,0x0,8
tick,0x7fffe05afeb4,410309798,0,0x0,8
tick,0x7fffe05afeb4,410325818,0,0x0,8
tick,0x7fffe05afeb4,410341685,0,0x0,8
tick,0x7fffe05afeb4,410357666,0,0x0,8
tick,0x7fffe05afeb4,410373770,0,0x0,8
tick,0x7fffe05afeb4,410389788,0,0x0,8
tick,0x7fffe05afeb4,410405738,0,0x0,8
tick,0x7fffe05afeb4,410421687,0,0x0,8
tick,0x7fffe05afeb4,410437907,0,0x0,8
tick,0x7fffe05afeb4,410453678,0,0x0,8
tick,0x7fffe05afeb4,410469897,0,0x0,8
tick,0x7fffe05afeb4,410485681,0,0x0,8
tick,0x7fffe05afeb4,410501810,0,0x0,8
tick,0x7fffe05afeb4,410517667,0,0x0,8
tick,0x7fffe05afeb4,410533776,0,0x0,8
tick,0x7fffe05afeb4,410549793,0,0x0,8
tick,0x7fffe05afeb4,410564748,0,0x0,8
tick,0x7fffe05afeb4,410579767,0,0x0,8
tick,0x7fffe05afeb4,410595679,0,0x0,8
tick,0x7fffe05afeb4,410611818,0,0x0,8
tick,0x7fffe05afeb4,410627898,0,0x0,8
tick,0x7fffe05afeb4,410643691,0,0x0,8
tick,0x7fffe05afeb4,410659799,0,0x0,8
tick,0x7fffe05afeb4,410675688,0,0x0,8
tick,0x7fffe05afeb4,410691682,0,0x0,8
tick,0x7fffe05afeb4,410707746,0,0x0,8
tick,0x7fffe05afeb4,410723674,0,0x0,8
tick,0x7fffe05afeb4,410739689,0,0x0,8
tick,0x7fffe05afeb4,410755791,0,0x0,8
tick,0x7fffe05afeb4,410771700,0,0x0,8
tick,0x7fffe05afeb4,410787696,0,0x0,8
tick,0x7fffe05afeb4,410803661,0,0x0,8
tick,0x7fffe05afeb4,410819886,0,0x0,8
tick,0x7fffe05afeb4,410835665,0,0x0,8
tick,0x7fffe05afeb4,410851660,0,0x0,8
tick,0x7fffe05afeb4,410867707,0,0x0,8
tick,0x7fffe05afeb4,410882735,0,0x0,8
tick,0x7fffe05afeb4,410898754,0,0x0,8
tick,0x7fffe05afeb4,410915045,0,0x0,8
tick,0x7fffe05afeb4,410930810,0,0x0,8
tick,0x7fffe05afeb4,410946708,0,0x0,8
tick,0x7fffe05afeb4,410962896,0,0x0,8
tick,0x7fffe05afeb4,410978282,0,0x0,8
tick,0x7fffe05afeb4,410992762,0,0x0,8
tick,0x7fffe05afeb4,411010048,0,0x0,8
tick,0x7fffe05afeb4,411024672,0,0x0,8
tick,0x7fffe05afeb4,411040915,0,0x0,8
tick,0x7fffe05afeb4,411056683,0,0x0,8
tick,0x7fffe05afeb4,411072758,0,0x0,8
tick,0x7fffe05afeb4,411088656,0,0x0,8
tick,0x7fffe05afeb4,411104818,0,0x0,8
tick,0x7fffe05afeb4,411120663,0,0x0,8
tick,0x7fffe05afeb4,411136766,0,0x0,8
tick,0x7fffe05afeb4,411152666,0,0x0,8
tick,0x7fffe05afeb4,411168771,0,0x0,8
tick,0x7fffe05afeb4,411184730,0,0x0,8
tick,0x7fffe05afeb4,411200733,0,0x0,8
tick,0x7fffe05afeb4,411215711,0,0x0,8
tick,0x7fffe05afeb4,411231788,0,0x0,8
tick,0x7fffe05afeb4,411247911,0,0x0,8
tick,0x7fffe05afeb4,411264345,0,0x0,8
tick,0x7fffe05afeb4,411279776,0,0x0,8
tick,0x7fffe05afeb4,411295673,0,0x0,8
tick,0x7fffe05afeb4,411311661,0,0x0,8
tick,0x7fffe05afeb4,411327781,0,0x0,8
tick,0x7fffe05afeb4,411343721,0,0x0,8
tick,0x7fffe05afeb4,411359841,0,0x0,8
tick,0x7fffe05afeb4,411375672,0,0x0,8
tick,0x7fffe05afeb4,411391780,0,0x0,8
tick,0x7fffe05afeb4,411407671,0,0x0,8
tick,0x7fffe05afeb4,411423823,0,0x0,8
tick,0x7fffe05afeb4,411439794,0,0x0,8
tick,0x7fffe05afeb4,411455787,0,0x0,8
tick,0x7fffe05afeb4,411471771,0,0x0,8
tick,0x7fffe05afeb4,411487795,0,0x0,8
tick,0x7fffe05afeb4,411503733,0,0x0,8
tick,0x7fffe05afeb4,411519822,0,0x0,8
tick,0x7fffe05afeb4,411535772,0,0x0,8
tick,0x7fffe05afeb4,411551666,0,0x0,8
tick,0x7fffe05afeb4,411567753,0,0x0,8
tick,0x7fffe05afeb4,411583743,0,0x0,8
tick,0x7fffe05afeb4,411599672,0,0x0,8
tick,0x7fffe05afeb4,411615667,0,0x0,8
tick,0x7fffe05afeb4,411630858,0,0x0,8
tick,0x7fffe05afeb4,411646796,0,0x0,8
tick,0x7fffe05afeb4,411662705,0,0x0,8
tick,0x7fffe05afeb4,411678765,0,0x0,8
tick,0x7fffe05afeb4,411694668,0,0x0,8
tick,0x7fffe05afeb4,411710755,0,0x0,8
tick,0x7fffe05afeb4,411726658,0,0x0,8
tick,0x7fffe05afeb4,411742695,0,0x0,8
tick,0x7fffe05afeb4,411759112,0,0x0,8
tick,0x7fffe05afeb4,411774731,0,0x0,8
tick,0x7fffe05afeb4,411790654,0,0x0,8
tick,0x7fffe05afeb4,411805672,0,0x0,8
tick,0x7fffe05afeb4,411821669,0,0x0,8
tick,0x7fffe05afeb4,411837839,0,0x0,8
tick,0x7fffe05afeb4,411853679,0,0x0,8
tick,0x7fffe05afeb4,411870052,0,0x0,8
tick,0x7fffe05afeb4,411885736,0,0x0,8
tick,0x7fffe05afeb4,411901840,0,0x0,8
tick,0x7fffe05afeb4,411917689,0,0x0,8
tick,0x7fffe05afeb4,411933858,0,0x0,8
tick,0x7fffe05afeb4,411949675,0,0x0,8
tick,0x7fffe05afeb4,411965769,0,0x0,8
tick,0x7fffe05afeb4,411981790,0,0x0,8
tick,0x7fffe05afeb4,411996680,0,0x0,8
tick,0x7fffe05afeb4,412012655,0,0x0,8
tick,0x7fffe05afeb4,412028850,0,0x0,8
tick,0x7fffe05afeb4,412043741,0,0x0,8
tick,0x7fffe05afeb4,412059777,0,0x0,8
tick,0x7fffe05afeb4,412076367,0,0x0,8
tick,0x7fffe05afeb4,412090968,0,0x0,8
tick,0x7fffe05afeb4,412106800,0,0x0,8
tick,0x7fffe05afeb4,412122745,0,0x0,8
tick,0x7fffe05afeb4,412138898,0,0x0,8
tick,0x7fffe05afeb4,412154805,0,0x0,8
tick,0x7fffe05afeb4,412170742,0,0x0,8
tick,0x7fffe05afeb4,412185796,0,0x0,8
tick,0x7fffe05afeb4,412201694,0,0x0,8
tick,0x7fffe05afeb4,412217869,0,0x0,8
tick,0x7fffe05afeb4,412233732,0,0x0,8
tick,0x7fffe05afeb4,412249803,0,0x0,8
tick,0x7fffe05afeb4,412265669,0,0x0,8
tick,0x7fffe05afeb4,412281829,0,0x0,8
tick,0x7fffe05afeb4,412297648,0,0x0,8
tick,0x7fffe05afeb4,412313825,0,0x0,8
tick,0x7fffe05afeb4,412329904,0,0x0,8
tick,0x7fffe05afeb4,412345829,0,0x0,8
tick,0x7fffe05afeb4,412361728,0,0x0,8
tick,0x7fffe05afeb4,412377825,0,0x0,8
tick,0x7fffe05afeb4,412393754,0,0x0,8
tick,0x7fffe05afeb4,412409805,0,0x0,8
tick,0x7fffe05afeb4,412425650,0,0x0,8
tick,0x7fffe05afeb4,412441885,0,0x0,8
tick,0x7fffe05afeb4,412457740,0,0x0,8
tick,0x7fffe05afeb4,412473751,0,0x0,8
tick,0x7fffe05afeb4,412489702,0,0x0,8
tick,0x7fffe05afeb4,412505826,0,0x0,8
tick,0x7fffe05afeb4,412521691,0,0x0,8
tick,0x7fffe05afeb4,412536791,0,0x0,8
tick,0x7fffe05afeb4,412552862,0,0x0,8
tick,0x7fffe05afeb4,412568798,0,0x0,8
tick,0x7fffe05afeb4,412584782,0,0x0,8
tick,0x7fffe05afeb4,412600710,0,0x0,8
tick,0x7fffe05afeb4,412616730,0,0x0,8
tick,0x7fffe05afeb4,412632807,0,0x0,8
tick,0x7fffe05afeb4,412648687,0,0x0,8
tick,0x7fffe05afeb4,412664826,0,0x0,8
tick,0x7fffe05afeb4,412682050,0,0x0,8
tick,0x7fffe05afeb4,412696879,0,0x0,8
tick,0x7fffe05afeb4,412712734,0,0x0,8
tick,0x7fffe05afeb4,412729216,0,0x0,8
tick,0x7fffe05afeb4,412744735,0,0x0,8
tick,0x7fffe05afeb4,412759723,0,0x0,8
tick,0x7fffe05afeb4,412775745,0,0x0,8
tick,0x7fffe05afeb4,412791761,0,0x0,8
tick,0x7fffe05afeb4,412807668,0,0x0,8
tick,0x7fffe05afeb4,412823842,0,0x0,8
tick,0x7fffe05afeb4,412839845,0,0x0,8
tick,0x7fffe05afeb4,412855799,0,0x0,8
tick,0x7fffe05afeb4,412871753,0,0x0,8
tick,0x7fffe05afeb4,412887768,0,0x0,8
tick,0x7fffe05afeb4,412903809,0,0x0,8
tick,0x7fffe05afeb4,412918718,0,0x0,8
tick,0x7fffe05afeb4,412934771,0,0x0,8
tick,0x7fffe05afeb4,412950778,0,0x0,8
tick,0x7fffe05afeb4,412966818,0,0x0,8
tick,0x7fffe05afeb4,412982822,0,0x0,8
tick,0x7fffe05afeb4,412998752,0,0x0,8
tick,0x7fffe05afeb4,413014848,0,0x0,8
tick,0x7fffe05afeb4,413030706,0,0x0,8
tick,0x7fffe05afeb4,413045755,0,0x0,8
tick,0x7fffe05afeb4,413061686,0,0x0,8
tick,0x7fffe05afeb4,413076735,0,0x0,8
tick,0x7fffe05afeb4,413092896,0,0x0,8
tick,0x7fffe05afeb4,413108764,0,0x0,8
tick,0x7fffe05afeb4,413124665,0,0x0,8
tick,0x7fffe05afeb4,413140695,0,0x0,8
tick,0x7fffe05afeb4,413156675,0,0x0,8
tick,0x7fffe05afeb4,413172814,0,0x0,8
tick,0x7fffe05afeb4,413188714,0,0x0,8
tick,0x7fffe05afeb4,413204709,0,0x0,8
tick,0x7fffe05afeb4,413219786,0,0x0,8
tick,0x7fffe05afeb4,413235859,0,0x0,8
tick,0x7fffe05afeb4,413251743,0,0x0,8
tick,0x7fffe05afeb4,413267759,0,0x0,8
tick,0x7fffe05afeb4,413283664,0,0x0,8
tick,0x7fffe05afeb4,413299749,0,0x0,8
tick,0x7fffe05afeb4,413315741,0,0x0,8
tick,0x7fffe05afeb4,413331852,0,0x0,8
tick,0x7fffe05afeb4,413347779,0,0x0,8
tick,0x7fffe05afeb4,413363820,0,0x0,8
tick,0x7fffe05afeb4,413379861,0,0x0,8
tick,0x7fffe05afeb4,413395726,0,0x0,8
tick,0x7fffe05afeb4,413410729,0,0x0,8
tick,0x7fffe05afeb4,413426760,0,0x0,8
tick,0x7fffe05afeb4,413442723,0,0x0,8
tick,0x7fffe05afeb4,413458782,0,0x0,8
tick,0x7fffe05afeb4,413474777,0,0x0,8
tick,0x7fffe05afeb4,413490757,0,0x0,8
tick,0x7fffe05afeb4,413506735,0,0x0,8
tick,0x7fffe05afeb4,413522794,0,0x0,8
tick,0x7fffe05afeb4,413538675,0,0x0,8
tick,0x7fffe05afeb4,413554830,0,0x0,8
tick,0x7fffe05afeb4,413571233,0,0x0,8
tick,0x7fffe05afeb4,413586853,0,0x0,8
tick,0x7fffe05afeb4,413603471,0,0x0,8
tick,0x7fffe05afeb4,413618797,0,0x0,8
tick,0x7fffe05afeb4,413634958,0,0x0,8
tick,0x7fffe05afeb4,413650792,0,0x0,8
tick,0x7fffe05afeb4,413666934,0,0x0,8
tick,0x7fffe05afeb4,413681761,0,0x0,8
tick,0x7fffe05afeb4,413696873,0,0x0,8
tick,0x7fffe05afeb4,413712714,0,0x0,8
tick,0x7fffe05afeb4,413728732,0,0x0,8
tick,0x7fffe05afeb4,413744749,0,0x0,8
tick,0x7fffe05afeb4,413760683,0,0x0,8
tick,0x7fffe05afeb4,413776969,0,0x0,8
tick,0x7fffe05afeb4,413792690,0,0x0,8
tick,0x7fffe05afeb4,413808786,0,0x0,8
tick,0x7fffe05afeb4,413824657,0,0x0,8
tick,0x7fffe05afeb4,413840716,0,0x0,8
tick,0x7fffe05afeb4,413856732,0,0x0,8
tick,0x7fffe05afeb4,413872725,0,0x0,8
tick,0x7fffe05afeb4,413888710,0,0x0,8
tick,0x7fffe05afeb4,413904705,0,0x0,8
tick,0x7fffe05afeb4,413920682,0,0x0,8
tick,0x7fffe05afeb4,413936870,0,0x0,8
tick,0x7fffe05afeb4,413952682,0,0x0,8
tick,0x7fffe05afeb4,413968881,0,0x0,8
tick,0x7fffe05afeb4,413984669,0,0x0,8
tick,0x7fffe05afeb4,414000857,0,0x0,8
tick,0x7fffe05afeb4,414016707,0,0x0,8
tick,0x7fffe05afeb4,414033526,0,0x0,8
tick,0x7fffe05afeb4,414048190,0,0x0,8
tick,0x7fffe05afeb4,414063737,0,0x0,8
tick,0x7fffe05afeb4,414079714,0,0x0,8
tick,0x7fffe05afeb4,414094817,0,0x0,8
tick,0x7fffe05afeb4,414112759,0,0x0,8
tick,0x7fffe05afeb4,414125805,0,0x0,8
tick,0x7fffe05afeb4,414141679,0,0x0,8
tick,0x7fffe05afeb4,414157817,0,0x0,8
tick,0x7fffe05afeb4,414173897,0,0x0,8
tick,0x7fffe05afeb4,414189904,0,0x0,8
tick,0x7fffe05afeb4,414205821,0,0x0,8
tick,0x7fffe05afeb4,414221802,0,0x0,8
tick,0x7fffe05afeb4,414236680,0,0x0,8
tick,0x7fffe05afeb4,414251813,0,0x0,8
tick,0x7fffe05afeb4,414267734,0,0x0,8
tick,0x7fffe05afeb4,414283803,0,0x0,8
tick,0x7fffe05afeb4,414299783,0,0x0,8
tick,0x7fffe05afeb4,414315879,0,0x0,8
tick,0x7fffe05afeb4,414331781,0,0x0,8
tick,0x7fffe05afeb4,414346734,0,0x0,8
tick,0x7fffe05afeb4,414362756,0,0x0,8
tick,0x7fffe05afeb4,414377823,0,0x0,8
tick,0x7fffe05afeb4,414393996,0,0x0,8
tick,0x7fffe05afeb4,414409738,0,0x0,8
tick,0x7fffe05afeb4,414425690,0,0x0,8
tick,0x7fffe05afeb4,414441986,0,0x0,8
tick,0x7fffe05afeb4,414457798,0,0x0,8
tick,0x7fffe05afeb4,414473759,0,0x0,8
tick,0x7fffe05afeb4,414489785,0,0x0,8
tick,0x7fffe05afeb4,414505794,0,0x0,8
tick,0x7fffe05afeb4,414521674,0,0x0,8
tick,0x7fffe05afeb4,414537043,0,0x0,8
tick,0x7fffe05afeb4,414552876,0,0x0,8
tick,0x7fffe05afeb4,414568894,0,0x0,8
tick,0x7fffe05afeb4,414584751,0,0x0,8
tick,0x7fffe05afeb4,414600849,0,0x0,8
tick,0x7fffe05afeb4,414616926,0,0x0,8
tick,0x7fffe05afeb4,414632748,0,0x0,8
tick,0x7fffe05afeb4,414648673,0,0x0,8
tick,0x7fffe05afeb4,414664970,0,0x0,8
tick,0x7fffe05afeb4,414680216,0,0x0,8
tick,0x7fffe05afeb4,414696861,0,0x0,8
tick,0x7fffe05afeb4,414711748,0,0x0,8
tick,0x7fffe05afeb4,414727894,0,0x0,8
tick,0x7fffe05afeb4,414742710,0,0x0,8
tick,0x7fffe05afeb4,414757870,0,0x0,8
tick,0x7fffe05afeb4,414773918,0,0x0,8
tick,0x7fffe05afeb4,414791990,0,0x0,8
tick,0x7fffe05afeb4,414804872,0,0x0,8
tick,0x7fffe05afeb4,414821457,0,0x0,8
tick,0x7fffe05afeb4,414835823,0,0x0,8
tick,0x7fffe05afeb4,414851871,0,0x0,8
tick,0x7fffe05afeb4,414867871,0,0x0,8
tick,0x7fffe05afeb4,414884437,0,0x0,8
